package fixpointcs.test;

import fixpointcs.*;

class DeterminismTester
{
	// Fixed64.DivPrecise
	public static void Fixed64_DivPrecise()
	{
		long[] input0 = new long[]{ -564606642262L, 767058602357L, -650034810302L, -2142798258997L, 2325889603083L, -128040446059L, 1032487178480L, 317425234147L, 206882138096L, 750262502349L, -2897885115349L, 1008900250469L, -3899664859815L, 13665774006L, -2186779419018L, 3610156311681L, 745037582346L, -3888014827810L, 3868626651801L, -3326255951548L, 1696377826789L, 1869180178870L, -600086754279L, 2314250215077L, 1551890630722L, 3165779291474L, -1437638326669L, -3914652643822L, -2105795134980L, -2042665298951L, 1805016202840L, -2043020578951L, -1692715186788L, 2865709723334L, -53392670024L, 3963393851845L, 2885103659343L, -1333068018620L, -1992909354928L, 3721188631732L, -419547706195L, -1239116182577L, -4045453667883L, 753117286350L, 141973874066L, 3278731879526L, -1026651254478L, 434429694202L, -2373539847105L, 1872319338871L, -335180210156L, -857133418399L, -3848406427792L, -1343423134625L, -3086164547437L, 1861180474866L, -2927821939363L, 1330682270619L, 600278406279L, 3455077607608L, -2985369415390L, 652172526303L, -1871746926871L, -2045419858952L, 3240213595508L, 3440102759601L, -1593351858741L, -2470407287150L, -4227908851968L, -1855205974863L, -3569914643662L, -2216861695032L, 2399861823117L, -4147529275931L, 1388259050646L, -1359473286633L, 1619666550754L, 2941763255369L, -2122690954988L, 2568126047195L, -102536750047L, 2422899275128L, 2753854499282L, 316852822147L, 2587482207204L, -1632817674760L, -2489581447159L, 3945675243837L, 1656906974771L, 2380394151108L, 2596248495208L, -2740545907276L, 2361620871099L, -1153019666536L, 2411590751122L, 3223247063500L, -3662336551705L, 2294933487068L, 1807870986841L, 996838410464L };
		long[] input1 = new long[]{ -569052816574169L, -141524384740L, 342483845840064L, 1314973891569064960L, -2262411239861305L, -408542912880L, 1736465923882246L, 8860091666L, -6193645258318461L, -70555126744889920L, 7706761699L, 3111420486921L, -18348999872202L, -39354319379025544L, 23615914084486L, 9505105615227L, -28463458783203744L, -23062583871669912L, 62105077182452L, 570359593640869L, -7362835322832907L, -6926056606541L, 211188039237211L, 520377769391L, -96358345647742L, -619320214498817408L, 70850062411441L, 23346884233184L, -586173964497L, -54284069533458832L, 1132506951010L, 899348240211154816L, -66843721254L, -2422082700606682L, 532326605616L, 3332252450893L, -622312684492L, -387771898780718272L, 617755293840670592L, 777039112332989L, -7177359582174591L, -164644431144L, 1372935912490L, 507814895228391616L, -24951099327207852L, -104216902268557L, 46497005444864632L, 4669089524L, -1685988871820478464L, -21817387721626L, 51975036842L, 3972085110803L, -2517599899465L, -84313896030L, 984545212877755008L, 352879477562L, -3090449765666178L, -2826709755514L, 58612150524351L, 16846745897426660L, -26592377975874060L, -319445810378L, 69706202142900696L, 526179180860436224L, -267576249014757L, -39518802156L, 199920785148L, 34936803000809116L, -317522199540214L, -30438743808L, 65600651858L, 338509663333841152L, -172167517867066944L, -368590347087872704L, 366474513831252864L, 192069277397732L, -21666842818L, -1917889642388913L, 96180887740909L, 4263938245231800832L, -57207126385L, -65173027708725L, 63860741545561L, 123903480605964832L, -4485774662268026L, -1314867714576406528L, 1534267331454095L, 3656126323674023424L, -11345222931117522L, -6479054485L, 4972513130088803L, 1015283122210764672L, -28415057435557L, -157492657640L, 134755169822283728L, 96500012445008L, -10892695309413L, -12033067027614L, 8151128418379L, 2711725805459235L };
		long[] output0 = new long[]{ 4261409L, -23278614616L, -8151853L, -6998L, -4415474L, 1346075310L, 2553749L, 153873238672L, -143461L, -45671L, -1614987239011L, 1392673731L, 912798144L, -1491L, -397704109L, 1631281536L, -112421L, 724068L, 267540524L, -25047637L, -989549L, -1159110904L, -12204067L, 19100794794L, -69172207L, -21954L, -87150376L, -720151987L, 15429414789L, 161616L, 6845419847L, -9756L, 108763489409L, -5081630L, -430787732L, 5108450582L, -19911896657L, 14765L, -13855L, 20568312L, 251059L, 32323981097L, -12655427717L, 6369L, -24438L, -135122479L, -94832L, 399619951474L, 6046L, -368584471L, -27697681971L, -926807935L, 6565292504L, 68434252235L, -13463L, 22652802953L, 4068954L, -2021869002L, 43987059L, 880849L, 482170L, -8768497131L, -115328L, -16695L, -52009890L, -373875928451L, -34230528452L, -303700L, 57188852L, 261773253181L, -233727351935L, -28127L, -59868L, 48328L, 16269L, -30399933L, -321062691244L, -6587854L, -94788979L, 2586L, 7698201533L, -159671470L, 185211050L, 10983L, -2477420L, 5333L, -6969235L, 4635L, -627256L, -1577964046184L, 2242488L, -11593L, -356961601L, 31443889725L, 76863L, 143458434L, 1444051749L, -819131502L, 952597771L, 1578842L };
		for (int ndx = 0; ndx < 100; ndx++)
		{
			Util.Check("Fixed64.DivPrecise", Fixed64.DivPrecise(input0[ndx], input1[ndx]), output0[ndx], input0[ndx], input1[ndx]);
		}
	}

	// Fixed32.DivPrecise
	public static void Fixed32_DivPrecise()
	{
		int[] input0 = new int[]{ -26101044, -63734239, -4602185, 46849986, -28933914, -33357277, -1763167, -9435478, -30808207, -11693304, -47947821, -62528784, 43303765, -5027167, 13840520, -27645172, 32142287, 61910296, -35502803, 11959533, -1068897, -39865042, -58446478, 2537181, -10126215, -38813026, -6377728, 22107901, -59193523, -13583882, -47447216, 25701909, -31115163, 44488819, 25606868, -51017217, 65285639, 13705253, 6136099, -10358386, -6146489, -41042658, 29344664, -26173682, 50539272, 19462442, -52843239, 60478141, 8863306, 5376556, 31015168, -12503027, -45534340, 35620200, -45819346, -51772001, 60248239, 58396633, -8559797, -55656888, 38556451, 41664931, -15777955, 48311674, -29782087, -8113730, 34122379, 64350946, 34901963, -678262, -27394812, -47098966, -9761803, 40391583, -47429977, -25562238, -3673707, 33263203, 17533908, 35947342, -51505786, -1319870, -52291405, 965919, 20936949, 30591811, 5700250, -1199364, 24772166, 11842870, -45729456, -58646994, -43270948, -3743011, 16621161, 17724579, 40271297, 46568990, -61927594, -6882996 };
		int[] input1 = new int[]{ -362686986, -183104, 435354, 132823, -741640, -21287300, 876516301, 1853885, -30678317, -239642323, 30505116, 483217, -1350076, -39796124, 789637102, 1254995, -68786379, -310832298, 497361, 12293325, -386128985, -895770, 1227651, 361334, -1840908, -662744, 808752835, 687661641, -380874, -8628884, 8205840, 26026914, -75369328, -399547, 355540985, 66279, -1145219, -86207, 796222, 121687, -98960692, -452240, 268654739, 235254213, -709588388, -631082926, 86801419, 9192586, -8645923, -1499532, 486400580, 571380842, -34741789, -7477099, 14013451, 26534765, -160149134, -78961, 77471531, 73337, -28262114, -83534, 318993, 233000, -1913904, -76812, 6884109, 221447, -120185195, -780777718, 71818, 52292252, -25584197, -267859, 133384855, 55955486, -3580156, -5603219, 546768, 3132172, -8198212, -5765779, 5212467, 272725455, -19048484, -15420458, 804396875, 660604, -30614204, -878120, 444380, 950507, -1194820, -711520, 4623172, 77638570, -92911, -75564465, 8055582, 605419636 };
		int[] output0 = new int[]{ 4716, 22811555, -692789, 23116182, 2556783, 102695, -131, -333550, 65813, 3197, -103009, -8480426, -2102070, 8278, 1148, -1443634, -30623, -13053, -4678114, 63756, 181, 2916591, -3120062, 460174, 360491, 3838058, -516, 2106, 10185275, 103168, -378937, 64717, 27055, -7297312, 4720, -50445304, -3736018, -10418962, 505054, -5578633, 4070, 5947664, 7158, -7291, -4667, -2021, -39897, 431162, -67183, -234978, 4178, -1434, 85894, -312207, -214281, -127867, -24654, -48467999, -7241, -49736556, -89407, -32687922, -3241525, 13588643, 1019799, 6922634, 324841, 19044302, -19031, 56, -24998557, -59027, 25005, -9882448, -23303, -29938, 67248, -389050, 2101626, 752144, 411734, 15002, -657456, 232, -72033, -130013, 464, -118984, -53029, -883859, -6744060, -4043620, 2373415, 344757, 235614, 14961, -28405890, -40388, -503810, -745 };
		for (int ndx = 0; ndx < 100; ndx++)
		{
			Util.Check("Fixed32.DivPrecise", Fixed32.DivPrecise(input0[ndx], input1[ndx]), output0[ndx], input0[ndx], input1[ndx]);
		}
	}

	// Fixed64.Div
	public static void Fixed64_Div()
	{
		long[] input0 = new long[]{};
		long[] input1 = new long[]{};
		long[] output0 = new long[]{};
		for (int ndx = 0; ndx < 100; ndx++)
		{
			Util.Check("Fixed64.Div", Fixed64.Div(input0[ndx], input1[ndx]), output0[ndx], input0[ndx], input1[ndx]);
		}
	}

	// Fixed64.DivFast
	public static void Fixed64_DivFast()
	{
		long[] input0 = new long[]{};
		long[] input1 = new long[]{};
		long[] output0 = new long[]{};
		for (int ndx = 0; ndx < 100; ndx++)
		{
			Util.Check("Fixed64.DivFast", Fixed64.DivFast(input0[ndx], input1[ndx]), output0[ndx], input0[ndx], input1[ndx]);
		}
	}

	// Fixed64.DivFastest
	public static void Fixed64_DivFastest()
	{
		long[] input0 = new long[]{};
		long[] input1 = new long[]{};
		long[] output0 = new long[]{};
		for (int ndx = 0; ndx < 100; ndx++)
		{
			Util.Check("Fixed64.DivFastest", Fixed64.DivFastest(input0[ndx], input1[ndx]), output0[ndx], input0[ndx], input1[ndx]);
		}
	}

	// Fixed32.Div
	public static void Fixed32_Div()
	{
		int[] input0 = new int[]{};
		int[] input1 = new int[]{};
		int[] output0 = new int[]{};
		for (int ndx = 0; ndx < 100; ndx++)
		{
			Util.Check("Fixed32.Div", Fixed32.Div(input0[ndx], input1[ndx]), output0[ndx], input0[ndx], input1[ndx]);
		}
	}

	// Fixed32.DivFast
	public static void Fixed32_DivFast()
	{
		int[] input0 = new int[]{};
		int[] input1 = new int[]{};
		int[] output0 = new int[]{};
		for (int ndx = 0; ndx < 100; ndx++)
		{
			Util.Check("Fixed32.DivFast", Fixed32.DivFast(input0[ndx], input1[ndx]), output0[ndx], input0[ndx], input1[ndx]);
		}
	}

	// Fixed32.DivFastest
	public static void Fixed32_DivFastest()
	{
		int[] input0 = new int[]{};
		int[] input1 = new int[]{};
		int[] output0 = new int[]{ -4299, -4299, -4299, -4299, -4299, -4299, -4299, -4299, -4299, -4299, -4299, -4299, -4299, -4299, -4299, -4299, -4299, -4299, -4299, -4299, -4299, -4299, -4299, -4299, -4299, -4299, -4299, -4299, -4299, -4299, -4299, -4299, -4299, -4299, -4299, -4299, -4299, -4299, -4299, -4299, -4299, -4299, -4299, -4299, -4299, -4299, -4299, -4299, -4299, -4299, -4299, -4299, -4299, -4299, -4299, -4299, -4299, -4299, -4299, -4299, -4299, -4299, -4299, -4299, -4299, -4299, -4299, -4299, -4299, -4299, -4299, -4299, -4299, -4299, -4299, -4299, -4299, -4299, -4299, -4299, -4299, -4299, -4299, -4299, -4299, -4299, -4299, -4299, -4299, -4299, -4299, -4299, -4299, -4299, -4299, -4299, -4299, -4299, -4299, -4299 };
		for (int ndx = 0; ndx < 100; ndx++)
		{
			Util.Check("Fixed32.DivFastest", Fixed32.DivFastest(input0[ndx], input1[ndx]), output0[ndx], input0[ndx], input1[ndx]);
		}
	}

	public static void TestAll()
	{
		Fixed64_DivPrecise();
		Fixed32_DivPrecise();
		Fixed64_Div();
		Fixed64_DivFast();
		Fixed64_DivFastest();
		Fixed32_Div();
		Fixed32_DivFast();
		Fixed32_DivFastest();
	}
}
