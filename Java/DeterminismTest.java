package fixpointcs.test;

import fixpointcs.*;

class DeterminismTester
{
	// Fixed64.Mul
	public static void Fixed64_Mul()
	{
		long[] input0 = new long[]{ -564606642262L, 767058602357L, -650034810302L, -2142798258997L, 2325889603083L, -128040446059L, 1032487178480L, 317425234147L, 206882138096L, 750262502349L, -2897885115349L, 1008900250469L, -3899664859815L, 13665774006L, -2186779419018L, 3610156311681L, 745037582346L, -3888014827810L, 3868626651801L, -3326255951548L, 1696377826789L, 1869180178870L, -600086754279L, 2314250215077L, 1551890630722L, 3165779291474L, -1437638326669L, -3914652643822L, -2105795134980L, -2042665298951L, 1805016202840L, -2043020578951L, -1692715186788L, 2865709723334L, -53392670024L, 3963393851845L, 2885103659343L, -1333068018620L, -1992909354928L, 3721188631732L, -419547706195L, -1239116182577L, -4045453667883L, 753117286350L, 141973874066L, 3278731879526L, -1026651254478L, 434429694202L, -2373539847105L, 1872319338871L, -335180210156L, -857133418399L, -3848406427792L, -1343423134625L, -3086164547437L, 1861180474866L, -2927821939363L, 1330682270619L, 600278406279L, 3455077607608L, -2985369415390L, 652172526303L, -1871746926871L, -2045419858952L, 3240213595508L, 3440102759601L, -1593351858741L, -2470407287150L, -4227908851968L, -1855205974863L, -3569914643662L, -2216861695032L, 2399861823117L, -4147529275931L, 1388259050646L, -1359473286633L, 1619666550754L, 2941763255369L, -2122690954988L, 2568126047195L, -102536750047L, 2422899275128L, 2753854499282L, 316852822147L, 2587482207204L, -1632817674760L, -2489581447159L, 3945675243837L, 1656906974771L, 2380394151108L, 2596248495208L, -2740545907276L, 2361620871099L, -1153019666536L, 2411590751122L, 3223247063500L, -3662336551705L, 2294933487068L, 1807870986841L, 996838410464L };
		long[] input1 = new long[]{ 577116442268L, -2851211263327L, 367371250171L, 3776633423758L, 1147266686534L, -2413285811123L, 1037972054483L, -3995844447860L, 1563285110727L, 2568276035195L, -4053453371887L, -1574617898733L, -841594070391L, 2327119655083L, -737352938343L, -1113301394518L, 2193285323021L, 2106367546980L, -337934770157L, 578063974269L, 1634716910761L, -1244059806579L, 167653034078L, -2313335707077L, -156487174072L, 3465598559613L, -283515270132L, -742085806345L, -2264152731054L, 2459979283145L, -1992104030927L, 3619700359685L, -3161075027471L, 1175437930547L, -2303957691072L, -1546292782720L, -2239439271042L, 3272188371523L, 3464553431613L, 705800722328L, 1624177566756L, -2788704295298L, -1912577162890L, 3383598235575L, 2138880226995L, -124100902057L, 2396015459115L, -4260466079983L, 3879300567806L, -770075150358L, -3265005555520L, -1473736802686L, -1662099038773L, -3065160283427L, 3657088795702L, -2473791047151L, 1276102998594L, -1614260338751L, -361846698168L, 1976635422920L, 2165196755008L, -2514909435171L, 2563275579193L, 3398273123582L, 265412770123L, -3378186435573L, -2708510167261L, 2277935295060L, 336110050156L, -3486027451623L, -3168829419475L, 3216064247497L, 2936781411367L, 3251231803513L, 3248853703512L, 128453910059L, -3626449939688L, 1079022094502L, -157248638073L, 4262581023984L, -3225384195501L, -318016486148L, -326419078152L, 2800889715304L, 1430017542665L, 3776600067758L, 986832102459L, 4199052551955L, 1813316430844L, -4125133939920L, 1472571514685L, 3669788363708L, -660932226307L, -2807049287307L, 2835571263320L, -155880294072L, -1057012578492L, -1015882990473L, -1176781830547L, 1222099366569L };
		long[] output0 = new long[]{ -75866416251084L, -509211357373778L, -55600912523297L, -1884196774405084L, 621288935228463L, 71944247866991L, 249522933241501L, -295318164740911L, 75301101003038L, 448636991178702L, 2734931696241850L, -369882302457629L, 764134997160279L, 7404454818760L, 375422702664723L, -935791073418786L, 380463896891691L, -1906787104782653L, -304389618895859L, -447684138731042L, 645662080611095L, -541417843612450L, -23424244733736L, -1246490901719838L, -56543149815523L, 2554459532859026L, 94900005156564L, 676374920585945L, 1110099676508734L, -1169954034923262L, -837207784309544L, -1721811090706101L, 1245830139512302L, 784281619532064L, 28641534212200L, -1426918271040718L, -1504322149734874L, -1015618832078197L, -1607588712244633L, 611510505945232L, -158655450815768L, 804552952927942L, 1801467104517531L, 593309831171038L, 70702543479773L, -94737295026943L, -572733645525085L, -430939946389992L, -2143828774938498L, -335701414476912L, 254801765144733L, 294109122712785L, 1489285525037189L, 958751709221292L, -2627814604929785L, -1071992236155961L, -869902399408265L, -500135964932707L, -50572855233589L, 1590100300529892L, -1504996831226759L, -381878307033033L, -1117075604404784L, -1618381434380419L, 200232971965797L, -2705796733373158L, 1004806186404128L, -1310237672313212L, -330862276323597L, 1505785378810816L, 2633885142358661L, -1659982288032308L, 1640960013489081L, -3139623228439157L, 1050124540488540L, -40659135973260L, -1367563303861887L, 739057443416044L, 77716601482066L, 2548761050210438L, 77001846642147L, -179401113131723L, -209293944533069L, 206630167275802L, 861507129770534L, -1435750010687643L, -572018067758260L, 3857560852034814L, 699538886950416L, -2286267630551632L, 890149171251593L, -2341629816388956L, -363418678759723L, 753575710859343L, 1592151222929786L, -116983591608026L, 901319040410034L, -542817612592893L, -495340146424148L, 283642576541682L };
		for (int ndx = 0; ndx < 100; ndx++)
		{
			Util.Check("Fixed64.Mul", Fixed64.Mul(input0[ndx], input1[ndx]), output0[ndx], input0[ndx], input1[ndx]);
		}
	}

	// Fixed32.Mul
	public static void Fixed32_Mul()
	{
		int[] input0 = new int[]{ -26101044, -63734239, -4602185, 46849986, -28933914, -33357277, -1763167, -9435478, -30808207, -11693304, -47947821, -62528784, 43303765, -5027167, 13840520, -27645172, 32142287, 61910296, -35502803, 11959533, -1068897, -39865042, -58446478, 2537181, -10126215, -38813026, -6377728, 22107901, -59193523, -13583882, -47447216, 25701909, -31115163, 44488819, 25606868, -51017217, 65285639, 13705253, 6136099, -10358386, -6146489, -41042658, 29344664, -26173682, 50539272, 19462442, -52843239, 60478141, 8863306, 5376556, 31015168, -12503027, -45534340, 35620200, -45819346, -51772001, 60248239, 58396633, -8559797, -55656888, 38556451, 41664931, -15777955, 48311674, -29782087, -8113730, 34122379, 64350946, 34901963, -678262, -27394812, -47098966, -9761803, 40391583, -47429977, -25562238, -3673707, 33263203, 17533908, 35947342, -51505786, -1319870, -52291405, 965919, 20936949, 30591811, 5700250, -1199364, 24772166, 11842870, -45729456, -58646994, -43270948, -3743011, 16621161, 17724579, 40271297, 46568990, -61927594, -6882996 };
		int[] input1 = new int[]{ 50876062, -51658185, -39959822, -55994430, -32764631, 12578134, 62794775, -20389924, 17514177, 45278892, 17437705, -38550964, -24673275, 21028860, 61384898, -25659678, 28420337, 48792124, -38161275, 5162101, 51722018, -30214255, -25957220, -42476906, -20484806, -34283817, 61707982, 59517207, -41765577, 381443, -297536, 15293302, 29654798, -41119094, 50607279, -65383601, -26896048, -61832975, -31805449, -57177184, 33333035, -39445824, 46822457, 45029273, 59941165, 58357508, 31562280, 1236191, 408089, -23255160, 54840241, 57015172, 19194265, -1553696, 6930984, 15554318, 39835034, -63018915, 30026375, -64016813, 16406151, -62258431, -44160346, -48403265, -19959571, -63391597, -2669763, -49090180, 35957580, 61232500, -64299630, 24717313, 15061573, -46520090, 37365066, 25631843, -11500713, -5450493, -36882071, -13306314, -310098, -5064208, -6426881, 47025582, 11077202, 8223291, 61635037, -34327505, 17485920, -30483038, -39682636, -29413132, -26323351, -33324635, -8047336, 30055466, -60821477, 29689723, -547154, 57796762 };
		int[] output0 = new int[]{ 1212410747, -1301645072, -1488837941, -1374259510, 1580567710, -2107197926, -1689417650, -1359349021, 356591231, 511018439, 127028993, -1872709495, 876681586, -1613091905, 78948644, -2060832495, 1053919957, -1151884530, -801737290, 942021442, -843589934, 1199228481, 1674395814, -1644464094, -1129782516, -1170596359, -1710231750, -1397313895, -931139338, -79063061, 215412214, 1702760003, -1194594473, -2143708346, -1701064612, -641027223, -1023495789, -45953919, 1317040907, 447286817, 1168729305, -1066412298, -509424061, -803862997, -1019926482, 150752378, 320385053, 1140785729, 55191309, -1907847138, 183554496, 2007487414, -451252113, -844466588, -550814474, 597332200, -2033754599, -319179598, 373158295, -1467866608, 1062210139, -926489890, 2041778542, -1322066430, 480464577, -741693895, -1390055312, -957867104, 1969760435, -633723113, 1108191150, -583800931, 2051496402, 1393200081, -1272191784, -1407734951, 644687650, 1528535791, -1277723486, 1291249592, 243710956, 101991214, 833063668, 693098497, -756106009, -456384471, 1065981185, 628222255, -1980374764, -1213557122, 1919792124, 551481867, 200446250, 1903297048, -2040955617, -461265136, 1280441683, -377723238, 517027752, -1775206070 };
		for (int ndx = 0; ndx < 100; ndx++)
		{
			Util.Check("Fixed32.Mul", Fixed32.Mul(input0[ndx], input1[ndx]), output0[ndx], input0[ndx], input1[ndx]);
		}
	}

	// Fixed64.DivPrecise
	public static void Fixed64_DivPrecise()
	{
		long[] input0 = new long[]{ -295484042137L, 990672410461L, 2019466318940L, 308778722143L, -1605076938747L, -2320831091080L, -1545496258719L, 11688718005L, 1744387302812L, 3069387795429L, -2521888703174L, -1327134890617L, 2582063091202L, -1455116134677L, 119884026055L, -2887885755344L, 635990842296L, -1680993778782L, 396855314184L, 2447975203139L, -3898778223815L, -2220245495033L, -68164094031L, 59285130027L, 2318607111079L, 2008645790935L, -949966318442L, -1123928678523L, 1773616906825L, -3815925407776L, 1370837574638L, 1595510782742L, 3973622083850L, -1909904766889L, 3718408727731L, 3283972267529L, 1943613006905L, 3564996439660L, 391978226182L, -1248180658581L, -2210549411029L, -267342206124L, 300892594140L, 2371536819104L, -3770815023755L, 3021460919406L, -214714842099L, 4024956295874L, 1991119954927L, -1934471794900L, -2961243055378L, 1989964698926L, -2746076875278L, 1811133742843L, 3391579539579L, -2370205843103L, -3236130791506L, -2334786107087L, 2285138907064L, 681244566317L, 2924102523361L, 3873399715803L, 2533039107179L, 1265345414589L, -2596417075209L, 177567810082L, -1005789678468L, 197000562091L, -878557566409L, 1130879054526L, -536531466249L, 1365961698636L, 2221995291034L, -2649931323233L, 363557318169L, 663531278308L, 1773829206826L, 1855266382863L, -464867142216L, 3592113487672L, -2071606662964L, -679955318316L, 1179918662549L, -586878594273L, 3440284943602L, 3675840171711L, 46620362021L, -2132478954993L, -1006517010468L, 1793647274835L, 2225135763036L, -16568182007L, -3015109763404L, 4005700955865L, 122684114057L, -1788981830833L, 1494585982695L, 3330514475550L, 672986598313L, 346584462161L };
		long[] input1 = new long[]{ -73612205637994L, -1702193271396442368L, 614039303350464L, 34463654433L, -156370914245882336L, -130171954159147L, 2629770334770299904L, 3654084079870979072L, -142839324524L, -3169952780533L, 202810374243624L, 20468928013437L, -49882505794341256L, -194890854822328288L, 3366115582239L, 26426060551049L, -2915486759429L, -8185380940298L, 23837978946391724L, 1173857661316L, -5896978054L, -65688275573L, 79115239383L, 7152814261440051L, -326158896408252480L, -1309797243364999936L, 173354104739111L, 61459260641466368L, -5609339967462611L, -787045525930L, 616797689466196224L, 106478480656004160L, -75150541489L, -646773422782451712L, 49083426436251L, 2531091405800L, -203803883127792000L, -305139375422724L, 1002553316007467L, 19219611238457L, -1806722920242659840L, -198840393925015L, 24242190676L, 16677470753L, -229088798505L, -6451161608341L, 12499785319180096L, 2252098066890L, -2921290236824998L, -30783595861L, 2929132621482129408L, 2751956008398L, -80461299772L, -2625963354815L, 237201024883683L, 4813066152869L, -92407790067648944L, -395894030870041024L, 487294858565L, 550568847636126912L, -3462924526018859520L, -183776658976L, 2797864224831L, 836965707939340032L, -23701170037960L, -8783913533786985L, 1169830245528L, 355677036861274432L, -17053614804959L, -5711906060L, 597970421834274L, 44062846713058344L, -37652268697495520L, -5327024501547L, 2996288420134L, 136768041489190L, -11637933183L, -20374634186L, 134101289664427L, 217145667465772L, -450050635350L, -330602925968L, 90359222498L, 782622401258909L, -1239140495441L, -962633812612070L, 5683746017478333L, 131978498796440592L, -11711040035070L, -43799878211L, 126316177877948L, 2374068424967430144L, -2689467403820L, -8397607547195124L, 25595363618826L, 42224164366735104L, -305237467012L, -133574614511L, 3245040585505960L, 120275046536139L };
		long[] output0 = new long[]{ 17240269L, -2499L, 14125385L, 38480960162L, 44085L, 76574817L, -2524L, 13L, -52451147064L, -4158711852L, -53406683L, -278470907L, -222319L, 32067L, 152965030L, -469361479L, -936913830L, 882037544L, 71502L, 8956770301L, 2839611206333L, 145168703350L, -3700457167L, 35598L, -30532L, -6586L, -23536069L, -78543L, -1358025L, 20823795181L, 9545L, 64357L, -227098521962L, 12682L, 325373451L, 5572518423L, -40959L, -50178850L, 1679246L, -278928384L, 5254L, 5774611L, 53308872482L, 610744472598L, 70695412922L, -2011587466L, -73776L, 7675978196L, -2927403L, 269900018556L, -4342L, 3105730351L, 146583642136L, -2962250093L, 61410878L, -2115066832L, 150410L, 25329L, 20140981789L, 5314L, -3626L, -90523601834L, 3888437483L, 6493L, 470505312L, -86823L, -3692701391L, 2378L, 221265465L, -850344614197L, -3853677L, 133145L, -253461L, 2136533888L, 521133673L, 20837069L, -654629848119L, -391089644458L, -14888664L, 71049126L, 19769959575L, 8833514846L, 56084060126L, -3220741L, -11924322848L, -16400435L, 35229L, -69397L, 369135245L, -175883054945L, 75658442L, -29L, 4815004565L, -2048720L, 20586707L, -181972L, -21030176863L, -107089590366L, 890730L, 12376373L };
		for (int ndx = 0; ndx < 100; ndx++)
		{
			Util.Check("Fixed64.DivPrecise", Fixed64.DivPrecise(input0[ndx], input1[ndx]), output0[ndx], input0[ndx], input1[ndx]);
		}
	}

	// Fixed32.DivPrecise
	public static void Fixed32_DivPrecise()
	{
		int[] input0 = new int[]{ -54773853, 44430818, 52775109, 17319862, 3295915, -39082319, 5505059, 39107991, 64704436, -62065304, -27560170, 31076336, -15171254, 27089731, 22817032, 36352330, -61061159, 30024896, 19073026, 42187895, -62792131, -7792860, -478801, -27940465, 2478538, 13303808, -4369265, -56078340, 55642332, 5318881, -27055081, 50153656, -9966290, -64850118, -8028611, -15108717, -25397189, 1881978, -58017122, -56283584, -58921354, 49740314, 43967710, -19142823, 42197451, 33778232, 10985982, 13500897, -62580345, 18439906, 31477852, -3150150, 2592541, 43127558, -3734202, 18555006, -20626379, 15179574, -50694675, 55528106, 30822945, -3952599, 49001658, -6150444, 30525776, -12177826, -24493373, -15857135, -30417657, -27610250, -3786479, 2592861, 22506018, 9820610, 35573250, -46996445, 13775429, -46871977, -4601917, 34236305, -63218173, 47665837, -59033994, -28333573, 39377028, 41631069, -17974885, 12442150, 4420083, 38952382, -60018338, 24959235, -12959345, -48009229, -21570530, 10567245, -64797343, -15417845, 15867400, -11160721 };
		int[] input1 = new int[]{ -4899078, -478166, 1692832, 80628738, -339731, -556202, 160681151, 628770797, -114650, -1612542, 93359, 457474, -283480, -1995601, 431107091, 308561973, -3868459, -20094452, 36900607, 471874084, -100664, -69709908, 239285768, 6315565, -721958, -127827800, 207270, 12128023, -669597, -417359, 244816, 569043, -10318368, -106504, 1415375, 174713562, -11070776, -1412381, 198614, 18240862, -74608, -3785667, 12046225, 472911, -105308699, -231432710, 12307570, 105537, -597504, -5911258, 310745, 3698741, -77950513, -61795329, 2390222, 75460514, -2145667, -287807160, 7319093, 2853710, -175863, -868270, 61540100, 294962776, -431668, -176163006, 47605365, 174435, -92402, -161710, 1826603, 179500, -6630472, -132576, 414493491, 28551763, -379248, -33160206, 64394361, 3349558, -680664, -128709, 1330236, 121628132, -88020, -71070032, 7838373, 179289655, -47844249, -20139637, 5336348, 41302502, -207202288, -74731126, 6797514, 92264229, -66051714, -43851420, 71797, 641873439 };
		int[] output0 = new int[]{ 732721, -6089554, 2043126, 14077, -635800, 4604979, 2245, 4076, -36986218, 2522422, -19346643, 4451878, 3507349, -889633, 3468, 7720, 1034443, -97923, 33873, 5859, 40880007, 7326, -131, -289935, -224990, -6820, -1381503, -303029, -5445926, -835199, -7242507, 5776136, 63299, 39904767, -371748, -5667, 150344, -87325, -19143716, -202216, 51756780, -861085, 239200, -2652812, -26260, -9565, 58498, 8383740, 6863996, -204436, 6638666, -55815, -2179, -45738, -102385, 16114, 630000, -3456, -453925, 1275213, -11486284, 298337, 52183, -1366, -4634434, 4530, -33718, -5957595, 21573684, 11189569, -135853, 946661, -222450, -4854600, 5624, -107872, -2380464, 92635, -4683, 669852, 6086800, -24270472, -2908395, -15266, -29318483, -38389, -150286, 4547, -6054, -126754, -737088, 39603, 4098, 42102, -207965, 7505, 64291, 23041, 14483696, -1139 };
		for (int ndx = 0; ndx < 100; ndx++)
		{
			Util.Check("Fixed32.DivPrecise", Fixed32.DivPrecise(input0[ndx], input1[ndx]), output0[ndx], input0[ndx], input1[ndx]);
		}
	}

	// Fixed64.Mod
	public static void Fixed64_Mod()
	{
		long[] input0 = new long[]{ -2895178131348L, -527233478245L, -4177309487945L, -3138065499461L, -3255400003515L, -3809177975773L, 3778296691759L, 1349591962628L, 2610248127215L, 2099402810977L, 390496026181L, 1871406386871L, -2969604071382L, -3603051799677L, -3026219219409L, -4018653771871L, 3917337415824L, 3691905867719L, 2890147311345L, -222830834103L, -1539922002717L, 3121155099453L, -674620822314L, -471154718219L, 1199911546558L, 1534534194714L, -1946746266906L, 2150842519001L, 809843590377L, -2965057603380L, 3552541607654L, 89987098041L, 1135899218528L, 2259592979052L, -2212433987030L, 2598993019210L, -3815161391776L, -2786994631297L, 1327512954618L, 4070283547895L, 2408136175121L, 2885321243343L, -4194651127953L, 3736747363740L, -3910200635820L, 2023160402942L, 85672106039L, 2146729442999L, 667181390310L, -462484526215L, 2500121787164L, 2429706527131L, 2868864035335L, 303603594141L, 1084479758505L, -1721365934801L, -4147579951931L, 588812526274L, -43009750020L, -494966902230L, 2432535587132L, -2667513123242L, -3755218923748L, 1280338434596L, 2841828499323L, -3994458367860L, -3559460127657L, -934229754435L, 2904349483352L, -1330244942619L, 4091474915905L, 2409364751121L, -1930574382898L, 3114831059450L, 1664000286774L, -130275950060L, 3020838931406L, -116400890054L, -855921378398L, 3471718439616L, -2846105207325L, 201491586093L, -2811306167309L, -3022639179407L, -1170212094544L, -3172132215477L, 1516090358705L, -3462671671612L, -3119854075452L, 3803899243771L, 2451605675141L, -109006622050L, 1550982414722L, -2472487439151L, -2657219335237L, 780682002363L, 2345572871092L, -1180022266549L, -3400048431583L, -4210709563960L };
		long[] input1 = new long[]{ 19180610532L, 5645365496L, 35055912840L, 7336533257L, 12670950876L, 4400736555L, 13821760604L, 40209209118L, 29825576193L, 5948069549L, 12047433994L, 14577023483L, 6326288942L, 16741395175L, 8066188812L, 7810657003L, 4463747035L, 35292006825L, 8284026695L, 21531636198L, 9804999092L, 41849685824L, 7716138599L, 33747257585L, 15584558534L, 13242203917L, 5406157788L, 4966458880L, 20179712081L, 5442414858L, 22117351699L, 13243551647L, 10356827588L, 10556224249L, 7712914462L, 4818339579L, 17563665198L, 37423958222L, 20475240066L, 9686429771L, 18033148668L, 21781628096L, 7730771608L, 42495688336L, 13423238960L, 7720676092L, 8955310694L, 5280635506L, 37274851150L, 36634571132L, 16110295048L, 30995881266L, 5132223498L, 10889926706L, 19243366694L, 19684758279L, 31423308260L, 4461518059L, 20218840552L, 41096874781L, 34962019835L, 11952985255L, 8557963437L, 23537322618L, 11550552949L, 39070587999L, 6045078823L, 25739510142L, 9322512925L, 7190032288L, 19099952094L, 5122827312L, 7402990862L, 36731411444L, 5128204452L, 19333793714L, 23250335293L, 7798570686L, 10797942887L, 8669599453L, 6350961423L, 4397059950L, 5722565700L, 23658309829L, 14509351787L, 30647072560L, 11083036665L, 40847139731L, 23560657884L, 16828611711L, 6585751806L, 16908004543L, 7949747476L, 21398339151L, 11899455260L, 6479702109L, 10931500352L, 14106706938L, 15801632392L, 14755952058L };
		long[] output0 = new long[]{ -18086551548L, -2214487117L, -5655859985L, -5365798722L, -11636579259L, -2540855698L, 4956046867L, 22688061734L, 15422998424L, 5682329729L, 4978138373L, 5547381047L, -2574557584L, -3651837052L, -1398414909L, -3976072329L, 2631266129L, 21537157919L, 7306021485L, -7514472123L, -537145273L, 24278348477L, -3316764201L, -32440369614L, 15485097974L, 11680744259L, -529463226L, 365823961L, 2655107137L, -4383920628L, 13765335814L, 10525788159L, 7005011436L, 560989766L, -6540450898L, 1907986129L, -3846043810L, -17621722869L, 17097590394L, 1983044075L, 9727402277L, 10146334671L, -4572916417L, 39622478508L, -4038098460L, 343266838L, 5074309793L, 2791427563L, 33508920760L, -22869672631L, 3026054724L, 12027788383L, 5083323451L, 9575573079L, 6851223641L, -8791964528L, -31126569871L, 4353660545L, -2572068916L, -1804404858L, 20156218517L, -1997411377L, -6830938342L, 9323013224L, 392473869L, -9258391962L, -4953779733L, -7607389323L, 5047963677L, -88969339L, 4085167789L, 1635914481L, -5796758778L, 29392498154L, 2462044326L, -14273187776L, 21545678609L, -7220900450L, -2883890325L, 3878658416L, -874489821L, 3623888343L, -1526408609L, -18033831124L, -9463951584L, -15483741797L, 8797372265L, -31511934208L, -9847234764L, 632997085L, 1706003309L, -7558594792L, 781656902L, -11678436786L, -3640812257L, 3117749283L, 6231795764L, -9165590695L, -2697467303L, -5263227430L };
		for (int ndx = 0; ndx < 100; ndx++)
		{
			Util.Check("Fixed64.Mod", Fixed64.Mod(input0[ndx], input1[ndx]), output0[ndx], input0[ndx], input1[ndx]);
		}
	}

	// Fixed32.Mod
	public static void Fixed32_Mod()
	{
		int[] input0 = new int[]{ -51609158, 5436916, 33181295, 28139202, -28461126, -315388, 15977254, -46495440, -22667640, 65269134, 56059607, 13793610, 15222915, -17333326, 40759371, 52485702, -23607955, 7652863, -37996586, 9989492, 6185441, -43222261, -60501149, 31914027, -60538816, -58597058, 40521745, 5115366, -1374874, 52220433, -33077682, -37092907, 25337929, 47759201, -39480746, 16829544, -31844030, -11803577, -5483394, -61460398, -35188590, -30614360, 19810505, 31622899, 21677678, 10539316, 62782290, 52381123, 50652890, 5522468, 47016782, 45525657, -25381210, 64163455, 64070116, 57149102, 402065, -64268731, 23142019, -35400068, 24698866, -54674112, 20415434, -9352074, 32810817, 27616515, 53991680, 32999714, -43388579, -41606173, 18793732, 53731622, -52399742, -42072188, -20357917, -28736197, 2503233, -26588048, -55299651, -5542133, -55843349, 53676621, 19998476, 58638656, -60332348, -13067340, 53824302, 26710474, 49225084, -31093848, -49108521, -33111299, 30590402, -35619326, -20623264, -46050478, 14506204, -36373419, 64348082, 59597163 };
		int[] input1 = new int[]{ 305467, 110586, 352488, 331406, 519072, 582438, 366093, 87866, 289285, 334607, 171157, 105292, 559823, 108473, 93853, 393910, 176511, 334857, 160482, 146724, 413552, 105832, 492822, 528054, 74768, 163111, 98408, 488040, 449611, 102919, 306596, 129743, 132645, 87073, 403377, 460474, 98931, 582338, 73300, 80799, 294898, 397909, 75061, 96378, 459555, 544369, 135609, 214300, 77402, 240004, 342648, 523327, 446708, 286677, 93566, 189158, 147059, 437467, 290484, 208556, 387879, 491604, 128074, 184207, 71523, 86454, 520218, 421351, 176234, 133574, 260940, 198645, 299385, 130166, 326069, 68112, 92401, 335110, 75304, 90012, 78826, 300946, 413218, 122771, 196847, 383948, 190344, 303234, 609883, 139754, 205207, 148207, 131381, 230337, 136519, 393130, 203610, 267048, 88310, 348359 };
		int[] output0 = new int[]{ -290702, 18202, 47423, 301098, -431238, -315388, 235255, -14326, -103410, 20769, 91268, 358, 107694, -86119, 27169, 95672, -131992, 286009, -122834, 12260, 395713, -42805, -376865, 230787, -51504, -40209, 76057, 234966, -26041, 40500, -271910, -116152, 2734, 43197, -353177, 252480, -87179, -156817, -59194, -53158, -95728, -373276, 69462, 10915, 78593, 196305, 130932, 91923, 31982, 2376, 74006, 519535, -365562, 234484, 70972, 23386, 107947, -398549, 193783, -154104, 262489, -106068, 51668, -141724, 53283, 37689, 409226, 134336, -35015, -64659, 6052, 97472, -7367, -28570, -141639, -61045, 8406, -114358, -26515, -51401, -34541, 108233, 164012, 76889, -97166, -13108, 147294, 25882, 434444, -68460, -64048, -61138, 110010, -147428, -8895, -54268, 49894, -54891, 58402, 27774 };
		for (int ndx = 0; ndx < 100; ndx++)
		{
			Util.Check("Fixed32.Mod", Fixed32.Mod(input0[ndx], input1[ndx]), output0[ndx], input0[ndx], input1[ndx]);
		}
	}

	// Fixed64.Min
	public static void Fixed64_Min()
	{
		long[] input0 = new long[]{ -412567996392116L, 6567005003057L, -356539910766026L, 225943135505213L, 398296120385471L, -226111583505291L, -221154062702982L, 30516987414210L, 381465583177633L, -311046542744842L, -162225689475542L, 122238329856921L, 226882007905650L, 7574207803527L, -66529175830980L, -334830170755917L, -364697187969825L, -413720148792653L, 404739583188471L, -197417081491929L, 135075392662899L, -228141946306236L, 291540181535759L, -342975305159710L, 269320714325412L, -218465294701730L, -275268881128182L, -331686595554453L, 411718333991721L, 359723515567509L, 20981108609770L, 33579428615636L, 68011972631670L, -141912169866083L, -328034789552753L, 62319529829019L, 66208679030830L, -398000100785333L, -164119045076423L, -222584233903648L, 21689820210100L, 367249485171013L, 190021073488485L, 284217636732349L, -414256484392903L, 303576108341363L, 77535886636105L, 251887385117294L, -323552787950666L, -250389591116596L, 174049322281048L, -22373277410418L, 119340607455572L, 308684462343742L, -370827614372680L, 245070679514119L, 144523553067299L, 415932123993683L, 386119150779800L, 187264685487201L, -380339431977109L, -318964196748529L, 48295383022489L, -407754661989875L, 97469078245387L, 233691611508821L, -375270372374748L, -60702551828266L, -93887732243719L, 300648023940000L, 28457879813251L, -396193816784492L, 179895625883770L, 197827087492120L, 210389827897970L, 197322637091885L, 11333709805277L, -422174184796590L, -358215550366807L, 395241335584048L, 133495548262163L, -97659536645476L, 421362921996212L, 232611195508318L, -243822536313538L, -386142343579811L, 343735550760064L, 188824239887928L, -200581285093402L, -143608739466873L, 347292706361720L, 79773284637147L, -354622521965134L, 78112999036374L, -271741531526539L, -88842712641370L, -110542627451475L, 168279005878361L, -242748171113038L, -218451366301724L };
		long[] input1 = new long[]{ 249349751116112L, -291258291135627L, -83721612238985L, -194704082290666L, 150649258670151L, 140746409465540L, 227227826305811L, 351010249563451L, -331202095154228L, -138653521864565L, -195759759891157L, 137201008263889L, 344650944760490L, 420374544795752L, -375727592374961L, 146816834268366L, -310830389144741L, 245180917114171L, 265564603923663L, 54114692225199L, 319452790348756L, -134597882662677L, -289617996334863L, -379775722376846L, 382852047178279L, 378181324776104L, 387925434780641L, -327714102752603L, 40071889418660L, -130264189060659L, -121631465056639L, 272551433526916L, 250070715916448L, 289732545534917L, -283605145132063L, -4742890202208L, 415558805193509L, 186570274686878L, -347534792761833L, 44927783820921L, -183873440285622L, 422222030796612L, 90529605442156L, 367568966371162L, -377345709175715L, -219405031502168L, 164619069476656L, -345500337160886L, 24343861811336L, 10938363805093L, -207509053096628L, 73773185034353L, 332211131554697L, 132633866261762L, -108407427050481L, -45549095821210L, 427856434799236L, -133442619462139L, -148059399868945L, 201964663494047L, 182317704284898L, 125445199458414L, -118558369455208L, 228558823506431L, 412474672792073L, -38814463818074L, 316627021947440L, -374578330374426L, 274482960327816L, 58512027427246L, 160754758674857L, -67903934231620L, 163218980276004L, -208859909497258L, -191508597089178L, 326727489152144L, 204369241495166L, -227690233106026L, 427066716398868L, 172760349080447L, -215934474300552L, 303929042341528L, 77438765036060L, -400363203986433L, -352251865564030L, 234092079509007L, 369837031572218L, -312059879945314L, -31356757014601L, 191440680289146L, -3102595401444L, 119504695055648L, -94867055044175L, -120002726655880L, 292106809136022L, 120178089855962L, 111283670651820L, 291467511535725L, 384591023179089L, 90965484242359L };
		long[] output0 = new long[]{ -412567996392116L, -291258291135627L, -356539910766026L, -194704082290666L, 150649258670151L, -226111583505291L, -221154062702982L, 30516987414210L, -331202095154228L, -311046542744842L, -195759759891157L, 122238329856921L, 226882007905650L, 7574207803527L, -375727592374961L, -334830170755917L, -364697187969825L, -413720148792653L, 265564603923663L, -197417081491929L, 135075392662899L, -228141946306236L, -289617996334863L, -379775722376846L, 269320714325412L, -218465294701730L, -275268881128182L, -331686595554453L, 40071889418660L, -130264189060659L, -121631465056639L, 33579428615636L, 68011972631670L, -141912169866083L, -328034789552753L, -4742890202208L, 66208679030830L, -398000100785333L, -347534792761833L, -222584233903648L, -183873440285622L, 367249485171013L, 90529605442156L, 284217636732349L, -414256484392903L, -219405031502168L, 77535886636105L, -345500337160886L, -323552787950666L, -250389591116596L, -207509053096628L, -22373277410418L, 119340607455572L, 132633866261762L, -370827614372680L, -45549095821210L, 144523553067299L, -133442619462139L, -148059399868945L, 187264685487201L, -380339431977109L, -318964196748529L, -118558369455208L, -407754661989875L, 97469078245387L, -38814463818074L, -375270372374748L, -374578330374426L, -93887732243719L, 58512027427246L, 28457879813251L, -396193816784492L, 163218980276004L, -208859909497258L, -191508597089178L, 197322637091885L, 11333709805277L, -422174184796590L, -358215550366807L, 172760349080447L, -215934474300552L, -97659536645476L, 77438765036060L, -400363203986433L, -352251865564030L, -386142343579811L, 343735550760064L, -312059879945314L, -200581285093402L, -143608739466873L, -3102595401444L, 79773284637147L, -354622521965134L, -120002726655880L, -271741531526539L, -88842712641370L, -110542627451475L, 168279005878361L, -242748171113038L, -218451366301724L };
		for (int ndx = 0; ndx < 100; ndx++)
		{
			Util.Check("Fixed64.Min", Fixed64.Min(input0[ndx], input1[ndx]), output0[ndx], input0[ndx], input1[ndx]);
		}
	}

	// Fixed32.Min
	public static void Fixed32_Min()
	{
		int[] input0 = new int[]{ -1625600034, 1673899387, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, 1702488883, -1607578525, -86031900, -2147483648, -2147483648, -1999093723, 1658279123, -176965206, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, 318073031, -2147483648, 1316454410, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -1090545486, 1797638590, -2147483648, -2147483648, -2147483648, -1425102194, -2147483648, 1584802017, 990583505, 1702986612, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, 1101252066, -2147483648, -2147483648, -2147483648, -2147483648, 1888599143, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, 867145193, -2147483648, -2147483648, -2147483648, -2147483648, -315281137, -2147483648, -2147483648, -2147483648, -2147483648, -970466556, -2147483648, -1000000357, -2147483648, -2147483648, -2147483648, 1708888651, -2147483648, -2116845292, -2147483648, -2147483648, -577848630, -849783426, -2147483648, -2147483648, -2147483648, 618038528, -2147483648, -2147483648, 1227357040, -1389297501, -2147483648, -907598123, -703102218, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648 };
		int[] input1 = new int[]{ -2147483648, -2147483648, -502400869, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -1192215244, -2147483648, -2147483648, -1351443674, -2147483648, 655315927, -2147483648, 494710287, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, 1921060770, 1577050748, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -1036146823, -2147483648, -685484768, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -634105740, -2147483648, -2147483648, -2147483648, -2147483648, -1185319974, -2147483648, -2147483648, -2147483648, -2147483648, -863388626, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -346898843, -94827468, -2147483648, -1461270432, -2147483648, -2147483648, -79322885, -2147483648, -409147818, 1313868674, -2147483648, 2130478592, -2147483648, -2147483648, 337251907, -2147483648, -2147483648, -2147483648, 1452657096, -2147483648, 1226130264, -90582583, -2147483648, -2147483648, -2147483648, -2147483648, 1589595023, -408732162, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -1028433255, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648 };
		int[] output0 = new int[]{ -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -1607578525, -2147483648, -2147483648, -2147483648, -2147483648, 655315927, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, 1316454410, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -1036146823, -2147483648, -685484768, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -94827468, -2147483648, -2147483648, -2147483648, -2147483648, -315281137, -2147483648, -2147483648, -2147483648, -2147483648, -970466556, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -408732162, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -1028433255, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648 };
		for (int ndx = 0; ndx < 100; ndx++)
		{
			Util.Check("Fixed32.Min", Fixed32.Min(input0[ndx], input1[ndx]), output0[ndx], input0[ndx], input1[ndx]);
		}
	}

	// Fixed64.Max
	public static void Fixed64_Max()
	{
		long[] input0 = new long[]{ 1742027882L, -3641271435L, 1912568458L, 2657099023L, -2769854035L, 323864870L, -1991993078L, 344335934L, 3508115515L, -3871225519L, 324785974L, -52196210L, -2314802767L, 1383520918L, -2436195487L, 4126987871L, -2462310075L, 1661047678L, 586109122L, 3397955299L, -3462406131L, -4079085631L, -274535130L, 1855978906L, 3162463871L, 2282708515L, 3874962647L, -3306355419L, -1112695298L, -2139568026L, 2964681827L, -3942054391L, -298076714L, -1550158406L, -1096055902L, 149860870L, 2323034635L, -256935078L, 3360277275L, -1867632182L, 500806898L, -3597546235L, 518985070L, 1733695882L, -2448903995L, -2249210687L, 2016949882L, -3862253115L, 1804403814L, -506014594L, -3767035079L, 348002018L, -2737050315L, 2869642635L, -2625356699L, 1526146218L, 928230990L, -4238377743L, 3789602447L, -757595254L, 743869518L, -2980604955L, -2837936063L, 1352716246L, -2540940051L, -28126930L, -4049086791L, 3530322935L, -1815390474L, 1708910938L, -2491014059L, 2089592298L, 2595737699L, -1841225990L, -1397818894L, -4159827191L, -303103406L, 2286736283L, 9915606L, 1116707262L, -4029208663L, 3442248467L, -815791938L, 3688286591L, -2667500243L, -1678287486L, 3089963219L, 1127247946L, -3219769003L, 1672765174L, 3516597175L, 2266445083L, 248429770L, -177094766L, 1683465594L, -813555442L, 3535357123L, 3461236119L, -20331362L, 1874190230L };
		long[] input1 = new long[]{ -2495091191L, 2781594243L, 2248104655L, -4199474419L, -2309967831L, -1561660082L, 2047231614L, 3399142971L, -27505766L, -2760496803L, -2465717671L, 2936462003L, 46673946L, -1622072110L, -1023353886L, 1596588346L, 2130154278L, -2231255359L, -274750806L, 3432314731L, 1176877146L, -881367442L, 2455124643L, 806811646L, 2487281059L, -462491846L, -2453804767L, -1522134830L, 770275710L, 3710703843L, -3400217019L, 530627770L, -1987899650L, 2430692671L, -683168842L, -2515835611L, -3100823483L, -911284814L, 1703287126L, 3189127135L, 569448194L, 3985787543L, -3140213583L, 3835695095L, -156484450L, -3714832123L, -2075196158L, -2424465415L, -3448708175L, -4208090047L, 1351257574L, 1471645186L, -558980370L, 842321202L, -3597654211L, 2681243547L, -3968497695L, -2853674287L, -2391788183L, 2447491311L, -3402822611L, -725600850L, -1666100034L, 556757686L, -3655247079L, 1298621854L, 629394358L, 1910948570L, 3356064027L, -2802485571L, 402444534L, -1253528202L, 360424810L, 831089354L, -1432100758L, 1486056898L, -2036121154L, 2914396843L, -3331671199L, 1907145886L, -2682262983L, 4265627943L, -2368393951L, 683398462L, -1935521026L, -576894910L, -3205359155L, 1464746442L, 1733379586L, 930554906L, -2842305211L, 4047818099L, -2814463927L, 3550763111L, 2296982451L, -2999918251L, 1356920282L, 597996026L, 3195974879L, 2839860991L };
		long[] output0 = new long[]{ 1742027882L, 2781594243L, 2248104655L, 2657099023L, -2309967831L, 323864870L, 2047231614L, 3399142971L, 3508115515L, -2760496803L, 324785974L, 2936462003L, 46673946L, 1383520918L, -1023353886L, 4126987871L, 2130154278L, 1661047678L, 586109122L, 3432314731L, 1176877146L, -881367442L, 2455124643L, 1855978906L, 3162463871L, 2282708515L, 3874962647L, -1522134830L, 770275710L, 3710703843L, 2964681827L, 530627770L, -298076714L, 2430692671L, -683168842L, 149860870L, 2323034635L, -256935078L, 3360277275L, 3189127135L, 569448194L, 3985787543L, 518985070L, 3835695095L, -156484450L, -2249210687L, 2016949882L, -2424465415L, 1804403814L, -506014594L, 1351257574L, 1471645186L, -558980370L, 2869642635L, -2625356699L, 2681243547L, 928230990L, -2853674287L, 3789602447L, 2447491311L, 743869518L, -725600850L, -1666100034L, 1352716246L, -2540940051L, 1298621854L, 629394358L, 3530322935L, 3356064027L, 1708910938L, 402444534L, 2089592298L, 2595737699L, 831089354L, -1397818894L, 1486056898L, -303103406L, 2914396843L, 9915606L, 1907145886L, -2682262983L, 4265627943L, -815791938L, 3688286591L, -1935521026L, -576894910L, 3089963219L, 1464746442L, 1733379586L, 1672765174L, 3516597175L, 4047818099L, 248429770L, 3550763111L, 2296982451L, -813555442L, 3535357123L, 3461236119L, 3195974879L, 2839860991L };
		for (int ndx = 0; ndx < 100; ndx++)
		{
			Util.Check("Fixed64.Max", Fixed64.Max(input0[ndx], input1[ndx]), output0[ndx], input0[ndx], input1[ndx]);
		}
	}

	// Fixed32.Max
	public static void Fixed32_Max()
	{
		int[] input0 = new int[]{ -751, 4712, -22667, 55675, -4815, -25790, -48580, 44325, -30831, -12035, 6445, -39488, -58242, -60, 12737, -51475, -40468, 29685, -27506, 18564, 3189, 52789, -62826, -28525, -64928, 9912, -41718, 16855, 43168, -41613, -63565, 25342, 61239, -28634, -35683, 19895, 22220, -26278, -50292, 61792, -25758, -27699, -12354, -27051, -57782, 61654, 54471, 22651, -24093, 20988, 60229, 56555, -28904, -35333, -25392, 11994, 2002, -59678, 55067, 50808, -49608, 100, -64379, -54754, -14005, 46638, -35192, 35927, -29912, 58378, -8159, 51345, 14442, -23763, -21213, -34647, -391, 29760, -36279, -61046, 20976, 1166, -24587, -43356, -36306, -54584, -11288, 31036, 62294, 17857, -47643, 16362, -15810, -35565, 45864, 39676, -28856, -23136, 52490, -38884 };
		int[] input1 = new int[]{ 31310, -46992, -12971, -16935, -36388, -56651, -23423, 60394, 51415, -56280, -53149, 37777, 42137, 50578, -35704, 14761, -40848, 44513, 47088, -24956, -7608, -692, 39169, 17765, 40485, 41014, 1619, -15527, -4091, 4645, 59744, -42791, 42806, -62930, -26821, 2433, -51397, 57884, 58567, -45191, 34374, -6147, 45156, 53039, 5470, -19884, 39761, -852, -65397, -34432, 14989, -7833, -4689, 11911, 34259, -33532, -20626, 34798, 8115, -11866, 7265, 57640, -1049, -18765, -50489, 55177, 60507, 39532, 11864, 27398, 622, -33196, 51481, 26744, 6205, 64075, 19686, 51666, -53241, -5165, -64282, -63063, -15665, -35195, 55192, 2041, 27434, -34640, -31654, -58825, -42476, -20659, -15766, 4898, 13079, 42269, 60437, -1613, 37992, 15829 };
		int[] output0 = new int[]{ 31310, 4712, -12971, 55675, -4815, -25790, -23423, 60394, 51415, -12035, 6445, 37777, 42137, 50578, 12737, 14761, -40468, 44513, 47088, 18564, 3189, 52789, 39169, 17765, 40485, 41014, 1619, 16855, 43168, 4645, 59744, 25342, 61239, -28634, -26821, 19895, 22220, 57884, 58567, 61792, 34374, -6147, 45156, 53039, 5470, 61654, 54471, 22651, -24093, 20988, 60229, 56555, -4689, 11911, 34259, 11994, 2002, 34798, 55067, 50808, 7265, 57640, -1049, -18765, -14005, 55177, 60507, 39532, 11864, 58378, 622, 51345, 51481, 26744, 6205, 64075, 19686, 51666, -36279, -5165, 20976, 1166, -15665, -35195, 55192, 2041, 27434, 31036, 62294, 17857, -42476, 16362, -15766, 4898, 45864, 42269, 60437, -1613, 52490, 15829 };
		for (int ndx = 0; ndx < 100; ndx++)
		{
			Util.Check("Fixed32.Max", Fixed32.Max(input0[ndx], input1[ndx]), output0[ndx], input0[ndx], input1[ndx]);
		}
	}

	// Fixed64.Ceil
	public static void Fixed64_Ceil()
	{
		long[] input0 = new long[]{ -973611490L, -4279955227L, 3461544267L, -1786525658L, 1997599682L, -1137067058L, 407730634L, 2234936931L, -3921030231L, 2340945755L, 807226946L, -442775698L, 1474818150L, -3424597739L, -859784010L, 314117034L, 509256186L, -2057188614L, -551988106L, 852286438L, -2476760283L, 1940624706L, 370290006L, 337722770L, 284358222L, -2900205887L, 3152666347L, -1242094234L, -3399430055L, 1931467778L, -4056557843L, -2899084903L, -3398854411L, -231636102L, -3659898883L, -4227859951L, -3299528763L, -3535125675L, -9185166L, 459214718L, 4021045703L, 3857956691L, -2644130115L, -120465470L, -367415938L, 1954003458L, 1466181318L, -1903646718L, -3114180075L, -3751914111L, -2034058930L, 1723061830L, -3848705871L, -2657370927L, -780830346L, 1380731098L, -355277938L, -1171145798L, 2224083415L, 602838274L, 5233890L, -2645142427L, 1339399690L, -1557530714L, 2102536302L, -588655446L, -1338888582L, -2588513043L, -4059666151L, -926891354L, -681321498L, -250585434L, 2246963847L, 3283764471L, 1126208030L, -2039749678L, 289787526L, -3804211819L, -3589828587L, 2625322059L, -71419910L, 761345770L, -2422881455L, -3942483239L, -329440586L, -1484652378L, -3345346327L, 3553483811L, -3745773051L, -745662686L, 422385282L, 2166584331L, -1464241794L, 3682943855L, -3840986467L, 2371220835L, -1776410294L, 3208367895L, 2071965522L, -4073727787L };
		long[] output0 = new long[]{};
		for (int ndx = 0; ndx < 100; ndx++)
		{
			Util.Check("Fixed64.Ceil", Fixed64.Ceil(input0[ndx]), output0[ndx], input0[ndx]);
		}
	}

	// Fixed32.Ceil
	public static void Fixed32_Ceil()
	{
		int[] input0 = new int[]{ -15290, -3666, -32637, 32160, 18682, 38322, 57541, -43296, 7803, -46326, -48889, -12909, -28629, 59413, -55247, 53998, 62144, 15059, 46796, -10799, -23472, -9115, -47877, 14968, 44947, 22080, -47017, 43624, 43179, 46538, 61517, 21001, -24127, -58152, -10186, -62959, -21281, -3594, -13303, 22186, -14659, 57786, -19117, 54706, -28024, -46181, -3846, -16220, 45908, -47071, 39573, 23370, -63377, -23120, 26848, 59361, -21324, 17929, 52748, 62138, 19803, -51618, -20939, 26800, -42308, -4355, -54318, -36013, 4063, -57824, 9743, 203, -37172, -40925, -61675, -15723, -55534, -37048, -22543, 25593, -39608, 34739, 63251, 24714, -58570, -27389, 18843, 64529, -19464, -4011, 23901, 26325, 9192, -9906, -63152, -28577, 13190, 19618, 31478, 41867 };
		int[] output0 = new int[]{ 0, 0, 0, 65536, 65536, 65536, 65536, 0, 65536, 0, 0, 0, 0, 65536, 0, 65536, 65536, 65536, 65536, 0, 0, 0, 0, 65536, 65536, 65536, 0, 65536, 65536, 65536, 65536, 65536, 0, 0, 0, 0, 0, 0, 0, 65536, 0, 65536, 0, 65536, 0, 0, 0, 0, 65536, 0, 65536, 65536, 0, 0, 65536, 65536, 0, 65536, 65536, 65536, 65536, 0, 0, 65536, 0, 0, 0, 0, 65536, 0, 65536, 65536, 0, 0, 0, 0, 0, 0, 0, 65536, 0, 65536, 65536, 65536, 0, 0, 65536, 65536, 0, 0, 65536, 65536, 65536, 0, 0, 0, 65536, 65536, 65536, 65536 };
		for (int ndx = 0; ndx < 100; ndx++)
		{
			Util.Check("Fixed32.Ceil", Fixed32.Ceil(input0[ndx]), output0[ndx], input0[ndx]);
		}
	}

	// Fixed64.Floor
	public static void Fixed64_Floor()
	{
		long[] input0 = new long[]{ -3761725231L, -2186882047L, 2965632807L, 2503280511L, 571530926L, -1714817250L, -327164894L, 2823613767L, -1768194906L, -1505018238L, 3234830415L, -3264518039L, -1642514486L, -2515284047L, 2373120587L, 3316145223L, -3233190919L, 1302956966L, 1299928458L, 3317239467L, 2774627743L, -3493803775L, 3210400311L, -3765736131L, -1060980806L, 3208291047L, 3705879707L, 2508010103L, -2838318511L, 2125800102L, 2400058047L, -630227606L, -195998394L, 73765698L, 1144029898L, 3886041971L, 3605993999L, -2652978895L, -3246807287L, 2171289935L, 2827151439L, 2706249727L, 1702208018L, -4065565779L, 797237054L, 535936710L, -927214778L, -1177263898L, 1272642866L, -3159949751L, -2934604731L, 3856486443L, 4280733167L, 3040711319L, 4264143943L, 4027045839L, -1102315062L, 2436401643L, -730705978L, 1658207174L, -1125729662L, 1459792298L, 1366964982L, 400972286L, 389891010L, -429909274L, 1226447650L, 2578687111L, 635653350L, 2782045911L, 4005118519L, 3714755271L, 254796958L, 3423605819L, -3804879267L, -4226589279L, -901044498L, 2980998795L, -268005890L, 2698049779L, -159461470L, 588176310L, -3059600059L, -3973336055L, 765437538L, 2838538899L, -615993478L, 1058257582L, 104589050L, 1411951354L, 693389738L, -3125374939L, 2372694379L, -610047166L, -997947698L, -2927608155L, -2955682551L, -2993731563L, -160489494L, -3067820967L };
		long[] output0 = new long[]{};
		for (int ndx = 0; ndx < 100; ndx++)
		{
			Util.Check("Fixed64.Floor", Fixed64.Floor(input0[ndx]), output0[ndx], input0[ndx]);
		}
	}

	// Fixed32.Floor
	public static void Fixed32_Floor()
	{
		int[] input0 = new int[]{ 54999, 12040, 37873, 42504, -43794, -35925, -10578, -52457, 38919, 64022, 9660, 3229, -24270, 13217, -37800, 39383, 3424, 15950, 59974, 28172, -62696, -62969, -27784, 53690, -33665, 43266, -45057, -52339, 1931, 52149, 46143, -33604, -17600, -22814, 51705, 51062, 36637, -23654, 48701, -17931, -11644, -22478, 42764, 3109, -53652, -58185, 42116, -42548, -37044, 10924, 17439, 4485, -40119, 34914, -49650, 52433, -25711, 49718, 10633, -21524, -56403, -23775, 11147, 52305, -47657, -22271, -44705, 64080, 27048, -23327, -62789, -38457, 32784, 12369, -25718, 25317, -40197, 34642, 41806, -41016, -64385, 63027, 50240, 56542, -30825, -23877, -59020, 13020, -38699, 64808, 11238, 52455, 31247, 4690, -27063, -53405, 31910, 55994, -14769, 34155 };
		int[] output0 = new int[]{};
		for (int ndx = 0; ndx < 100; ndx++)
		{
			Util.Check("Fixed32.Floor", Fixed32.Floor(input0[ndx]), output0[ndx], input0[ndx]);
		}
	}

	// Fixed64.Round
	public static void Fixed64_Round()
	{
		long[] input0 = new long[]{ 3411571151L, 2855559663L, -266135274L, 3396023259L, 535990510L, -631687998L, 2440349475L, 855029186L, -321311598L, -618142906L, 1775710510L, 339626998L, -3776460223L, -910011794L, -1486033886L, -3532031651L, -555714574L, 1319913178L, 1153132298L, 2736563091L, -1886550102L, 511802550L, 2440806799L, 1820323682L, 2029689742L, -3257745039L, -273240126L, -2453823235L, -1710644750L, -2480468651L, 3862866983L, -2009118702L, -1056744710L, -3793518651L, -1804651278L, -2780185619L, 101713326L, 4191503971L, -1125362562L, 2906450103L, 289760090L, -428043106L, -3120325803L, 2376895859L, -1823416078L, -3898088515L, 2919205731L, -1337093298L, -2501508647L, -2536586391L, 1350685922L, -3523575131L, -1778425114L, 590489262L, -170024858L, -1395198694L, -3880214431L, 2208508339L, -2928633779L, -501231746L, 3936519423L, 599205414L, -1729293358L, -2135810242L, -186042594L, -510138082L, -2898595587L, -4277908867L, -3400327811L, -3000815563L, 661222318L, -452251250L, -1849691554L, 2541649491L, -1848164294L, 2836460299L, -662838942L, -4231056355L, -651227534L, 1632810962L, -1881983474L, -3231114123L, -4247281883L, -3469025655L, 463812722L, 3091474819L, 4064273707L, 2647733323L, 671473502L, 3885514711L, -3194938483L, 2188172283L, 2825170455L, 3670836479L, 3264897975L, 3985521971L, -2993717043L, 3310451735L, -1732028842L, 2981689299L };
		long[] output0 = new long[]{};
		for (int ndx = 0; ndx < 100; ndx++)
		{
			Util.Check("Fixed64.Round", Fixed64.Round(input0[ndx]), output0[ndx], input0[ndx]);
		}
	}

	// Fixed32.Round
	public static void Fixed32_Round()
	{
		int[] input0 = new int[]{ 50284, 44283, -34053, -57917, 16741, -38025, 39994, -383, -28325, 19660, 54361, -60182, -21899, -4066, -44467, 43833, 8415, -38989, 25868, 15525, -4263, -19094, -9985, -45637, -62573, 42236, 15526, -18700, 54500, -23478, 23425, 4908, 27403, 10102, 40165, -7464, 50286, 58644, -4138, -20433, -58358, -3136, 3190, 56121, -60608, -54104, -10247, -18361, 34943, -59551, -13137, 58845, -40891, 23582, -15775, 3843, -11267, -53952, -60879, 40040, 11984, -6840, 10652, 60689, 61771, -16083, -22050, 33534, 21304, 28532, 59082, 15306, 30684, -19233, 8347, 64409, 43251, -570, -50564, 57066, -13052, -31648, 11891, 48515, 55194, 30116, -19736, -61714, -39658, -29213, -61732, 38703, 53988, 21356, 33118, 14018, 51746, 8036, 59885, 21010 };
		int[] output0 = new int[]{ 65536, 65536, -65536, -65536, 0, -65536, 65536, 0, 0, 0, 65536, -65536, 0, 0, -65536, 65536, 0, -65536, 0, 0, 0, 0, 0, -65536, -65536, 65536, 0, 0, 65536, 0, 0, 0, 0, 0, 65536, 0, 65536, 65536, 0, 0, -65536, 0, 0, 65536, -65536, -65536, 0, 0, 65536, -65536, 0, 65536, -65536, 0, 0, 0, 0, -65536, -65536, 65536, 0, 0, 0, 65536, 65536, 0, 0, 65536, 0, 0, 65536, 0, 0, 0, 0, 65536, 65536, 0, -65536, 65536, 0, 0, 0, 65536, 65536, 0, 0, -65536, -65536, 0, -65536, 65536, 65536, 0, 65536, 0, 65536, 0, 65536, 0 };
		for (int ndx = 0; ndx < 100; ndx++)
		{
			Util.Check("Fixed32.Round", Fixed32.Round(input0[ndx]), output0[ndx], input0[ndx]);
		}
	}

	// Fixed64.Fract
	public static void Fixed64_Fract()
	{
		long[] input0 = new long[]{ 2194284747L, 1425718294L, 1695461942L, -3874797755L, -3479815867L, 2430860463L, -2449431287L, 2875605919L, -3296537507L, -959975286L, 1712310066L, 3593968815L, 4072924839L, -3434719331L, -815472370L, -1435473402L, 3067322651L, 1813621382L, -3934808419L, -2220419999L, -4055572879L, -1695549070L, 501801446L, -984249246L, 1620673774L, -2959363215L, 1759947006L, -3683659851L, 864017518L, 3923312139L, -3465098059L, -1987115914L, 332874290L, -395758638L, -2749348715L, 2013862626L, 525403042L, 359152266L, 2364335659L, -3108614107L, 128156082L, 125930590L, 3546988719L, 2655859251L, 668125138L, -3344727379L, 2758485967L, 2677913831L, -2079853126L, -689042630L, 2146358582L, -2717348835L, 166515658L, 1850139270L, 1137549122L, -405133478L, -3371050447L, -1615256106L, -1200504234L, 3774514643L, -3624053839L, -3060738731L, -2283378895L, -2924882351L, -1789844522L, -595541314L, -1033872770L, 173716182L, 3609596679L, 1465632298L, 2334090851L, -1586796910L, 3744253019L, 3468772983L, 1946391214L, 113463826L, -947570494L, 2140909490L, 2642592911L, 670433858L, -1422881886L, 3377000471L, 2691160571L, -2741907147L, -2518013739L, 3547218071L, 2141335722L, 2777702315L, 2761659535L, 1950752058L, 1089945778L, -2154308147L, -2735310795L, 2884788311L, -3779527563L, -1106072482L, -1885657810L, 2176903775L, 150736478L, -3031300843L };
		long[] output0 = new long[]{ 2194284747L, 1425718294L, 1695461942L, 420169541L, 815151429L, 2430860463L, 1845536009L, 2875605919L, 998429789L, 3334992010L, 1712310066L, 3593968815L, 4072924839L, 860247965L, 3479494926L, 2859493894L, 3067322651L, 1813621382L, 360158877L, 2074547297L, 239394417L, 2599418226L, 501801446L, 3310718050L, 1620673774L, 1335604081L, 1759947006L, 611307445L, 864017518L, 3923312139L, 829869237L, 2307851382L, 332874290L, 3899208658L, 1545618581L, 2013862626L, 525403042L, 359152266L, 2364335659L, 1186353189L, 128156082L, 125930590L, 3546988719L, 2655859251L, 668125138L, 950239917L, 2758485967L, 2677913831L, 2215114170L, 3605924666L, 2146358582L, 1577618461L, 166515658L, 1850139270L, 1137549122L, 3889833818L, 923916849L, 2679711190L, 3094463062L, 3774514643L, 670913457L, 1234228565L, 2011588401L, 1370084945L, 2505122774L, 3699425982L, 3261094526L, 173716182L, 3609596679L, 1465632298L, 2334090851L, 2708170386L, 3744253019L, 3468772983L, 1946391214L, 113463826L, 3347396802L, 2140909490L, 2642592911L, 670433858L, 2872085410L, 3377000471L, 2691160571L, 1553060149L, 1776953557L, 3547218071L, 2141335722L, 2777702315L, 2761659535L, 1950752058L, 1089945778L, 2140659149L, 1559656501L, 2884788311L, 515439733L, 3188894814L, 2409309486L, 2176903775L, 150736478L, 1263666453L };
		for (int ndx = 0; ndx < 100; ndx++)
		{
			Util.Check("Fixed64.Fract", Fixed64.Fract(input0[ndx]), output0[ndx], input0[ndx]);
		}
	}

	// Fixed32.Fract
	public static void Fixed32_Fract()
	{
		int[] input0 = new int[]{ 30275, -26095, 51319, 11436, 19406, -8572, -33060, 15147, 64067, -49909, -57259, -18569, 566, 36987, 13769, -41291, -22231, -58539, 59327, -15901, 23774, 7375, 26047, -40224, -59803, 2951, -48011, -52421, 45064, -18959, -35031, 17860, -35168, 21040, 45490, -61151, -65326, -35908, 4291, 35686, 21650, -48009, 43853, 26513, 21489, -30334, 32097, -13189, -35287, 49156, -60182, -35769, 39425, -47334, -4492, -42636, 13393, 26007, 5703, -49080, -26097, -46174, 35619, 17490, 50658, -9583, -48937, 45061, 57032, 9385, -41500, -51858, 2705, -41895, 27984, 6247, 29058, 65069, 3822, 36067, 36390, 30714, 48401, 61443, -24312, -64798, 43971, -53369, -40002, 22591, -9009, -25798, 23924, -12163, -3751, 2289, -18092, -39173, 41391, -34463 };
		int[] output0 = new int[]{ 30275, 39441, 51319, 11436, 19406, 56964, 32476, 15147, 64067, 15627, 8277, 46967, 566, 36987, 13769, 24245, 43305, 6997, 59327, 49635, 23774, 7375, 26047, 25312, 5733, 2951, 17525, 13115, 45064, 46577, 30505, 17860, 30368, 21040, 45490, 4385, 210, 29628, 4291, 35686, 21650, 17527, 43853, 26513, 21489, 35202, 32097, 52347, 30249, 49156, 5354, 29767, 39425, 18202, 61044, 22900, 13393, 26007, 5703, 16456, 39439, 19362, 35619, 17490, 50658, 55953, 16599, 45061, 57032, 9385, 24036, 13678, 2705, 23641, 27984, 6247, 29058, 65069, 3822, 36067, 36390, 30714, 48401, 61443, 41224, 738, 43971, 12167, 25534, 22591, 56527, 39738, 23924, 53373, 61785, 2289, 47444, 26363, 41391, 31073 };
		for (int ndx = 0; ndx < 100; ndx++)
		{
			Util.Check("Fixed32.Fract", Fixed32.Fract(input0[ndx]), output0[ndx], input0[ndx]);
		}
	}

	// Fixed64.CeilToInt
	public static void Fixed64_CeilToInt()
	{
		long[] input0 = new long[]{ -3075830515L, 3445349051L, -307113438L, 1367245466L, 1646362490L, 3749470231L, 1773479314L, 1034439062L, -641154886L, 3591078983L, -403684770L, 908296138L, -2841057047L, 2305047251L, -1306456014L, 571755022L, -1903204898L, 2602537511L, -1555352518L, 3271590551L, 785223350L, -4004506891L, 1279808850L, -2037827254L, -3089423467L, 3265888059L, -671526762L, -3320489599L, 1795209574L, -2610997939L, -2699784527L, 176702642L, -2743160875L, -1785841474L, 1144578614L, 3234476371L, -1974967270L, -2490139835L, -1914555986L, -1047866058L, -1725138910L, -2447718423L, 1438496122L, -1917728718L, -2410714535L, 2796240939L, -3144634051L, 3557803395L, -3785687059L, 3477336023L, -2241745091L, 506711522L, 3283055123L, 3735987323L, 1251147702L, -3366290919L, -2129427094L, -2564253479L, 161701638L, 2675441727L, 126029698L, 799001618L, 3534196783L, -2325124243L, 1995896214L, 3714579883L, -643510282L, 3239751723L, -3134498659L, -245965090L, -1748245002L, -3708032359L, 222126202L, 3787480835L, 701762166L, -1062025522L, -1148035718L, -1097429726L, -3922080015L, -1590697110L, 2115554814L, 65637138L, -3829769835L, 2612840847L, 3925714447L, 1088471246L, 1188614814L, -2184180903L, 1257978118L, 215902238L, 1068936170L, -3705681087L, 1643125822L, -295030418L, 3121071539L, 1770826766L, -1686947910L, -531346930L, 381342362L, -1830327122L };
		int[] output0 = new int[]{ 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0 };
		for (int ndx = 0; ndx < 100; ndx++)
		{
			Util.Check("Fixed64.CeilToInt", Fixed64.CeilToInt(input0[ndx]), output0[ndx], input0[ndx]);
		}
	}

	// Fixed32.CeilToInt
	public static void Fixed32_CeilToInt()
	{
		int[] input0 = new int[]{ -13049, -31881, 36580, 11524, 14200, -43162, -61193, 57839, -19237, -30239, 31688, 49788, -44817, -38796, -56992, -64614, 5093, -51477, -29844, -51689, -26992, -42027, -35296, 14412, 45472, -35667, -16116, -57644, -55367, 49223, -56000, 56126, 42971, 33618, 54313, -1373, 29957, -4425, -39867, 37527, 12266, 25833, 51445, -16100, 37142, 32057, 53809, -1667, -13045, 46702, -43608, -39799, -43799, -8027, 64600, -36558, -62121, -43368, 31587, -15668, 38489, 61987, 47670, -2924, -39775, 41098, -58718, -12899, -27573, 9916, -29035, -56016, 53926, -1836, 1579, 12709, -27936, 46340, 42806, -52121, -23940, 51087, 20936, -36533, 27296, 49335, 34389, -14536, 34554, 25335, -4787, 7789, 29522, 41336, 64573, 15815, 43699, -11165, -41861, 61580 };
		int[] output0 = new int[]{ 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1 };
		for (int ndx = 0; ndx < 100; ndx++)
		{
			Util.Check("Fixed32.CeilToInt", Fixed32.CeilToInt(input0[ndx]), output0[ndx], input0[ndx]);
		}
	}

	// Fixed64.FloorToInt
	public static void Fixed64_FloorToInt()
	{
		long[] input0 = new long[]{ 1654158818L, 76847538L, -2597152711L, 2790169051L, 668588798L, -3481796711L, -1847432666L, 1544855742L, 3665345647L, -894249438L, 3729938511L, -2813193499L, -1352607894L, 1191014090L, -3752798767L, 3469396115L, -1604645250L, 1223434674L, 2314409671L, -1544975398L, -3855320455L, 1399464202L, 1185040130L, 827474126L, -3331317167L, 1881588866L, -1310920818L, -3469920651L, -57280302L, 3362049111L, 2264016303L, 3195870611L, 1485447358L, 3064619699L, -775026322L, 2649128875L, 1650234750L, 2876872195L, 1232108814L, 975709502L, 785691606L, -3586068995L, -323067834L, -1136178558L, 2225434443L, -1795543010L, -2431858087L, -3551208543L, 2166880943L, -3532447091L, -1653864818L, -2654526435L, 1248796398L, 3096496751L, 3596077011L, -4040272679L, 3186774703L, 870340458L, 1826518922L, 3081967227L, 2124091402L, -2672479311L, -2692831251L, -3991670759L, 1136701554L, -3760899395L, -3673562L, -122260298L, -2328926883L, -2106960346L, -2475805931L, -186550150L, 4286293155L, -2956267127L, 1964300290L, 4025715835L, -2572435259L, -1973748606L, 2897006979L, 2759193139L, 18479658L, -2054679570L, -1341834298L, -819800506L, 720946634L, 623575442L, -2347893083L, 2683917903L, 3763509983L, -1029720938L, 3757321467L, -3515073003L, -3244614023L, 2445108883L, 3146585395L, -836796378L, 3401729551L, -626364370L, 2022087182L, 1691366542L };
		int[] output0 = new int[]{ 0, 0, -1, 0, 0, -1, -1, 0, 0, -1, 0, -1, -1, 0, -1, 0, -1, 0, 0, -1, -1, 0, 0, 0, -1, 0, -1, -1, -1, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 0, 0, -1, -1, -1, 0, -1, -1, -1, 0, -1, -1, -1, 0, 0, 0, -1, 0, 0, 0, 0, 0, -1, -1, -1, 0, -1, -1, -1, -1, -1, -1, -1, 0, -1, 0, 0, -1, -1, 0, 0, 0, -1, -1, -1, 0, 0, -1, 0, 0, -1, 0, -1, -1, 0, 0, -1, 0, -1, 0, 0 };
		for (int ndx = 0; ndx < 100; ndx++)
		{
			Util.Check("Fixed64.FloorToInt", Fixed64.FloorToInt(input0[ndx]), output0[ndx], input0[ndx]);
		}
	}

	// Fixed32.FloorToInt
	public static void Fixed32_FloorToInt()
	{
		int[] input0 = new int[]{ 38194, 30294, 46885, -322, 49412, 43146, -40372, -1371, -48260, 58980, 43138, 13207, 34611, 51304, -18790, -1773, 45231, 36955, -6372, -57706, 43975, 24526, 6243, 45711, -23945, -49678, -18873, -37441, -27586, -22794, -56014, 35841, 4564, -47139, -61628, 35523, -12701, 45383, 3613, 33390, -15648, 31081, 23677, 63982, 6685, -21411, -22711, -35277, -9435, -15749, 7535, -50585, 62351, 23024, 47368, -51868, -41485, -64362, -41912, 33554, -3515, 62605, -39321, 40070, 49458, -58238, -56893, 16214, 47396, 11221, -54607, 65384, -32194, 25772, 23478, -52642, -64686, 7797, -26509, 63001, 38569, -49132, 37529, 53699, 35205, 60106, 39026, 47075, -28972, 55776, 11473, -13875, 21760, 35594, -28629, -12717, 4867, 49142, -51012, -612 };
		int[] output0 = new int[]{ 0, 0, 0, -1, 0, 0, -1, -1, -1, 0, 0, 0, 0, 0, -1, -1, 0, 0, -1, -1, 0, 0, 0, 0, -1, -1, -1, -1, -1, -1, -1, 0, 0, -1, -1, 0, -1, 0, 0, 0, -1, 0, 0, 0, 0, -1, -1, -1, -1, -1, 0, -1, 0, 0, 0, -1, -1, -1, -1, 0, -1, 0, -1, 0, 0, -1, -1, 0, 0, 0, -1, 0, -1, 0, 0, -1, -1, 0, -1, 0, 0, -1, 0, 0, 0, 0, 0, 0, -1, 0, 0, -1, 0, 0, -1, -1, 0, 0, -1, -1 };
		for (int ndx = 0; ndx < 100; ndx++)
		{
			Util.Check("Fixed32.FloorToInt", Fixed32.FloorToInt(input0[ndx]), output0[ndx], input0[ndx]);
		}
	}

	// Fixed64.RoundToInt
	public static void Fixed64_RoundToInt()
	{
		long[] input0 = new long[]{ -1969626350L, 1743900474L, -1123170298L, 2941178487L, -1748387166L, 503785354L, 3089664399L, -1897770166L, 4265262695L, 2259389855L, -3454899667L, 1065156990L, 1814246710L, -2580666107L, 3966352803L, -1305447630L, -2651632231L, -1801286190L, -3976148243L, 3597148903L, -2079377210L, -2518713223L, -1333574538L, 3745824511L, 4278472463L, 1625523782L, -1436007210L, -147652990L, -729616654L, -1922831338L, 525986474L, -3164967263L, -440791118L, 2597761855L, 1803513674L, -3511194215L, 2198206683L, 3813351767L, 972687518L, -2491504615L, -3445471115L, 160413550L, 3114842331L, 136845022L, 2815272943L, 3981715259L, 1571398390L, -288230698L, 2661363379L, 3724120179L, -2476805351L, -2174684579L, 2901802599L, -2645342283L, -2255707071L, -3745880423L, -1217492282L, -574027514L, 2957673319L, 921056346L, -2355174731L, -1057649906L, 3126813783L, 1893126738L, -2561563915L, 4005034891L, -2789019187L, 3511452151L, -89212486L, 3182579723L, 791312982L, -2170016703L, 1520993586L, 2810323667L, 2747652723L, 2055176534L, -1338588258L, 2824547735L, -3364415727L, -3998210091L, -4240841903L, 3147190783L, 1485950926L, -158769538L, -3740993283L, -1594296242L, -1771802566L, -2090416130L, 558501630L, 1254426802L, 2001265362L, -1522733098L, -3439288847L, -4243336123L, 4158637411L, 1907146086L, 1328567062L, -3073251703L, -1596558358L, 3105205347L };
		int[] output0 = new int[]{ 0, 0, 0, 1, 0, 0, 1, 0, 1, 1, -1, 0, 0, -1, 1, 0, -1, 0, -1, 1, 0, -1, 0, 1, 1, 0, 0, 0, 0, 0, 0, -1, 0, 1, 0, -1, 1, 1, 0, -1, -1, 0, 1, 0, 1, 1, 0, 0, 1, 1, -1, -1, 1, -1, -1, -1, 0, 0, 1, 0, -1, 0, 1, 0, -1, 1, -1, 1, 0, 1, 0, -1, 0, 1, 1, 0, 0, 1, -1, -1, -1, 1, 0, 0, -1, 0, 0, 0, 0, 0, 0, 0, -1, -1, 1, 0, 0, -1, 0, 1 };
		for (int ndx = 0; ndx < 100; ndx++)
		{
			Util.Check("Fixed64.RoundToInt", Fixed64.RoundToInt(input0[ndx]), output0[ndx], input0[ndx]);
		}
	}

	// Fixed32.RoundToInt
	public static void Fixed32_RoundToInt()
	{
		int[] input0 = new int[]{ 37777, 35933, 62499, 57582, -20784, 60854, 9144, -64140, -16754, -242, 28803, 3859, -22958, 40602, 13228, -18423, 26723, -15401, 20433, 50776, 22611, 54876, -20477, 45033, -47510, -30226, -46168, 22420, 44962, -52710, -54448, -39067, 1924, -33182, -33249, -35107, 51059, 30626, -47173, -52401, 32064, -28431, 50393, -56771, 55873, -38858, 65258, -27545, -12440, 16343, -63158, -29861, -1791, -9602, -40765, 48437, -9125, -48070, 39557, -56094, 41487, 52259, -43566, -29579, -11330, 2334, -63601, -55311, 8315, -17200, -3946, 61632, -33764, 7299, -46823, -14493, -61053, -29242, 54696, 56883, -29949, 46913, -30674, -36916, -55087, 40948, 28260, -54009, -57952, -16150, 39554, 33593, 56605, -56615, -28353, 45340, -50400, 14437, 20094, -11997 };
		int[] output0 = new int[]{ 1, 1, 1, 1, 0, 1, 0, -1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, -1, 0, -1, 0, 1, -1, -1, -1, 0, -1, -1, -1, 1, 0, -1, -1, 0, 0, 1, -1, 1, -1, 1, 0, 0, 0, -1, 0, 0, 0, -1, 1, 0, -1, 1, -1, 1, 1, -1, 0, 0, 0, -1, -1, 0, 0, 0, 1, -1, 0, -1, 0, -1, 0, 1, 1, 0, 1, 0, -1, -1, 1, 0, -1, -1, 0, 1, 1, 1, -1, 0, 1, -1, 0, 0, 0 };
		for (int ndx = 0; ndx < 100; ndx++)
		{
			Util.Check("Fixed32.RoundToInt", Fixed32.RoundToInt(input0[ndx]), output0[ndx], input0[ndx]);
		}
	}

	// Fixed64.Abs
	public static void Fixed64_Abs()
	{
		long[] input0 = new long[]{ -2673417691L, 3606738583L, 1944770862L, -3983018879L, -2965259043L, -3883386863L, -4039209019L, 3699140095L, -1855608386L, 2573150819L, 2880584843L, -2976569567L, -2439955259L, 3159460315L, 2581528315L, 3939363987L, 1140231814L, 3859174755L, -2623261359L, 868815782L, 2595878403L, 3666326291L, -4121870931L, -2691595671L, 575502958L, 1834739458L, -3965498783L, -2797403979L, -1958433386L, -1745137506L, -1941708754L, -652360562L, 1061588858L, 75869054L, 2106393966L, -1274538486L, -3165228347L, -2322253515L, -3749090331L, -4021820715L, 2427867455L, 2447927779L, 2611037871L, -2076172486L, 355969594L, 1273818410L, 346575882L, -3744729635L, -1996898870L, -1502540534L, -2463743903L, -2867281635L, -725560010L, -3846839355L, 912828878L, -2044776686L, 3433642219L, 341399238L, -263554542L, -505031206L, -4212855375L, 3053162255L, 1362606186L, 4184496415L, 219892278L, -762021890L, 256808870L, 1779142982L, -3241900947L, -438900494L, 2809625039L, -832481966L, 3313297791L, -2896407939L, 2735915623L, -4147016671L, -3239678875L, 2249268851L, 1247402030L, 3596651843L, -2806803719L, 4074198147L, 3494462187L, 3839074443L, -3576360899L, -3369394415L, -4221767847L, 613460918L, 3458007471L, -143796642L, -413213410L, 788339710L, 2236268323L, 1050908170L, -4103932635L, 3669672495L, -3209645703L, 2721508751L, 1998902530L, -3176975811L };
		long[] output0 = new long[]{ 2673417691L, 3606738583L, 1944770862L, 3983018879L, 2965259043L, 3883386863L, 4039209019L, 3699140095L, 1855608386L, 2573150819L, 2880584843L, 2976569567L, 2439955259L, 3159460315L, 2581528315L, 3939363987L, 1140231814L, 3859174755L, 2623261359L, 868815782L, 2595878403L, 3666326291L, 4121870931L, 2691595671L, 575502958L, 1834739458L, 3965498783L, 2797403979L, 1958433386L, 1745137506L, 1941708754L, 652360562L, 1061588858L, 75869054L, 2106393966L, 1274538486L, 3165228347L, 2322253515L, 3749090331L, 4021820715L, 2427867455L, 2447927779L, 2611037871L, 2076172486L, 355969594L, 1273818410L, 346575882L, 3744729635L, 1996898870L, 1502540534L, 2463743903L, 2867281635L, 725560010L, 3846839355L, 912828878L, 2044776686L, 3433642219L, 341399238L, 263554542L, 505031206L, 4212855375L, 3053162255L, 1362606186L, 4184496415L, 219892278L, 762021890L, 256808870L, 1779142982L, 3241900947L, 438900494L, 2809625039L, 832481966L, 3313297791L, 2896407939L, 2735915623L, 4147016671L, 3239678875L, 2249268851L, 1247402030L, 3596651843L, 2806803719L, 4074198147L, 3494462187L, 3839074443L, 3576360899L, 3369394415L, 4221767847L, 613460918L, 3458007471L, 143796642L, 413213410L, 788339710L, 2236268323L, 1050908170L, 4103932635L, 3669672495L, 3209645703L, 2721508751L, 1998902530L, 3176975811L };
		for (int ndx = 0; ndx < 100; ndx++)
		{
			Util.Check("Fixed64.Abs", Fixed64.Abs(input0[ndx]), output0[ndx], input0[ndx]);
		}
	}

	// Fixed32.Abs
	public static void Fixed32_Abs()
	{
		int[] input0 = new int[]{ -50017, 43676, 57863, 41762, -262, 40644, -28772, -32411, -34908, 11671, -47303, -47463, 51711, 6633, -30413, -60914, 58802, 27748, 52885, -10767, -12744, 60093, 39918, 18262, 65144, -34693, 18710, -31014, -47110, 51288, 51232, -25424, -61715, 1974, 39362, -20969, -61232, -53977, -6693, -29679, 42895, 33528, -21266, -24442, -20426, -24377, 25853, -38047, -19086, 63829, 62728, -11187, 54177, -24267, 29803, -44575, -61777, -25935, 42154, -31104, -43601, -63293, -50836, -20660, 25974, 43657, -51284, -15799, 32807, 56091, -65218, 47243, -31093, 17029, 11872, 19263, 15824, -1175, -26846, 23985, 4988, -8778, 53608, -45403, 54095, -3115, -14066, 28087, 37706, 18401, -24727, 30239, -30596, -41125, -51614, 40652, 18829, 64930, 15119, 1451 };
		int[] output0 = new int[]{ 50017, 43676, 57863, 41762, 262, 40644, 28772, 32411, 34908, 11671, 47303, 47463, 51711, 6633, 30413, 60914, 58802, 27748, 52885, 10767, 12744, 60093, 39918, 18262, 65144, 34693, 18710, 31014, 47110, 51288, 51232, 25424, 61715, 1974, 39362, 20969, 61232, 53977, 6693, 29679, 42895, 33528, 21266, 24442, 20426, 24377, 25853, 38047, 19086, 63829, 62728, 11187, 54177, 24267, 29803, 44575, 61777, 25935, 42154, 31104, 43601, 63293, 50836, 20660, 25974, 43657, 51284, 15799, 32807, 56091, 65218, 47243, 31093, 17029, 11872, 19263, 15824, 1175, 26846, 23985, 4988, 8778, 53608, 45403, 54095, 3115, 14066, 28087, 37706, 18401, 24727, 30239, 30596, 41125, 51614, 40652, 18829, 64930, 15119, 1451 };
		for (int ndx = 0; ndx < 100; ndx++)
		{
			Util.Check("Fixed32.Abs", Fixed32.Abs(input0[ndx]), output0[ndx], input0[ndx]);
		}
	}

	// Fixed64.Nabs
	public static void Fixed64_Nabs()
	{
		long[] input0 = new long[]{ -2531593827L, -1565211454L, -348578490L, -631906178L, 4162299359L, -3280168963L, -2990371059L, -1860402954L, 1926481450L, -3604181615L, 336594942L, 323323798L, -4235253499L, -3104210987L, 1929540862L, 2012778758L, -3366288419L, 3938919423L, -604268806L, -2388524551L, -512005714L, -906743434L, 788388938L, -3350862107L, 1001575842L, -1960929690L, 806369534L, -3637562715L, 203641706L, 2408849511L, -4266535735L, 1076754530L, 3227060891L, 2440415875L, -191473774L, -2402813015L, 4068255379L, -149807154L, -2842928255L, 2530406959L, -1508789758L, -3356403403L, 4209236327L, 1780379338L, -3425581523L, 2351109491L, 1922037422L, -3195919043L, -329751830L, -1100398778L, 1735540590L, 1590043454L, 564580922L, -915562750L, -3687815635L, 2670116903L, 1941366902L, -1292683678L, 2661485275L, 1828261754L, 208428798L, -3647775639L, 2230922635L, 3812599235L, -3632613175L, 3554807707L, 1391230202L, -2380702079L, 1382230082L, 37386582L, 2239490675L, 1078486030L, 2486880383L, 1160291530L, 3415232503L, -1450569606L, -821012466L, 3302976895L, -4220247879L, 2945433647L, 412000182L, -292678718L, 987156410L, -2990926811L, -3621658375L, -1561611894L, -3782793687L, -152343654L, 1833264214L, 1433376618L, -49212622L, 1065971762L, 1483674866L, -376222714L, -1972989134L, -2155981415L, -1292358742L, -3898330203L, 1118025218L, -2685421935L };
		long[] output0 = new long[]{ -2531593827L, -1565211454L, -348578490L, -631906178L, -4162299359L, -3280168963L, -2990371059L, -1860402954L, -1926481450L, -3604181615L, -336594942L, -323323798L, -4235253499L, -3104210987L, -1929540862L, -2012778758L, -3366288419L, -3938919423L, -604268806L, -2388524551L, -512005714L, -906743434L, -788388938L, -3350862107L, -1001575842L, -1960929690L, -806369534L, -3637562715L, -203641706L, -2408849511L, -4266535735L, -1076754530L, -3227060891L, -2440415875L, -191473774L, -2402813015L, -4068255379L, -149807154L, -2842928255L, -2530406959L, -1508789758L, -3356403403L, -4209236327L, -1780379338L, -3425581523L, -2351109491L, -1922037422L, -3195919043L, -329751830L, -1100398778L, -1735540590L, -1590043454L, -564580922L, -915562750L, -3687815635L, -2670116903L, -1941366902L, -1292683678L, -2661485275L, -1828261754L, -208428798L, -3647775639L, -2230922635L, -3812599235L, -3632613175L, -3554807707L, -1391230202L, -2380702079L, -1382230082L, -37386582L, -2239490675L, -1078486030L, -2486880383L, -1160291530L, -3415232503L, -1450569606L, -821012466L, -3302976895L, -4220247879L, -2945433647L, -412000182L, -292678718L, -987156410L, -2990926811L, -3621658375L, -1561611894L, -3782793687L, -152343654L, -1833264214L, -1433376618L, -49212622L, -1065971762L, -1483674866L, -376222714L, -1972989134L, -2155981415L, -1292358742L, -3898330203L, -1118025218L, -2685421935L };
		for (int ndx = 0; ndx < 100; ndx++)
		{
			Util.Check("Fixed64.Nabs", Fixed64.Nabs(input0[ndx]), output0[ndx], input0[ndx]);
		}
	}

	// Fixed32.Nabs
	public static void Fixed32_Nabs()
	{
		int[] input0 = new int[]{ -50889, 118, -4321, 59933, 14573, -55510, 51851, 56446, -546, 31398, -12265, 44759, -20864, 61203, -43925, -57889, -5187, 14143, 47901, 33935, 46426, -41982, 1235, 64755, -64214, -47629, 59353, -21848, -17725, 19473, 63121, -18579, -32196, 42116, 30297, -59367, 65391, 20664, 5324, -65287, -10143, -48631, 63758, 62111, -31398, 20025, -28405, 26971, -27351, -37751, 37825, 31673, -41849, 48660, -21867, 56629, 64418, -3540, 58612, -3333, -49327, 8163, 8636, 45515, 33812, -59221, 11419, 2554, -34629, -50093, -57744, 39683, -56717, 47653, -21457, 29521, -40205, 4660, 30618, -18704, 46312, -33154, -60033, -45510, 47184, -34087, -42266, -15320, -1552, 39203, -58250, 3395, 27588, -56878, 49575, 47228, 8268, -47293, -37237, -37713 };
		int[] output0 = new int[]{ -50889, -118, -4321, -59933, -14573, -55510, -51851, -56446, -546, -31398, -12265, -44759, -20864, -61203, -43925, -57889, -5187, -14143, -47901, -33935, -46426, -41982, -1235, -64755, -64214, -47629, -59353, -21848, -17725, -19473, -63121, -18579, -32196, -42116, -30297, -59367, -65391, -20664, -5324, -65287, -10143, -48631, -63758, -62111, -31398, -20025, -28405, -26971, -27351, -37751, -37825, -31673, -41849, -48660, -21867, -56629, -64418, -3540, -58612, -3333, -49327, -8163, -8636, -45515, -33812, -59221, -11419, -2554, -34629, -50093, -57744, -39683, -56717, -47653, -21457, -29521, -40205, -4660, -30618, -18704, -46312, -33154, -60033, -45510, -47184, -34087, -42266, -15320, -1552, -39203, -58250, -3395, -27588, -56878, -49575, -47228, -8268, -47293, -37237, -37713 };
		for (int ndx = 0; ndx < 100; ndx++)
		{
			Util.Check("Fixed32.Nabs", Fixed32.Nabs(input0[ndx]), output0[ndx], input0[ndx]);
		}
	}

	// Fixed64.Rcp
	public static void Fixed64_Rcp()
	{
		long[] input0 = new long[]{ -16L, -180010575276050L, 591156872L, 1731L, -702L, -2507903965164618752L, 3857479542067L, 830098L, -9646682811L, -222002189122L, 61469128531597L, 322949423L, -63071144777269L, -102195449450L, 393254457322L, 22957602073812344L, -5138953423L, -51298952L, 2668233418138471424L, 4661168884L, -17762618091904960L, -6422L, 3L, 141389568L, -14L, -9074609049L, 52L, 1L, -2455938157245682688L, -764574911L, 1062L, 10L, -924836L, -5370151431L, 277426L, 46L, -318485267599549L, -16181270944473426L, 1L, 20664376567936632L, -35948281438L, -11433946200628414L, 6757697583103671L, 26815252180364200L, -13L, -155640934404L, 478058737776557L, 178L, -200455388L, -1L, 2218725L, 629L, -684L, -10590503745947L, 2377761L, 12065905514180194L, -46825025397620L, -4L, 119L, 357211049749L, -47535532644520904L, -3659783026134L, 1558732L, 12L, -208952519L, -6016497709860L, 349L, 11744L, -368369L, -8384469389L, 72L, 1464609283898L, -50751698L, -129L, 597965925374538240L, 1L, -4383076L, -661L, 10587300L, 429776470L, -87539970238859L, -1365321026296240896L, 24248802130L, 2290691268575183360L, -344L, -1L, 68845492247799024L, 402724509800L, -2258L, -106034481L, 4619338L, 76173511174838L, -135560022998320L, -13049466L, 2004765933949341696L, 45298364879637344L, -7335411030L, -535600281739574L, 128331796L, 10236420L };
		long[] output0 = new long[]{ -1152921504606846976L, -102476L, 31204482144L, 10656697919995904L, -26277412840931328L, -8L, 4782071L, 22222369193984L, -1912236982L, -83092622L, 300097L, 57119608512L, -292476L, -180504553L, 46907908L, 803L, -3589591680L, -359592999424L, 6L, 3957536308L, -1039L, -2872429793771520L, 6148914694099828736L, 130467499520L, -1317624577613889536L, -2032786592L, 354745078670950400L, 0L, -8L, -24126797248L, 17369814599204864L, 1844674406941458432L, -19945962471424L, -3435051012L, 66492483502080L, 401016175468740608L, -57921L, -1141L, 0L, 892L, -513146731L, -1614L, 2729L, 687L, -1418980314683801600L, -118521164L, 38586L, 103633394599985152L, -92024185728L, 0L, 8314119012352L, 29327096849367040L, -26968924587294720L, -1741820L, 7758031470592L, 1528L, -393951L, -4611686018427387904L, 155014655700369408L, 51641022L, -389L, -5040393L, 11834455097344L, 1537228673524957184L, -88281989120L, -3066027L, 52855999123423232L, 1570737737433088L, -50076808708096L, -2200108708L, 256204778562912256L, 12594993L, -363470483456L, -142998023998275584L, 30L, 0L, -4208629518336L, -27907327831048192L, 1742346434560L, 42921717120L, -210724L, -14L, 760728046L, 8L, -53624256633765888L, 0L, 267L, 45804871L, -8169505721155584L, -173969298176L, 3993373954048L, 242167L, -136079L, -1413601445888L, 9L, 407L, -2514752628L, -34442L, 143742584576L, 1802069899264L };
		for (int ndx = 0; ndx < 100; ndx++)
		{
			Util.Check("Fixed64.Rcp", Fixed64.Rcp(input0[ndx]), output0[ndx], input0[ndx]);
		}
	}

	// Fixed64.RcpFast
	public static void Fixed64_RcpFast()
	{
		long[] input0 = new long[]{ -445711935L, -40703999020L, 2230966081627313L, 110255910999701200L, -68591992887362248L, -6986209515243L, 57235640576471L, 5L, -81677025363439L, -1530584L, 2752839291L, 70823955413L, -1821209400617L, -1280849469359L, 18818206120754552L, 160562202627114368L, -150L, -3138086L, 168850091872865120L, 123878337L, -403021279426662L, -3998722210L, 5L, 16021267420533900L, -1815L, -4364082L, 49825295154285320L, 3L, -297L, -13L, 976666094L, 37739661112L, -23758734340297L, -1L, 4446805166434637824L, 2150L, -611L, -1014257292300L, 33L, 227475438L, -135908L, -12989113128354130L, 22738817713566712L, 6804881203426238L, -177633956078454656L, -300787187738081L, 41L, 105L, -3197969182L, -12L, 300135576064358L, 2337L, -14628480822053362L, -1L, 117133164873L, 514035082640173952L, -7827285149L, -642178600242327552L, 60744376449302L, 15717392125L, -646623459901023L, -14716642131406L, 82292105161322976L, 6187368778378L, -7227216439939073L, -336389625638792640L, 13747274592662190L, 1760851722715L, -1328341442558L, -8750017179696L, 262362346403020L, 686240967L, -93966L, -742278344L, 911L, 143089646005429104L, -810985493692L, -3524L, 415939928332904704L, 27828910L, -104339L, -470778194393307L, 5608455462L, 23L, -202831L, -417817L, 11897576351947L, 22934242207239L, -40720860L, -8L, 1267120423853L, 4394L, -77001962114037200L, -9798788462L, 1622343395167L, 42588900746L, -727915652277616896L, -3675L, 4342193950284520960L, 2435247609343908352L };
		long[] output0 = new long[]{ -41386797312L, -453187649L, 8268L, 167L, -269L, -2640425L, 322291L, 3689332815129739264L, -225848L, -12052161888256L, 6700993088L, 260461781L, -10128755L, -14401815L, 980L, 114L, -122977007641296896L, -5878345515008L, 109L, 148911572480L, -45772L, -4613194560L, 3689332815129739264L, 1151L, -10163570847252480L, -4226991722496L, 370L, 6148914694099828736L, -62109634340585472L, -1418965486309212160L, 18887662048L, 488789416L, -776427L, 0L, 4L, 8579966014849024L, -30190759407779840L, -18187614L, 558998015499567104L, 81092999680L, -135731075350528L, -1421L, 811L, 2710L, -104L, -61329L, 449920858165608448L, 175681547360272384L, -5768277224L, -1537228673524957184L, 61461L, 7893280519880704L, -1262L, 0L, 157484791L, 35L, -2356748036L, -29L, 303678L, 1173663922L, -28528L, -1253453L, 224L, 2981385L, -2553L, -55L, 1341L, 10475925L, -13886920L, -2108184L, 70310L, 26880858400L, -196314598473728L, -24851781056L, 20249062141853696L, 128L, -22746164L, -5234602356506624L, 44L, 662856961024L, -176794469662720L, -39184L, 3289109512L, 802038750438752256L, -90945793294336L, -44149847359488L, 1550476L, 804335L, -453000729600L, -2305843009213693952L, 14557868L, 4198192006561792L, -240L, -1882538602L, 11370470L, 433132473L, -26L, -5019570398035968L, 4L, 7L };
		for (int ndx = 0; ndx < 100; ndx++)
		{
			Util.Check("Fixed64.RcpFast", Fixed64.RcpFast(input0[ndx]), output0[ndx], input0[ndx]);
		}
	}

	// Fixed64.RcpFastest
	public static void Fixed64_RcpFastest()
	{
		long[] input0 = new long[]{ -100902623197343952L, -109542093L, 367437561L, 1685485806983873L, -219471L, -437361L, 114722235783753152L, 19707540L, -5241416841547096L, -3775125551169L, 633840L, 2220987L, -1L, -2182779L, 150636L, 1L, -2624L, -3459242118425869L, 30504916L, 17297547944L, -28273L, -599L, 43242L, 153551612369L, -6L, -59697451771L, 41099314718L, 44224106867943L, -2110006224615680L, -98699110448L, 906539813782285440L, 220674020L, -3742L, -787675283876099456L, 1271901489L, 4392659469216332L, -1281246L, -15345389166122L, 499871483426019L, 2138725565556067072L, -16795720L, -603706L, 20178804191260664L, 49744524232985L, -62941254961570L, -570521L, 2846L, 35277021928L, -65049L, -1181157105527L, 16230465L, 210L, -555586614123564L, -251029450L, 86130909397237L, 168333380129683L, -2533L, -11035420847222050L, 244081062503552L, 16954403679156L, -49075641611272L, -2594L, 43073328276L, 53105L, -19204555009559L, -13246105151763802L, 593L, 9L, -7914366028312094L, -158148049L, 4943813287700L, 788582759L, -6L, -65777067L, 1029L, 215982100223769120L, -136992L, -4008854427L, 11250678498617628L, 55818595338428L, -20971780L, -1L, 679858192L, 1786L, -6081L, -4308110007050153L, 1831720326797L, 68762344588977L, -9145L, -34845200112390L, 1734012953684L, 535431133L, -289936941190199808L, -29L, 43580L, 6474L, -64636430434378L, -379979323111L, 2L, 21913256928199560L };
		long[] output0 = new long[]{ -183L, -168461181952L, 50185182912L, 10944L, -84083347161088L, -42193737547776L, 160L, 936095013888L, -3520L, -4888007L, 29100819578880L, 8308766638080L, 0L, -8453748080640L, 122482294259712L, 0L, -7027717899812864L, -5334L, 604688209920L, 1066518697L, -652653022412800L, -30798885706268672L, 426430230429696L, 120171397L, -3074457347049914368L, -309089859L, 448822843L, 417010L, -8741L, -186857345L, 20L, 83624658304L, -4929236850704384L, -24L, 14503708384L, 4197L, -14395562754048L, -1202413L, 36908L, 8L, -1098314612736L, -30561341210624L, 914L, 370724L, -293105L, -32345429770240L, 6479446181675008L, 523038911L, -283538696962048L, -15623585L, 1136114606080L, 87874952895660032L, -33195L, -73464594560L, 214140L, 109582L, -7281162183507968L, -1672L, 75598L, 1087598L, -375761L, -7109252879482880L, 428156251L, 347487150800896L, -960901L, -1393L, 31112167801487360L, 2050225253895897088L, -2332L, -116649055488L, 3732359L, 23389620480L, -3074457347049914368L, -280354791936L, 17927863508402176L, 85L, -134701146046464L, -4600323296L, 1639L, 330571L, -879387896832L, 0L, 27125385472L, 10331189730607104L, -3033333286043648L, -4281L, 10074629L, 268176L, -2017776334012416L, -529291L, 10640953L, 34450033728L, -64L, -636084480443940864L, 423120717479936L, 2850127786016768L, -285356L, -48529667L, -9223372036854775808L, 841L };
		for (int ndx = 0; ndx < 100; ndx++)
		{
			Util.Check("Fixed64.RcpFastest", Fixed64.RcpFastest(input0[ndx]), output0[ndx], input0[ndx]);
		}
	}

	// Fixed32.Rcp
	public static void Fixed32_Rcp()
	{
		int[] input0 = new int[]{ -49, -29, 3373247, 28003248, -549641184, -174600495, 9, 3474, -661, -27600948, 35690, 1352714, -1064083237, -3, 1159, 4718358, -3136700, -5675, 5, 85367688, -127, -7174, 42199932, 25, -13842923, -143, 105797, 545102521, -61, -454405291, 88, 1040420, -39758, -786095629, 216634, 360, -683, -1037561, 129, 724, -8321292, -626, 17932, 5543, -241, -842251307, 24419, 147629649, -9016287, -67317, 41506, 2031, -189300, -39, 1377655, 7436747, -750, -266637, 4, 7679179, -3300, -19, 113, 1563, -620339, -36834009, 68, 2, -19765, -6, 13800, 6, -87, -8172126, 20, 218809955, -429587348, -15223, 112286492, 17647614, -6294472, -769490, 120, 978705, -21895, -47036479, 10, 2025, -1141, -31278434, 516342571, 2753545, -512900, -18135, 235566081, 855299, -11, -22, 9595999, 7053 };
		int[] output0 = new int[]{ -87652394, -148102321, 1273, 153, -8, -25, 477218588, 1236317, -6497682, -156, 120340, 3175, -5, -1431655766, 3705752, 910, -1370, -756823, 858993459, 50, -33818640, -598686, 101, 171798692, -311, -30034735, 40596, 7, -70409300, -10, 48806446, 4128, -108028, -6, 19825, 11930464, -6288386, -4140, 33294321, 5932275, -517, -6860971, 239514, 774845, -17821442, -6, 175886, 29, -477, -63803, 103478, 2114705, -22689, -110127369, 3117, 577, -5726624, -16108, 1073741824, 559, -1301506, -226050911, 38008560, 2747899, -6924, -117, 63161283, -2147483648, -217302, -715827883, 311229, 715827883, -49367440, -526, 214748364, 19, -10, -282137, 38, 243, -683, -5582, 35791394, 4388, -196163, -92, 429496729, 2120971, -3764214, -138, 8, 1559, -8374, -236834, 18, 5021, -390451572, -195225786, 447, 608956 };
		for (int ndx = 0; ndx < 100; ndx++)
		{
			Util.Check("Fixed32.Rcp", Fixed32.Rcp(input0[ndx]), output0[ndx], input0[ndx]);
		}
	}

	// Fixed32.RcpFast
	public static void Fixed32_RcpFast()
	{
		int[] input0 = new int[]{ -24755052, -18039, 14938, 2804816, -9, -13729, 46, 24872376, -3, -6760415, 18587946, 52905491, -2549721, -246, 2, 4605698, -172791309, -124257, 76688419, 14161014, -6701817, -36076353, 2547213, 678523, -13, -5381651, 12657, 5181817, -37249651, -25758, 39550976, 37462186, -1703459, -31840, 765459165, 697, -103, -46288, 200646, 3, -2026508, -474, 1058, 181255, -3, -19, 2, 4167, -14865, -102, 5314914, 95612, -321, -727605104, 1130025, 736785522, -7604476, -23638999, 419584, 1946, -2, -9619, 716960015, 159535, -183533808, -532768036, 62, 160, -345, -3754316, 89410, 7465, -664955704, -48087981, 13, 28245, -68172, -28, 403228, 735441196, -4983288, -6, 697, 728291, -5203766, -827, 233326, 2513829, -30254370, -2, 98533, 4679, -118455850, -206, 2, 421, -710, -7123414, 1060412, 6 };
		int[] output0 = new int[]{ -174, -238094, 287522, 1531, -477215983, -312837, 93369599, 172, -1431655766, -636, 231, 81, -1685, -17459132, -2147483648, 932, -25, -34566, 56, 303, -641, -120, 1686, 6329, -330378648, -799, 339333, 828, -116, -166742, 108, 114, -2522, -134891, 5, 6162137, -41698272, -92789, 21405, 1431655766, -2120, -9061193, 4059557, 23695, -1431655766, -226048540, -2147483648, 1030717, -288935, -42107096, 808, 44921, -13379911, -6, 3800, 5, -565, -182, 10236, 2207074, -2147483648, -446505, 5, 26921, -24, -9, 69273106, 26843429, -12449294, -1145, 48037, 575353, -7, -90, 330378647, 152061, -63003, -153392355, 10651, 5, -862, -715827883, 6162137, 5897, -826, -5193376, 18407, 1708, -142, -2147483648, 43589, 917916, -37, -20849136, -2147483648, 10201724, -6049314, -603, 4050, 715827883 };
		for (int ndx = 0; ndx < 100; ndx++)
		{
			Util.Check("Fixed32.RcpFast", Fixed32.RcpFast(input0[ndx]), output0[ndx], input0[ndx]);
		}
	}

	// Fixed32.RcpFastest
	public static void Fixed32_RcpFastest()
	{
		int[] input0 = new int[]{ -337417800, -14480484, 24, 4251426, -1228459, -1423, 154391, 7170, -104123770, -80, 21615, 541121, -117, -612591, 419391, 383431564, -27, -1968, 32918362, 443684, -4566, -26531, 5684, 332, -76, -38, 67673, 6450552, -32707558, -35614859, 79, 10275897, -28459, -118898, 4, 369515638, -270258973, -176080, 636566820, 7309, -5753714, -65, 25923033, 756229, -103216, -195519371, 79, 386, -527845, -8, 30, 387573263, -232353849, -4, 1594783, 25435, -5095, -77973152, 111580, 64296, -22590753, -25699571, 235382, 5, -2, -2258619, 38, 1058844, -281054, -1218670, 2, 168269, -3321, -9006, 82799207, 140, -1098948, -8070573, 3457589, 418, -514013099, -349, 24, 7944154, -2332407, -220, 47486454, 11907, -80052312, -184024, 145046, 6, -3, -19801, 347429, 240393282, -296892, -8866805, 751274, 49068706 };
		int[] output0 = new int[]{ -13, -297, 178956970, 1010, -3497, -3017228, 27820, 599161, -42, -53674246, 198627, 7939, -36705893, -7012, 10244, 11, -159132680, -2181556, 130, 9683, -940943, -161943, 755365, 12932046, -56513629, -113027258, 63484, 665, -132, -121, 54356677, 417, -150960, -36123, 1073741824, 11, -16, -24383, 6, 587691, -747, -66087017, 165, 5678, -41623, -22, 54356677, 11127179, -8138, -536870912, 143124573, 11, -19, -1073741824, 2693, 168891, -842793, -56, 38505, 66779, -191, -168, 18247, 858787934, -2147483648, -1903, 113027257, 4056, -15288, -3525, -2147483648, 25515, -1293738, -477073, 51, 30689731, -3910, -532, 1242, 10278860, -9, -12301873, 178956970, 540, -1843, -19528942, 90, 360649, -54, -23332, 29621, 715827883, -1431655766, -216890, 12357, 17, -14471, -485, 5715, 87 };
		for (int ndx = 0; ndx < 100; ndx++)
		{
			Util.Check("Fixed32.RcpFastest", Fixed32.RcpFastest(input0[ndx]), output0[ndx], input0[ndx]);
		}
	}

	// Fixed64.Div
	public static void Fixed64_Div()
	{
		long[] input0 = new long[]{};
		long[] input1 = new long[]{};
		long[] output0 = new long[]{};
		for (int ndx = 0; ndx < 100; ndx++)
		{
			Util.Check("Fixed64.Div", Fixed64.Div(input0[ndx], input1[ndx]), output0[ndx], input0[ndx], input1[ndx]);
		}
	}

	// Fixed64.DivFast
	public static void Fixed64_DivFast()
	{
		long[] input0 = new long[]{};
		long[] input1 = new long[]{};
		long[] output0 = new long[]{};
		for (int ndx = 0; ndx < 100; ndx++)
		{
			Util.Check("Fixed64.DivFast", Fixed64.DivFast(input0[ndx], input1[ndx]), output0[ndx], input0[ndx], input1[ndx]);
		}
	}

	// Fixed64.DivFastest
	public static void Fixed64_DivFastest()
	{
		long[] input0 = new long[]{ 288423935L, 288423935L, 288423935L, 288423935L, 288423935L, 288423935L, 288423935L, 288423935L, 288423935L, 288423935L, 288423935L, 288423935L, 288423935L, 288423935L, 288423935L, 288423935L, 288423935L, 288423935L, 288423935L, 288423935L, 288423935L, 288423935L, 288423935L, 288423935L, 288423935L, 288423935L, 288423935L, 288423935L, 288423935L, 288423935L, 288423935L, 288423935L, 288423935L, 288423935L, 288423935L, 288423935L, 288423935L, 288423935L, 288423935L, 288423935L, 288423935L, 288423935L, 288423935L, 288423935L, 288423935L, 288423935L, 288423935L, 288423935L, 288423935L, 288423935L, 288423935L, 288423935L, 288423935L, 288423935L, 288423935L, 288423935L, 288423935L, 288423935L, 288423935L, 288423935L, 288423935L, 288423935L, 288423935L, 288423935L, 288423935L, 288423935L, 288423935L, 288423935L, 288423935L, 288423935L, 288423935L, 288423935L, 288423935L, 288423935L, 288423935L, 288423935L, 288423935L, 288423935L, 288423935L, 288423935L, 288423935L, 288423935L, 288423935L, 288423935L, 288423935L, 288423935L, 288423935L, 288423935L, 288423935L, 288423935L, 288423935L, 288423935L, 288423935L, 288423935L, 288423935L, 288423935L, 288423935L, 288423935L, 288423935L, 288423935L };
		long[] input1 = new long[]{};
		long[] output0 = new long[]{};
		for (int ndx = 0; ndx < 100; ndx++)
		{
			Util.Check("Fixed64.DivFastest", Fixed64.DivFastest(input0[ndx], input1[ndx]), output0[ndx], input0[ndx], input1[ndx]);
		}
	}

	// Fixed32.Div
	public static void Fixed32_Div()
	{
		int[] input0 = new int[]{};
		int[] input1 = new int[]{};
		int[] output0 = new int[]{};
		for (int ndx = 0; ndx < 100; ndx++)
		{
			Util.Check("Fixed32.Div", Fixed32.Div(input0[ndx], input1[ndx]), output0[ndx], input0[ndx], input1[ndx]);
		}
	}

	// Fixed32.DivFast
	public static void Fixed32_DivFast()
	{
		int[] input0 = new int[]{ 4400, 4400, 4400, 4400, 4400, 4400, 4400, 4400, 4400, 4400, 4400, 4400, 4400, 4400, 4400, 4400, 4400, 4400, 4400, 4400, 4400, 4400, 4400, 4400, 4400, 4400, 4400, 4400, 4400, 4400, 4400, 4400, 4400, 4400, 4400, 4400, 4400, 4400, 4400, 4400, 4400, 4400, 4400, 4400, 4400, 4400, 4400, 4400, 4400, 4400, 4400, 4400, 4400, 4400, 4400, 4400, 4400, 4400, 4400, 4400, 4400, 4400, 4400, 4400, 4400, 4400, 4400, 4400, 4400, 4400, 4400, 4400, 4400, 4400, 4400, 4400, 4400, 4400, 4400, 4400, 4400, 4400, 4400, 4400, 4400, 4400, 4400, 4400, 4400, 4400, 4400, 4400, 4400, 4400, 4400, 4400, 4400, 4400, 4400, 4400 };
		int[] input1 = new int[]{};
		int[] output0 = new int[]{};
		for (int ndx = 0; ndx < 100; ndx++)
		{
			Util.Check("Fixed32.DivFast", Fixed32.DivFast(input0[ndx], input1[ndx]), output0[ndx], input0[ndx], input1[ndx]);
		}
	}

	// Fixed32.DivFastest
	public static void Fixed32_DivFastest()
	{
		int[] input0 = new int[]{};
		int[] input1 = new int[]{};
		int[] output0 = new int[]{};
		for (int ndx = 0; ndx < 100; ndx++)
		{
			Util.Check("Fixed32.DivFastest", Fixed32.DivFastest(input0[ndx], input1[ndx]), output0[ndx], input0[ndx], input1[ndx]);
		}
	}

	// Fixed64.SqrtPrecise
	public static void Fixed64_SqrtPrecise()
	{
		long[] input0 = new long[]{ 222769285741013L, 7076375449L, 3519133565859L, 770866366123754240L, 9L, 46295751705L, 68086851223L, 2701792937L, 1542L, 468238705L, 1469546069147483L, 665298180334L, 781L, 153607L, 20891262554L, 19196739228L, 7485224554925L, 2491809617338074L, 4893464L, 201688253272126L, 6854272646960575L, 21289027934503L, 444290692887626L, 2L, 94L, 683121478283587072L, 12755169704L, 101409574842501072L, 1872700179795512L, 472301904446267520L, 358344702570L, 53113534371294936L, 160L, 15881678204483652L, 1894115880L, 134917976L, 81811027803L, 1261L, 13153450820072L, 201L, 1570649181747L, 2171417L, 76211L, 38266577L, 128538925240466L, 170690612096871712L, 84139896405603296L, 79619368283596L, 76973164027968912L, 8L, 25121L, 210767380401204L, 33162648L, 18951776632975204L, 4233765990349505536L, 10L, 73451958915416L, 1423100523857L, 8141825307037572L, 65L, 3L, 3096307033273L, 6653398577920L, 15061L, 6025957343027136L, 127596198233516592L, 4155116909L, 226960L, 373995817841989L, 154L, 1082119810429659776L, 5931982882L, 189L, 24255L, 128L, 3156589537L, 279342927L, 11610411L, 88720L, 2558L, 8L, 738800609170887L, 1L, 225572534740162L, 18800610838792L, 7840744860397679L, 1601607141L, 38962L, 17299329601996738L, 181011874L, 8470833914266L, 265116038362410400L, 714731L, 199743593056L, 55L, 2339348389381197312L, 1505079543668L, 5L, 29285543957L, 4645758827941624L };
		long[] output0 = new long[]{ 978154791845L, 5512966635L, 122941301341L, 57539949879087L, 196608L, 14101019094L, 17100608155L, 3406480926L, 2573487L, 1418121971L, 2512300202394L, 53454971018L, 1831493L, 25685346L, 9472448967L, 9080163389L, 179300849598L, 3271427947292L, 144973334L, 930722542861L, 5425760486472L, 302383330794L, 1381381191369L, 92681L, 635395L, 54166266332683L, 7401556372L, 20869854035182L, 2836051132725L, 45039107822371L, 39231094532L, 15103671510585L, 828972L, 8259012561671L, 2852221197L, 761228148L, 18745017707L, 2327220L, 237683910060L, 929133L, 82133348093L, 96572071L, 18092090L, 405405595L, 743014454886L, 27076015155304L, 19009947484169L, 584775668873L, 18182332693297L, 185363L, 10387197L, 951440489934L, 377402290L, 9022043052420L, 134847641683005L, 207243L, 561670509612L, 78180369715L, 5913448522095L, 528368L, 113511L, 115319284797L, 169044755314L, 8042791L, 5087365695071L, 23409859002285L, 4224463425L, 31221559L, 1267398834807L, 813280L, 68173816059753L, 5047541230L, 900971L, 10206587L, 741455L, 3682044110L, 1095339552L, 223307714L, 19520489L, 3314592L, 185363L, 1781326599659L, 65536L, 984289926589L, 284161940972L, 5803080453663L, 2622756239L, 12936016L, 8619747959383L, 881725625L, 190740542705L, 33744106365580L, 55405290L, 29289796854L, 486027L, 100236843657122L, 80400668019L, 146542L, 11215188520L, 4466920889282L };
		for (int ndx = 0; ndx < 100; ndx++)
		{
			Util.Check("Fixed64.SqrtPrecise", Fixed64.SqrtPrecise(input0[ndx]), output0[ndx], input0[ndx]);
		}
	}

	// Fixed64.Sqrt
	public static void Fixed64_Sqrt()
	{
		long[] input0 = new long[]{ 41079617L, 370724097748L, 981774420976591488L, 497100808914167L, 35L, 19530239942712L, 1112572306203L, 1367L, 147587139946522L, 1341246918L, 172751382420L, 6326387L, 16040220L, 3182836772470L, 8L, 22656L, 2350197696058L, 136024473157445792L, 3694612050L, 3544283575255707136L, 79667600L, 106644L, 60503655L, 2066139L, 84300166L, 4L, 8299L, 4373831274L, 436L, 253L, 9672046834798382L, 55207820L, 1828327681361554L, 88070063L, 287171116013395L, 100996164L, 3470365867069431L, 12222L, 6375581530155L, 4439398307316079104L, 7047L, 1171437L, 1217458326L, 12897945L, 4832204044228232L, 1338968L, 16528203893L, 1035590982252L, 24626459451L, 11314139074681252L, 995383L, 51027246252390L, 6315794187L, 38105227965L, 58314280L, 385L, 6127L, 475173302395L, 5896795L, 8L, 2353155276L, 254L, 3L, 583018421785L, 639514031214L, 3129L, 15957376080L, 839927424703959424L, 51113231881770856L, 370361410641L, 30107302L, 192286817L, 21335L, 3837995502L, 502920554280452L, 68L, 403967088840089L, 4L, 1971851239L, 62L, 1138868066L, 36959702299L, 819067660857748864L, 177869L, 1172831069390285L, 189L, 40311815875791232L, 47981L, 1L, 745512149879L, 16482L, 7303L, 9558694447087082L, 735517032573L, 1886572616L, 27L, 373891L, 9630116877024770L, 93010116800947L, 1544273905023L };
		long[] output0 = new long[]{ 420042376L, 39902979840L, 64936038334464L, 1461174758400L, 387716L, 289623424768L, 69126412544L, 2423060L, 796167075328L, 2400127406L, 27238970176L, 164838176L, 262473275L, 116919546368L, 185363L, 9864419L, 100469018496L, 24170656890880L, 3983495662L, 123379828326400L, 584952794L, 21401693L, 509765851L, 94201907L, 601719567L, 131072L, 5970253L, 4334219584L, 1368431L, 1042413L, 6445240852480L, 486945351L, 2802250442752L, 615026882L, 1110581097472L, 658616134L, 3860713408512L, 7245211L, 165477838592L, 138083564191744L, 5501511L, 70931537L, 2286688264L, 235364084L, 4555673485312L, 75834184L, 8425443360L, 66692048544L, 10284446648L, 6970929258496L, 65384534L, 468145661696L, 5208275032L, 12792993432L, 500457709L, 1285909L, 5129840L, 45175809280L, 159143147L, 185363L, 3179107436L, 1044471L, 113511L, 50040438144L, 52408891296L, 3665917L, 8278671808L, 60062141710336L, 14816533454848L, 39883456192L, 359596827L, 908771493L, 9572519L, 4060057282L, 1469703144448L, 540423L, 1317203673088L, 131072L, 2910160922L, 516030L, 2211651392L, 12599235256L, 59311625371648L, 27639491L, 2244386637824L, 900971L, 13158187982848L, 14355376L, 65536L, 56585776288L, 8413658L, 5600548L, 6407361900544L, 56205174016L, 2846536064L, 340535L, 40073054L, 6431255158784L, 632040688640L, 81440811520L };
		for (int ndx = 0; ndx < 100; ndx++)
		{
			Util.Check("Fixed64.Sqrt", Fixed64.Sqrt(input0[ndx]), output0[ndx], input0[ndx]);
		}
	}

	// Fixed64.SqrtFast
	public static void Fixed64_SqrtFast()
	{
		long[] input0 = new long[]{ 386962280055369L, 90749372582L, 93436088422496L, 306645064715780928L, 375793842L, 23872655312604276L, 2391689974L, 1L, 349417707317869L, 857457L, 4397438L, 1306L, 240L, 93660L, 35100506628L, 293617443083802880L, 1432L, 81232879539319L, 2292485230317731L, 3373912524L, 357971L, 332576L, 556145433166092416L, 68561L, 22469326L, 4122L, 92770663726L, 133771699805L, 2L, 18152503478351L, 838835215341124L, 193452415925840576L, 232589L, 5888565986105773L, 750324L, 57874801677888288L, 1824204600375397L, 2L, 2182787832600813L, 226565858462705184L, 365486304070L, 24496771649836996L, 633263259L, 8122706118778L, 169533L, 12L, 30L, 102056481982L, 20L, 29631347744L, 89210590944436736L, 21226261258L, 4L, 27567L, 4313959L, 1163527422L, 752514698069L, 1362812261L, 13647274547L, 91159L, 257329L, 82451843192735536L, 3730373386265415168L, 19L, 4714063775L, 104829943L, 25898656592641956L, 188724L, 575663333439856064L, 2796942900261L, 160L, 536L, 171624804395995968L, 46662909212545408L, 42571842071644232L, 67390577L, 2421962694093414L, 68467L, 1865019593433293312L, 1780584L, 136L, 4192082310873233408L, 6383882667L, 316620668L, 938382378194398L, 39518L, 46052068935666712L, 8L, 1365002712L, 2973940371171803L, 76908L, 1338558L, 902604724L, 23944759899L, 880449400876L, 20442333526347L, 30284212226610700L, 32898485L, 1723L, 7458119365701388L };
		long[] output0 = new long[]{ 1289191956480L, 19742688848L, 633492851712L, 36290524610560L, 1270448892L, 10125927030784L, 3205009552L, 65536L, 1225056629760L, 60685013L, 137428023L, 2368405L, 1015288L, 20056642L, 12278172584L, 35511438016512L, 2480012L, 590670462976L, 3137839114240L, 3806648160L, 39210960L, 37794605L, 48874088366080L, 17159873L, 310655626L, 4207584L, 19961322064L, 23969896464L, 92681L, 279218678016L, 1898090100736L, 28825126256640L, 31606332L, 5029089435648L, 56768248L, 15765947645952L, 2799058866176L, 92681L, 3061893271552L, 31194141687808L, 39620497184L, 10257420148736L, 1649198781L, 186781286400L, 26984335L, 227022L, 358958L, 20936255168L, 293088L, 11281140288L, 19574551068672L, 9548172808L, 131072L, 10881047L, 136117651L, 2235444530L, 56851372128L, 2419370530L, 7655939264L, 19787115L, 33245097L, 18818234695680L, 126576014196736L, 285665L, 4499599136L, 670994109L, 10546768379904L, 28470445L, 49723827159040L, 109603951296L, 828979L, 1517252L, 27150105903104L, 14156976365568L, 13522039488512L, 537995720L, 3225218273280L, 17148107L, 89498748846080L, 87449556L, 764266L, 134182715457536L, 5236258776L, 1166139451L, 2007546232832L, 13028060L, 14064006701056L, 185363L, 2421314254L, 3573967605760L, 18174658L, 75823367L, 1968904858L, 10141164976L, 61493266624L, 296309133824L, 11404705308672L, 375899134L, 2720311L, 5659657240576L };
		for (int ndx = 0; ndx < 100; ndx++)
		{
			Util.Check("Fixed64.SqrtFast", Fixed64.SqrtFast(input0[ndx]), output0[ndx], input0[ndx]);
		}
	}

	// Fixed64.SqrtFastest
	public static void Fixed64_SqrtFastest()
	{
		long[] input0 = new long[]{ 2247L, 740588577051043L, 817582819170L, 34550590L, 184095468L, 166377289232779L, 570365411995L, 415L, 2986301L, 295213752061751744L, 2215485464914L, 10990750L, 3369863928L, 7664L, 670L, 283087L, 12915626L, 11781837899L, 94599L, 119286L, 10497742972L, 3069608502726139L, 637608776158299L, 193L, 36367133L, 554536992591092L, 2739583241351L, 7167530L, 52998L, 2082L, 10262250902L, 73619275L, 39L, 250L, 792L, 847005L, 5127409L, 184L, 1L, 5L, 319528572361L, 110926731050874L, 13029277052514L, 21323410168L, 1342L, 32270590155466376L, 1831828790229103L, 117764L, 35728330L, 3110172L, 1582759L, 2570414L, 347L, 66615104489431728L, 710449L, 3375878L, 1L, 4223723158L, 4381331760952318976L, 1530989837429L, 60L, 79576L, 36124783520772000L, 1433L, 28766959L, 30093L, 276595L, 13475916L, 9L, 3648980120574082L, 254613648320325472L, 69901L, 6850414998L, 16772L, 1721639970137L, 436434879434026L, 235L, 29901L, 665016914384014848L, 5197109830L, 1396064145881925120L, 23263246L, 925159422011267200L, 78585556270327392L, 6067876129479954L, 3992L, 211691L, 2750L, 1623231288951043L, 1082493733853253L, 729227L, 5598379452261588L, 194L, 5180642L, 428288080030451840L, 4015374L, 14160894676725862L, 9086123415L, 741L, 205705411121691072L };
		long[] output0 = new long[]{ 3106276L, 1783569418240L, 59263260320L, 385198049L, 889275063L, 845283899392L, 49491272096L, 1335109L, 113262835L, 35606402203648L, 97545508352L, 217276933L, 3804630908L, 5736756L, 1696433L, 34865779L, 235543015L, 7114118280L, 20158794L, 22632675L, 6714560508L, 3631236259840L, 1654700492800L, 910533L, 395178732L, 1543220793344L, 108472728768L, 175449129L, 15087720L, 2990237L, 6638670508L, 562256267L, 409261L, 1036156L, 1844479L, 60316673L, 148394820L, 889058L, 65536L, 146542L, 37042843712L, 690276004864L, 236581230080L, 9569846136L, 2400912L, 11771969495040L, 2805004482560L, 22488005L, 391695317L, 115587853L, 82456456L, 105068485L, 1220889L, 16913175003136L, 55243072L, 120417438L, 65536L, 4259012932L, 137165324091392L, 81096830336L, 507591L, 18486632L, 12456038195200L, 2481085L, 351489001L, 11367690L, 34464095L, 240589165L, 196590L, 3958938398720L, 33066766696448L, 17325401L, 5424483988L, 8486968L, 85996007872L, 1369210190848L, 1004554L, 11331397L, 53439623233536L, 4724394872L, 77431600119808L, 316120089L, 63038465212416L, 18370035548160L, 5105379602432L, 4140464L, 30154054L, 3436963L, 2640653838336L, 2156047880192L, 55969173L, 4903526043648L, 912887L, 149164751L, 42893132103680L, 131312733L, 7799217074176L, 6246449224L, 1784146L, 29726492803072L };
		for (int ndx = 0; ndx < 100; ndx++)
		{
			Util.Check("Fixed64.SqrtFastest", Fixed64.SqrtFastest(input0[ndx]), output0[ndx], input0[ndx]);
		}
	}

	// Fixed32.SqrtPrecise
	public static void Fixed32_SqrtPrecise()
	{
		int[] input0 = new int[]{ 300270, 12744, 162, 192610, 8440, 8, 26825630, 175203563, 279, 83215, 175, 9286290, 157309, 29924, 1750609, 2626483, 831, 746482165, 1333, 127, 431138188, 17, 178303, 288, 68834, 11, 31, 57, 575, 861, 210892778, 303744, 11, 3, 250545705, 96352, 68, 5259, 37873, 11211430, 3871, 3797, 311786147, 625, 245030, 127759, 590, 844334, 1695662, 269, 5, 103146109, 136, 370608151, 624373458, 34746, 76748039, 607070141, 5, 1415, 294641718, 930189, 609188, 348580630, 423683, 621529, 1647299, 90865, 128243, 36, 76670, 169674420, 39419, 127701, 35357867, 227093, 59, 569, 1262762, 578506763, 21678407, 39882, 36523, 4, 291, 4, 4451, 32, 5, 14421, 1348024, 121, 1879, 53, 40857019, 4468471, 6692528, 960402837, 1585798, 423310593 };
		int[] output0 = new int[]{ 140280, 28899, 3258, 112351, 23518, 724, 1325912, 3388530, 4276, 73848, 3386, 780119, 101535, 44284, 338715, 414884, 7379, 6994387, 9346, 2884, 5315550, 1055, 108098, 4344, 67164, 849, 1425, 1932, 6138, 7511, 3717669, 141089, 849, 443, 4052130, 79463, 2111, 18564, 49820, 857176, 15927, 15774, 4520311, 6400, 126721, 91503, 6218, 235232, 333357, 4198, 572, 2599958, 2985, 4928303, 6396791, 47719, 2242712, 6307531, 572, 9629, 4394273, 246902, 199809, 4779600, 166632, 201823, 328568, 77168, 91676, 1536, 70884, 3334633, 50826, 91482, 1522239, 121994, 1966, 6106, 287674, 6157354, 1191937, 51124, 48924, 512, 4367, 512, 17079, 1448, 572, 30742, 297227, 2816, 11096, 1863, 1636339, 541152, 662269, 7933533, 322376, 5267075 };
		for (int ndx = 0; ndx < 100; ndx++)
		{
			Util.Check("Fixed32.SqrtPrecise", Fixed32.SqrtPrecise(input0[ndx]), output0[ndx], input0[ndx]);
		}
	}

	// Fixed32.Sqrt
	public static void Fixed32_Sqrt()
	{
		int[] input0 = new int[]{ 83276372, 6979658, 13, 93328, 3767572, 37, 5233, 1147506, 20, 5498, 1167, 269337, 961, 10, 70117, 14775, 50, 284916, 2388362, 207220, 279, 100859, 30520, 17, 28943, 1265, 180547, 1473, 3356067, 15, 36434613, 66, 385880, 3203040, 13, 6, 6057, 420197463, 1218, 15, 839018, 4165150, 3, 1162707, 24, 10, 135329532, 361, 819371, 5530, 175451, 46, 804, 15, 3031680, 1651, 457, 794960138, 6, 5954, 222250, 7, 367133686, 2, 162052, 35, 749451667, 322317, 802752943, 22575, 4, 130, 467, 305774, 265192170, 71990, 64728, 28185028, 773061002, 5783, 10039, 997, 1930882, 1213, 96850, 1551107, 88844623, 50423, 2, 9034059, 14583042, 8181, 130314904, 219748567, 75472, 236233, 12181657, 2, 14, 755885881 };
		int[] output0 = new int[]{ 2336150, 676327, 923, 78207, 496902, 1557, 18518, 274231, 1144, 18982, 8745, 132858, 7935, 809, 67787, 31117, 1810, 136646, 395630, 116534, 4276, 81301, 44723, 1055, 43552, 9105, 108776, 9825, 468981, 991, 1545243, 2079, 159025, 458164, 923, 627, 19923, 5247672, 8934, 991, 234490, 522462, 443, 276041, 1254, 809, 2978079, 4863, 231728, 19037, 107230, 1736, 7258, 991, 445740, 10401, 5472, 7217929, 627, 19753, 120687, 677, 4905147, 362, 103054, 1514, 7008285, 145338, 7253221, 38463, 512, 2918, 5532, 141559, 4168888, 68687, 65130, 1359093, 7117817, 19467, 25649, 8083, 355727, 8916, 79669, 318831, 2412990, 57484, 362, 769451, 977606, 23154, 2922382, 3794923, 70328, 124425, 893497, 362, 957, 7038304 };
		for (int ndx = 0; ndx < 100; ndx++)
		{
			Util.Check("Fixed32.Sqrt", Fixed32.Sqrt(input0[ndx]), output0[ndx], input0[ndx]);
		}
	}

	// Fixed32.SqrtFast
	public static void Fixed32_SqrtFast()
	{
		int[] input0 = new int[]{ 14, 839, 484, 72, 2267, 2695, 107883721, 2824111, 61, 84, 27393073, 17424, 2, 1197387, 636872088, 445, 3950, 604983, 29371, 112179507, 424, 29726, 305074, 177, 1662210, 640216, 1072, 2284, 8, 2245, 6345537, 55026, 3928289, 2, 806, 23, 4, 53199, 574789556, 71, 15437817, 62, 1627, 26938318, 354113142, 1673, 7956, 217, 370487625, 338, 119, 40, 86004, 137, 3564700, 518025, 2955511, 5, 46891, 3802548, 5, 94442, 697054, 29637096, 14251, 995, 4762694, 2, 2969, 53268076, 216, 79725028, 1130146, 817, 14, 13, 36, 12160032, 538, 1986, 160, 9, 6621, 25678369, 37, 315141, 686983854, 57200, 616, 1671652, 8687, 812558119, 2, 302, 28, 326, 96919, 58958, 3780, 711328 };
		int[] output0 = new int[]{ 957, 7415, 5632, 2172, 12188, 13289, 2658969, 430214, 1999, 2346, 1339848, 33791, 362, 280127, 6460518, 5400, 16089, 199118, 43873, 2711393, 5271, 44137, 141397, 3405, 330049, 204835, 8381, 12234, 724, 12129, 644869, 60050, 507394, 362, 7267, 1227, 512, 59045, 6137475, 2157, 1005855, 2015, 10325, 1328680, 4817431, 10470, 22834, 3771, 4927537, 4706, 2792, 1619, 75076, 2996, 483334, 184254, 440107, 572, 55435, 499204, 572, 78672, 213735, 1393660, 30560, 8075, 558681, 362, 13949, 1868396, 3762, 2285802, 272146, 7317, 957, 923, 1535, 892704, 5937, 11408, 3238, 767, 20830, 1297241, 1557, 143712, 6709927, 61226, 6353, 330985, 23859, 7297343, 362, 4448, 1354, 4622, 79697, 62160, 15739, 215912 };
		for (int ndx = 0; ndx < 100; ndx++)
		{
			Util.Check("Fixed32.SqrtFast", Fixed32.SqrtFast(input0[ndx]), output0[ndx], input0[ndx]);
		}
	}

	// Fixed32.SqrtFastest
	public static void Fixed32_SqrtFastest()
	{
		int[] input0 = new int[]{ 377371, 7913, 78708522, 13, 3, 1610, 38261, 210, 18, 528858, 28359, 260974295, 10854719, 47, 47257, 547806850, 28, 29147347, 1578898, 48558359, 1556, 166, 3504608, 1907311, 12263, 285, 70271008, 7476, 57, 47731766, 149348, 665331, 6433, 813422, 5650997, 21836822, 134, 952, 16379395, 25022940, 16, 6530744, 6052, 1250907, 117, 35742, 149, 51596702, 6869029, 56, 22, 3570371, 40095154, 83592, 914, 4532, 2424413, 82, 1217929, 11788155, 24614, 10, 7, 425, 7, 45767593, 81132, 26, 8972, 2323694, 8149934, 32174382, 3, 67751017, 5895433, 255854, 29542810, 5, 32357, 368408652, 3, 2, 1168705, 2, 4164926, 44914627, 17817471, 82635704, 1779, 2493, 18, 3, 839300, 2, 2033, 3, 1775894, 28, 353254, 2765 };
		int[] output0 = new int[]{ 157277, 22770, 2271033, 923, 443, 10272, 50071, 3709, 1086, 186166, 43108, 4135337, 843459, 1755, 55656, 5991509, 1354, 1382031, 321702, 1784076, 10099, 3298, 479245, 353518, 28351, 4321, 2145832, 22132, 1932, 1768822, 98924, 208816, 20533, 230902, 608600, 1196333, 2963, 7897, 1036010, 1280703, 1024, 654260, 19917, 286306, 2768, 48393, 3124, 1839009, 670958, 1915, 1200, 483709, 1620935, 74016, 7738, 17232, 398575, 2318, 282501, 879026, 40166, 809, 677, 5277, 677, 1732017, 72917, 1305, 24246, 390201, 730783, 1451976, 443, 2107118, 621637, 129482, 1391355, 572, 46047, 4914050, 443, 362, 276727, 362, 522438, 1715779, 1080502, 2327110, 10797, 12781, 1086, 443, 234540, 362, 11542, 443, 341145, 1354, 152164, 13462 };
		for (int ndx = 0; ndx < 100; ndx++)
		{
			Util.Check("Fixed32.SqrtFastest", Fixed32.SqrtFastest(input0[ndx]), output0[ndx], input0[ndx]);
		}
	}

	// Fixed64.RSqrt
	public static void Fixed64_RSqrt()
	{
		long[] input0 = new long[]{ 799350515932585728L, 39L, 109150000L, 10L, 42285220L, 332199L, 6769260934507L, 1502407966275126528L, 515485187371308L, 27067939805761L, 32322561107L, 1121311588479L, 13166614963595L, 22923320263269L, 74992652846994L, 286867604L, 70961177L, 15L, 13531714579L, 13218L, 7L, 1710087194150L, 581218574502662L, 15L, 84340957931L, 47755067112858L, 2430L, 1L, 4669978036L, 24514480169959L, 73274276665817280L, 7277531116906L, 252670437L, 192L, 2702486153205986816L, 459573317697773632L, 81780264236L, 210084876878L, 114055838638L, 97114408L, 769L, 2214620588387705L, 37L, 344146430101L, 592891222652954L, 451819886L, 993929L, 211313614121162976L, 124236L, 43175759414772480L, 179775557450L, 336969517607L, 99598366651L, 12492922L, 690016L, 467432L, 316729L, 7066365L, 554855868L, 4083465275180L, 136L, 3988617586584L, 321716280L, 21L, 1703583375093168L, 20482427452986964L, 4437L, 68523911937L, 39117741798100L, 752529695047909L, 16176804178991284L, 1557706928369098L, 625738835L, 139L, 17L, 15649L, 45968169769L, 1688L, 120146L, 186L, 48046725L, 53032L, 62998444041788L, 498809348352L, 136L, 217450L, 73L, 20L, 1284198758420376L, 5781552486487L, 1450995765750L, 11573L, 378L, 128809645956354272L, 710390L, 889594483L, 6883769L, 1L, 931621723477111L, 133491412003425808L };
		long[] output0 = new long[]{ 314826L, 45072067461120L, 26941881568L, 89010203000832L, 43285805184L, 488360615424L, 108185526L, 229639L, 12397430L, 54101859L, 1565621984L, 265813254L, 77571596L, 58789672L, 32503523L, 16618776688L, 33414071872L, 72676526391296L, 2419710336L, 2448256524288L, 106387541196800L, 215243808L, 11675353L, 72676526391296L, 969215884L, 40731467L, 5710007222272L, 281474976710656L, 4118910572L, 56849735L, 1039834L, 104339260L, 17707717184L, 20313706692608L, 171221L, 415204L, 984272934L, 614104660L, 833452836L, 28562614752L, 10150247284736L, 5981224L, 46274199945216L, 479808747L, 11559852L, 13242107920L, 282333303296L, 612316L, 798575646720L, 1354627L, 663856903L, 484891396L, 891894914L, 79635696256L, 338852126720L, 411699718144L, 500144934400L, 105886784512L, 11949498608L, 139291738L, 24136280113152L, 140938158L, 15692902624L, 61422875508736L, 6819587L, 1966749L, 4225665085440L, 1075272944L, 45004186L, 10260723L, 2213061L, 7131763L, 11252350000L, 23874395471872L, 68267709366272L, 2250072412160L, 1312838126L, 6850993717248L, 812054417408L, 20638746673152L, 40607654080L, 1222280243200L, 35462951L, 398540536L, 24136280113152L, 603615082496L, 32944154443776L, 62939718156288L, 7854592L, 117062436L, 233672026L, 2616476336128L, 14477510541312L, 784269L, 333957629952L, 9437212800L, 107281947392L, 281474976710656L, 9221891L, 770394L };
		for (int ndx = 0; ndx < 100; ndx++)
		{
			Util.Check("Fixed64.RSqrt", Fixed64.RSqrt(input0[ndx]), output0[ndx], input0[ndx]);
		}
	}

	// Fixed64.RSqrtFast
	public static void Fixed64_RSqrtFast()
	{
		long[] input0 = new long[]{ 101810L, 66891855896090L, 5401L, 761350877L, 2L, 532236462233181L, 538L, 714797550L, 727170L, 44L, 46894458287045L, 187L, 58L, 2972398L, 84989L, 11887799733680220L, 291979464519882368L, 2974391879063486L, 711149957726754944L, 7834340975L, 280317086469604L, 219L, 246076212530894L, 6L, 518L, 1397784786709L, 4114064962278L, 22402911025L, 904548143259464L, 89062615526L, 10484068522915534L, 25983022662L, 8360193L, 4150675L, 8455503094296129L, 3312457255616L, 9L, 82745L, 186890543682L, 1181536L, 403L, 471420571483L, 128266691399840L, 29125218088564L, 568568349879096128L, 7737019655L, 196L, 587445174204882L, 1515595533953L, 275584924L, 14050749938L, 10673032647L, 11L, 118915L, 476L, 463L, 1253612583719099648L, 798L, 1468004L, 8805756L, 129L, 110854361258L, 3644274654109L, 37653081515211L, 19395L, 1804L, 103451272169199L, 65346855721298L, 1621165211L, 118324456435L, 1210906103268489L, 3528639870762L, 15915L, 601885715991L, 19401667L, 594L, 7889097L, 8L, 54L, 309131689822L, 7103487489L, 32297100561120100L, 68168049609314448L, 3282284L, 6L, 982295L, 2264767316L, 70L, 8715L, 18223318492511L, 12185593069788L, 56705651460739208L, 259942532869220800L, 21223L, 9133L, 16798494605L, 596564162873837568L, 3L, 1501676021L, 315029213678435L };
		long[] output0 = new long[]{ 882163595264L, 34415740L, 3830011097088L, 10201210160L, 199032864768000L, 12200861L, 12135423328256L, 10528015744L, 330083803136L, 42434100592640L, 41103366L, 20583772323840L, 36959120588800L, 163264062720L, 965504546816L, 2581585L, 520914L, 5161051L, 333774L, 3180059400L, 16811907L, 19020075270144L, 17943150L, 114913324040192L, 12367383560192L, 238075230L, 138773081L, 1880545756L, 9358907L, 943165513L, 2748978L, 1746228158L, 97349406080L, 138160728576L, 3061059L, 154657430L, 93825056636928L, 978505255936L, 651098272L, 258950299392L, 14021376983040L, 409949042L, 24853034L, 52155825L, 373296L, 3199986104L, 20105610493952L, 11613479L, 228638798L, 16955759648L, 2374592512L, 2724517852L, 84868201185280L, 816239188992L, 12901380243456L, 13081118359552L, 251398L, 9964204687360L, 232316169216L, 94855550720L, 24782607810560L, 845403668L, 147445576L, 45871727L, 2021110351872L, 6626974695424L, 27674388L, 34819866L, 6990886240L, 818270072L, 8088905L, 149843348L, 2231221751808L, 362815876L, 63902438080L, 11548974039040L, 100213946880L, 99516432384000L, 38303504400384L, 506253884L, 3339655880L, 1566219L, 1078083L, 155365880320L, 114913324040192L, 284001158144L, 5914720464L, 33642974609408L, 3015171444736L, 65937425L, 80634100L, 1182034L, 552072L, 1932111595520L, 2945333387264L, 2171754572L, 364432L, 162511981117440L, 7263648864L, 15858616L };
		for (int ndx = 0; ndx < 100; ndx++)
		{
			Util.Check("Fixed64.RSqrtFast", Fixed64.RSqrtFast(input0[ndx]), output0[ndx], input0[ndx]);
		}
	}

	// Fixed64.RSqrtFastest
	public static void Fixed64_RSqrtFastest()
	{
		long[] input0 = new long[]{ 344903495351746L, 13886849L, 362359L, 12L, 1049553833217L, 18363349452236976L, 670620L, 87904635L, 28265574436820172L, 3693366849908387840L, 271234170590149L, 148375739060122976L, 14L, 21899971962108L, 5716823573877974L, 18472L, 7499488555523L, 1110286L, 5940248101199L, 91056438206446608L, 3675090121166L, 1471487687656L, 7497382818L, 410260345326047L, 44780359745662920L, 98479051068447280L, 62602218176617L, 3458198686389572096L, 65902268L, 5326334282899365L, 4596L, 2315868L, 25946807685L, 803369L, 4133383137659050L, 511L, 89129910584L, 5321965679864357L, 14422190987310L, 1591L, 1L, 25L, 11470L, 10883L, 309843788923829184L, 378742033853778L, 3897699011903170L, 11869L, 17120860L, 2280046636698938624L, 10329955453379774L, 537306742581L, 2644651L, 76054570630L, 85L, 234L, 8541885970402156L, 4073242390L, 1319L, 49149668744002L, 293L, 894307L, 1L, 5L, 803486965250350L, 117119835L, 5718458L, 83514622150206L, 24434171993745268L, 11176012909281L, 955797597205L, 6498592549688581L, 355028615511L, 3731649209L, 62164955058419520L, 142644877993L, 128284892L, 688901L, 6106276666144352L, 118L, 25L, 5274191982L, 201987433565L, 133295768L, 2377878728787828224L, 39453092596L, 4038361240787803136L, 1573324643551102720L, 9372L, 17634562935433L, 276168L, 21L, 4034512986943L, 1353226140295932928L, 5L, 7553321964643L, 19L, 2161L, 62464488L, 2645527873L };
		long[] output0 = new long[]{ 15160583L, 75518745088L, 467367951360L, 81201186734080L, 274921954L, 2077623L, 343715612672L, 30016528992L, 1673316L, 146400L, 17100716L, 730979L, 75249090953216L, 60158560L, 3722916L, 2072365854720L, 102789880L, 267275068160L, 115446231L, 932865L, 146810289L, 231967788L, 3251629736L, 13887561L, 1330393L, 896564L, 35590098L, 151261L, 34685140032L, 3858684L, 4154665377792L, 185085015552L, 1746282904L, 313842713600L, 4380812L, 12452295671808L, 942722419L, 3860283L, 74098348L, 7052676276224L, 281474976710656L, 56263774961664L, 2626770210816L, 2697439895552L, 505980L, 14458391L, 4509409L, 2581979267072L, 68043255488L, 186453L, 2771134L, 384159652L, 173099729664L, 1021329479L, 30522309705728L, 18411600412672L, 3047511L, 4413184880L, 7749861261312L, 40128010L, 16454153404416L, 297662519296L, 281474976710656L, 125898924490752L, 9923971L, 26015959456L, 117657493504L, 30815170L, 1800000L, 84200448L, 287976953L, 3489422L, 472363644L, 4608804928L, 1129116L, 745570780L, 24866880064L, 339061808640L, 3600677L, 25928289714176L, 56263774961664L, 3876865020L, 625878330L, 24383636640L, 182598L, 1417962576L, 140108L, 224309L, 2909334929408L, 67030392L, 535891064832L, 61411667607552L, 140220332L, 242093L, 125898924490752L, 102429428L, 64605239967744L, 6058149044224L, 35637660928L, 5473856648L };
		for (int ndx = 0; ndx < 100; ndx++)
		{
			Util.Check("Fixed64.RSqrtFastest", Fixed64.RSqrtFastest(input0[ndx]), output0[ndx], input0[ndx]);
		}
	}

	// Fixed32.RSqrt
	public static void Fixed32_RSqrt()
	{
		int[] input0 = new int[]{ 9104, 12, 1867, 2046878, 1923, 2, 2, 36118652, 1842523, 52212, 2222731, 105228, 1387401, 6, 1119705, 434038, 3362679, 194581, 5, 207, 12648, 4787, 90163, 58, 7230, 189642, 63, 896685, 27204, 135, 82579, 341, 130408636, 1894, 2198716, 805827089, 75, 203616044, 13, 634158530, 148965, 55, 704, 2964504, 2, 7159130, 6554, 509694, 1080, 10913, 674356489, 44085, 24, 85, 8, 3, 143741, 63, 566, 10890655, 42168193, 2907, 2655, 27165, 678885356, 13006, 866419, 1464, 3018, 1491975, 11491, 17732639, 29637, 10, 1493808, 452, 13, 32657082, 41, 1084514, 57, 133254, 1659, 4, 215, 3, 28, 3050801, 468, 1156237, 11212, 2, 719309, 1294, 30, 102, 22594498, 27857961, 4688732, 233236 };
		int[] output0 = new int[]{ 175834, 4843165, 388282, 11726, 382587, 11863283, 11863283, 2791, 12359, 73423, 11253, 51719, 14243, 6849269, 15855, 25465, 9149, 38033, 7502999, 1166097, 149179, 242486, 55873, 2202956, 197310, 38525, 2113730, 17717, 101719, 1443952, 58382, 908537, 1469, 385504, 11314, 591, 1937266, 1175, 4653162, 666, 43468, 2262239, 632315, 9744, 11863283, 6270, 207236, 23499, 510514, 160600, 646, 79905, 3424634, 1819744, 5931641, 9686330, 44251, 2113730, 705198, 5083, 2583, 311169, 325602, 101792, 643, 147111, 18024, 438479, 305393, 13735, 156509, 3984, 97454, 5305421, 13726, 789133, 4653162, 2935, 2620160, 16110, 2222196, 45959, 411904, 8388608, 1144196, 9686330, 3170595, 9605, 775527, 15602, 158444, 11863283, 19781, 466393, 3063086, 1661191, 3529, 3178, 7748, 34739 };
		for (int ndx = 0; ndx < 100; ndx++)
		{
			Util.Check("Fixed32.RSqrt", Fixed32.RSqrt(input0[ndx]), output0[ndx], input0[ndx]);
		}
	}

	// Fixed32.RSqrtFast
	public static void Fixed32_RSqrtFast()
	{
		int[] input0 = new int[]{ 16, 8, 337, 777851, 1019785406, 76, 2, 4, 61450, 19160036, 300563783, 4726128, 3, 560519, 376407, 632, 3, 1065, 251, 362426232, 928, 304939829, 6, 2802788, 266, 9639, 49, 45, 359730693, 29152, 21514, 523, 13, 192124, 131251, 12, 789, 2290416, 5, 5, 2, 11, 99, 26278, 4130572, 2547318, 843058869, 2, 3692956, 51028048, 58, 42419, 221501, 13891070, 502, 58, 2, 129393, 5845, 211594, 3, 69765095, 14, 4, 1781, 1147890, 678552, 16971, 8, 58205, 861241844, 1642, 405, 88, 287802244, 160, 6142249, 255312, 728584462, 112181, 12276, 38, 13312, 14, 996, 544589730, 2538566, 1076, 764, 4511, 9, 6547809, 783, 26636, 3, 38, 860289399, 47, 29, 7 };
		int[] output0 = new int[]{ 4194304, 5931641, 913907, 19022, 525, 1924456, 11863283, 8388608, 67680, 3832, 967, 7717, 9686468, 22409, 27346, 667352, 9686468, 514104, 1058982, 881, 550733, 960, 6849367, 10021, 1028691, 170883, 2396775, 2501020, 884, 98260, 114381, 733624, 4653160, 38276, 46309, 4843234, 597291, 11085, 7502893, 7502893, 11863283, 5058538, 1686192, 103496, 8255, 10511, 577, 11863283, 8730, 2348, 2202935, 81458, 35647, 4501, 748813, 2202935, 11863283, 46641, 219448, 36472, 9686468, 2008, 4483834, 8388608, 397540, 15659, 20366, 128787, 5931641, 69539, 571, 414032, 833672, 1788463, 988, 1326336, 6769, 33204, 621, 50090, 151425, 2721591, 145411, 4483834, 531614, 718, 10529, 511469, 606987, 249796, 5592409, 6556, 599576, 102798, 9686468, 2721591, 572, 2447243, 3115420, 6341099 };
		for (int ndx = 0; ndx < 100; ndx++)
		{
			Util.Check("Fixed32.RSqrtFast", Fixed32.RSqrtFast(input0[ndx]), output0[ndx], input0[ndx]);
		}
	}

	// Fixed32.RSqrtFastest
	public static void Fixed32_RSqrtFastest()
	{
		int[] input0 = new int[]{ 7, 99349, 322653913, 126, 63618541, 38232479, 209, 5001, 51825251, 6, 10172, 12045, 190691, 55950563, 34, 86223397, 10480, 2, 4541338, 3511, 485525384, 1260, 44, 2032974, 12889, 263, 4, 16362571, 48, 14849336, 200, 260793, 17304, 202474457, 29882, 132681618, 127, 209, 237, 27994, 5211140, 1015, 22308, 243, 476173547, 805078, 68, 15038, 1545, 45, 3971161, 839395077, 11137, 9022087, 15, 6396346, 4475, 317, 10570614, 483676, 18238329, 13715, 207, 6, 33632707, 41881656, 747398043, 1011257, 3744, 278, 1348742, 99, 9248969, 324, 723591, 956584, 60662863, 195404520, 4584231, 17190910, 7, 299337, 21175, 2, 7, 255, 46, 2059498, 25443254, 5016348, 59288, 432504768, 21313, 528274, 1648100, 759, 9, 6392, 7788, 22 };
		int[] output0 = new int[]{ 6343024, 53193, 934, 1495106, 2104, 2715, 1160159, 237315, 2329, 6844748, 166380, 152766, 38394, 2242, 2878884, 1806, 163883, 11863283, 7877, 283172, 761, 472767, 2528095, 11772, 147700, 1034855, 8388608, 4149, 2419983, 4355, 1185670, 32856, 127607, 1178, 97111, 1456, 1488995, 1160159, 1090502, 100281, 7350, 526708, 112282, 1076956, 769, 18686, 2035679, 136896, 426551, 2499598, 8424, 578, 158913, 5588, 4334740, 6629, 250961, 942508, 5160, 24138, 3931, 143244, 1165671, 6844748, 2893, 2592, 613, 16692, 274354, 1006875, 14445, 1685173, 5520, 932131, 19713, 17163, 2155, 1199, 7840, 4047, 6343024, 30683, 115285, 11863283, 6343024, 1050725, 2472111, 11694, 3323, 7494, 68940, 806, 114906, 23085, 13061, 608569, 5596075, 209728, 190233, 3575267 };
		for (int ndx = 0; ndx < 100; ndx++)
		{
			Util.Check("Fixed32.RSqrtFastest", Fixed32.RSqrtFastest(input0[ndx]), output0[ndx], input0[ndx]);
		}
	}

	// Fixed64.Exp
	public static void Fixed64_Exp()
	{
		long[] input0 = new long[]{ 137482459064L, 19371116209L, -370084465972L, -356338873565L, -10199176204L, 23065664610L, -236847789510L, -278395043129L, -321671886349L, -40732527018L, 333363699955L, -27071966612L, 20201249409L, 408715405590L, 42834643419L, -253875339918L, 410936831191L, -233106219108L, 426549230798L, 74150913834L, 156110863072L, -177620883082L, 291670920335L, 121811795456L, 200485139093L, 182907636285L, 200320918293L, -307166226343L, 64853138230L, -136396952663L, 61606252628L, -38143831017L, 3401681001L, 92449953043L, -314164303546L, 38020465817L, 20308677009L, -106625393849L, 12258663405L, 33295135015L, -414802603193L, 413151663192L, 54313469025L, -119194879455L, 296314235937L, -391895687182L, -59059127827L, -12408421005L, -368336023171L, -23005723010L, -157100206673L, 300868320740L, -81705924238L, 279133734329L, -52229020624L, -114393387453L, 157196925473L, -62399531829L, -127327283059L, 236389917110L, 252241475917L, -359178292767L, 86248548240L, 244221795913L, 327157949952L, -57989198627L, 399023081985L, 357248025966L, 293382979536L, -424682551997L, 155312712672L, 88065495441L, 184131847085L, -36242633816L, 59456787427L, 172455929480L, 197562377491L, -18630929808L, 254994289118L, 162884096675L, -187529965487L, -216767390300L, -368326932771L, -341637868359L, -408793475590L, 190234661488L, -385934636379L, 153764676271L, -284817755932L, 229725813506L, 310320269944L, -346788520761L, -408794840390L, 205365475895L, 210550388698L, 373872419174L, -102593614647L, 239588402711L, -16856099807L, -75193295035L };
		long[] output0 = new long[]{ 9223372036854775807L, 390580260352L, 0L, 0L, 399621758L, 923192141824L, 0L, 0L, 0L, 326743L, 9223372036854775807L, 7861802L, 473860874496L, 9223372036854775807L, 92102888456192L, 0L, 9223372036854775807L, 0L, 9223372036854775807L, 135170703061155840L, 9223372036854775807L, 0L, 9223372036854775807L, 9223372036854775807L, 9223372036854775807L, 9223372036854775807L, 9223372036854775807L, 0L, 15513819686109184L, 0L, 7284557925580800L, 596990L, 9482608976L, -8869783588581670912L, 0L, 30024631746560L, 485862779136L, 0L, 74562406016L, 9992315011072L, 0L, 9223372036854775807L, 1333454900822016L, 0L, 9223372036854775807L, 0L, 4582L, 238922334L, 0L, 20262296L, 0L, 9223372036854775807L, 23L, 9223372036854775807L, 22475L, 0L, 9223372036854775807L, 2105L, 0L, 9223372036854775807L, 9223372036854775807L, 0L, 2260267509213036544L, 9223372036854775807L, 9223372036854775807L, 5878L, 9223372036854775807L, 9223372036854775807L, 9223372036854775807L, 0L, 9223372036854775807L, 3450517150115037184L, 9223372036854775807L, 929418L, 4416270392885248L, 9223372036854775807L, 9223372036854775807L, 56111890L, 9223372036854775807L, 9223372036854775807L, 0L, 0L, 0L, 0L, 0L, 9223372036854775807L, 0L, 9223372036854775807L, 0L, 9223372036854775807L, 9223372036854775807L, 0L, 0L, 9223372036854775807L, 9223372036854775807L, 9223372036854775807L, 0L, 9223372036854775807L, 84824349L, 107L };
		for (int ndx = 0; ndx < 100; ndx++)
		{
			Util.Check("Fixed64.Exp", Fixed64.Exp(input0[ndx]), output0[ndx], input0[ndx]);
		}
	}

	// Fixed64.ExpFast
	public static void Fixed64_ExpFast()
	{
		long[] input0 = new long[]{ -361422039568L, 13189575806L, 123705329057L, -373150200773L, 251178293916L, 184331027485L, -312760255945L, 384033439178L, -209819782697L, 204811779495L, 117540964654L, -253668874318L, 112102908652L, 139285349864L, -5576847002L, 39512136618L, -420348089595L, -1610313000L, 223518541904L, -292573441136L, -101551291847L, -184238323885L, 212569052298L, -365839563570L, -305506092342L, 72604503833L, 67363606231L, 408263100790L, 182703707085L, 115081097853L, -154447185471L, 387470704380L, 427721899599L, -99309145446L, 94809406644L, 228777188306L, 89024010241L, -424673461597L, -163319432676L, -163627773476L, 73498187834L, -340471345958L, -65912270630L, -60132805828L, -317311880747L, 134492414662L, -29394699813L, -118583460655L, -218554406701L, -258458477520L, 364723779169L, 328513427952L, -413426868792L, -153779388271L, -403138732787L, 252313013917L, 230117253107L, 60048163027L, 361852621168L, -250922939516L, -312529308345L, -291526627135L, -228166997506L, 104595849048L, -70237764632L, 159566989874L, -251894044317L, -218084675501L, -385020786379L, 195142694290L, 379984855976L, -425171357597L, -267787609924L, -42350414219L, 63425100629L, -190576675488L, 311170676344L, -156794871473L, 380969046777L, -10501777404L, -327497525952L, -243549662713L, 197320777891L, 11665455005L, 179854048283L, -53463883824L, 371400843572L, 152004558270L, -125667142258L, 271993122326L, 428156664799L, -400520882386L, -357029353166L, -341893222759L, -280595194730L, -64471914630L, 317192381147L, 258988609920L, -419391770795L, -47382141022L };
		long[] output0 = new long[]{ 0L, 92608658304L, 9223372036854775807L, 0L, 9223372036854775807L, 9223372036854775807L, 0L, 9223372036854775807L, 0L, 9223372036854775807L, 9223372036854775807L, 0L, 9223372036854775807L, 9223372036854775807L, 1172315777L, 42492513222656L, 0L, 2952092124L, 9223372036854775807L, 0L, 0L, 0L, 9223372036854775807L, 0L, 0L, 94300750372405248L, 27833542239059968L, 9223372036854775807L, 9223372036854775807L, 9223372036854775807L, 0L, 9223372036854775807L, 9223372036854775807L, 0L, -1858151054391115776L, 9223372036854775807L, 4313281508996546560L, 0L, 0L, 0L, 116112651053957120L, 0L, 929L, 3568L, 0L, 9223372036854775807L, 4577762L, 0L, 0L, 0L, 9223372036854775807L, 9223372036854775807L, 0L, 0L, 0L, 9223372036854775807L, 9223372036854775807L, 5068199741620224L, 9223372036854775807L, 0L, 0L, 0L, 0L, 9223372036854775807L, 339L, 9223372036854775807L, 0L, 0L, 0L, 9223372036854775807L, 9223372036854775807L, 0L, 0L, 224186L, 11125543856504832L, 0L, 9223372036854775807L, 0L, 9223372036854775807L, 372435395L, 0L, 0L, 9223372036854775807L, 64943825632L, 9223372036854775807L, 16859L, 9223372036854775807L, 9223372036854775807L, 0L, 9223372036854775807L, 9223372036854775807L, 0L, 0L, 0L, 0L, 1299L, 9223372036854775807L, 9223372036854775807L, 0L, 69472L };
		for (int ndx = 0; ndx < 100; ndx++)
		{
			Util.Check("Fixed64.ExpFast", Fixed64.ExpFast(input0[ndx]), output0[ndx], input0[ndx]);
		}
	}

	// Fixed64.ExpFastest
	public static void Fixed64_ExpFastest()
	{
		long[] input0 = new long[]{ -43110270620L, -240806753912L, -163059403875L, 15799628607L, -208946603897L, 360398407167L, 166804308277L, 58420275027L, 212292240698L, 216934672301L, 370639067172L, -42584605019L, 108575845850L, -57142331026L, -352922143164L, 360517083967L, -59350675427L, 189664277088L, 354238530364L, 412722848792L, 217662875901L, 25598127011L, 337079196356L, -227517179105L, 196482759091L, 351009008763L, 361354725168L, -355391116765L, -191251949089L, -301599714340L, -78272327036L, -377314663175L, -166899830277L, -1145541800L, -396888236384L, 342805957559L, 349006470762L, -247975580315L, -208884670697L, 248952370715L, 209228537497L, -116516161054L, 369209047171L, 86894915040L, 330850784754L, 41244540219L, -79599998637L, 129609707460L, -418467809194L, -211615549098L, 424375490397L, -301968625540L, 334246809155L, -402617889987L, 164451712676L, 360788331968L, -148389220669L, -365038954369L, 248813599115L, -130458883060L, 428540411599L, 92698695443L, -179824505483L, 84395225439L, -134289730262L, 318457000748L, -305181504342L, -319775341948L, -89750824241L, -266231371123L, -417986116394L, -240871824712L, -30947781814L, -324210569950L, -226002418305L, -95317692644L, 85885809439L, -179312448283L, -128871234260L, -274258510727L, 1112277800L, -197751711892L, -366420037170L, -409133129590L, -296478475138L, -205800431095L, -282064742731L, -193778669890L, 263899475122L, -328179838752L, 61698448628L, 284548695532L, -67292449831L, 351070941963L, 249908688716L, -312966887545L, -366188385170L, -144682907867L, -208312084297L, -417102945594L };
		long[] output0 = new long[]{ 187816L, 0L, 0L, 170042179968L, 0L, 9223372036854775807L, 9223372036854775807L, 3469197170442240L, 9223372036854775807L, 9223372036854775807L, 9223372036854775807L, 212293L, 9223372036854775807L, 7160L, 0L, 9223372036854775807L, 4281L, 9223372036854775807L, 9223372036854775807L, 9223372036854775807L, 9223372036854775807L, 1664724777984L, 9223372036854775807L, 0L, 9223372036854775807L, 9223372036854775807L, 9223372036854775807L, 0L, 0L, 0L, 52L, 0L, 0L, 3289318758L, 0L, 9223372036854775807L, 9223372036854775807L, 0L, 0L, 9223372036854775807L, 9223372036854775807L, 0L, 9223372036854775807L, 2627526134014672896L, 9223372036854775807L, 63610833371136L, 38L, 9223372036854775807L, 0L, 0L, 9223372036854775807L, 0L, 9223372036854775807L, 0L, 9223372036854775807L, 9223372036854775807L, 0L, 0L, 9223372036854775807L, 0L, 9223372036854775807L, -8297787291573682176L, 0L, 1468010305199013888L, 0L, 9223372036854775807L, 0L, 0L, 3L, 0L, 0L, 0L, 3188510L, 0L, 0L, 0L, 2077422683326251008L, 0L, 0L, 0L, 5564110816L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 9223372036854775807L, 0L, 7442893702692864L, 9223372036854775807L, 673L, 9223372036854775807L, 9223372036854775807L, 0L, 0L, 0L, 0L, 0L };
		for (int ndx = 0; ndx < 100; ndx++)
		{
			Util.Check("Fixed64.ExpFastest", Fixed64.ExpFastest(input0[ndx]), output0[ndx], input0[ndx]);
		}
	}

	// Fixed32.Exp
	public static void Fixed32_Exp()
	{
		int[] input0 = new int[]{ -1267558, -2888815, -3206423, 4230656, -3404635, 3597268, 2418150, 3493662, 3858661, -2589833, -2358920, -6081748, 2949966, 1427846, 4545983, 3002859, 451995, -3054628, -741928, -5462433, 2609634, 4853727, -2352570, -2915461, 1549788, -4166230, 3904988, 724456, -2206764, -5226627, -2420441, -3035400, -6111100, -2155533, 3636305, -3647812, -6364627, -3268182, 3715358, -1567570, 995184, -1244028, -261889, 63019, 3904893, 469592, -5161698, 4098951, -5742665, -5743155, 1326108, 4020636, 5087842, -4269756, -2420520, 432314, 6017355, 6262638, -3872731, -5792004, 6245879, -4859906, -853173, 2531689, 6384207, -5877119, -6524248, -1448100, 4345141, 1640196, 2813887, -2833421, -216386, -5727957, 95982, -2699936, -1437982, 4138009, -266755, -5473404, -5558132, 6359637, -86477, -3017209, 864, 112522, -1569643, 4712256, -6288612, -3349608, -3111568, -6073665, -5949050, 2953763, -1259850, -698508, 6162744, 3760021, 232412, 3228413 };
		int[] output0 = new int[]{ 0, 0, 0, 2147483647, 0, 2147483647, 2147483647, 2147483647, 2147483647, 0, 0, 0, 2147483647, 2147483647, 2147483647, 2147483647, 64825500, 0, 0, 0, 2147483647, 2147483647, 0, 0, 2147483647, 0, 2147483647, 2147483647, 0, 0, 0, 0, 0, 0, 2147483647, 0, 0, 0, 2147483647, 0, 2147483647, 0, 1205, 171430, 2147483647, 84792472, 0, 2147483647, 0, 0, 2147483647, 2147483647, 2147483647, 0, 0, 48009457, 2147483647, 2147483647, 0, 0, 2147483647, 0, 0, 2147483647, 2147483647, 0, 0, 0, 2147483647, 2147483647, 2147483647, 0, 2412, 0, 283485, 0, 0, 2147483647, 1118, 0, 0, 2147483647, 17515, 0, 66405, 364869, 0, 2147483647, 0, 0, 0, 0, 0, 2147483647, 0, 1, 2147483647, 2147483647, 2273118, 2147483647 };
		for (int ndx = 0; ndx < 100; ndx++)
		{
			Util.Check("Fixed32.Exp", Fixed32.Exp(input0[ndx]), output0[ndx], input0[ndx]);
		}
	}

	// Fixed32.ExpFast
	public static void Fixed32_ExpFast()
	{
		int[] input0 = new int[]{ 440240, 2840002, 6307410, -829262, -2003442, -2394069, -2316576, 4262200, 2187860, -6274183, -4683302, -4674253, -24206, -4952927, 6319727, 6439842, 1780170, -4389563, -4022774, -281914, 2246123, -4682904, -1713087, 1141150, -1801834, 2333952, -3437971, 3383449, 2085492, -5759109, -2309081, 1355596, -2648002, 3058431, 639954, -1844534, -6501372, -5810814, 5539833, -4158666, -4124501, 721756, -4029204, 6539171, -5219906, -4990915, 504140, 5557476, 3187635, -1146092, 4074920, 3998708, 1229195, -6039273, -5571310, -1430454, -2000510, -1387340, -5581027, 2216204, -5509698, 853574, -4376892, 1393370, 2588497, 514700, 4527349, 3470962, 960718, 1610662, 6387615, 1037385, -3375797, -6417708, -2711012, -5029233, 5899900, -1698658, -192543, -3364519, -4723787, -2441847, -6357786, -3322014, -3280429, 245810, -6427199, -3162329, 2076141, -4483190, -6397624, 1439567, 6323812, -3229971, -5202567, 1575524, -1454950, 1131025, -2602926, 818993 };
		int[] output0 = new int[]{ 54180863, 2147483647, 2147483647, 0, 0, 0, 0, 2147483647, 2147483647, 0, 0, 0, 45297, 0, 2147483647, 2147483647, 2147483647, 0, 0, 887, 2147483647, 0, 0, 2147483647, 0, 2147483647, 0, 2147483647, 2147483647, 0, 0, 2147483647, 0, 2147483647, 1141052676, 0, 0, 0, 2147483647, 0, 0, 2147483647, 0, 2147483647, 0, 0, 143647458, 2147483647, 2147483647, 0, 2147483647, 2147483647, 2147483647, 0, 0, 0, 0, 0, 0, 2147483647, 0, 2147483647, 0, 2147483647, 2147483647, 168764218, 2147483647, 2147483647, 2147483647, 2147483647, 2147483647, 2147483647, 0, 0, 0, 0, 2147483647, 0, 3471, 0, 0, 0, 0, 0, 0, 2788738, 0, 0, 2147483647, 0, 0, 2147483647, 2147483647, 0, 0, 2147483647, 0, 2147483647, 0, 2147483647 };
		for (int ndx = 0; ndx < 100; ndx++)
		{
			Util.Check("Fixed32.ExpFast", Fixed32.ExpFast(input0[ndx]), output0[ndx], input0[ndx]);
		}
	}

	// Fixed32.ExpFastest
	public static void Fixed32_ExpFastest()
	{
		int[] input0 = new int[]{ -2964664, 3586778, -1956841, -4976627, -980107, -3516064, 820905, 1093304, 3225338, 6011523, -776754, 6251748, 5358802, 4337092, 386392, 3485748, 657760, 5498721, -1879799, -4210913, 388300, 1136078, -5158779, -1109690, 1454687, -1605552, 1267172, 6407773, 5338458, 2267063, 2979317, -1784724, -5649332, 5542063, 6153745, -1756966, 6068593, 5172441, 4211693, -6317965, 5978505, -966904, 165932, 2618218, 2847163, -6095773, 2634365, -4566880, 2937236, -2134716, -5635836, -400072, -3542774, -4945613, -6122907, 2452856, 2191957, 5706449, 122285, -5928155, 1770362, 966731, 2308446, -5595324, -3521393, -5545629, 5347481, 6370339, 4736947, -4410241, 3970755, 2038919, -5266572, -2115434, -3635818, -5198394, -5583453, -1223397, 2596745, 996860, 2313682, -719546, -3083062, 919574, 1349299, -3174210, -4795549, 5849880, 5111371, -2852711, 2604675, -6191455, -1503444, 3586248, -1534728, -1541826, 3278249, -792343, -413988, 1839193 };
		int[] output0 = new int[]{ 0, 2147483647, 0, 0, 0, 0, 2147483647, 2147483647, 2147483647, 2147483647, 0, 2147483647, 2147483647, 2147483647, 23821536, 2147483647, 1497135835, 2147483647, 0, 0, 24525435, 2147483647, 0, 0, 2147483647, 0, 2147483647, 2147483647, 2147483647, 2147483647, 2147483647, 0, 0, 2147483647, 2147483647, 0, 2147483647, 2147483647, 2147483647, 0, 2147483647, 0, 824262, 2147483647, 2147483647, 0, 2147483647, 0, 2147483647, 0, 0, 146, 0, 0, 0, 2147483647, 2147483647, 2147483647, 423486, 0, 2147483647, 2147483647, 2147483647, 0, 0, 0, 2147483647, 2147483647, 2147483647, 0, 2147483647, 2147483647, 0, 0, 0, 0, 0, 0, 2147483647, 2147483647, 2147483647, 1, 0, 2147483647, 2147483647, 0, 0, 2147483647, 2147483647, 0, 2147483647, 0, 0, 2147483647, 0, 0, 2147483647, 0, 118, 2147483647 };
		for (int ndx = 0; ndx < 100; ndx++)
		{
			Util.Check("Fixed32.ExpFastest", Fixed32.ExpFastest(input0[ndx]), output0[ndx], input0[ndx]);
		}
	}

	// Fixed64.Exp2
	public static void Fixed64_Exp2()
	{
		long[] input0 = new long[]{ -320448400749L, 184655949085L, -180238906683L, 52027577824L, 29368563813L, -73476034234L, -110565781451L, 335954543156L, 343658021160L, 368907873571L, 97170900645L, -205668026295L, -225699177905L, 372180587973L, -110640310251L, -266318013524L, -164089418276L, -338475646357L, -25626169011L, 406743743589L, 380339486377L, 396571485984L, -346989002361L, 67899165831L, -30232878614L, 236493874310L, -197344377091L, -150681738270L, 391439566382L, 292264877536L, -126028621858L, 115506518653L, 376451297175L, -379849845176L, -43718073020L, 396470244784L, -296414053938L, 175417559481L, -398600042785L, -267592996324L, 332037431154L, -220738976702L, -389776978381L, 395567669184L, 145370517467L, -53128667824L, 249432703916L, -41213605019L, -83828020639L, -263758661922L, -366452448770L, 123822259857L, 403195896387L, -4378141002L, 169690655879L, -287523157133L, 102148221847L, 181358657084L, -347236273161L, 222371419103L, -305628386742L, -389380772781L, 374011706374L, -378103585976L, 65439765830L, 411161111591L, -152622593871L, -275346062328L, -13598068606L, -77613825436L, -399400689185L, 89989751841L, -369372333172L, -187529902287L, -354790417165L, 171581733479L, 356851734766L, -313059941945L, 352025377963L, -406600940389L, 416557899993L, 273365957527L, 362643011968L, 225701498705L, 229220596706L, 179645847883L, 141807351866L, -48667291422L, -120043771455L, -185691645486L, -135174706662L, -48275981422L, 93157103043L, -191474732289L, -391461339182L, 291921474335L, -165253953476L, 417823337194L, -99368826246L, 163706135476L };
		long[] output0 = new long[]{ 0L, 9223372036854775807L, 0L, 19033610059776L, 491330070784L, 30415L, 76L, 9223372036854775807L, 9223372036854775807L, 9223372036854775807L, 27769742513143808L, 0L, 0L, 9223372036854775807L, 75L, 0L, 0L, 0L, 68682665L, 9223372036854775807L, 9223372036854775807L, 9223372036854775807L, 0L, 246572699222016L, 32656334L, 9223372036854775807L, 0L, 0L, 9223372036854775807L, 9223372036854775807L, 6L, 535423161202638848L, 9223372036854775807L, 0L, 3705130L, 9223372036854775807L, 0L, 9223372036854775807L, 0L, 0L, 9223372036854775807L, 0L, 0L, 9223372036854775807L, 9223372036854775807L, 811379L, 9223372036854775807L, 5550590L, 5721L, 0L, 0L, 2048986819403448320L, 9223372036854775807L, 2118850556L, 9223372036854775807L, 0L, 62005088125714432L, 9223372036854775807L, 0L, 9223372036854775807L, 0L, 0L, 9223372036854775807L, 0L, 165793717420032L, 9223372036854775807L, 0L, 0L, 478503054L, 15598L, 0L, 8714697264070656L, 0L, 0L, 0L, 9223372036854775807L, 9223372036854775807L, 0L, 9223372036854775807L, 0L, 9223372036854775807L, 9223372036854775807L, 9223372036854775807L, 9223372036854775807L, 9223372036854775807L, 9223372036854775807L, 9223372036854775807L, 1666931L, 16L, 0L, 1L, 1775596L, 14529435311013888L, 0L, 0L, 9223372036854775807L, 0L, 9223372036854775807L, 465L, 9223372036854775807L };
		for (int ndx = 0; ndx < 100; ndx++)
		{
			Util.Check("Fixed64.Exp2", Fixed64.Exp2(input0[ndx]), output0[ndx], input0[ndx]);
		}
	}

	// Fixed64.Exp2Fast
	public static void Fixed64_Exp2Fast()
	{
		long[] input0 = new long[]{ -330002803553L, 95282036644L, 401881193187L, 423282534397L, -293854702336L, -26945471012L, 63697863429L, 161229069075L, -79084453436L, 427605651999L, -214878162300L, -14288565806L, 258830008720L, -370132062372L, 235310248709L, -149497614669L, -322527055150L, -281186521930L, -177827453082L, 315290647546L, -160142969874L, 325541427151L, 274194438727L, -257403152719L, -371935848373L, 78372021836L, 426329378398L, 251599128717L, -225565292705L, -217215161901L, -92661042643L, 368525127171L, 215805613900L, -241177487112L, 352898592764L, -108220866250L, 300981493940L, 368857207171L, 90059471441L, -173330661880L, -313548745146L, 410075012390L, -399079567585L, -118152693855L, -400310212786L, 308610588743L, 122390739456L, 33792435815L, 2711748601L, 187533005087L, 184951799886L, -313564161146L, 166154060677L, 14837255806L, -105647624249L, -226047501105L, 250584327516L, 229787616307L, 365721653170L, 57270005426L, -23778119811L, 241595464312L, -42702367819L, -291366021135L, 90769965042L, -153906559871L, 199402549892L, 70510766232L, -293533925536L, -85965614640L, -20982379009L, -261887532721L, 58250736227L, 424999938397L, 199342663092L, -140721252665L, 295124265137L, -37149597017L, -286589669533L, -251049707516L, 385478011979L, -36959787017L, -180609349484L, 16398431807L, 27329767812L, -208593611097L, -227125663105L, -228528371506L, 293966866736L, 149449364269L, 70691535832L, -358302851966L, -426361175598L, -396707263584L, 279944187530L, -125647479858L, 23280650610L, 321783183149L, 220574070702L, 183093076685L };
		long[] output0 = new long[]{ 0L, 20473092434296832L, 9223372036854775807L, 9223372036854775807L, 0L, 55510818L, 125164318949376L, 9223372036854775807L, 12302L, 9223372036854775807L, 0L, 428042711L, 9223372036854775807L, 0L, 9223372036854775807L, 0L, 0L, 0L, 0L, 9223372036854775807L, 0L, 9223372036854775807L, 9223372036854775807L, 0L, 0L, 1336528449044480L, 9223372036854775807L, 9223372036854775807L, 0L, 0L, 1375L, 9223372036854775807L, 9223372036854775807L, 0L, 9223372036854775807L, 111L, 9223372036854775807L, 9223372036854775807L, 8813325055950848L, 0L, 0L, 9223372036854775807L, 0L, 22L, 0L, 9223372036854775807L, 1626316209102258176L, 1003319602688L, 6653071336L, 9223372036854775807L, 9223372036854775807L, 0L, 9223372036854775807L, 47085656096L, 169L, 0L, 9223372036854775807L, 9223372036854775807L, 9223372036854775807L, 44356689231872L, 92549727L, 9223372036854775807L, 4365076L, 0L, 9884072050425856L, 0L, 9223372036854775807L, 375828938227712L, 0L, 4052L, 145319766L, 0L, 51963099807744L, 9223372036854775807L, 9223372036854775807L, 0L, 9223372036854775807L, 10695049L, 0L, 0L, 9223372036854775807L, 11027727L, 0L, 60577328576L, 353571642624L, 0L, 0L, 0L, 9223372036854775807L, 9223372036854775807L, 386954251993088L, 0L, 0L, 0L, 9223372036854775807L, 6L, 183940871680L, 9223372036854775807L, 9223372036854775807L, 9223372036854775807L };
		for (int ndx = 0; ndx < 100; ndx++)
		{
			Util.Check("Fixed64.Exp2Fast", Fixed64.Exp2Fast(input0[ndx]), output0[ndx], input0[ndx]);
		}
	}

	// Fixed64.Exp2Fastest
	public static void Fixed64_Exp2Fastest()
	{
		long[] input0 = new long[]{ -320288690749L, -377616756375L, -102170368247L, -340819366358L, -220981345502L, 17342603008L, 57681832226L, 170650851879L, 244991322314L, -394423101183L, -91675036642L, -141762805066L, 86880556240L, 187274631087L, 101288723047L, -416315062393L, -7291915803L, 370395929972L, 110800940651L, -130133153460L, -356277626365L, -1565808200L, 206040629095L, -13486560206L, 272839579127L, -92176256642L, -265023086723L, 25461270211L, -284440978732L, -104506586648L, 265494826323L, 402837811587L, 171773061879L, -40186016618L, -360257746367L, 333598038755L, -364286148369L, -269286712725L, -192116952289L, -419509564795L, 163221286276L, 31720214614L, -44022964220L, 258893238320L, -188372328687L, -217042388701L, -15686678607L, -184139077085L, -68499257031L, 266762520324L, 311141165544L, 82381450238L, -218514487101L, -78789505436L, 109873973451L, 110773847051L, -154160655871L, 340812921558L, -184162215885L, 300691640740L, -147131039868L, -397276167584L, 25595101011L, -79998820637L, -230421197907L, -65016118630L, 115960862653L, -302430156740L, 118035647854L, 197187413891L, 377467815575L, -167501932677L, 133016152661L, 100813775846L, 136142289863L, 41498888619L, -387039573580L, 376644120375L, -254610961118L, 60385238228L, 353007151564L, 348612719962L, -335536202356L, -121706769456L, 13848977406L, -246383353514L, 191855569089L, -178934162283L, 279436739530L, -41534863819L, 58261965027L, -275602340328L, 344372232760L, -63311863429L, 157118204673L, 131000724261L, -423371615997L, -393520873183L, 59817706627L, 306140519542L };
		long[] output0 = new long[]{ 0L, 0L, 296L, 0L, 0L, 70552800512L, 47400076771328L, 9223372036854775807L, 9223372036854775807L, 0L, 1612L, 0L, 5276500400013312L, 9223372036854775807L, 53970573033734144L, 0L, 1323924370L, 9223372036854775807L, 250567309582663680L, 3L, 0L, 3335800462L, 9223372036854775807L, 487242187L, 9223372036854775807L, 1487L, 0L, 261548041472L, 0L, 203L, 9223372036854775807L, 9223372036854775807L, 9223372036854775807L, 6551648L, 0L, 9223372036854775807L, 0L, 0L, 0L, 0L, 9223372036854775807L, 718061098496L, 3527426L, 9223372036854775807L, 0L, 0L, 341560981L, 0L, 67912L, 9223372036854775807L, 9223372036854775807L, 2552847333851136L, 0L, 12902L, 215719019087396864L, 249473278333157376L, 0L, 9223372036854775807L, 0L, 9223372036854775807L, 0L, 0L, 267251267968L, 10614L, 0L, 119148L, 576158822008094720L, 0L, 805224321239744512L, 9223372036854775807L, 9223372036854775807L, 0L, 9035436933840371712L, 49986493992665088L, -3482838999515529216L, 3479931510784L, 0L, 9223372036854775807L, 0L, 73339707326464L, 9223372036854775807L, 9223372036854775807L, 0L, 12L, 40145474368L, 0L, 9223372036854775807L, 0L, 9223372036854775807L, 5269870L, 52053508390912L, 0L, 9223372036854775807L, 156854L, 9223372036854775807L, 6525704675965009920L, 0L, 0L, 66920661745664L, 9223372036854775807L };
		for (int ndx = 0; ndx < 100; ndx++)
		{
			Util.Check("Fixed64.Exp2Fastest", Fixed64.Exp2Fastest(input0[ndx]), output0[ndx], input0[ndx]);
		}
	}

	// Fixed32.Exp2
	public static void Fixed32_Exp2()
	{
		int[] input0 = new int[]{ 1472373, -2178241, 1942779, 2499543, 4864371, 749914, 5780975, 1681037, 3274001, -5510279, 1042429, -1545838, 2531847, 2822101, 5755328, -1010849, 5611522, -4305951, 5121596, -6310036, 2634049, -2053859, -2324984, -4118747, -4433765, 3411459, -1256979, -3557872, 5694462, -6475145, 539760, -6454703, -1719212, -2002788, 6002631, 1011103, -3176971, -1065819, -167869, 6015004, -2986887, -5307153, 549280, 3220545, 4877398, -4118754, -183605, -4120998, -167791, -3145316, 2940989, 4399413, -4572648, 669182, -4516315, -3027367, -6406857, -492073, 379709, -5100688, -4546706, 2785247, 2540174, 3195547, 503560, 943533, -6380225, -2018964, 3373069, -1809374, -4387477, 123742, 2415517, 5660191, 3230450, 1387602, 3950460, 1008070, -2442545, 6238588, -2958534, -3689581, 3163518, 2286179, -2862535, 2693947, 4671545, 4165204, -4040073, 2476399, 864360, 3868701, 5108071, -1620780, 4008110, 781464, -1293728, 3907333, -3836614, -2619734 };
		int[] output0 = new int[]{ 2147483647, 0, 2147483647, 2147483647, 2147483647, 182431505, 2147483647, 2147483647, 2147483647, 0, 2147483647, 0, 2147483647, 2147483647, 2147483647, 1, 2147483647, 0, 2147483647, 0, 2147483647, 0, 0, 0, 0, 2147483647, 0, 0, 2147483647, 0, 19760058, 0, 0, 0, 2147483647, 2147483647, 0, 0, 11101, 2147483647, 0, 0, 21853298, 2147483647, 2147483647, 0, 9399, 0, 11111, 0, 2147483647, 2147483647, 0, 77672838, 0, 0, 0, 359, 3635946, 0, 0, 2147483647, 2147483647, 2147483647, 13474381, 1414035408, 0, 0, 2147483647, 0, 0, 242588, 2147483647, 2147483647, 2147483647, 2147483647, 2147483647, 2147483647, 0, 2147483647, 0, 0, 2147483647, 2147483647, 0, 2147483647, 2147483647, 2147483647, 0, 2147483647, 612055312, 2147483647, 2147483647, 0, 2147483647, 254694834, 0, 2147483647, 0, 0 };
		for (int ndx = 0; ndx < 100; ndx++)
		{
			Util.Check("Fixed32.Exp2", Fixed32.Exp2(input0[ndx]), output0[ndx], input0[ndx]);
		}
	}

	// Fixed32.Exp2Fast
	public static void Fixed32_Exp2Fast()
	{
		int[] input0 = new int[]{ -4292129, -4718241, -940468, -4912016, -5311439, -3736352, -4569703, -3679239, 3992332, 649681, -424228, -861328, -4603127, 694720, 4411446, 5696475, 6175329, -6299604, -495517, 4363212, 2825588, -3991830, -4532490, -5656929, 3879864, -1702579, 1569270, -2517301, -4901518, -4104614, -3872268, -6510472, -1708914, -6376410, 3977118, -4793893, 3804487, 1521935, 1044018, -5679782, 710051, 1797184, -6380727, 1863845, -3652972, -4827911, 1918229, -2140248, 521372, 4865235, 1159735, -1547723, -2150749, -1646227, 1108276, 6253301, 6367849, -1837139, -2238280, 2944740, 1247976, 4501198, -5331321, 1543346, -2031649, -467355, -5706013, -4780317, 3271201, 2651739, -4661612, -1900205, -790023, -1369334, -2900438, -5525196, -4164703, 157263, 4549643, 2154175, 2932791, -2844081, 3514925, -3213154, 1289250, 4229055, 2193876, 6490912, -931087, 4277417, -4608142, -911973, -2793384, 4652878, -374159, 2762452, 574906, -1370473, -2658105, 3367982 };
		int[] output0 = new int[]{ 0, 0, 3, 0, 0, 0, 0, 0, 2147483647, 63196886, 737, 7, 0, 101759016, 2147483647, 2147483647, 2147483647, 0, 347, 2147483647, 2147483647, 0, 0, 0, 2147483647, 0, 2147483647, 0, 0, 0, 0, 0, 0, 0, 2147483647, 0, 2147483647, 2147483647, 2147483647, 0, 119672858, 2147483647, 0, 2147483647, 0, 0, 2147483647, 0, 16267726, 2147483647, 2147483647, 0, 0, 0, 2147483647, 2147483647, 2147483647, 0, 0, 2147483647, 2147483647, 2147483647, 0, 2147483647, 0, 467, 0, 0, 2147483647, 2147483647, 0, 0, 15, 0, 0, 0, 0, 345816, 2147483647, 2147483647, 2147483647, 0, 2147483647, 0, 2147483647, 2147483647, 2147483647, 2147483647, 3, 2147483647, 0, 4, 0, 2147483647, 1252, 2147483647, 28656686, 0, 0, 2147483647 };
		for (int ndx = 0; ndx < 100; ndx++)
		{
			Util.Check("Fixed32.Exp2Fast", Fixed32.Exp2Fast(input0[ndx]), output0[ndx], input0[ndx]);
		}
	}

	// Fixed32.Exp2Fastest
	public static void Fixed32_Exp2Fastest()
	{
		int[] input0 = new int[]{ -5675497, 144946, 1142149, 4423233, 2973247, -3493658, 5795899, 5772185, -5299389, 79873, 3864404, -343014, 166817, 2161144, -6541651, -2461541, -5567326, 4435433, -6299504, 292895, 3892367, -5643325, 2704370, 5547384, 706282, 2803960, -5660421, 1110697, 5558425, 890708, 453497, 3759370, -3738231, -5371939, 1276073, -3765754, 2567368, 5645291, 367198, -1770691, 4986755, 2975291, 5236701, 5542638, -6140586, 2288471, 5474809, 1599071, 4640930, -4466217, 1776179, 2693072, -1624569, 3602599, 6029214, 6521428, 3994175, 2148365, -2836649, -6384313, -4386837, -1868397, -6339839, 363501, 6179976, -6448566, -3158383, -1014843, -5668529, 3777703, 1524689, -4659018, -2485364, 2024786, 1859739, -5636523, -4326427, 3715331, 5134371, 4971411, 3882751, -705893, 3023367, 3471042, 5668129, 4314024, -1169660, -787230, -4847554, 1308244, -1206330, -6134596, 1928341, 197911, -3937453, 301553, 2761530, -1680400, 5916262, -6245620 };
		int[] output0 = new int[]{ 0, 303590, 2147483647, 2147483647, 2147483647, 0, 2147483647, 2147483647, 0, 152539, 2147483647, 1741, 382553, 2147483647, 0, 0, 0, 2147483647, 0, 1451461, 2147483647, 0, 2147483647, 2147483647, 115004333, 2147483647, 0, 2147483647, 2147483647, 808703883, 7935795, 2147483647, 0, 0, 2147483647, 0, 2147483647, 2147483647, 3185124, 0, 2147483647, 2147483647, 2147483647, 2147483647, 0, 2147483647, 2147483647, 2147483647, 2147483647, 0, 2147483647, 2147483647, 0, 2147483647, 2147483647, 2147483647, 2147483647, 2147483647, 0, 0, 0, 0, 0, 3062890, 2147483647, 0, 0, 1, 0, 2147483647, 2147483647, 0, 0, 2147483647, 2147483647, 0, 0, 2147483647, 2147483647, 2147483647, 2147483647, 37, 2147483647, 2147483647, 2147483647, 2147483647, 0, 15, 0, 2147483647, 0, 0, 2147483647, 531584, 0, 1590725, 2147483647, 0, 2147483647, 0 };
		for (int ndx = 0; ndx < 100; ndx++)
		{
			Util.Check("Fixed32.Exp2Fastest", Fixed32.Exp2Fastest(input0[ndx]), output0[ndx], input0[ndx]);
		}
	}

	// Fixed64.Log
	public static void Fixed64_Log()
	{
		long[] input0 = new long[]{ 57015252L, 1741296958L, 22316369212L, 16L, 13588461275L, 1456574507L, 23647318L, 29335781021073L, 303L, 40860631014865768L, 2796988341919273L, 2L, 258206996301709L, 35127974L, 11070L, 26449551643407L, 499207903042L, 49403L, 128941020098L, 453L, 140286999305L, 1938574231989143L, 286780L, 536235745L, 12501504L, 80604589528L, 1922461302L, 696686295816609L, 308937087L, 165L, 5076207L, 787184080058730L, 3387411961584512L, 16011059078942588L, 451781081L, 416734L, 43854782373921784L, 2557642683352L, 13845L, 173648300L, 126199497L, 7292327553150L, 536085L, 30329L, 258202552547751L, 16486621L, 70554L, 34050L, 371160L, 926136678L, 53321408651464920L, 371899542L, 310892653845696L, 1256973916538297L, 90237331L, 135633929539L, 6071L, 41L, 6252880502392L, 777446014435063552L, 3494095971185164288L, 156532443386L, 94957L, 1L, 8049440622L, 3L, 3396L, 74371694516498864L, 358578957846611968L, 122512849469628304L, 2781384854850157L, 900121866800951936L, 3L, 742L, 16588422953692L, 88717846058109264L, 3616168086L, 9L, 9577561743927L, 3496957496021131776L, 1142437L, 56459L, 1877049361L, 1538348368443906816L, 14312L, 62946770685407000L, 2L, 2L, 177432764L, 15360997824022790L, 68L, 1053778134332970L, 1886337824373401088L, 82130L, 229189881L, 3718030870448915L, 76795993L, 292597L, 17376182689089L, 72668496950776L };
		long[] output0 = new long[]{ -18562335009L, -3877555434L, 7077575730L, -83357245188L, 4946844783L, -4644390758L, -22342203040L, 37920778652L, -70725127544L, 69012538009L, 57495051549L, -92288378601L, 47262133265L, -20642477945L, -55270713281L, 37475954216L, 20425055014L, -48846419727L, 14611097132L, -68997866416L, 14973314175L, 55920557446L, -41292842618L, -8936217752L, -25079818407L, 12593323636L, -3452456410L, 51525204659L, -11304618344L, -73335554251L, -28950806402L, 52049735659L, 58317636357L, 64988637447L, -9672272756L, -39687672654L, 69316264105L, 27442252631L, -54309991765L, -13778973331L, -15149789558L, 31942247778L, -38606008319L, -50941963478L, 47262059345L, -23891399895L, -47315834156L, -50444925459L, -40185093826L, -6589241741L, 70155733237L, -10507961548L, 48059649048L, 54059781790L, -16590410730L, 14828441684L, -57850766328L, -79315752501L, 31281765398L, 81664855277L, 88119399775L, 15443926519L, -46040032236L, -95265423072L, 2697920896L, -90546919225L, -60345820495L, 71584829940L, 78341129010L, 73728622056L, 57471024245L, 82294136509L, -90546919225L, -66878484237L, 35472205229L, 72342400520L, -738858999L, -85828415375L, 33113057025L, 88122915743L, -35356323328L, -48273026303L, -3555128626L, 84595957532L, -54167509705L, 70868489701L, -92288378601L, -92288378601L, -13686374895L, 64810619699L, -77142775482L, 53302470615L, 85471821352L, -46663321324L, -12587038971L, 58717618053L, -17283149210L, -41206595970L, 35671472033L, 41816743462L };
		for (int ndx = 0; ndx < 100; ndx++)
		{
			Util.Check("Fixed64.Log", Fixed64.Log(input0[ndx]), output0[ndx], input0[ndx]);
		}
	}

	// Fixed64.LogFast
	public static void Fixed64_LogFast()
	{
		long[] input0 = new long[]{ 4853L, 4375011L, 437918L, 13971391L, 1535584535691L, 273187002594163744L, 104227827L, 418687405160L, 75L, 4690671115L, 37L, 642L, 20038838L, 8246117266392L, 680514932423L, 61886442985249L, 83L, 284664L, 590338505803770L, 589728311220L, 1L, 1260L, 419154234L, 23L, 1785031246028442L, 2L, 2200602338759572480L, 200353741725280L, 14941178505996L, 20575568323365808L, 1155240559L, 12358L, 2509539L, 607810941996120576L, 720455550516472L, 1204240060503141120L, 594573856930600448L, 134L, 1001799L, 241613L, 603934399L, 27889175L, 164013771927747136L, 174445016005858016L, 409543174741095L, 492901646085719616L, 52586786L, 228754L, 556578341968L, 17078890323081L, 44584543118404L, 269L, 2285752761L, 29L, 51784247050568L, 3L, 48135458808975448L, 18759L, 36095542455L, 581784072171L, 572503563269751424L, 2399086798641L, 129230425276970800L, 16983L, 4L, 13995921271447840L, 1180051732410507L, 152042066L, 52783969360044272L, 2606059457843L, 480009069552132L, 2862545330232657408L, 1310422702752802560L, 2443315788L, 976L, 232045187640L, 35439L, 11080899695L, 262860L, 16701108030655298L, 231470153237L, 9619923169455L, 359L, 4034455559551830016L, 461L, 4282195L, 24934947223027L, 85170L, 11737L, 187081475436020L, 25L, 31694065663361L, 17164935960L, 7941067167879L, 1946269L, 1160923326400534L, 995246443L, 9657200748866L, 42963139593879872L, 134945352739934544L };
		long[] output0 = new long[]{ -58812520876L, -29589273418L, -39474712754L, -24602377823L, 25251067608L, 77172930303L, -15971351190L, 19669578234L, -76721951742L, 378517600L, -79756648849L, -67500228189L, -23053351444L, 32470183786L, 21755750713L, 41126942155L, -76286646530L, -41324654490L, 50813792523L, 21140764257L, -95265423072L, -64604224438L, -9994217772L, -81798577300L, 55566150358L, -92288378601L, 86133648860L, 46172599057L, 35023020737L, 66065920218L, -5639875134L, -54797988637L, -31976460597L, 80607649713L, 51669294035L, 83544291696L, 80513079185L, -74229358775L, -35920537751L, -42028905973L, -8425581881L, -21633581044L, 74981610963L, 75246436275L, 49243319328L, 79707619218L, -18909599581L, -42263798249L, 20892284501L, 35597352893L, 39718562067L, -71236318336L, -2709043719L, -80802997348L, 40361513807L, -90546919225L, 69716277289L, -53005398638L, 9142808493L, 21082516093L, 80350615722L, 27167378911L, 73957892360L, -53432576070L, -89311334130L, 64410905811L, 53788561830L, -14349667051L, 70112223481L, 27522798819L, 49925199680L, 87263138779L, 83907217184L, -2422740211L, -65701176853L, 17134721631L, -50273203391L, 4070679843L, -41666907770L, 65169865103L, 17124064991L, 33132006185L, -69996746176L, 88737001819L, -68922678896L, -29681373242L, 37222685056L, -46507216108L, -55019424849L, 45878220689L, -81440456208L, 38252872124L, 5950353999L, 32308286142L, -33068177520L, 53718370426L, -6280139281L, 33148616637L, 69228041385L, 74143747688L };
		for (int ndx = 0; ndx < 100; ndx++)
		{
			Util.Check("Fixed64.LogFast", Fixed64.LogFast(input0[ndx]), output0[ndx], input0[ndx]);
		}
	}

	// Fixed64.LogFastest
	public static void Fixed64_LogFastest()
	{
		long[] input0 = new long[]{ 417L, 1595043753747294720L, 19986081L, 984921717764854528L, 164085399025270656L, 71827653510174L, 949L, 4314290483156627968L, 139155353023965744L, 223L, 501129495067420L, 4344002L, 329125987976212416L, 9967081714753L, 2L, 59512L, 6664611008L, 147720091746763008L, 36L, 4372761357916L, 561L, 13855094038L, 12953L, 282L, 104168489158L, 15L, 166767026L, 165018L, 1255L, 3878987L, 233L, 16923673703L, 1189429605909L, 8983120L, 39983983866270L, 669240368397L, 481331L, 1685L, 24L, 29630267L, 4510L, 26653779556013L, 2822613L, 52L, 1721632897419042304L, 26559359278626L, 444094616732027L, 7942073461676092L, 3159454034819L, 32L, 174192L, 31070682762L, 262415643682L, 9825L, 240416845972658L, 139030304858L, 123134480865059L, 70836L, 9455083L, 10834239894588210L, 430706L, 26532699166026132L, 3436630412598477L, 35874141234L, 4414107435329902080L, 29611L, 16842675406685L, 36638270596L, 1149586583022471936L, 17319862L, 570193641468519936L, 3954081L, 6007925937102128L, 5727771676223L, 969490387L, 97116711L, 4908L, 246L, 755L, 18087498270321576L, 157273L, 96835816006L, 240868622429L, 38L, 22L, 34605957186L, 297416222234715520L, 121059398L, 172314587901L, 287L, 25064680731369252L, 6L, 822097930138563L, 10465L, 68L, 783953L, 35767262626233740L, 362852066079619L, 54L, 58141366014434L };
		long[] output0 = new long[]{ -69353549316L, 84751286068L, -23064602216L, 82680872721L, 74983561495L, 41766752646L, -65821590241L, 89025093431L, 74275709384L, -72041720159L, 50110231136L, -29619824814L, 77973089990L, 33284347081L, -92288378601L, -48046747519L, 1886955156L, 74532221363L, -79874258065L, 29745675819L, -68079429849L, 5030251803L, -54596109737L, -71033563256L, 13694646792L, -83634374399L, -13952598767L, -43666480881L, -64621247570L, -30106032413L, -71853300403L, 5889552479L, 24154010924L, -26499284467L, 39250878847L, 21684057293L, -39068652314L, -63355888986L, -81615931420L, -21373399036L, -59127289956L, 37508850912L, -31471605669L, -78294999313L, 85079267836L, 37493606532L, 49591100596L, 61977500636L, 28349689839L, -80380200717L, -43434188117L, 8499063566L, 17663025207L, -55783070437L, 46955578585L, 14934661983L, 44081857970L, -47298665052L, -26279318211L, 63311227387L, -39546052802L, 67157866598L, 58379459425L, 9116387141L, 89123295931L, -51044770890L, 35537564129L, 9206928021L, 83344800513L, -23679638088L, 80333245190L, -30023705009L, 60778645872L, 30905002202L, -6392658965L, -16275007518L, -58764050508L, -71620181143L, -66804038165L, 65512369226L, -43872898805L, 13381151088L, 17295090099L, -79642035305L, -81989603508L, 8961797613L, 77537899490L, -15328292038L, 15856521911L, -70958065756L, 66913435514L, -87570020362L, 52235974983L, -55512099033L, -77142754766L, -36973825927L, 68440726054L, 48723413936L, -78132835569L, 40858827551L };
		for (int ndx = 0; ndx < 100; ndx++)
		{
			Util.Check("Fixed64.LogFastest", Fixed64.LogFastest(input0[ndx]), output0[ndx], input0[ndx]);
		}
	}

	// Fixed32.Log
	public static void Fixed32_Log()
	{
		int[] input0 = new int[]{ 2, 162, 104783524, 577, 27, 249249272, 3616106, 253860599, 4953379, 1957, 6119, 593077, 16, 48916, 234684, 3369869, 456, 6713413, 40510, 12370, 889, 509, 520470640, 39685312, 55736, 164822784, 138127, 632678, 256432, 55, 105714, 8853, 4, 8689, 64977841, 6, 2820113, 1458, 435324842, 36, 50500016, 2, 2616891, 368, 4957800, 315, 314647649, 774, 694486, 4611, 5, 32, 637, 1130788, 12328, 5219543, 335, 5, 11132949, 177, 3608, 11, 1979, 177225, 19878568, 742153817, 294025, 2066509, 808328, 70767, 2, 336001569, 16558835, 2202, 263033, 758, 208897, 2826735, 16, 352, 562461270, 356, 978180833, 111, 22, 6416, 27, 3830, 756817858, 24, 21232626, 1068079, 140680, 4918774, 10944160, 8835549, 1272736, 29, 19890, 7172904 };
		int[] output0 = new int[]{ -681390, -393396, 483461, -310150, -510821, 540252, 262835, 541453, 283457, -230109, -155399, 144357, -545112, -19169, 83600, 258213, -325574, 303382, -31527, -109270, -281822, -318368, 588504, 419831, -10615, 513147, 48861, 148593, 89408, -464192, 31335, -131193, -635964, -132418, 452145, -609392, 246541, -249399, 576797, -491967, 435625, -681390, 241640, -339625, 283515, -349817, 555521, -290900, 154702, -173943, -621341, -499686, -303666, 186650, -109493, 286887, -345782, -621341, 336530, -387593, -190018, -569668, -229376, 65196, 374524, 611758, 98373, 226165, 164650, 5032, -681390, 559825, 362549, -222379, 91073, -292269, 75971, 246695, -545112, -342538, 593589, -341798, 629855, -418173, -524242, -152293, -510821, -186105, 613040, -518540, 378842, 182911, 50062, 282997, 335410, 321383, 194400, -506138, -78144, 307721 };
		for (int ndx = 0; ndx < 100; ndx++)
		{
			Util.Check("Fixed32.Log", Fixed32.Log(input0[ndx]), output0[ndx], input0[ndx]);
		}
	}

	// Fixed32.LogFast
	public static void Fixed32_LogFast()
	{
		int[] input0 = new int[]{ 1153434, 304, 1028616, 19, 3858, 16, 2136, 310918814, 8, 32, 49, 127406, 354178629, 63087, 337, 20, 12, 35, 15878, 6196, 53463503, 153, 2931878, 64931, 3578733, 2402, 4776, 6, 216099, 31965147, 639827, 14147, 284, 2396, 328549, 3694073, 372403, 99675497, 30946701, 2, 6, 95, 891, 46555134, 534975696, 333, 3238030, 4, 29113, 1081847, 1408299, 71494, 1997055, 6, 144058031, 15027, 111524, 31, 5888, 3, 3597511, 634, 2877, 288, 54562, 3792756, 896, 295581, 206179523, 98217, 58335, 135, 1235, 11383, 2063, 1115239, 184984278, 67620475, 130322, 21474, 796694, 2142, 248318, 214480301, 45, 17, 7606472, 88, 17862, 43, 66, 23507, 33852, 19267078, 832, 10160079, 35776318, 6, 1706, 282 };
		int[] output0 = new int[]{ 187950, -352146, 180444, -533850, -185628, -545112, -224373, 554740, -590538, -499686, -471763, 43566, 563277, -2496, -345392, -530489, -563966, -493814, -92908, -154580, 439362, -397142, 249088, -608, 262154, -216682, -171639, -609392, 78193, 405654, 149329, -100473, -356606, -216845, 105649, 264233, 113860, 480186, 403532, -681390, -609392, -428374, -281674, 430294, 590306, -346175, 255597, -635964, -53177, 183751, 201033, 5702, 223924, -609392, 504322, -96518, 34841, -501767, -157921, -654818, 262497, -303976, -204856, -355689, -12011, 265960, -281308, 98719, 527819, 26514, -7629, -405345, -260278, -114720, -226652, 185743, 520710, 454757, 45050, -73123, 163700, -224189, 87301, 530406, -477344, -541139, 311567, -433390, -85192, -480323, -452244, -67194, -43294, 372476, -286164, 330538, 413035, -609392, -239105, -357069 };
		for (int ndx = 0; ndx < 100; ndx++)
		{
			Util.Check("Fixed32.LogFast", Fixed32.LogFast(input0[ndx]), output0[ndx], input0[ndx]);
		}
	}

	// Fixed32.LogFastest
	public static void Fixed32_LogFastest()
	{
		int[] input0 = new int[]{ 399190504, 21, 23, 318276823, 37, 20837, 115, 350, 3340945, 258, 87226, 1770894, 261040, 294451687, 4329, 3358, 2744502, 14405, 12, 6096, 535391607, 20, 33, 9430361, 2965, 4, 4287388, 68843, 27, 218067, 33471275, 59958996, 79250, 923, 57761, 72725, 184, 837730, 11565225, 2339197, 166034364, 43358, 28455, 138, 538267, 40167, 96695893, 123444, 8900, 266171013, 7, 4966, 520676709, 300542567, 565, 39423062, 710829059, 2644, 214675, 14, 5218573, 1805330, 25, 30, 8287, 1562047, 44, 565, 10195, 63921750, 36, 6, 1337463, 5840, 39427, 24695, 764182, 256980507, 35, 79265002, 55, 69, 15, 110, 58905, 13477, 123647709, 283136, 3, 1573208, 109855, 74897246, 7, 1547525, 481298930, 183, 3379, 1857, 17916012, 370002152 };
		int[] output0 = new int[]{ 571116, -527292, -521331, 556274, -490171, -75096, -415852, -342913, 257647, -362899, 18736, 216048, 90575, 551175, -178078, -194724, 244759, -99288, -563968, -155648, 590357, -530488, -497670, 325654, -202884, -635964, 273994, 3226, -510820, 78787, 408671, 446878, 12453, -279360, -8275, 6822, -385053, 166990, 339025, 234289, 513628, -27075, -54674, -403904, 138002, -32083, 478195, 41497, -130845, 544556, -599288, -169081, 588530, 552517, -311526, 419398, 608931, -210391, 77759, -553862, 286875, 217311, -515866, -503915, -135523, 207822, -478818, -311526, -121943, 451071, -491966, -609394, 197651, -158460, -33301, -63966, 160967, 542254, -493813, 465171, -464191, -449330, -549341, -418765, -6990, -103653, 494311, 95901, -654820, 208288, 33853, 461456, -599288, 207209, 583378, -385410, -194316, -233545, 367712, 566140 };
		for (int ndx = 0; ndx < 100; ndx++)
		{
			Util.Check("Fixed32.LogFastest", Fixed32.LogFastest(input0[ndx]), output0[ndx], input0[ndx]);
		}
	}

	// Fixed64.Log2
	public static void Fixed64_Log2()
	{
		long[] input0 = new long[]{ 2063959L, 154334014273L, 206L, 26271569610L, 472558265902660L, 1L, 29395195555960L, 38278718922L, 199374346L, 1437751481614674L, 4584L, 8L, 10341L, 14967510151235L, 283341217368615424L, 26553908298L, 68084504963L, 204110160663172608L, 439762671209L, 1630645031550125568L, 402730786866413L, 34350191265L, 60928L, 96662160723749L, 814718L, 146808L, 3172889498329183232L, 3376049719282445312L, 142534382L, 96338L, 70L, 388348L, 297L, 4444L, 8499802463L, 35848044724L, 9L, 13926140073L, 51616267L, 2761955454L, 24034167194344L, 1185760L, 516L, 9153L, 877807852L, 1544089393L, 1502839242823L, 5661318L, 63239369920719L, 31238807L, 1068909955613L, 179796400L, 23211769834751L, 2064660798760468L, 1173L, 277096990550325L, 2533040L, 9865587L, 32246L, 3218868743L, 1L, 40153855430534L, 268L, 2069L, 20460972747983L, 54445143076494488L, 136672076204420960L, 2L, 1760L, 7903951L, 2790586125L, 4L, 3954376569L, 159L, 67846L, 339639231L, 66556425L, 6L, 110117L, 2433296998499040L, 450504673413L, 560450667407L, 53385L, 4L, 415639311412L, 1802338191690L, 77156559441L, 663541L, 3L, 141461010107920L, 14152L, 4448051387691L, 431869L, 73950831883529552L, 1463332242L, 2760333512841633280L, 4415L, 1150078888012830080L, 2062996337L, 74353265927L };
		long[] output0 = new long[]{ -47343498024L, 22193234620L, -104425685092L, 11221819020L, 71929902732L, -137438953472L, 54720656220L, 13554158708L, -19022820128L, 78824399824L, -85201880472L, -124554051584L, -80160891296L, 50538448448L, 111563141728L, 11288055232L, 17122348612L, 109530795488L, 28681508952L, 122407205604L, 70939154880L, 12883179956L, -69171231004L, 62096707932L, -53103227948L, -63721977080L, 126531896844L, 126916463376L, -21102313668L, -66332259384L, -111113883368L, -57694336448L, -102158721492L, -85394072644L, 4229607200L, 13147648140L, -123824229260L, 7288887584L, -27396211384L, -2735709896L, 53472995872L, -50777763660L, -98736027112L, -80917059452L, -9838353020L, -6338903012L, 36296029164L, -41091212556L, 59467637116L, -30507856984L, 34184836412L, -19663266976L, 53257258436L, 81066761264L, -93647521476L, 68622343344L, -46074526116L, -37649797292L, -73113947300L, -1787107540L, -137438953472L, 56653211724L, -102795364192L, -90131100188L, 52475652584L, 101342557416L, 107045600760L, -133143986176L, -91133366096L, -39023460508L, -2671808852L, -128849018880L, -511946720L, -106030360340L, -68504830852L, -15722037584L, -25821022948L, -126336624072L, -65503930560L, 82084701324L, 28831046508L, 30184155832L, -69990156500L, -128849018880L, 28331928528L, 37422079616L, 17897428344L, -54375032924L, -130631591368L, 64456282728L, -78216859180L, 43019726424L, -57036159652L, 103239915140L, -6671758316L, 125668803024L, -85434640240L, 120243787900L, -4543671184L, 17668108448L };
		for (int ndx = 0; ndx < 100; ndx++)
		{
			Util.Check("Fixed64.Log2", Fixed64.Log2(input0[ndx]), output0[ndx], input0[ndx]);
		}
	}

	// Fixed64.Log2Fast
	public static void Fixed64_Log2Fast()
	{
		long[] input0 = new long[]{ 52101758216L, 645853245320L, 3214L, 8000981L, 51624842645745888L, 218636968505L, 209682747919326560L, 145782892684L, 30431149561L, 15939528079560L, 4163339L, 380528L, 89L, 61114294L, 32950628162011140L, 15530880L, 752152583L, 58L, 22962246993L, 11L, 705645L, 205973788437L, 2834520757285675008L, 57406848L, 558L, 2893246030028484L, 52206513243692L, 246600919481L, 501785932280L, 113351L, 76923L, 266883724L, 14880441051L, 6829937332992L, 46702L, 3216808336367773184L, 174325356L, 30770728572638792L, 407L, 1L, 39639970009804L, 2440765304159561728L, 100556282085094L, 1095325L, 33977774L, 171512387841209088L, 49648242262L, 32588884596090652L, 2L, 94L, 3669911630L, 75L, 50085642L, 181722400L, 105369L, 1166541392119388928L, 1050785171970L, 258269340930681L, 14325L, 17L, 19313395745471328L, 850291L, 1339824185316838656L, 268466L, 207212922L, 71941495296090880L, 117931960384496L, 60493530L, 1308L, 47238733335517840L, 410861301184406016L, 112726988033L, 665956858894607744L, 12078732532L, 1320737L, 1333275L, 9446316238080952L, 2587835101308L, 1L, 15017L, 58274L, 7387796488918943L, 109879158831L, 5325637581L, 142440224958899L, 1025L, 5L, 81L, 64819094L, 184630L, 3061337L, 3112772919671L, 2147906924101L, 22L, 453L, 46619252L, 1L, 374558257L, 24377318843824024L, 2178086917L };
		long[] output0 = new long[]{ 15464515096L, 31062987612L, -87401922176L, -38947856624L, 101012970688L, 24351375420L, 109697698620L, 21840039368L, 12132551540L, 50928322672L, -42995587848L, -57820382692L, -109625890192L, -26349596404L, 98230864828L, -34838042052L, -10795614488L, -112279116676L, 10387570760L, -122580807808L, -53993824632L, 23981679160L, 125833138144L, -26737376104L, -98251150660L, 83157483684L, 58279678412L, 25097157020L, 29499042548L, -65324573112L, -67726792176L, -17215791920L, 7699580296L, 45677017864L, -70818870912L, 126617077668L, -19854744008L, 97806748140L, -100206375940L, -137438953472L, 56573399804L, 124906407200L, 62341435388L, -51269336160L, -29987083536L, 108452607356L, 15165630784L, 98162463192L, -133143986176L, -109287208664L, -974535896L, -110686380972L, -27582736368L, -19597244160L, -65777033492L, 120331854936L, 34078868504L, 68186341252L, -78141571912L, -119883434248L, 94920715708L, -52838417972L, 121190015996L, -59981881508L, -18783873112L, 103069223564L, 63329069756L, -26412856984L, -92972526360L, 100462806024L, 113865720744L, 20246656192L, 116858356528L, 6407017628L, -50109762436L, -50051216880L, 90489261996L, 39663519592L, -137438953472L, -77849250020L, -69447195692L, 88966234080L, 20088106736L, 1332758764L, 64499027036L, -94483232376L, -127466348240L, -110209505076L, -25984914996L, -62301603828L, -44900745848L, 40807933740L, 38508971440L, -118285840512L, -99542879736L, -28027141892L, -137438953472L, -15115643952L, 96363556924L, -4207288020L };
		for (int ndx = 0; ndx < 100; ndx++)
		{
			Util.Check("Fixed64.Log2Fast", Fixed64.Log2Fast(input0[ndx]), output0[ndx], input0[ndx]);
		}
	}

	// Fixed64.Log2Fastest
	public static void Fixed64_Log2Fastest()
	{
		long[] input0 = new long[]{ 1454L, 820L, 24904018782739L, 219L, 1057L, 150136896673059904L, 519L, 19122805760496392L, 137L, 364463037595509696L, 123L, 1872565714676685568L, 152863600679001L, 4399434787370270720L, 1412055015590062L, 2L, 35687194923163L, 251580053L, 8691943852L, 202071L, 13501145494645372L, 1440204553598L, 4303934986617652224L, 32685676138541260L, 15430748537L, 131992L, 242031658253226752L, 29153673206482300L, 26608920L, 130650425096655216L, 731883L, 25219885L, 489565035070495L, 3577282959L, 10L, 71L, 296L, 501504083L, 5035704L, 4375270892504609L, 1L, 1285L, 2744574405648122880L, 820180047L, 1495L, 7539350L, 93908106890236896L, 2251532937639L, 74603L, 173L, 6024383738229L, 33393484211L, 198729433492057056L, 120637145913L, 743985241121L, 4656928037L, 879L, 3513756751924383L, 65480741697L, 36950753624014224L, 2860717611217707008L, 82172L, 718661468L, 4856L, 497979767904L, 22581578621549L, 3824L, 42731L, 426064835602397312L, 19886807776260L, 40640398621095344L, 71160L, 49L, 9161607800836L, 102365L, 10506393368010L, 2419963980512L, 5247548995L, 21862147850888L, 2046L, 6481931L, 107496L, 390780022001L, 153241L, 21686L, 101074077982999L, 585248947L, 4058L, 22174238004773268L, 10225425685L, 372355092350194112L, 389344L, 35319993454472320L, 628487540L, 7053256680307927L, 110785933304863L, 8246170898092L, 565111369160756L, 7595515126057390L, 305330422L };
		long[] output0 = new long[]{ -92317001924L, -95866037456L, 53693131648L, -104046478168L, -94292749724L, 107627829372L, -98700116220L, 94859291952L, -106953098120L, 113123292844L, -107621049968L, 123264263528L, 64936697528L, 128557107168L, 78712748968L, -133143986176L, 55922490208L, -17581625124L, 4368108548L, -61742484128L, 92702070508L, 36032252852L, 128421153548L, 98180932708L, 7924687128L, -64381175856L, 110586679776L, 97472139844L, -31501991944L, 106766492268L, -53767742356L, -31834255316L, 72149033512L, -1132982600L, -123171279864L, -111025893452L, -102179477644L, -13307080880L, -41816679572L, 85720231736L, -137438953472L, -93082357868L, 125633473256L, -10259308860L, -92144728848L, -39316002632L, 104720337856L, 38800917028L, -67916419976L, -105507534236L, 44899280584L, 12708165732L, 109365146264L, 20666948028L, 31939382644L, 501418580L, -95435352212L, 84361292376L, 16880777076L, 98940804556L, 125890254336L, -67317678264L, -11077893148L, -84844557076L, 29451955836L, 53086756560L, -86325043508L, -71369473392L, 114090663264L, 52299410468L, 99530678500L, -68209262092L, -113324157992L, 47496920176L, -65956431604L, 48345727188L, 39248023120L, 1241361648L, 52886191340L, -90200368412L, -40252657980L, -65653279988L, 27949614720L, -63456092952L, -75572215400L, 62373078552L, -12350215320L, -85957104824L, 95776750992L, 5375049052L, 113255992608L, -57678672856L, 98661131892L, -11908470304L, 88678921792L, 62941583528L, 46844684368L, 73038184764L, 89138034916L, -16381752116L };
		for (int ndx = 0; ndx < 100; ndx++)
		{
			Util.Check("Fixed64.Log2Fastest", Fixed64.Log2Fastest(input0[ndx]), output0[ndx], input0[ndx]);
		}
	}

	// Fixed32.Log2
	public static void Fixed32_Log2()
	{
		int[] input0 = new int[]{ 69, 1185437, 3652808, 122969, 204, 10212, 26845, 213, 1383, 311206318, 57630012, 727091, 21, 6478, 73161, 3806303, 808520, 104, 533254327, 89457959, 279, 1044425955, 3558, 7330, 10777619, 285037, 3633, 512957, 47951382, 63850, 2, 83778944, 1410355, 373, 2, 2780808, 132646, 8, 5, 22439630, 529, 236, 75657536, 305154915, 1791549, 910, 76, 33947, 382806951, 27, 18, 42203, 32002743, 643151746, 133, 71, 666, 996, 12251095, 768721, 5, 56194315, 4779, 23258423, 277869790, 738607472, 553554724, 61933340, 6365, 28249528, 57, 188116, 39, 47, 337991, 2, 27, 12520, 4393375, 23681, 7446, 114918528, 1438803, 3526290, 6960, 56988, 5, 2354588, 5, 30580920, 8347, 266, 753, 7291, 7983101, 10114, 53103627, 6, 2, 2604444 };
		int[] output0 = new int[]{ -648248, 273743, 380146, 59502, -545756, -175770, -84387, -541675, -364801, 800410, 640962, 227526, -760722, -218803, 10406, 384038, 237563, -609456, 851328, 682538, -516154, 914886, -275458, -207121, 482445, 138988, -273486, 194542, 623579, -2465, -983040, 676337, 290168, -488700, -983040, 354357, 66664, -851968, -896407, 551783, -455664, -531980, 666696, 798553, 312788, -404376, -639112, -62194, 819989, -736960, -775296, -41612, 585347, 869045, -586202, -645547, -433890, -395838, 494561, 232790, -896407, 638577, -247563, 555171, 789697, 882129, 854861, 647771, -220467, 573552, -666312, 99697, -702192, -684551, 155099, -983040, -736960, -156504, 397600, -96244, -205636, 706218, 292057, 376813, -212018, -13214, -896407, 338627, -896407, 581050, -194836, -520666, -422281, -207625, 454067, -176681, 633228, -879168, -983040, 348162 };
		for (int ndx = 0; ndx < 100; ndx++)
		{
			Util.Check("Fixed32.Log2", Fixed32.Log2(input0[ndx]), output0[ndx], input0[ndx]);
		}
	}

	// Fixed32.Log2Fast
	public static void Fixed32_Log2Fast()
	{
		int[] input0 = new int[]{ 1765, 1327, 10, 27, 508834282, 104721, 2112, 1346692, 3805, 112, 5, 57136603, 243574, 1034, 206, 52, 78, 1455376, 6683, 9751, 282140882, 470, 22105397, 223493, 6768, 231493663, 499, 5882565, 6392, 66, 47, 8, 11401, 3, 26, 11, 21547867, 106177, 7441176, 71366246, 53, 4174, 1237, 53403695, 11813567, 156868, 1173453, 781849840, 70, 303960, 258, 72, 1045254, 241836, 9911717, 7, 64471, 51244, 4299391, 4, 419, 385667, 421, 113, 4, 654961590, 10022, 144393, 77, 36, 2617, 789928, 210006965, 100551, 361, 135172, 408007613, 444454062, 20313465, 46329354, 394, 685, 166565, 22581821, 277092488, 703391009, 8718, 50621655, 365, 7, 186873, 840, 26517086, 3385355, 340322, 150183, 19, 21, 22660123, 19367122 };
		int[] output0 = new int[]{ -341741, -368709, -830871, -736960, 846896, 44314, -324771, 285801, -269112, -602450, -896407, 640149, 124125, -392298, -544834, -674992, -636656, 293139, -215858, -180137, 791140, -466845, 550364, 115990, -214663, 772433, -461184, 425198, -220067, -652451, -684551, -851968, -165356, -944704, -740528, -821859, 547949, 45620, 447420, 661175, -673192, -260361, -375349, 633761, 491122, 82522, 272782, 887509, -646888, 145065, -523553, -644224, 261843, 123448, 474526, -864594, -1550, -23260, 395555, -917504, -477705, 167575, -477255, -601609, -917504, 870766, -177545, 74687, -637876, -709760, -304501, 235363, 763223, 40472, -491792, 68448, 826017, 834106, 542371, 620325, -483522, -431230, 88193, 552380, 789433, 877510, -190725, 628703, -490750, -864594, 99070, -411944, 567569, 372957, 155748, 78404, -770184, -760722, 552707, 537860 };
		for (int ndx = 0; ndx < 100; ndx++)
		{
			Util.Check("Fixed32.Log2Fast", Fixed32.Log2Fast(input0[ndx]), output0[ndx], input0[ndx]);
		}
	}

	// Fixed32.Log2Fastest
	public static void Fixed32_Log2Fastest()
	{
		int[] input0 = new int[]{ 31, 16, 20271313, 3, 232, 352023, 373, 20, 1337, 146, 19, 155753, 2708733, 99643873, 11963659, 656627391, 4, 20033, 441, 7, 150239, 212593, 790, 21, 211458, 6, 31986143, 124, 317245383, 2585009, 13642, 37552947, 39, 2, 2960109, 48, 36327, 86785, 194455, 1574, 3770351, 838, 75683, 4, 388129907, 2, 333363, 285742654, 303836652, 556508, 64862, 1062073, 52868384, 6298689, 257, 158098, 22086870, 1877402, 19491, 74, 11817075, 6, 70, 555655, 11542295, 565, 7940, 2582541, 67, 492843, 36150, 57294, 110622061, 301006032, 2049, 358, 5, 317, 59, 176244, 20049, 120195074, 438, 1140, 79, 13792555, 762689652, 6687, 8736515, 37, 2360, 20776532, 8, 5211, 143044, 1253707, 23, 146249057, 463, 1373667 };
		int[] output0 = new int[]{ -723898, -786432, 542177, -944708, -533594, 158944, -488703, -765333, -367999, -577382, -770182, 81850, 351875, 692730, 492313, 871008, -917504, -112059, -472866, -864593, 78442, 111261, -417749, -760722, 110754, -879172, 585299, -592826, 802230, 347456, -148390, 600470, -702190, -983040, 360263, -682564, -55786, 26552, 102827, -352573, 383142, -412170, 13612, -917504, 821291, -983040, 153796, 792339, 798146, 202247, -978, 263353, 632806, 431657, -523920, 83262, 550285, 317215, -114652, -641632, 491148, -879172, -646887, 202102, 488924, -449438, -199562, 347366, -651029, 190761, -56248, -12707, 702614, 797261, -327634, -492583, -896405, -504079, -663050, 93533, -111984, 710464, -473512, -383069, -635450, 505765, 885160, -215803, 462594, -707168, -314272, 544504, -851968, -239380, 73801, 279039, -752123, 729013, -468262, 287676 };
		for (int ndx = 0; ndx < 100; ndx++)
		{
			Util.Check("Fixed32.Log2Fastest", Fixed32.Log2Fastest(input0[ndx]), output0[ndx], input0[ndx]);
		}
	}

	// Fixed64.Pow
	public static void Fixed64_Pow()
	{
		long[] input0 = new long[]{ 16362988L, 1051634708L, 154247561L, 355195L, 28120L, 4677L, 176283931L, 1299544605L, 1071601L, 3425786329L, 4908803L, 9152226L, 5295658L, 945622496L, 91908882L, 872156556L, 225284958L, 633313618L, 1881251L, 3800106869L, 262836L, 4833L, 1858577215L, 6427L, 168779L, 54500344L, 1780377L, 4043838L, 825872L, 52205639L, 27659L, 34380L, 3307570639L, 4317665L, 2823532046L, 9862285L, 26550L, 2110256800L, 51407L, 49650L, 5246L, 11220L, 4550L, 197248284L, 28147824L, 260441454L, 231439L, 54448L, 44702080L, 45894608L, 789866420L, 159958L, 2491195L, 204975L, 720900L, 14540206L, 2430212015L, 103067249L, 9038L, 2216068L, 11283380L, 187231L, 6758305L, 88160876L, 531961424L, 613229L, 11884406L, 5267L, 1438417425L, 40025L, 141084712L, 458518380L, 52911252L, 162735L, 3110998217L, 100604L, 4561L, 40469L, 980782L, 2783357L, 1011395L, 140439L, 388531210L, 77287884L, 283872701L, 742665523L, 59274032L, 69305491L, 25723L, 834030L, 17429835L, 1106403L, 1002738646L, 99633935L, 18899231L, 120347471L, 7131016L, 221690L, 1592549560L, 197143L };
		long[] input1 = new long[]{ 39268869L, 64652747L, 58103304L, 657467796L, 38403843376L, 6342709L, 1342412432L, 30364018L, 86446328L, 17621485L, 1394269568L, 11438892246L, 120804494L, 1413074847L, 7536323L, 99655453L, 359917810L, 14975411952L, 37148829469L, 67625513430L, 3242595063L, 24268454400L, 27561417850L, 897744168L, 1102267000L, 138774793L, 49021428951L, 54570786528L, 2842802407L, 44204586L, 4050002647L, 5308501394L, 43665887L, 13565826L, 48678879L, 14310193L, 77343097695L, 100237469L, 10785263931L, 8297037019L, 78111237L, 563900902L, 221559861L, 75536743022L, 11558149731L, 12449659301L, 8167716L, 92025055L, 3296706380L, 75719520L, 79038458L, 5011038062L, 167801515L, 53580557099L, 1767317391L, 138994027L, 201500109L, 5559530240L, 51236273691L, 1188567803L, 11114213L, 2113078392L, 917492310L, 8399222L, 373746451L, 22561328535L, 1125126981L, 38246939L, 124676458L, 45238048828L, 110680054L, 15421730L, 5963591L, 19230118L, 3718406944L, 24697317L, 470447206L, 31342465550L, 6671970743L, 7605349836L, 72974278L, 2287914233L, 71095122L, 161249611L, 48041740424L, 69425251623L, 135873861L, 70004333L, 659358439L, 30083910503L, 6100424694L, 59750745L, 168051508L, 38973254L, 3206299920L, 3175321960L, 52794686271L, 113295292L, 868042598L, 44006163042L };
		long[] output0 = new long[]{ 4081709590L, 4204951538L, 4105963688L, 1018632146L, 0L, 4208757296L, 1583162441L, 4258822346L, 3634481300L, 4290984710L, 476329387L, 329L, 3557437588L, 2610492856L, 4266092274L, 4138996454L, 3354879310L, 5423681L, 0L, 624994671L, 2831656L, 0L, 19885497L, 260264431L, 317899055L, 3729752506L, 0L, 0L, 14905268L, 4104382960L, 54690L, 2155L, 4283575642L, 4202343070L, 4274597228L, 4208886318L, 0L, 4224322820L, 0L, 1L, 3352891944L, 794242469L, 2112207815L, 0L, 5713L, 1272225L, 4215435642L, 3373152338L, 129164299L, 3964678728L, 4163192870L, 29214L, 3210036244L, 0L, 120106533L, 3572834606L, 4181739570L, 34371072L, 0L, 528722330L, 4229433474L, 30732627L, 1081822552L, 4262451470L, 3581179434L, 0L, 918037513L, 3804683250L, 4160726672L, 0L, 3933064132L, 4260604176L, 4268827856L, 4103584152L, 3248639822L, 4039559958L, 951944358L, 0L, 9468L, 9707L, 3726637034L, 17521222L, 4127491190L, 3693613910L, 0L, 0L, 3750719646L, 4015583604L, 677932480L, 0L, 1721545L, 3828509560L, 4057328828L, 4150760692L, 74776000L, 305605119L, 0L, 3310313232L, 3514622150L, 0L };
		for (int ndx = 0; ndx < 100; ndx++)
		{
			Util.Check("Fixed64.Pow", Fixed64.Pow(input0[ndx], input1[ndx]), output0[ndx], input0[ndx], input1[ndx]);
		}
	}

	// Fixed64.PowFast
	public static void Fixed64_PowFast()
	{
		long[] input0 = new long[]{ 122826L, 498434419L, 2811820529L, 111233920L, 2529156113L, 41976L, 51590350L, 88187L, 177539L, 1660521L, 783933097L, 3760849L, 3330062060L, 61471L, 210627L, 2543948L, 487441L, 48566L, 24624L, 2935990L, 5372934L, 206754L, 80907632L, 2038298L, 70278L, 10149L, 153425709L, 313084698L, 3413550L, 5353L, 97195L, 31296L, 639475L, 309087192L, 5103357L, 1925185L, 41726464L, 8318363L, 1146697L, 195366026L, 265675L, 25898L, 5100L, 12456L, 5444L, 122540L, 218023L, 49978L, 1899153642L, 73849L, 380237L, 192607603L, 71982L, 10339L, 1350483L, 2551520828L, 26459L, 5924880L, 6797885L, 1070271305L, 1175089L, 707728195L, 110959028L, 142442L, 73377L, 107582783L, 25259L, 46273L, 51733908L, 469895635L, 261852406L, 251677387L, 181907955L, 541340L, 47463L, 891031L, 174100L, 27896286L, 1607804L, 2463228691L, 199938927L, 13184787L, 708046211L, 198525L, 60467241L, 2167357L, 1867363563L, 265643L, 982995L, 8590466L, 312502L, 30247L, 5255L, 4601663L, 714065L, 1612294L, 1002479L, 153792270L, 729126028L, 217376L };
		long[] input1 = new long[]{ 13323181L, 13047161L, 592555646L, 11688650L, 245145764L, 816469002L, 4474587L, 20223889984L, 28809092169L, 5786529L, 4162050099L, 584804247L, 10939824L, 1257496417L, 14297028L, 15181268239L, 85871687556L, 400279559L, 1122597239L, 7585288070L, 11103980893L, 15902642983L, 9606992613L, 15556815L, 813693473L, 2853736148L, 9725707032L, 59938437L, 70433266956L, 6862029868L, 78940596860L, 663877770L, 8280303892L, 18026352L, 18589062467L, 3137330172L, 9837552L, 8669096867L, 23494048500L, 21272917L, 357075176L, 10041125L, 246331923L, 156656099L, 20604710280L, 13633782821L, 6832760L, 339065730L, 191717525L, 949687041L, 301015474L, 45934856141L, 30210599L, 13642670L, 553533594L, 71966186L, 116659048L, 163594353L, 1233938187L, 7379049670L, 7211213852L, 6412649052L, 24664750006L, 18031706L, 6296621L, 26926446L, 6066722064L, 52130552728L, 5810842797L, 391449198L, 6627975022L, 42543773L, 1463509037L, 226650544L, 91237269L, 4749590597L, 277273568L, 263390441L, 64855085L, 5126657661L, 1793814397L, 123196153L, 26855513317L, 318535017L, 97909231L, 7381045L, 94381884L, 2606794184L, 2797394658L, 1109401782L, 115505232L, 5165455200L, 30174515L, 13674683L, 253401129L, 4783128447L, 34969991L, 58673734L, 106856161L, 3286603669L };
		long[] output0 = new long[]{ 4157826934L, 4266962380L, 4051161624L, 4252478600L, 4167101930L, 479261347L, 4275229232L, 0L, 0L, 4249741410L, 826299850L, 1646737898L, 4292184886L, 163920109L, 4155428960L, 0L, 0L, 1485755434L, 183204626L, 11039L, 134L, 0L, 595034L, 4177555358L, 532368907L, 784292L, 2270755L, 4140850790L, 0L, 1L, 0L, 690011985L, 179L, 4247795982L, 0L, 15381648L, 4249625748L, 14358L, 0L, 4229734688L, 1918956271L, 4175975608L, 1963895997L, 2697625540L, 0L, 0L, 4227938402L, 1751581514L, 4141346320L, 379686911L, 2233099230L, 0L, 3975290688L, 4122061732L, 1519016514L, 4257658038L, 3100527664L, 3342034800L, 673529736L, 394605097L, 4476L, 290905975L, 3L, 4112970070L, 4226407654L, 4196839228L, 175L, 0L, 10874645L, 3510554354L, 57296234L, 4175959368L, 1462426038L, 2674118202L, 3370280942L, 363110L, 2235683130L, 3153660206L, 3812554204L, 2211807086L, 1192935358L, 3638146356L, 54659L, 2048549725L, 3897220616L, 4239302828L, 4217078210L, 11982507L, 18276413L, 862609471L, 3324081404L, 2731L, 3903221110L, 4202469026L, 2570328788L, 657817L, 4012270116L, 4103997082L, 4109606150L, 2216956L };
		for (int ndx = 0; ndx < 100; ndx++)
		{
			Util.Check("Fixed64.PowFast", Fixed64.PowFast(input0[ndx], input1[ndx]), output0[ndx], input0[ndx], input1[ndx]);
		}
	}

	// Fixed64.PowFastest
	public static void Fixed64_PowFastest()
	{
		long[] input0 = new long[]{ 13290L, 16474L, 81578214L, 1586669037L, 285657730L, 65822L, 525949L, 258253733L, 303174078L, 214139431L, 654316968L, 1379014593L, 15613L, 588960549L, 30889L, 1254655L, 582460298L, 1853661L, 405435215L, 3441038014L, 746589648L, 13954L, 254156L, 43269L, 23573L, 6081L, 6935L, 2911465L, 3675944239L, 17146545L, 4059488L, 37484L, 15119L, 17977704L, 27206387L, 5071986L, 24421421L, 2296210953L, 26243784L, 21967L, 74649140L, 5319655L, 464256961L, 725281929L, 65326127L, 1320450L, 23402476L, 475297L, 3004296926L, 4342L, 563530500L, 185514988L, 1745882L, 474730L, 260473551L, 4090500478L, 278406728L, 8097463L, 289085082L, 201745837L, 40761L, 775875537L, 301743244L, 75940L, 226561L, 74972149L, 391743224L, 3730235L, 92976L, 26157221L, 220654809L, 1089467816L, 303363792L, 79268240L, 197981L, 602779L, 129097L, 1505060L, 2844840L, 76675784L, 1116090L, 62673611L, 4162254L, 3635579210L, 130682994L, 93983614L, 92213184L, 136785464L, 296435667L, 28566319L, 78245296L, 12953L, 34115L, 558703952L, 2314699579L, 413230732L, 75719157L, 26256872L, 13749328L, 3742370747L };
		long[] input1 = new long[]{ 1451326955L, 16019787L, 13832616L, 128752371L, 36356210L, 53550213670L, 60378751169L, 5573503980L, 8039541L, 332860875L, 7233478453L, 181185148L, 9091029L, 11120444L, 178213027L, 446213455L, 182186028L, 14425585752L, 411608820L, 1141307051L, 74054434253L, 9131190L, 3731279784L, 1415368379L, 39162501033L, 4635969365L, 7274315622L, 55446154311L, 7647830423L, 358423272L, 2687275581L, 1902368061L, 17591523523L, 499007911L, 14188445L, 61978457L, 1288308046L, 19811077L, 9004961810L, 11270951231L, 7892418491L, 84342303994L, 3878545315L, 163085963L, 28054322990L, 115314968L, 4476871L, 7327268L, 479789303L, 530836637L, 378074086L, 28293592985L, 23205340L, 5263397L, 4513592L, 682649396L, 368798203L, 839507719L, 282406491L, 673640056L, 31617602L, 4677055L, 62600805703L, 1926748065L, 10639969973L, 16330989L, 884726424L, 1564932125L, 67325125879L, 12349760L, 29751769430L, 39497246L, 6880364L, 3136995957L, 12421734772L, 75421551979L, 202231311L, 98265505L, 4333707076L, 1458628172L, 4447600413L, 4263928248L, 496341660L, 61878135L, 81434633385L, 8158568439L, 352100356L, 14354801040L, 474837413L, 1785364828L, 14435832073L, 6591054L, 6025918973L, 57413474L, 1531057506L, 7247653273L, 5786625L, 8645772L, 1316636949L, 7378144330L };
		long[] output0 = new long[]{ 59059074L, 4100087852L, 4240611302L, 4168892758L, 4197751518L, 0L, 0L, 111847109L, 4273759202L, 3404312186L, 180578562L, 4094317944L, 4182826172L, 4272982348L, 2627502886L, 1844135565L, 3946374594L, 0L, 3425488892L, 4049634644L, 0L, 4181339984L, 912048L, 96888662L, 0L, 2087L, 0L, 0L, 3255288758L, 2708647752L, 55031411L, 24665899L, 0L, 2273478408L, 4223901520L, 3897223230L, 911006641L, 4282610100L, 97973L, 0L, 2505666L, 0L, 576087232L, 4014860894L, 0L, 3456714944L, 4271750956L, 4228885228L, 4127156914L, 779715358L, 3592011616L, 4L, 4117862424L, 4247392312L, 4282366424L, 4261882364L, 3395625066L, 1260121595L, 3596865226L, 2658451750L, 3944840830L, 4286990796L, 0L, 31696215L, 0L, 4229509360L, 2622561142L, 329270016L, 0L, 4232568572L, 5L, 4241248556L, 4276815106L, 232599420L, 0L, 0L, 2630427450L, 3580326118L, 2662862L, 1094556981L, 832312L, 64623375L, 1926360315L, 4284691804L, 0L, 3018511L, 3134483308L, 42644L, 3195726924L, 534528071L, 6113L, 4212173236L, 300L, 4179681310L, 3445569538L, 82633419L, 4271719112L, 4251223386L, 738179946L, 3390132688L };
		for (int ndx = 0; ndx < 100; ndx++)
		{
			Util.Check("Fixed64.PowFastest", Fixed64.PowFastest(input0[ndx], input1[ndx]), output0[ndx], input0[ndx], input1[ndx]);
		}
	}

	// Fixed32.Pow
	public static void Fixed32_Pow()
	{
		int[] input0 = new int[]{ 3819, 18, 0, 10, 238, 1, 7213, 69, 1, 0, 0, 0, 6638, 6633, 4709, 70, 97, 1019, 353, 0, 903, 1343, 0, 10, 3, 8215, 58, 3397, 0, 0, 36063, 5, 1754, 31196, 3816, 3, 335, 0, 744, 2603, 22313, 28760, 274, 36, 54, 860, 1, 15900, 33, 0, 1, 6, 32, 133, 0, 0, 3, 1226, 0, 1901, 1701, 0, 25, 0, 0, 4402, 15, 13945, 0, 82, 13672, 21, 0, 8893, 0, 2059, 0, 626, 12574, 262, 457, 242, 6, 52447, 6528, 370, 10818, 0, 13206, 1342, 0, 17940, 0, 25667, 0, 10507, 73, 29, 15, 804 };
		int[] input1 = new int[]{ 1167, 1574, 319566, 691172, 484, 185239, 1393, 23340, 5456, 1449, 886862, 31887, 247071, 7788, 181, 264, 82810, 5551, 1692, 4919, 688015, 518, 68, 1580, 10521, 1078756, 3169, 160, 230857, 687, 714, 51361, 929, 470, 1406, 1554, 97252, 3375, 151133, 88, 1508, 1011, 99968, 18790, 119337, 2808, 137, 14447, 241249, 440439, 279, 118, 202, 878196, 106538, 147, 1513, 13247, 4305, 588, 3830, 567, 132515, 520, 132, 1131, 2247, 34424, 363, 153313, 3565, 1607, 48147, 1249, 213, 44562, 6804, 4753, 17364, 245, 514701, 287540, 873, 687017, 161, 394, 16634, 1387, 5786, 625, 67, 481, 1027495, 16826, 30374, 174, 10007, 12590, 9263, 6911 };
		int[] output0 = new int[]{ 62300, 53820, 0, 0, 62871, 0, 62532, 5701, 26031, 0, 0, 0, 11, 49918, 65060, 63753, 17, 46058, 57267, 0, 0, 63552, 0, 53023, 13178, 0, 46649, 65063, 0, 0, 65109, 38, 62256, 65187, 61657, 51710, 26, 0, 2, 65252, 63930, 64708, 15, 7616, 0, 54429, 64033, 47960, 0, 0, 62512, 64446, 64012, 0, 0, 0, 52034, 29321, 0, 63486, 52942, 0, 0, 0, 0, 62550, 49164, 29071, 0, 0, 60179, 53801, 0, 63087, 0, 6231, 0, 46771, 42315, 64196, 0, 0, 57900, 6339, 65164, 63526, 41486, 0, 56892, 63149, 0, 64914, 0, 51517, 0, 65217, 23203, 14863, 20041, 41203 };
		for (int ndx = 0; ndx < 100; ndx++)
		{
			Util.Check("Fixed32.Pow", Fixed32.Pow(input0[ndx], input1[ndx]), output0[ndx], input0[ndx], input1[ndx]);
		}
	}

	// Fixed32.PowFast
	public static void Fixed32_PowFast()
	{
		int[] input0 = new int[]{ 0, 29, 11, 0, 54, 5700, 15, 5168, 7206, 0, 312, 13283, 44928, 3, 5, 158, 35946, 6598, 0, 14367, 1541, 0, 0, 30697, 3164, 1, 7, 0, 764, 0, 0, 27774, 25834, 0, 0, 39, 46, 1, 32, 2, 3485, 1879, 42, 10, 319, 0, 1, 858, 1, 0, 0, 724, 19, 298, 1849, 45654, 2, 23, 2, 3, 46, 3, 0, 5413, 27522, 737, 33696, 12427, 0, 8558, 0, 1824, 13, 8319, 0, 53776, 199, 5131, 6, 618, 45517, 610, 9736, 353, 12247, 47, 92, 5, 8, 0, 1, 0, 33121, 0, 3710, 65, 278, 510, 23, 28425 };
		int[] input1 = new int[]{ 340, 2076, 10015, 3165, 943590, 3488, 1141, 17134, 9960, 117062, 3219, 5457, 170, 25626, 1418, 207754, 4431, 10899, 730006, 6256, 289, 33263, 12277, 98, 41520, 98, 164094, 585, 116, 25547, 2854, 668756, 3069, 3144, 8915, 31849, 300, 6918, 43066, 7400, 423, 910015, 210930, 23786, 103653, 115468, 810780, 2055, 308169, 1055692, 137, 157, 72467, 944454, 163097, 13413, 221716, 6650, 99917, 627979, 27861, 127, 9605, 511042, 2687, 6309, 116, 71027, 188, 58388, 45346, 839550, 331733, 6465, 968, 416, 206701, 676559, 1248, 471315, 159, 5232, 2489, 145, 12197, 1191, 604, 4259, 25269, 871179, 188284, 59175, 90754, 89888, 348128, 217, 6208, 540992, 579, 1076 };
		int[] output0 = new int[]{ 0, 51312, 17361, 0, 0, 57547, 56635, 33733, 46855, 0, 50396, 57378, 65470, 1317, 53380, 0, 62927, 44735, 0, 56696, 64460, 0, 0, 65460, 9606, 64457, 0, 0, 65021, 0, 0, 10, 62740, 0, 0, 1774, 63392, 20326, 437, 20258, 64305, 0, 0, 2699, 14, 0, 0, 57204, 0, 0, 0, 64831, 8, 0, 9, 60861, 0, 29236, 0, 0, 2990, 64279, 0, 0, 63244, 42544, 65457, 10810, 0, 10685, 0, 0, 0, 53461, 0, 65452, 0, 0, 54900, 0, 65477, 45114, 60957, 64782, 47962, 57455, 61685, 35390, 2030, 0, 0, 0, 25471, 0, 0, 64051, 39061, 0, 61087, 64643 };
		for (int ndx = 0; ndx < 100; ndx++)
		{
			Util.Check("Fixed32.PowFast", Fixed32.PowFast(input0[ndx], input1[ndx]), output0[ndx], input0[ndx], input1[ndx]);
		}
	}

	// Fixed32.PowFastest
	public static void Fixed32_PowFastest()
	{
		int[] input0 = new int[]{ 990, 1, 1, 0, 5, 0, 1, 1, 968, 271, 1443, 13822, 0, 7528, 6807, 0, 1040, 22, 12, 0, 1, 432, 0, 0, 12797, 45207, 1, 0, 252, 0, 1513, 17122, 1244, 0, 1, 7568, 1, 1, 2461, 18, 0, 49966, 1498, 64208, 1, 20739, 84, 13757, 15012, 1000, 21, 0, 104, 0, 0, 0, 0, 0, 3, 7, 15361, 0, 496, 120, 11734, 5525, 0, 0, 473, 58949, 42048, 66, 604, 42739, 0, 2, 18926, 0, 19684, 40440, 35, 6, 1, 16514, 1577, 917, 10, 184, 42738, 0, 1071, 0, 19727, 21, 78, 43735, 6, 0, 0, 19 };
		int[] input1 = new int[]{ 102260, 2415, 732, 491686, 89870, 593042, 2697, 17542, 218, 162906, 289, 93, 391, 1576, 440283, 16357, 316796, 106251, 207124, 407, 5739, 24756, 409, 9546, 1159, 328663, 22103, 727, 5991, 102, 608792, 88197, 1105584, 9176, 594, 160, 165, 1854, 355, 200296, 1493, 189910, 5842, 388, 1191738, 48234, 636544, 23041, 12218, 845632, 202, 22054, 2530, 713205, 902552, 270, 386, 100622, 27795, 358406, 1758, 242, 191, 139, 350733, 4295, 110, 55921, 173, 179447, 6458, 11196, 19568, 67, 357500, 39614, 277, 69, 10500, 31502, 676756, 1257334, 78082, 9286, 664955, 1809, 2284, 101, 13326, 143, 544855, 2162, 87442, 1301, 7465, 402, 64861, 2750, 1450, 18184 };
		int[] output0 = new int[]{ 94, 43545, 57904, 0, 0, 0, 41518, 3367, 64625, 0, 64444, 65390, 0, 62216, 0, 0, 0, 0, 0, 0, 24812, 9831, 0, 0, 63672, 10176, 1556, 0, 39418, 0, 0, 10763, 0, 0, 59274, 65191, 63734, 47882, 64382, 0, 0, 29860, 46789, 65527, 0, 28101, 0, 37856, 49788, 0, 63933, 0, 51096, 0, 0, 0, 0, 0, 946, 0, 63038, 0, 64611, 64666, 6, 55731, 0, 0, 64688, 49034, 62735, 20159, 16171, 65506, 0, 122, 65192, 0, 54049, 51962, 0, 0, 0, 53909, 0, 58255, 48242, 64946, 60084, 0, 0, 0, 13206, 55864, 30437, 65373, 6, 0, 0, 6837 };
		for (int ndx = 0; ndx < 100; ndx++)
		{
			Util.Check("Fixed32.PowFastest", Fixed32.PowFastest(input0[ndx], input1[ndx]), output0[ndx], input0[ndx], input1[ndx]);
		}
	}

	// Fixed64.Sin
	public static void Fixed64_Sin()
	{
		long[] input0 = new long[]{ 97659284245L, -218545111501L, -5634431002L, 196444052291L, -6682185803L, 81633412238L, -419121821595L, -115519613053L, -369593712372L, -158355770273L, 427290289198L, -280117475130L, -233473053908L, 418638414394L, 374363239974L, -140566337865L, -71228447833L, 93010027443L, -305294259542L, 27365303812L, -374739579974L, -422106824796L, -305101384342L, -413072966792L, 333163849155L, -334582697555L, 251219201916L, -194394763890L, 21671860210L, 159285805074L, 386730995980L, 230593161507L, 165481064677L, 381863946377L, -421036134796L, 161210521075L, 2027687000L, 417903020794L, -422643018796L, -140493752265L, -152085267870L, 423548281197L, 407615529989L, -239638965911L, -359087551167L, 203979163494L, -322267533950L, 205528581895L, -115147201853L, -307694766343L, 228751811506L, -353747076364L, -229560341906L, 241258627112L, 3699629801L, 90269379442L, -342940456759L, -22058193810L, 292776932736L, -101596217847L, 259910939921L, 204769671895L, 292305256336L, -99382787846L, -115590036653L, -232799601908L, -16101810207L, -185840270686L, 410177819591L, -216344010700L, 286902704733L, -59634739027L, 86156316640L, 264696222323L, -250046157916L, -368791131571L, -400225625186L, 364034311169L, 375511313974L, -300312043939L, 417181565994L, -383806109578L, 350249167563L, -100130103046L, 360030723167L, 310981342744L, 30656773814L, 353719167164L, -51332413023L, -81808784638L, 74654248234L, -405410848788L, -304370641541L, 108449928650L, 29092037413L, 72641789833L, -298253704738L, 77501588236L, 305447800342L, 303208780341L };
		long[] output0 = new long[]{ -2917940332L, -2490338768L, -4151794504L, 4221598704L, -4294485480L, 672408504L, 832352776L, -4215249780L, 4047585724L, 3166595108L, -3714158024L, -2938640016L, 3500092540L, -353844304L, -3085088032L, -4152185964L, 3299881284L, 1414340348L, -3962545104L, 378735852L, 2811755908L, 3337582892L, -4032927488L, -4023463020L, 3540580236L, -2560493796L, 4001100628L, -4113117764L, -4058347172L, -2469223708L, 3753772428L, -1195517964L, 3169248996L, 3481143780L, 2567490588L, -702757120L, 1953198276L, 380647712L, 3648205384L, -4133033748L, 3234060188L, -4041670972L, 2625188716L, 2938199584L, -4028085244L, -1547960220L, 1530944040L, -2862461748L, -4270742632L, -2481035692L, 627574416L, -2706487524L, 178649516L, -1578188020L, 3258793044L, 3551745848L, 4146650332L, 3915649144L, -3487578552L, 4276499528L, -3154774324L, -2255039224L, -3741303024L, 3917144372L, -4201178416L, 3068444268L, 2451293468L, 2809322212L, 4081491564L, -454554692L, -3158632272L, -4158914740L, 4018856564L, -4006895712L, -4273960808L, 3710233320L, 3752998792L, 277513168L, -2186251792L, -3101321632L, 1090531272L, -4230435500L, -568142440L, 4162942844L, 3606684664L, -639093492L, 3239873768L, 2684759848L, 2476656140L, -845009788L, -4272188380L, -617569784L, -4224822684L, 504459948L, 2022582708L, -4011225752L, -1381850916L, -3095382052L, 3900797040L, 4277761828L };
		for (int ndx = 0; ndx < 100; ndx++)
		{
			Util.Check("Fixed64.Sin", Fixed64.Sin(input0[ndx]), output0[ndx], input0[ndx]);
		}
	}

	// Fixed64.SinFast
	public static void Fixed64_SinFast()
	{
		long[] input0 = new long[]{ -209415755897L, 293069466336L, 224847491904L, -328299920752L, -165100741476L, -141110179065L, -10406663404L, -64759834630L, 61808055428L, -57005968226L, 60998275028L, -277478038329L, 31927221814L, 163592247076L, -89281054241L, 214220319899L, 284017233932L, -37061370217L, -29916781413L, 2925350201L, 166040353877L, 59675752227L, 294988871937L, 62489874629L, 138498470664L, 262816823922L, -184760827086L, 407203117589L, -193892544690L, 106808781849L, 358959302767L, -48230483822L, -370910218772L, -357194195966L, 338600441557L, -305384629942L, -179156871883L, 249052358715L, -364526091169L, 71644172633L, -108108723450L, -334080121155L, -137585617864L, -423823174397L, 286689669933L, -77364443036L, -7841341003L, -38466159017L, -231765746707L, 244368447113L, 218121285501L, 168304395078L, -322078359949L, -126974279459L, -292328303136L, 160405221474L, 427577323999L, -267139112324L, -37301661817L, 1579164200L, -385846081579L, 11886948605L, -300364019539L, 384496003179L, 13531458606L, -320267970749L, -336064549156L, -40375311818L, 254488535118L, -213393153899L, -36119537816L, -394531854383L, -102032008647L, 327935775552L, -318462655948L, 70623745432L, -232235359508L, 289315316734L, 205296934295L, -213633815899L, -158838564673L, 283202061531L, 209472134697L, -8764262204L, 318184225948L, -238841821911L, -155648853472L, 185560790286L, 364630836769L, -251301509517L, -303465224341L, -341514489159L, -143142709066L, 63391474229L, 27993524613L, 309501057544L, 395780627984L, -92584891443L, -7857903403L, 177460911082L };
		long[] output0 = new long[]{ 4286256428L, -3308890924L, 3737647220L, -3704120732L, -2900484852L, -4257637256L, -2827523112L, -2529976316L, 4157548044L, -2787751576L, 4285874536L, -4207000688L, 3921075860L, 1633598976L, -4008931992L, -1626649544L, -660807208L, -3068293352L, -2708516404L, 2704357712L, 3518819348L, 4168965368L, -1800551452L, 3934894572L, 3171598712L, -4284679452L, 3528994672L, 2287193012L, -3940764528L, -1122337920L, 4070782608L, 4177954564L, 4292410448L, -4278933108L, -1255877596L, -3926804816L, 3289696220L, 4257357540L, 213984752L, -3550112076L, -164381732L, -2945566872L, -2489309112L, 4126336384L, -3010455424L, 3188864496L, -4156180508L, -1940067780L, 2263546280L, 1463836688L, 2133478592L, 4280013188L, 1706151812L, 4125762768L, 3729926368L, -1480241356L, -3561831896L, 2543120100L, -2895438112L, 1543824916L, -4101353748L, 1568919836L, -3137052096L, 4294609548L, -38420396L, 3169467212L, -1243338644L, -103791168L, 1819798096L, 2357400536L, -3648584724L, 2936778324L, 4214206216L, 3506718764L, 4076339484L, -2881454884L, 2648335616L, -4223432248L, -2685685204L, 2152635116L, 2821129516L, 151698532L, -4282297512L, -3829655432L, -4155418464L, 3465829876L, 4268298628L, -3014631548L, -318526276L, -3970440792L, -4293059856L, 3555485296L, -4047250628L, 3489803688L, 998236604L, 833487544L, -3711951588L, -1808187888L, -4151973128L, -1974308520L };
		for (int ndx = 0; ndx < 100; ndx++)
		{
			Util.Check("Fixed64.SinFast", Fixed64.SinFast(input0[ndx]), output0[ndx], input0[ndx]);
		}
	}

	// Fixed64.SinFastest
	public static void Fixed64_SinFastest()
	{
		long[] input0 = new long[]{ -170796623479L, -396962758784L, 136542035463L, 411124136791L, -149008744669L, 183156410285L, -159160325874L, -220517405902L, -238008353110L, 66544681030L, -36856148617L, -291234722335L, -42939317019L, -253164575517L, -269079000725L, -239551413511L, 231911543507L, 137896972264L, -363184952369L, -177123449082L, 264877612323L, -92128609842L, 24490581011L, 76293315035L, -339424659158L, -124101778257L, 178107584282L, 264073246722L, -129554478660L, -198466983892L, 104339847048L, 289846261534L, -132323509461L, -401660706387L, 386659537180L, -191372535489L, -282836703531L, 227844727506L, -289252247134L, -294468913937L, 349815233562L, -364628177169L, -5927586202L, -131410573861L, 215051368700L, 417266227594L, 130921557460L, -319474863148L, -97026254645L, -161951791475L, -351907215563L, -171613073879L, -158896668673L, -260231183921L, 342080028359L, 350828715963L, 8043389803L, -369248009171L, 321052066349L, 404589763188L, -424447903597L, 6263157002L, 338533802357L, 389955360381L, 391701563582L, 102794319447L, 270585516726L, -70775340232L, -210327383097L, 351790264363L, -386211439579L, -425429913598L, -2347510201L, 360780691168L, -97441953045L, 200009059893L, 343295705959L, -273595574727L, 290738675935L, -327194157152L, 174473393881L, 68085717831L, -68397228231L, -397099416784L, -276056497928L, -153543808671L, 19246200608L, -301589055140L, -314244005146L, -393665908383L, 230080804307L, -343085423959L, 336289390756L, -264345280723L, -299517739939L, -85944653040L, -273665249927L, 33613783015L, -93615407843L, -317239680347L };
		long[] output0 = new long[]{ -3776014552L, 4158879224L, 1574218472L, 4274446288L, 583526320L, -4178382292L, 2571220688L, -3783574196L, 3890003300L, 913501040L, -3208850512L, 4145502996L, 2328177456L, -2914843120L, 777459032L, 3001944240L, -2386460156L, 2736715344L, -1114218372L, 1668965648L, -3937993084L, -2211372904L, -2357765248L, -3800509524L, 2016414612L, 2497169496L, -2524485152L, -4187719916L, 4077773440L, -3403710476L, -3196515256L, -4286979692L, 2450087892L, 2861002904L, 3788175076L, -2336412904L, -515844336L, 1504425496L, 4210839744L, 2258578984L, -994665980L, 315874964L, -4216447868L, 3139347472L, -831960768L, 1008470388L, -3452044792L, 3648125292L, 2423829344L, -35338728L, -1076668540L, -3321506464L, 2777512232L, 3363610208L, -3841177584L, 9735848L, 4100251992L, 3918972304L, -2590979984L, -201294208L, 4254788036L, 4267127248L, -1192054692L, 1321038388L, -402879392L, -4001467280L, 721340248L, 2992549112L, 4131962544L, 963055220L, -3978080660L, 4275806040L, -2232651636L, 3147202060L, 2755248428L, 2265883628L, -4224226308L, -3282113164L, -4246906916L, -3029002128L, 928728264L, -618380528L, 924767076L, 4190750820L, -4259006928L, 3990648720L, -4179999056L, -3835864104L, 3388748524L, 2249978764L, -696090648L, 4181439516L, 1026553004L, 4119295944L, -2502434044L, -3939300696L, -3326623276L, 4293061224L, -830608324L, 4291906552L };
		for (int ndx = 0; ndx < 100; ndx++)
		{
			Util.Check("Fixed64.SinFastest", Fixed64.SinFastest(input0[ndx]), output0[ndx], input0[ndx]);
		}
	}

	// Fixed32.Sin
	public static void Fixed32_Sin()
	{
		int[] input0 = new int[]{ -4315429, -3475949, 4888141, -294796, -3131669, -5431732, 3970812, -1376047, 4069633, -4385769, -6438655, -2256130, -3516997, 3337852, -3042302, -961866, -5414372, 4671272, 3608934, 1766184, -5278756, 2177091, -2838562, -3756076, -4696461, 5895549, -5069314, -2555831, 3521754, 6378165, 674096, -1828228, 3807320, 2723413, 5876443, -415397, 2704363, 5804737, 3626013, -5334155, 239894, -4883879, -2117917, 6144386, -6121809, -786715, 4835529, -4760083, 5562313, 2945188, -2450638, -2293472, 3457571, 3358958, -6115536, 61078, 5916213, 2090617, -2151935, -2473618, 6191181, -26956, 1655798, 4245068, 1493734, 1943173, 490148, 313188, 4015009, 3926694, 2887369, -4665510, -5508340, 2389489, -5027310, 6158722, -2258591, -2429349, -4187866, 2643854, -5493580, 6244369, -1564545, -5977034, 2275203, -3586031, 1267799, -6105237, 2285349, -738235, 221988, -5939853, 1403073, -453968, -4971736, -6286748, 13922, 190614, -1902948, -1511383 };
		int[] output0 = new int[]{ -8186, -23596, -47518, 64038, 40263, -61088, -51317, -54946, -43908, 53234, 49524, -8607, 16723, 40496, -42322, -56220, -52744, 54379, -65271, 63558, 59382, 63764, 40659, -45363, -36697, 59745, -60799, -63144, -21276, 4341, -49714, -24174, 65516, -42981, 64965, -3621, -26998, 37471, -61548, 18656, -32501, 50349, -51374, -30953, 48642, 34925, -65476, 24093, -3352, 53600, 19701, 27800, 39595, 54723, 52617, 52612, 48446, 30516, -64793, -2968, 14439, -26203, 8673, 61054, -47078, -64299, 60983, -65392, -65536, -14707, 4940, -57381, -45735, -61949, -63361, -17679, -6162, 38620, -57486, 31344, -55063, 56309, 62389, 6289, -10398, 63343, 31161, 58083, -20251, 63179, -15940, -29752, 36022, -39339, -29356, -65143, 13817, 15135, 45260, 57511 };
		for (int ndx = 0; ndx < 100; ndx++)
		{
			Util.Check("Fixed32.Sin", Fixed32.Sin(input0[ndx]), output0[ndx], input0[ndx]);
		}
	}

	// Fixed32.SinFast
	public static void Fixed32_SinFast()
	{
		int[] input0 = new int[]{ 5276735, -2031259, -2221492, -4917980, -6495780, -4338727, -3338731, -5485518, 1832668, -5720658, -4233929, 1791962, -275115, 1757810, -3533638, 6500412, -5016010, 1079232, -4583735, -1473834, -5878226, 41786, 4581438, -1800355, -2848894, 2273623, 485016, 1499227, 807626, -5294162, -408800, 4104393, 6027199, 3877116, 3920718, 3091279, 1912261, -3200164, -6034853, 60331, 6306300, 199718, -1384306, 1452408, -3057906, 4983626, 888862, 6198862, -3473930, -4918548, 5282862, 5488290, -1779250, 6124485, -2186756, -1318650, -59098, 6132462, 4484513, -2215803, 1729856, 1715641, 260455, 573230, 1241741, -1784723, 2318363, 2401367, 4390692, -71317, -1965449, 4737753, 560485, 1909533, -1226534, 475655, -5127507, -3424569, -5296049, -1278920, -5168838, 839753, -1580442, -827424, -4023424, 656509, -669955, 6456313, -489726, -1314231, -3403222, 2333399, -1131077, 2734550, 4884075, -1962940, 6492863, 4596062, -6342933, 5280417 };
		int[] output0 = new int[]{ -60210, 26805, -40194, 22829, 64724, 14958, -41184, -59008, 19994, 40916, -64204, 52580, 57052, 65076, 32105, -63837, -59549, -45141, -48238, 31291, -64708, 39011, 46653, -47154, 32086, -8835, 58919, -50730, -15768, 51291, 2973, -13264, -49734, 33140, -8831, -2967, -51518, 64931, 54367, 52163, 60158, 6160, -50020, -11142, -29327, 39445, 55025, 21815, -25468, 22295, -57531, 57748, -59135, -46810, -60849, -62622, -51408, -40894, -41555, -44531, 62451, 56711, -48478, 41105, 6406, -56573, -47823, -57080, -55954, -58052, 64846, -2342, 50194, -49787, 8764, 54234, -19385, -59881, 50095, -40451, 21260, 16038, 55744, -3873, 64970, -36612, 46917, -59164, -60828, -61177, -65255, -56760, 65523, -50729, -50225, 65161, -65118, 55681, -37215, -58661 };
		for (int ndx = 0; ndx < 100; ndx++)
		{
			Util.Check("Fixed32.SinFast", Fixed32.SinFast(input0[ndx]), output0[ndx], input0[ndx]);
		}
	}

	// Fixed32.SinFastest
	public static void Fixed32_SinFastest()
	{
		int[] input0 = new int[]{ -3888336, 5041094, -4745429, 3150987, 3600500, -6008491, -1625795, 2864816, 797420, 3891188, -2744743, -3188128, 4874912, -790166, -3600564, -5663496, -3257516, -5465720, -1956944, -5968367, 5438832, 2415649, -3662505, -848676, -3221694, 2254751, -684768, 4379535, 3579058, -5817193, 536391, -3169969, -3635236, -4022866, -3944183, -3656333, -968417, 1822170, 2125674, -4568532, -4271294, 3018828, -894706, 2172684, -5123087, 6338506, 4012086, 6212688, -218484, 3993972, -5259024, 5404983, -592, 6179034, 6395184, 249613, 2150000, 2656847, -180917, -5207850, 1229877, 548269, 5839357, 61013, -3198803, -6128373, -6106491, 2344178, -3399582, -6497831, 1858520, 1473913, -1037794, -3942011, 4856527, -4133595, -3243243, 718409, -2279188, -3006600, 4796264, -343857, -1955580, 6138686, 5995430, 1685007, 3384222, -3260671, -3864451, 2359802, 747266, 2928335, -4550512, 779925, 755189, 1734036, 3733070, 5597879, -1182111, -5548314 };
		int[] output0 = new int[]{ -23025, 65454, 9979, -53556, -65482, 35706, 20932, -17398, -25445, 20332, 56547, 65455, -55607, 31962, 65484, 65513, 34801, -64809, 65525, -2368, 63287, -48776, 40357, -24518, 58595, 9971, 55983, -49372, -61198, -46963, 61980, 62104, 57783, 65030, 31031, 45035, -52585, 29696, 55824, -36752, -46960, 57181, -57980, 64626, -23561, 40777, -65475, 34276, 12519, -62248, 64922, 46657, -592, 2410, -12596, -40560, 64462, 19395, -24373, 52371, -5442, 57137, 59464, 52580, 65091, 44014, 57495, -61355, -65486, 64360, -5527, -31365, 8334, 29100, -63026, -15694, 45982, -65495, 14310, -62122, -52486, 56401, 65534, -35859, -24117, 35833, 64256, 32088, -43389, -65050, -60187, 42253, -20634, -40481, -56626, 63582, 26333, -36677, 47563, -10600 };
		for (int ndx = 0; ndx < 100; ndx++)
		{
			Util.Check("Fixed32.SinFastest", Fixed32.SinFastest(input0[ndx]), output0[ndx], input0[ndx]);
		}
	}

	// Fixed64.Cos
	public static void Fixed64_Cos()
	{
		long[] input0 = new long[]{ 386098654379L, -320188674349L, 200453088693L, -17973441408L, -289547775934L, -11753115805L, -7262788203L, -171191866679L, -342824894359L, 260517441921L, -200588797093L, -335675967956L, -106008706249L, -244312765113L, -226132949105L, -326360400751L, -265404465523L, 409879926790L, 40578774218L, 109431277450L, -193920803490L, 242993023113L, -22607979810L, 52049679424L, -45317991821L, 359385341167L, -34679960216L, 310370614344L, 121660944656L, -224861141104L, -86053123840L, -149915129469L, -304944191542L, -215251307900L, -153642518271L, 205019924695L, 206508578296L, 319309266348L, 262355992722L, -24827048211L, -311805261145L, -36516433417L, -300363183139L, -84281385039L, -74255928234L, -44847927420L, -131576633061L, 375587131974L, -152250595870L, -53644239024L, -50450479423L, 264267316323L, -103212879448L, 242594577912L, 259803216720L, -286391098333L, 131916035061L, -281093320330L, -402152179187L, -219436387502L, -406569885189L, 111863327052L, 136643918263L, 311532976345L, -82926163838L, 378823061976L, 398764953185L, -320254127949L, 338826482757L, -1656144200L, -103372249448L, -155217002272L, -281972795531L, -364090907169L, -8260191003L, 272092359526L, 113859476653L, -367823324371L, -303191121941L, 429026665199L, 61465244628L, 19229637408L, 33124480615L, -254191545918L, 255086067918L, 79176289436L, 382794479578L, -118042039854L, -45557795021L, -296748149538L, -356392839965L, 58105169027L, 291964715935L, 52295650624L, -47753892622L, 5828141402L, 256336377919L, -182399429884L, 428141508399L, -23582260610L };
		long[] output0 = new long[]{ -1513840936L, 2839479976L, -3863143704L, -2162427292L, -551011716L, -3947333420L, -515027008L, -2385283636L, -1230097092L, -2441447300L, -3920511056L, -3981915072L, 3866145972L, 4056450520L, -3123793552L, 3572494512L, 2183228896L, 1616869440L, -4293811052L, 4040122596L, 1681980848L, 4293336924L, 2250200424L, 3871844256L, -1845534128L, -1765874912L, -939702504L, -4294857228L, -4289147888L, -2127690308L, 1611214932L, -4038512044L, -1328682064L, 4247772452L, -1495422344L, -3517822188L, -2471562204L, 2124963308L, -754309792L, 3763640512L, -4047395084L, -2592970696L, 2934150800L, 3072219508L, 44220124L, -2258100660L, 3050768648L, 3734912324L, -2699681084L, 4282455652L, 2930265320L, 1139279208L, 1941976856L, 4285836976L, -2992672060L, -3265026728L, 3279900012L, -3713721300L, 3509430032L, 2911119708L, 3931867760L, 2627637020L, 3957655936L, -4130311916L, 3851949296L, 4174885556L, 716968800L, 2888257008L, -4035499512L, 3979598632L, 2082756108L, 47067824L, -4074852076L, -4289276988L, -1482531568L, 3728137804L, 826162240L, -2937834628L, 401638532L, 3443922468L, -742821008L, -1000638284L, 606083848L, -3755351300L, -4105155712L, 3930586036L, 1708489932L, -3021375948L, -1626234884L, 4293833700L, 1158143712L, 2455174376L, 1806401548L, 3971897760L, 526929780L, 911395124L, -4294852960L, 243290688L, 2845876136L, 3015317916L };
		for (int ndx = 0; ndx < 100; ndx++)
		{
			Util.Check("Fixed64.Cos", Fixed64.Cos(input0[ndx]), output0[ndx], input0[ndx]);
		}
	}

	// Fixed64.CosFast
	public static void Fixed64_CosFast()
	{
		long[] input0 = new long[]{ -14116151006L, -240819234712L, -392736080382L, 278902277929L, -379768719176L, -324730206751L, 116743382254L, -168618701878L, -178641960683L, 417207586794L, 29246154613L, 70242629832L, -407398927989L, -401682114787L, 148595097469L, 3697207001L, -350757883163L, -38661265418L, -373049821173L, 267394276324L, 425525311998L, 87310263440L, 154800396672L, 206077902695L, -74760033834L, 268019311124L, -17684988608L, 95228283444L, 113159715052L, 415408397193L, -413740747992L, -133237823062L, -366468103170L, 149887868269L, 13646086606L, -127212250259L, -17531011808L, 183718932285L, -303919556341L, 150319545069L, 391929636782L, 121916451856L, -368896808771L, -33268652215L, 103502425448L, 2861259801L, 36007367416L, 264150101123L, 333197282755L, 378045629976L, -72910705033L, -134499086262L, -238846338311L, -268749497525L, -19610843009L, 328070315152L, 33877098215L, -169317253478L, -75834417835L, -218291300701L, 122451511457L, -407981630789L, 147718312668L, -164553628276L, 401451605186L, -267012751924L, 7214003403L, -127790066659L, 14168528206L, -153689381871L, -408268510790L, -104980085848L, -164238438676L, -93872636643L, 304961369142L, -125887869458L, 26710342612L, -241427680712L, -326921252352L, 351875435963L, -197484785891L, 147661639868L, 191527730289L, 164610814676L, 58822372627L, 150255067869L, -323888214350L, 331778123954L, -259998018321L, 115072501053L, 268407381124L, -277710487929L, -169943379479L, 343868473960L, -401628695987L, 370414537972L, 403694868787L, 225153549104L, -5223527802L, -58981552227L };
		long[] output0 = new long[]{ -4249850028L, 3812441168L, -4056479144L, -2187342156L, 3853833020L, 4201576856L, -1975321592L, 44268540L, -3134905220L, -4160742636L, 3713914360L, -3427780452L, 3527295920L, 3217985668L, -4291540612L, 2799520372L, 4294534648L, -3915968476L, 1920710284L, 3606001144L, 493532008L, 393927208L, -369081096L, -2810780456L, 546838276L, 3906218296L, -2406593312L, -4224874400L, 1498882308L, -3367640632L, -2107752088L, 3965756568L, -3765052636L, -4047705508L, -4292244584L, -963342348L, -2532554152L, 1528658536L, -325894660L, -3883167072L, -4248622980L, -4268277196L, -2071608732L, 463040364L, 2195630752L, 3376627884L, -2169906256L, 1025853240L, -2458752456L, 4288236396L, -1281198372L, 4273336284L, 2540328628L, 4152005920L, -626470692L, 2368806368L, -144476716L, -651754736L, 1584380832L, 3640248736L, -4175783884L, 3163444072L, -4237222368L, 3510451628L, 3060761720L, 3384804948L, -466562092L, -393239988L, -4241961428L, -1451404152L, 2962493308L, 3312038276L, 3682436196L, -4256053768L, -1345007340L, -2188188500L, 4286124700L, 4053509384L, 3231636812L, 4165689276L, -1780355972L, -4227590928L, 3517336416L, 3477193596L, 1835287228L, -3910277960L, 4294612916L, -1183199764L, -2849917832L, -381178488L, 4051397524L, -1091124320L, -1261527272L, -203910616L, 3182359076L, -641588364L, 4155817164L, -2376574052L, 1491275472L, 1690144468L };
		for (int ndx = 0; ndx < 100; ndx++)
		{
			Util.Check("Fixed64.CosFast", Fixed64.CosFast(input0[ndx]), output0[ndx], input0[ndx]);
		}
	}

	// Fixed64.CosFastest
	public static void Fixed64_CosFastest()
	{
		long[] input0 = new long[]{ 425143985997L, -265699295523L, -179515156683L, 57389935026L, 356817411166L, -397427348785L, -399757377186L, 284523027932L, -144214137067L, -323219703150L, -128136757059L, -154191950671L, -271892730726L, 1786875800L, 408690214790L, 404286601188L, -170012631479L, 412604227592L, 206120728695L, -178300192283L, -372621267173L, 104932609048L, -297288777938L, 328592756753L, 7399966603L, 298938706739L, -364533435969L, -78610183036L, -121740670256L, 364043560769L, -100086008646L, 231053523107L, 193292576690L, 161557029475L, 356228179565L, -361282219968L, -102319933047L, -295358934337L, 237290133110L, 26752991812L, 120515715456L, -178914512683L, 46495531421L, -366275044770L, -186287471486L, -6897397803L, 423678972397L, 257766474320L, 364674988769L, -376418567575L, 110930439851L, 420587370795L, -410463909191L, -256420065119L, -115857014653L, -109285352650L, -397907247185L, -78611183836L, -379506761176L, -371618025173L, 396602816784L, 108349535450L, -23233031410L, -78760968236L, 206363035096L, 70306449432L, 82012202238L, -3953030601L, 75055425834L, 340475705158L, 77109804635L, -304150426741L, -254182635118L, -250128992716L, 130680821860L, 235789975109L, -371059651972L, -360510462767L, 85383498639L, -415199365193L, 304756463941L, -192803180689L, -13788442206L, -174818832281L, -176383608682L, -91176649842L, 212020702698L, 20215912209L, -152082685470L, 36016802616L, -392871702382L, 405787980388L, -345348902760L, 179411428683L, 59646904627L, -417330549594L, 273815248327L, -304240229941L, -143141350266L, 172902808680L };
		long[] output0 = new long[]{ 113285472L, 2432138768L, -2477934184L, 3005854700L, 744324360L, -615148164L, 1667865260L, -4136299168L, -2392560436L, 4250562272L, -47100120L, -969582640L, 3823347420L, 3928572844L, 2643800452L, 4264689192L, -1327629372L, -1055686616L, -2778711476L, -3358847220L, 1528584668L, 3282116720L, 4271601168L, 1916775368L, -650938752L, 3795720228L, -4288828844L, 3669289576L, -4283726252L, -4286085868L, -1099441812L, -3973545016L, 2240303508L, 4279348444L, 1315885520L, -3270408404L, 1109470260L, 4039557576L, 1147898104L, 4288195680L, -4195822108L, -2942905924L, -726601860L, -3854225084L, 3523582696L, -150848036L, -1329583656L, -4068880352L, -4279047368L, 4072779908L, 3298542532L, -3692379000L, 1062628820L, -4294523016L, -1151965320L, 4086930680L, -137341520L, 3669809296L, 3962154172L, 557913220L, -1414954736L, 4275239928L, 2757385600L, 3745323840L, -2589552264L, -3389436352L, 4165722244L, 2601061476L, 838321496L, -3191367392L, 2683557400L, -555523532L, -3751263304L, -506617416L, 2358993728L, -337836508L, 1115328L, -2720002868L, 2210165632L, -3234480888L, -1148999000L, 2642563256L, -4284286952L, -4253714400L, -4184356548L, -3106457260L, 2668315392L, -23644220L, -2828644708L, -2178315000L, -4009719828L, 4179198764L, 1257796176L, -2561959216L, 1060714380L, -4188908040L, 2599896036L, -644447600L, -1436333104L, -3584401532L };
		for (int ndx = 0; ndx < 100; ndx++)
		{
			Util.Check("Fixed64.CosFastest", Fixed64.CosFastest(input0[ndx]), output0[ndx], input0[ndx]);
		}
	}

	// Fixed32.Cos
	public static void Fixed32_Cos()
	{
		int[] input0 = new int[]{ 5196947, -28453, -3765650, -6184348, -366693, -219968, 3742573, 4107083, 646909, 1187892, -2559241, 5982970, 4051239, -6008974, -3767055, 2440021, -4689922, -4240584, -5063996, -2013504, 4391212, -5610663, -4293320, -5957917, 4636393, 1538369, -5924961, -62520, 1826794, 1808389, 5973380, 5534016, 3236810, 5218161, -4978786, -1874931, -5729892, -579646, 4252770, 4082168, 1419781, 5681695, 6215161, 3045109, -3444786, -5424116, -4413006, -5814231, -48943, 5023717, 4875563, 1865073, -6131940, 6382941, 4800675, 4254010, -2288732, -4361332, -4267141, 4648537, -848607, -2748506, -4273311, 5392119, 1768112, -1539657, -3807440, 5386678, 5523412, 4661476, 1616314, 2443324, -1939754, -2592565, 3120313, 5263116, -5272224, -784830, 4040468, 3506910, -602224, 6442870, 6540022, 3356677, 3486426, -2445292, 5112357, 3407469, -6136114, -2679197, -6139799, 5185040, -2866105, 6157832, -1622824, -2385311, 3401407, -5730558, -5276602, 4648471 };
		int[] output0 = new int[]{ -47535, 59455, 40191, 65081, 50632, -64030, 55579, 64669, -59118, 49106, 14236, -64398, 34585, -54693, 39072, 58508, -50374, -19589, -19458, 50449, -33677, -46177, -58649, -64287, -3924, -5780, -50191, 37908, -60371, -50938, -65483, -60846, 41973, -30716, 55102, -61897, 56432, -54816, -30812, 56112, -62063, 19490, 54527, -51805, -43558, 30654, -13476, 47793, 48093, 20191, 35241, -64425, 50885, -65535, -35639, -31901, -61201, -54990, -42658, -15909, 60803, -29834, -47146, 54244, -17841, -4495, 1476, 57107, -56129, -28071, 58437, 59921, -16013, -18710, -57877, 12901, 21679, 54427, 25011, -65182, -63727, -39651, 48477, 37943, -64118, 60691, -56497, -10284, 53410, -65482, 55460, -54905, 63514, 62860, 61091, 17395, -4261, 56768, 25759, -15845 };
		for (int ndx = 0; ndx < 100; ndx++)
		{
			Util.Check("Fixed32.Cos", Fixed32.Cos(input0[ndx]), output0[ndx], input0[ndx]);
		}
	}

	// Fixed32.CosFast
	public static void Fixed32_CosFast()
	{
		int[] input0 = new int[]{ 4936923, -3246084, -4784044, 1843180, -3146196, -4121360, -2748772, 3014224, -3290972, 6091159, 2972635, 5049697, -1848200, -1220451, -1302838, -737878, -2734929, -1076388, -4647907, -2340194, -98415, -661309, 4969192, 1649009, 4247675, 2984873, -1244170, -1543987, 5583859, -1047974, -4691891, -6095266, -2061827, 5945596, 5123586, -3909739, 4673315, -1856757, -50726, 1054187, -6250120, -4455466, 144842, -5673673, 901767, -4635897, 479641, 4907946, 907071, 5668654, -6203982, -2075803, 5470948, 3617191, -1806713, -955366, -1661677, 120545, 4149104, 422529, 3676409, 5348814, 3983965, 4310601, 4229450, 2514301, 557925, -1240197, 209561, -3946698, 1142406, 5675428, 5527937, 851505, -2643673, -2196548, 5747448, 4089265, -5806357, 2329972, -4048367, 401482, 4102541, 6468805, -1397591, 3937512, -5012615, 874580, 1198709, -474646, 4305537, -2000830, 547737, 6080343, 3931377, -5045335, -1885832, 2387840, -3349523, 4941065 };
		int[] output0 = new int[]{ 65390, 48653, -48304, -64804, -41592, 65436, -29597, -27933, 65456, 17273, 12653, -5449, -65362, 63855, 33728, 17073, -41198, -49425, -15299, -26710, 4524, -51531, 59689, 65508, -26227, 495, 64939, -168, -60863, -62932, -51610, 21199, 65469, -60773, -61333, -65502, -38254, -65428, 46864, -60919, 28464, 27960, -39102, 11706, 24144, -3430, 33427, 57230, 19139, 6737, 59907, 63361, -14802, 14050, -49868, -27949, 63921, -17390, 58177, 64655, 58979, 65397, -29715, -64244, -8732, 51528, -40144, 65354, -65434, -56493, 9985, 13427, -58329, 59663, -57468, -33128, 63239, 59442, 52823, -35684, 32115, 64729, 63779, -16471, -51548, -60580, 30412, 46652, 55570, 37621, -63053, 41469, -31639, 6652, -62652, -1094, -57476, 19818, 43537, 65535 };
		for (int ndx = 0; ndx < 100; ndx++)
		{
			Util.Check("Fixed32.CosFast", Fixed32.CosFast(input0[ndx]), output0[ndx], input0[ndx]);
		}
	}

	// Fixed32.CosFastest
	public static void Fixed32_CosFastest()
	{
		int[] input0 = new int[]{ 1359777, -4833761, -1855214, -1699829, -2027352, -5325811, -1050141, -1934156, -292734, -6163765, -149214, 802656, -626696, -4734467, -2082702, -3278672, -5307326, 4068760, -845406, -6261662, 973316, 6236945, 4114692, -5869392, -1698636, -3410363, -1425908, 6001193, 3473728, -4151938, 6242884, -3193992, 885189, -4193823, -5583404, -5768206, -4296902, -751228, 1942557, -2625380, -1565946, 3475141, -5386285, 808874, 6228168, -3050718, 5179466, -1271394, 1609446, 656450, -6291608, 599007, -3320352, -3641461, -2585850, 1676432, -2394854, -2539422, 6552407, -5170588, 2653697, -497735, 1145714, -2694395, -5853049, -3508822, 6471067, -2986473, -5704663, -2868096, -5535370, 1997502, -4427397, -4773626, 1857883, 4051775, 5069630, -3247782, -5543960, -5201518, -2036230, 6399085, -2161853, -3736321, -4413929, -909723, -6427240, -2026949, 4945627, -706236, 3180248, 4796119, -750035, 559545, 1274521, 5485389, -4224173, 3861710, 108324, 3183390 };
		int[] output0 = new int[]{ -21126, -4589, -65494, 45450, 58103, 59947, -62288, -21377, -15936, 64268, -42529, 62228, -64904, -65527, 61248, 63696, 50215, 48070, 61920, 17682, -42947, 39686, 65458, -1602, 46302, -13133, -63749, -58588, -60306, 56822, 34801, 2736, 38630, 26124, -61028, 65443, -60159, 29523, -13282, -46572, 21393, -60844, 57302, 63890, 46297, -55053, -57749, 55862, 55018, -54396, -11976, -62892, 60384, 36271, -12187, 59081, 26381, 32646, 55904, -61399, -61593, 16794, 13241, -63111, 14618, -64944, -14273, -1107, 39796, 63966, -61333, 38844, 818, -54712, -65345, 35044, -24760, 49782, -63818, -44282, 61659, -63443, -36, 58635, -12572, 16587, -50862, 57915, 65385, -14255, -10957, -39379, 28453, -41419, 54166, -28402, -3481, -47273, -5374, -7847 };
		for (int ndx = 0; ndx < 100; ndx++)
		{
			Util.Check("Fixed32.CosFastest", Fixed32.CosFastest(input0[ndx]), output0[ndx], input0[ndx]);
		}
	}

	// Fixed64.Tan
	public static void Fixed64_Tan()
	{
		long[] input0 = new long[]{ -806293810L, -1802787779L, -935786341L, -943092943L, -1274493832L, -1001232441L, -1038550134L, -554409995L, -1634436015L, -1338220658L, -2366176729L, -498919242L, -728078134L, -3385900912L, -2476248812L, -2224223430L, -575329285L, -1012543100L, -580957260L, -1802133650L, -717146377L, -1911080388L, -1066034960L, -1784774368L, -1484172423L, -699391827L, -695939152L, -1788378372L, -1484223798L, -2270762752L, -1837964878L, -531022433L, -2381644633L, -927045968L, -2900909279L, -2262375322L, -1918278283L, -4230297769L, -2373944086L, -2682737565L, -478704096L, -3401616180L, -2499478427L, -1039142997L, -2177349506L, -2044047120L, -1860454341L, -1509939754L, -2598653600L, -3280274792L, -2657451327L, -2742686754L, -1978637047L, -3298615576L, -1422830252L, -1811885710L, -726328389L, -2251696284L, -2728893374L, -782667042L, -617907553L, -2493931304L, -1604161506L, -3091096699L, -3126849304L, -1913789519L, -899642002L, -3372819875L, -501302601L, -470099172L, -497996926L, -584066063L, -1831721581L, -929998873L, -1616887163L, -905396747L, -3283567833L, -440611667L, -3520234564L, -3118242486L, -1614425342L, -1979374996L, -2955476066L, -1943146719L, -3669635027L, -2877911461L, -1152558987L, -3100713819L, -2798108874L, -687643288L, -1337800940L, -3658627788L, -665800677L, -1302726658L, -1864723944L, -824326169L, -910745594L, -3472587766L, -1427199857L, -488645424L };
		long[] output0 = new long[]{ -815901217L, -1916697105L, -950880785L, -958548415L, -1313268813L, -1019772496L, -1059276462L, -557509969L, -1718188276L, -1383276519L, -2638697477L, -501175569L, -735133430L, -4320324948L, -2792775973L, -2446986851L, -578795361L, -1031728296L, -584526554L, -1915912754L, -723886284L, -2048062499L, -1088479609L, -1895136500L, -1546213662L, -705639998L, -702094596L, -1899443789L, -1546271697L, -2509018060L, -1959035527L, -533744902L, -2660051083L, -941716121L, -3440763641L, -2497781117L, -2056904179L, -6472548144L, -2649408540L, -3096294070L, -480696263L, -4352058544L, -2825944443L, -1059905412L, -2385279077L, -2213763355L, -1986269184L, -1575383900L, -2970272994L, -4112911097L, -3058028206L, -3188331820L, -2131614272L, -4148215302L, -1477271077L, -1927617257L, -733332549L, -2483510913L, -3166988117L, -791447128L, -622206294L, -2818002608L, -1683166884L, -3764714387L, -3828402681L, -2051388652L, -913034441L, -4294088249L, -503591533L, -471985497L, -500240718L, -587693257L, -1951498317L, -944811449L, -1697864052L, -919050965L, -4119228545L, -442163913L, -4599456056L, -3812984932L, -1695018160L, -2132534074L, -3531276691L, -2087561669L, -4932740894L, -3403167086L, -1181045977L, -3781754032L, -3275131763L, -693579726L, -1382813284L, -4907289578L, -671185698L, -1344203887L, -1991454331L, -834599337L, -924646227L, -4498364192L, -1482159341L, -490764742L };
		for (int ndx = 0; ndx < 100; ndx++)
		{
			Util.Check("Fixed64.Tan", Fixed64.Tan(input0[ndx]), output0[ndx], input0[ndx]);
		}
	}

	// Fixed64.TanFast
	public static void Fixed64_TanFast()
	{
		long[] input0 = new long[]{ -975845448L, -2368875833L, -1293658130L, -2374208014L, -2829068254L, -1954173896L, -643097184L, -913784053L, -876217360L, -674953761L, -2369742934L, -708005917L, -2746974562L, -3758314434L, -2081974997L, -1340639015L, -3623877174L, -3545348457L, -3617480081L, -466647973L, -713166396L, -1246018436L, -517712201L, -3130784531L, -1509087491L, -584554305L, -3767334385L, -603901381L, -2141826584L, -842442924L, -4269315798L, -4060777474L, -1325829351L, -3094123381L, -1372425266L, -2926793612L, -657155911L, -534648732L, -2949705092L, -806528142L, -1922032301L, -541725710L, -1519881372L, -1780534727L, -1246173182L, -811548483L, -572036119L, -760794825L, -2687164295L, -597396336L, -976881865L, -1103200835L, -4122527032L, -1313576200L, -2942519804L, -3363357268L, -1965231686L, -1774527657L, -675716009L, -2078635897L, -2227642360L, -457372918L, -1832211901L, -446715712L, -678941211L, -2506158160L, -2293325434L, -3812707070L, -1176154212L, -3054919994L, -876200096L, -2911151381L, -516226375L, -1926400062L, -1042665806L, -565420154L, -3520717714L, -1248689275L, -1079032782L, -798656094L, -438895646L, -2126799161L, -965135371L, -1539861324L, -3703521491L, -1662124532L, -4230211765L, -433503111L, -451625124L, -1752395512L, -639643810L, -1590384285L, -3397979561L, -609480809L, -1554857124L, -1804887333L, -1269755718L, -1461296438L, -1126362385L, -2135434994L };
		long[] output0 = new long[]{ -992982301L, -2642414683L, -1334252734L, -2649770259L, -3324337939L, -2101236584L, -647940364L, -927816580L, -888570022L, -680558534L, -2643610065L, -714482084L, -3194958931L, -5143415958L, -2262009755L, -1385947596L, -4827937761L, -4653754273L, -4813482853L, -468489561L, -719786358L, -1282190664L, -520230075L, -3835477434L, -1574427866L, -588185298L, -5165424161L, -607907181L, -2339029199L, -853406637L, -6601953743L, -5948837777L, -1369613176L, -3770070918L, -1421130051L, -3483446324L, -662325974L, -537423109L, -3521596973L, -816135247L, -2061547016L, -544612260L, -1586684132L, -1890097623L, -1282359207L, -821337971L, -575437608L, -768845002L, -3102999006L, -601273345L, -994074184L, -1128112952L, -6132733900L, -1356125640L, -3509596721L, -4275249532L, -2114958120L, -1882931451L, -681339933L, -2257746398L, -2451529022L, -459106490L, -1952115152L, -448330504L, -684646635L, -2835510162L, -2539379374L, -5277842793L, -1206458479L, -3701204705L, -888552017L, -3457589269L, -518722538L, -2066923654L, -1063634892L, -568704377L, -4600538216L, -1285100183L, -1102314889L, -807981864L, -440426842L, -2319582859L, -981706165L, -1609431275L, -5012059333L, -1750410771L, -6472244082L, -434978384L, -453293933L, -1856604172L, -644408884L, -1667309159L, -4344738175L, -613599339L, -1626556077L, -1919240011L, -1308087469L, -1520430091L, -1152908347L, -2330749107L };
		for (int ndx = 0; ndx < 100; ndx++)
		{
			Util.Check("Fixed64.TanFast", Fixed64.TanFast(input0[ndx]), output0[ndx], input0[ndx]);
		}
	}

	// Fixed64.TanFastest
	public static void Fixed64_TanFastest()
	{
		long[] input0 = new long[]{ -1519725716L, -644327165L, -2777919853L, -3777555111L, -2928031117L, -1441098570L, -917855371L, -919129890L, -541090614L, -2235156673L, -4102591032L, -675957260L, -706330555L, -3633463720L, -2034122070L, -449861522L, -2035160399L, -511038888L, -518003612L, -1754223969L, -2544267650L, -2272130804L, -3625894859L, -2882362279L, -2051263726L, -2366015853L, -3679259813L, -3637446241L, -532127688L, -2480912595L, -1912350691L, -1034791233L, -476141575L, -2170024882L, -2256893298L, -2925305720L, -3287934812L, -1097220347L, -2258511744L, -1103776244L, -777766381L, -1976719654L, -3440635356L, -867733878L, -1834384346L, -4063828710L, -967061163L, -4016209542L, -1286765634L, -1484470256L, -3808622099L, -1067151524L, -1211617113L, -2757461945L, -3604458162L, -2872422450L, -763146057L, -4138925179L, -790950254L, -531517904L, -1682091669L, -1083662636L, -741858186L, -936644886L, -501996043L, -1702806686L, -609737624L, -1397847230L, -691464140L, -2986222622L, -587586866L, -796644664L, -971735404L, -2015432116L, -968714354L, -552812146L, -2836031899L, -1794686162L, -674866842L, -2167716760L, -1050808479L, -3934237040L, -1214107078L, -1539432979L, -2797435040L, -769664240L, -3667784168L, -741554383L, -2585479831L, -3374264665L, -1646354885L, -3411552449L, -595805549L, -1825006080L, -2818044277L, -3082275802L, -1144416334L, -1577696792L, -742413944L, -462684392L };
		long[] output0 = new long[]{ -1586232027L, -649180489L, -3244374807L, -5188832298L, -3486215939L, -1497435819L, -931938819L, -933272773L, -543975206L, -2462311337L, -6073471258L, -681558807L, -712720852L, -4847759086L, -2201644854L, -451531361L, -2202958112L, -513473629L, -520538053L, -1858705154L, -2891773495L, -2511741292L, -4830576957L, -3411247486L, -2223367230L, -2639514055L, -4953231111L, -4856827859L, -534872707L, -2800583693L, -2049821899L, -1055078592L, -478116326L, -2376401534L, -2491311342L, -3481706364L, -4126790362L, -1121488183L, -2493477337L, -1128491078L, -786302974L, -2129542950L, -4430392715L, -879613475L, -1954781473L, -5958279897L, -983566404L, -5820655797L, -1326396960L, -1546269939L, -5266073125L, -1089440659L, -1244529199L, -3212398383L, -4782287825L, -3395096369L, -771208614L, -6184134585L, -799930294L, -534253597L, -1773586020L, -1107023882L, -749263088L, -951622029L, -504305321L, -1797905735L, -613853703L, -1449084198L, -697459549L, -3583615659L, -591273057L, -805821012L, -988484600L, -2178061578L, -985305593L, -555886400L, -3336458054L, -1906999962L, -680441369L, -2373383604L, -1072070392L, -5593230624L, -1247228045L, -1608677427L, -3275089295L, -777935856L, -4926554954L, -748950173L, -2952051755L, -4295757538L, -1731860110L, -4370869812L, -599647505L, -1943457309L, -3307753855L, -3749266246L, -1172030189L, -1652483228L, -749835534L, -464498712L };
		for (int ndx = 0; ndx < 100; ndx++)
		{
			Util.Check("Fixed64.TanFastest", Fixed64.TanFastest(input0[ndx]), output0[ndx], input0[ndx]);
		}
	}

	// Fixed32.Tan
	public static void Fixed32_Tan()
	{
		int[] input0 = new int[]{ -43678, -45334, -38065, -28236, -16556, -31331, -7197, -39394, -18654, -42730, -6637, -27864, -40192, -23910, -33145, -28017, -58488, -31578, -21940, -42740, -30422, -53881, -35428, -13428, -11887, -11286, -8762, -34891, -46865, -20594, -31654, -11780, -15842, -9559, -49623, -23176, -10335, -42993, -9297, -8928, -10694, -9310, -39747, -60500, -50834, -59077, -8487, -24915, -55054, -10058, -52693, -36236, -7190, -17368, -15206, -53121, -8386, -18577, -15567, -9613, -23432, -13516, -55082, -59356, -8846, -36922, -11526, -27555, -31574, -9372, -17765, -8915, -22258, -16104, -26192, -21414, -8884, -38373, -17310, -13185, -8714, -23046, -41530, -30536, -25611, -57243, -10736, -59771, -41191, -61214, -18112, -36457, -18099, -63374, -24968, -51844, -11076, -43880, -44817, -9023 };
		int[] output0 = new int[]{ -51546, -54281, -43014, -30123, -16917, -33958, -7226, -44941, -19174, -50028, -6659, -29673, -46125, -25030, -36293, -29858, -81318, -34272, -22798, -50044, -32813, -70540, -39336, -13619, -12019, -11398, -8814, -38609, -56914, -21299, -34369, -11908, -16157, -9627, -61938, -24193, -10421, -50446, -9359, -8983, -10789, -9373, -45462, -86632, -64272, -82830, -8534, -26189, -73122, -10137, -68024, -40444, -7218, -17786, -15484, -68920, -8432, -19091, -15866, -9682, -24484, -13710, -73185, -83559, -8900, -41397, -11646, -29302, -34267, -9436, -18213, -8970, -23155, -16436, -27681, -22210, -8938, -43456, -17724, -13365, -8765, -24045, -48155, -32956, -26999, -78228, -10833, -84658, -47635, -88622, -18587, -40749, -18573, -95019, -26250, -66284, -11182, -51873, -53415, -9080 };
		for (int ndx = 0; ndx < 100; ndx++)
		{
			Util.Check("Fixed32.Tan", Fixed32.Tan(input0[ndx]), output0[ndx], input0[ndx]);
		}
	}

	// Fixed32.TanFast
	public static void Fixed32_TanFast()
	{
		int[] input0 = new int[]{ -33588, -20184, -51710, -38495, -37101, -38732, -10669, -29258, -43454, -46534, -39186, -14320, -7033, -7737, -7230, -6663, -21327, -11821, -15188, -10127, -22536, -12637, -43837, -33800, -33909, -31931, -32279, -23015, -42266, -33105, -12670, -13267, -56108, -12572, -25723, -28290, -29204, -7070, -53934, -43330, -35162, -24046, -9014, -58005, -10237, -8288, -33971, -15329, -57444, -24556, -15930, -61397, -18934, -29001, -26236, -17418, -30172, -10026, -7439, -7614, -7863, -30377, -45361, -8602, -24068, -19357, -16724, -36658, -19710, -16747, -14951, -19769, -14363, -22969, -18874, -61414, -9187, -49523, -21637, -26810, -61594, -13799, -26254, -11280, -13618, -13523, -45916, -12679, -31402, -9678, -61442, -19089, -62274, -46418, -36111, -7585, -34737, -6867, -15794, -34655 };
		int[] output0 = new int[]{ -36875, -20848, -66015, -43633, -41649, -43976, -10765, -31371, -51185, -56336, -44637, -14553, -7061, -7774, -7260, -6687, -22114, -11951, -15466, -10209, -23469, -12796, -51804, -37155, -37299, -34724, -35171, -24011, -49298, -36242, -12831, -13452, -75533, -12729, -27132, -30190, -31305, -7098, -70656, -50985, -38976, -25187, -9072, -80103, -10321, -8333, -37381, -15615, -78718, -25774, -16252, -89142, -19479, -31056, -27734, -17840, -32502, -10105, -7472, -7649, -7901, -32758, -54327, -8652, -25212, -19941, -17097, -41029, -20327, -17122, -15216, -20392, -14598, -23959, -19414, -89190, -9248, -61751, -22460, -28414, -89705, -14007, -27756, -11393, -13818, -13719, -55270, -12840, -34049, -9749, -89270, -19648, -91688, -56135, -40272, -7619, -38403, -6893, -16107, -38293 };
		for (int ndx = 0; ndx < 100; ndx++)
		{
			Util.Check("Fixed32.TanFast", Fixed32.TanFast(input0[ndx]), output0[ndx], input0[ndx]);
		}
	}

	// Fixed32.TanFastest
	public static void Fixed32_TanFastest()
	{
		int[] input0 = new int[]{ -32476, -60726, -50965, -22479, -10763, -52807, -28014, -54017, -10069, -27994, -12424, -39924, -30364, -18184, -8101, -37342, -7582, -26354, -41390, -11664, -27626, -8644, -7650, -13346, -17860, -51325, -20802, -20276, -41680, -16305, -11586, -8767, -20549, -40913, -54096, -6647, -17743, -7654, -6868, -16899, -31632, -55700, -8251, -7351, -51044, -10085, -41196, -22443, -37551, -63368, -6556, -8638, -10872, -8873, -8221, -24620, -52020, -25024, -8248, -13742, -16636, -9054, -8493, -40468, -15834, -9287, -12732, -48633, -22027, -7987, -13792, -64917, -25147, -16050, -24163, -32500, -6865, -6820, -17134, -11605, -8165, -60737, -35383, -43102, -16299, -8790, -52839, -15176, -32614, -14399, -8373, -46461, -60809, -32750, -6657, -22895, -42979, -13361, -30423, -36017 };
		int[] output0 = new int[]{ -35434, -87251, -64514, -23400, -10861, -68239, -29857, -70808, -10149, -29832, -12574, -45745, -32747, -18662, -8143, -42005, -7617, -27872, -47958, -11788, -29389, -8695, -7686, -13532, -18312, -65226, -21526, -20945, -48404, -16647, -11708, -8820, -21246, -47230, -70979, -6671, -18186, -7690, -6894, -17281, -34349, -74560, -8295, -7383, -64670, -10165, -47661, -23360, -42301, -95023, -6579, -8689, -10973, -8928, -8265, -25845, -66621, -26313, -8292, -13945, -17000, -9112, -8541, -46558, -16147, -9350, -12894, -60086, -22892, -8027, -13998, -100011, -26456, -16376, -25318, -35465, -6891, -6845, -17532, -11727, -8208, -87281, -39291, -50635, -16641, -8844, -68306, -15451, -35613, -14633, -8419, -56214, -87482, -35790, -6681, -23871, -50440, -13548, -32821, -40158 };
		for (int ndx = 0; ndx < 100; ndx++)
		{
			Util.Check("Fixed32.TanFastest", Fixed32.TanFastest(input0[ndx]), output0[ndx], input0[ndx]);
		}
	}

	// Fixed64.Asin
	public static void Fixed64_Asin()
	{
		long[] input0 = new long[]{ 3425571571L, 3675751407L, -4225079539L, 1479822338L, 1393676666L, -4258383407L, 308474518L, 2841897835L, 557842150L, -833053630L, 469359590L, 3284911867L, -2881871743L, 3020969559L, -2352667163L, -536176138L, -789924578L, -1764803598L, -902159226L, -2099211862L, -2191149711L, 3640028095L, -2804284823L, -2709113347L, 4118691091L, -235881110L, -4051091959L, 3309540303L, -1011841906L, -4093898147L, 3252369359L, 1810846402L, -1283648782L, 1523350022L, -1293536174L, -2855571151L, 3941747623L, -3778899531L, -2956565291L, -932520754L, 786921322L, -3644902215L, 2574882131L, -1770048590L, 2467409527L, -2370688939L, 1598977218L, -3299861411L, -234943514L, 594825358L, -3133152623L, 191279378L, 3559846095L, -763352958L, -41637538L, 4080510771L, 2185068935L, 2779001103L, 1656098542L, -2665409519L, 4087675847L, 1293901510L, -441227554L, 356773002L, 209544306L, 2953480483L, 273593354L, -110254470L, 19538438L, -3792063307L, -182956466L, -1305992342L, -3103205603L, -4264605767L, 1408834110L, -2841214791L, -3229821331L, 3260731063L, -881555578L, 2194412735L, 2460108967L, 3543736747L, -750483478L, 2688300031L, 3334221771L, -1233877314L, 2545967603L, 3774671471L, -2729979735L, -1079079650L, -745672790L, -3132220775L, -1140030778L, 4003811523L, -725229306L, 3787987107L, 1091292634L, -2076858166L, 2315374399L, 3808896339L };
		long[] output0 = new long[]{ 3965411856L, 4411569628L, -5970653895L, 1510785884L, 1419371476L, -6185537255L, 308740340L, 3105512168L, 559422592L, -838367417L, 470298856L, 3739948128L, -3159122717L, 3350647812L, -2489792753L, -537578669L, -794447093L, -1818667069L, -908928553L, -2193305905L, -2299434105L, 4343399596L, -3055602025L, -2931479041L, 5511742072L, -235999845L, -5292213523L, 3778381800L, -1021443513L, -5427118275L, 3689781312L, 1869306040L, -1303570733L, 1557245788L, -1313935625L, -3123782941L, 4992478188L, -4619379219L, -3260961949L, -940007317L, 791391916L, -4352598359L, 2761194028L, -1824421913L, 2628430480L, -2511369333L, 1638427512L, -3763228315L, -235060837L, 596743456L, -3511487043L, 191342660L, 4196326552L, -767430053L, -41638185L, 5383542124L, 2292367504L, 3022331456L, 1700152984L, -2875453413L, 5406694080L, 1314318756L, -442007357L, 357184584L, 209627520L, 3256711080L, 273778724L, -110266577L, 19538504L, -4647244651L, -183011837L, -1327004605L, -3467938751L, -6235528247L, 1435406336L, -3104601265L, -3655417011L, 3702606160L, -887865773L, 2303228980L, 2619517680L, 4167674696L, -754355937L, 2904724516L, 3817319980L, -1251512945L, 2725180004L, 4610499964L, -2958438509L, -1090767225L, -749470577L, -3510124895L, -1153860773L, 5155987900L, -728720597L, 4638579904L, 1103389776L, -2167725725L, 2445367204L, 4683380572L };
		for (int ndx = 0; ndx < 100; ndx++)
		{
			Util.Check("Fixed64.Asin", Fixed64.Asin(input0[ndx]), output0[ndx], input0[ndx]);
		}
	}

	// Fixed64.AsinFast
	public static void Fixed64_AsinFast()
	{
		long[] input0 = new long[]{ 1650685002L, -2585735607L, 975567446L, -737847502L, -3517185471L, 2467807015L, -1000482314L, 3529484567L, 2122780226L, -1495390042L, 3015364807L, 3219305167L, -634410614L, 3756653103L, -830551190L, -3751028195L, -2250582307L, 1165439710L, 1317518526L, -2851545675L, -3887454415L, 793889178L, -1675242030L, -3196349207L, 1248576778L, -1345702986L, 4129005731L, -2812049831L, 755590834L, 1915814298L, 362459870L, 3142004131L, -3349610631L, -395484622L, -3751239563L, 750877278L, -1726797994L, 4282331319L, 1910518206L, -3428552539L, 4061572295L, 3311450331L, -2643076051L, 3060377603L, 200522838L, 329989338L, 1797157134L, -601716586L, 539395418L, -1269168406L, 1743602118L, 4220820219L, 900590602L, 871952778L, 3401383459L, -3438171471L, 3384473719L, -123050642L, 2308543015L, 2123484810L, 2633768579L, -2483399779L, -1521073562L, -4088001367L, 2437117383L, 4168327971L, 2273948503L, 4056041303L, 3212925371L, 2713538827L, 2270737095L, -2237946331L, 3549888799L, 451103770L, -2618150675L, -2903937451L, -858002066L, -440652338L, 898095250L, -3376379855L, 1152107174L, 435755022L, 943522046L, -2270208055L, -4122755115L, 436606946L, -2053553766L, 73403886L, 498099214L, 3981899203L, 1661370854L, 2691219943L, -2321178991L, 4082000691L, -1767353822L, 2250004779L, 537556598L, -2850041979L, -3671707075L, 327162162L };
		long[] output0 = new long[]{ 1694312688L, -2774728241L, 984140348L, -741509865L, -4121049331L, 2628875532L, -1009741765L, 4142555288L, 2220382032L, -1527393557L, 3342799892L, 3639503528L, -636730345L, 4573008644L, -835798141L, -4561431751L, -2368866061L, 1180223060L, 1339102604L, -3118411837L, -4860415619L, 798462832L, -1720948445L, -3604969879L, 1266855548L, -1368751137L, 5548654884L, -3065867673L, 759526840L, 1985849348L, 362889548L, 3524420644L, -3841855175L, -396043445L, -4561865747L, 754739276L, -1777099157L, 6416982904L, 1979934588L, -3970377123L, 5324108064L, 3781414868L, -2847008541L, 3406414172L, 200594540L, 330313052L, 1854255804L, -603694009L, 540816164L, -1288394381L, 1795470352L, 5947311456L, 907306180L, 878037984L, 3925584012L, -3986384419L, 3898008560L, -123066929L, 2437244684L, 2221192484L, 2835211936L, -2647956057L, -1554826377L, -5407763387L, 2591494668L, 5700951188L, 2396349248L, 5307189556L, 3629874820L, 2937160444L, 2392565608L, -2354048289L, 4178582020L, 451934112L, -2815473765L, -3189005237L, -863795329L, -441426165L, 904754212L, -3884889235L, 1166376920L, 436503268L, 951263516L, -2391942497L, -5526151443L, 437359600L, -2141169685L, 73407304L, 499217504L, 5096497156L, 1705894564L, 2908440140L, -2452243773L, 5388336348L, -1821496877L, 2368188132L, 538962696L, -3116400973L, -4403784919L, 327477576L };
		for (int ndx = 0; ndx < 100; ndx++)
		{
			Util.Check("Fixed64.AsinFast", Fixed64.AsinFast(input0[ndx]), output0[ndx], input0[ndx]);
		}
	}

	// Fixed64.AsinFastest
	public static void Fixed64_AsinFastest()
	{
		long[] input0 = new long[]{ 2351008131L, 2036083126L, 480325338L, 2120823886L, 755061794L, -313418846L, -3624035875L, -3845480463L, -804863842L, 2010353614L, 1714797890L, -469841238L, 3273821403L, 1389955574L, -3323589659L, -2096953738L, 868045470L, -3545832803L, -4260213547L, -2294456859L, 1926914442L, -2094422678L, -737025206L, 3525993463L, -3242799323L, 3874484447L, -4211734635L, 3762855403L, -2076509702L, -573188158L, 853473246L, -2302927383L, -1063912558L, -3724034207L, -1432420690L, 3410991343L, 4250396979L, 3117665455L, 1269697446L, 485631026L, -234324474L, -2503040599L, -3416699567L, 2782712895L, -2027865982L, -2163755203L, 3712365835L, 583832730L, 3110623055L, -3965367379L, -2913007987L, -211577894L, -2884795727L, 2917717079L, 2695215015L, 150463514L, -1521858962L, 1249299170L, 1068655914L, 1175544642L, -396651506L, -3091923983L, 2525996535L, 4063291611L, -3138086927L, -277242022L, -3700895975L, 2702888315L, -1472591030L, -2439613707L, -2052383422L, 2045347310L, -520562954L, -450877278L, 2234834911L, 134987746L, -2972690407L, 775229194L, 1258892150L, 3215923175L, -4132848683L, -500600070L, -3642734947L, -2406109619L, -1955147466L, -3229916155L, -3713098951L, 313337658L, -2124281926L, 2712083091L, 637883010L, -1293869486L, -2245957755L, -4200814491L, -3412684763L, -1437367786L, -734069838L, -3185023883L, 1625832526L, 2544343335L };
		long[] output0 = new long[]{ 2489173928L, 2122106296L, 481266036L, 2219176716L, 758665552L, -313719625L, -4312046171L, -4763399963L, -809251981L, 2092861096L, 1763842304L, -470724861L, 3723348328L, 1414752112L, -3800501431L, -2191714565L, 873594768L, -4169894263L, -6199940959L, -2421928145L, 1998718444L, -2188808177L, -740371389L, 4134963032L, -3676063507L, 4829696812L, -5900113127L, 4584970112L, -2168268961L, -574758401L, 858737392L, -2431960825L, -1074441433L, -4505433327L, -1459751457L, 3940445516L, 6127415364L, 3490431232L, 1288221684L, 486601608L, -234478409L, -2673238777L, -3949804879L, 3026774636L, -2112755069L, -2268810381L, 4482077876L, 585490704L, 3480180640L, -5053357303L, -3200184145L, -211702537L, -3162043721L, 3206585864L, 2913765560L, 150530920L, -1555117373L, 1266884296L, 1079334568L, 1190014456L, -397204737L, -3453041691L, 2701478532L, 5330200300L, -3520255779L, -277466065L, -4459384163L, 2923579604L, -1502482641L, -2595840541L, -2140687909L, 2132661872L, -521747945L, -451664173L, 2351694272L, 135044648L, -3282129465L, 779137368L, 1276914616L, 3635550040L, -5563585787L, -501658721L, -4347159763L, -2555313597L, -2030456061L, -3656593215L, -4483534907L, 313638244L, -2223163021L, 2935363068L, 640041852L, -1313551913L, -2364746613L, -5846052467L, -3943219103L, -1465005221L, -737375109L, -3589443563L, 1667060828L, 2724138392L };
		for (int ndx = 0; ndx < 100; ndx++)
		{
			Util.Check("Fixed64.AsinFastest", Fixed64.AsinFastest(input0[ndx]), output0[ndx], input0[ndx]);
		}
	}

	// Fixed32.Asin
	public static void Fixed32_Asin()
	{
		int[] input0 = new int[]{ -42081, -50132, -34157, 19153, 36346, -10122, -60821, 28397, -55116, -26470, -17880, 30485, 65389, 32771, 15463, -63949, -57131, 9721, 26298, -64134, -13108, 4283, 8120, 1682, 18577, 53961, -55, -9379, -20342, -9502, -52275, -62296, 52556, 45921, 25616, 52606, -39017, -9201, -7524, 45825, -53999, -19518, -5638, 59592, -6272, 44784, -19596, -1505, -14026, -53659, -30337, 44613, -9361, 23407, -13603, 19171, 7282, 29695, -64959, 47920, 55469, 14094, -16796, 19922, -39730, -21120, 43464, -46067, -58380, 28393, 40603, 17606, -48289, 46008, 55400, -59126, -55613, 14064, -57580, 39329, 8022, -64085, -60888, -32218, -44701, -31352, 12601, -36386, -6011, -59091, -20212, -3176, -9778, 10091, 55891, -2557, 62813, 39974, 33786, -50688 };
		int[] output0 = new int[]{ -45695, -57080, -35931, 19436, 38527, -10163, -77933, 29370, -65480, -27249, -18110, 31707, 98553, 34318, 15610, -88492, -69388, 9757, 27060, -89364, -13198, 4286, 8140, 1682, 18835, 63395, -55, -9412, -20684, -9536, -60516, -82251, 60983, 50880, 26317, 61067, -41793, -9232, -7541, 50746, -63463, -19819, -5645, 74816, -6282, 49305, -19901, -1506, -14136, -62867, -31541, 49071, -9394, 23935, -13703, 19455, 7297, 30818, -94241, 53744, 66136, 14204, -16986, 20242, -42685, -21504, 47519, -51086, -72032, 29365, 43789, 17824, -54289, 51002, 66007, -73717, -66409, 14174, -70316, 42181, 8042, -89128, -78114, -33682, -49192, -32691, 12679, -38576, -6020, -73636, -20547, -3178, -9815, 10131, 66937, -2558, 83985, 42991, 35496, -57950 };
		for (int ndx = 0; ndx < 100; ndx++)
		{
			Util.Check("Fixed32.Asin", Fixed32.Asin(input0[ndx]), output0[ndx], input0[ndx]);
		}
	}

	// Fixed32.AsinFast
	public static void Fixed32_AsinFast()
	{
		int[] input0 = new int[]{ -64216, -39064, -8661, 23115, -28726, 17592, 27366, 10165, 33542, -20013, 9248, 58753, 21740, -38752, -25638, 54019, 9447, -50113, -911, 57157, 31813, 14314, 25479, -64825, -16930, -21756, -38151, 7155, 55652, -7577, -56403, -30052, 45813, 58643, 38009, -18448, 10111, -18468, 62043, 3242, 6817, -63099, -4392, -51533, -2803, -13430, 40619, -36562, -29806, -63663, 53530, 47390, -24649, 42165, -16965, -12994, 992, -9371, -25489, 58565, -9792, -45324, 20048, -24415, -29145, -26235, -52595, 28632, -11225, 58346, -21627, -37620, -46621, 61381, -15195, 29377, -46828, 11476, 3514, 62035, 3160, 63946, -28574, 53780, 4427, -38258, 60133, -61887, 10073, -14531, 46094, -46053, -58514, -62057, -52501, -13394, -17612, -45512, 43147, -42104 };
		int[] output0 = new int[]{ -89769, -41851, -8687, 23623, -29737, 17810, 28231, 10206, 35211, -20338, 9278, 72863, 22159, -41463, -26342, 63497, 9479, -57051, -912, 69439, 33217, 14430, 26169, -93282, -17124, -22177, -40721, 7169, 66482, -7594, -67931, -31220, 50729, 72615, 40546, -18701, 10151, -18722, 81450, 3243, 6829, -85016, -4396, -59301, -2804, -13526, 43809, -38787, -30944, -87238, 62642, 52972, -25271, 45803, -17161, -13081, 992, -9404, -26181, 72441, -9829, -50050, 20374, -25019, -30204, -26993, -61050, 29631, -11281, 71957, -22041, -40070, -51869, 79481, -15335, 30462, -52164, 11535, 3515, 81425, 3161, 88478, -29568, 63077, 4430, -40853, 76145, -80972, 10112, -14653, 51123, -51067, -72329, -81495, -60892, -13489, -17831, -50311, 47097, -45725 };
		for (int ndx = 0; ndx < 100; ndx++)
		{
			Util.Check("Fixed32.AsinFast", Fixed32.AsinFast(input0[ndx]), output0[ndx], input0[ndx]);
		}
	}

	// Fixed32.AsinFastest
	public static void Fixed32_AsinFastest()
	{
		int[] input0 = new int[]{ -26370, -53549, 40199, -22617, 23500, 25614, 28476, -20495, -8174, 19192, -31702, 55051, 52650, -21989, -10131, -8203, 48785, 31804, 36692, -56422, -20832, -56244, -46976, -62229, -53284, -41109, -44641, -50099, 48347, 63734, -18545, 64220, 33865, -19917, 22870, -8825, -41788, 59578, -35255, 44348, -1198, 15092, 11823, 56417, -48365, 56579, -33168, 29011, 13610, 21237, 3355, 16119, -16669, 34034, 44263, -35661, 58962, 36893, -34868, -925, 4720, 13040, -3306, -6373, -27798, -30386, -44349, 7031, 20676, 64230, -31950, 54743, 1524, 57879, 10312, 29611, -2531, -37857, 51671, -44327, 57594, -8116, 1825, -38425, -5157, 30871, 15353, 65366, 1355, -7003, -2252, -13145, 28911, 31205, -25907, 51296, -47136, -47339, 18679, 47556 };
		int[] output0 = new int[]{ -27138, -62654, 43284, -23083, 24027, 26312, 29462, -20834, -8194, 19466, -33105, 65337, 61123, -22415, -10169, -8223, 55046, 33221, 38964, -67948, -21190, -67600, -52396, -82047, -62197, -44440, -49093, -57036, 54396, 87551, -18791, 89795, 35607, -20226, 23352, -8850, -45312, 74779, -37246, 48693, -1199, 15219, 11882, 67938, -54424, 68257, -34796, 30059, 13702, 21616, 3357, 16276, -16844, 35805, 48578, -37729, 73330, 39206, -36787, -926, 4724, 13120, -3308, -6383, -28710, -31607, -48696, 7043, 21024, 89846, -33389, 64773, 1524, 70935, 10351, 30732, -2533, -40379, 59513, -48666, 70331, -8136, 1825, -41076, -5163, 32156, 15487, 98221, 1355, -7016, -2253, -13228, 29947, 32536, -26632, 58911, -52627, -52922, 18930, 53236 };
		for (int ndx = 0; ndx < 100; ndx++)
		{
			Util.Check("Fixed32.AsinFastest", Fixed32.AsinFastest(input0[ndx]), output0[ndx], input0[ndx]);
		}
	}

	// Fixed64.Acos
	public static void Fixed64_Acos()
	{
		long[] input0 = new long[]{ 2319514003L, 1660388882L, -3748711571L, 977539378L, -809248950L, 927242454L, -3338487511L, -590637962L, -2740301339L, -3334705759L, 2123740870L, 2050276490L, 3326433295L, -3675110167L, 459764054L, -3453666615L, -3560026019L, -1993420106L, 4215290151L, 450005682L, 1297400650L, -2895423711L, -3922945867L, -2480932879L, 62028514L, 3062585651L, -2602050559L, 2349753139L, 1196092246L, 1608988750L, 734758602L, -1358443266L, 589747474L, -4025268967L, -929575834L, -2180832179L, -1078199594L, 3437091243L, 2585944635L, 3029722879L, 1066701818L, -2698152839L, 2729217107L, -871438538L, 1712217538L, 2097074782L, 107010518L, 1274885854L, -2709618283L, -2539175711L, 2626850623L, 3199253387L, -3022760731L, -3520802691L, -2475699567L, 919970418L, 1288367454L, 3027188603L, -3379456431L, 423132694L, -765674282L, -1393273354L, 2508237087L, -54322794L, 225502934L, -812783158L, -2834438279L, 3056734967L, 1549432962L, -1654371062L, 1919500274L, -2702149967L, -284397446L, -3109400023L, 3678271159L, -299413806L, -1329673522L, 1243459966L, 101816878L, 2259921027L, -1339392162L, 418030882L, 764404126L, -559699338L, 3277105423L, 1830472510L, -2630649831L, -184417130L, 2745397895L, 2445421043L, 825767662L, 189579098L, 2521580379L, -2132155354L, -499570134L, -1834992122L, -911422630L, -1511427394L, 3198025823L, -1769966598L };
		long[] output0 = new long[]{ 4296234892L, 5041714896L, 11303224040L, 5760336652L, 7560634181L, 5811918068L, 10570612628L, 7339034461L, 9718344513L, 10564606720L, 4525044868L, 4609102496L, 2941532796L, 11156849096L, 6285872164L, 10758845912L, 10943167004L, 8819490597L, 828582032L, 6295685732L, 5428529980L, 9923954089L, 11692240828L, 9391493569L, 6684488188L, 3336922396L, 9541759385L, 4260208244L, 5534400256L, 5097298948L, 6008128260L, 8128696113L, 6154902264L, 11962890288L, 7683509517L, 9033966789L, 7836376881L, 2761953384L, 3971486256L, 3383539160L, 5668534724L, 9663891901L, 3789068112L, 7624050089L, 4985360376L, 4555662160L, 6639497260L, 5452127692L, 9678648641L, 9463271617L, 3920019500L, 3137194524L, 10099687261L, 10873877944L, 9385085897L, 5819364316L, 5438002548L, 3387113108L, 10636357124L, 6322698676L, 7516307905L, 8165463949L, 4068002168L, 6800843089L, 6520912188L, 7564233133L, 9842092301L, 3345259180L, 5161341816L, 8444799745L, 4756584504L, 9669031797L, 7031124533L, 10223427308L, 2330073324L, 7046175705L, 8098404865L, 5484998020L, 6644692440L, 4366674020L, 8108629625L, 6327825128L, 5978020600L, 7307814553L, 3018667932L, 4855543384L, 9577822345L, 6930992693L, 3768070180L, 4144893748L, 5915577180L, 6556878144L, 4051541920L, 8977679849L, 7247222361L, 8642491757L, 7664924441L, 8291020145L, 3139033980L, 8570850773L };
		for (int ndx = 0; ndx < 100; ndx++)
		{
			Util.Check("Fixed64.Acos", Fixed64.Acos(input0[ndx]), output0[ndx], input0[ndx]);
		}
	}

	// Fixed64.AcosFast
	public static void Fixed64_AcosFast()
	{
		long[] input0 = new long[]{ 636545766L, 1345242846L, 4020420187L, 3239720075L, -163708690L, 1034033294L, -811316462L, -4208328003L, -2904106555L, 2118681534L, -2045323354L, -4250059807L, -1369595570L, -1344410162L, -2532442439L, 3111262131L, 2137289814L, -1227030870L, 963539078L, 2689997719L, -2477100623L, 1644946146L, -3983630223L, 3398979215L, 1814828570L, -2565046119L, -928763050L, -2447209387L, 1685137406L, 1218295986L, -3682958471L, -4113213423L, 2340401439L, -2423183819L, -2671592035L, 1610332286L, 692577990L, 1819651346L, 3898976647L, -2051895166L, -1653178322L, -2717289123L, -1575277870L, -3668250935L, 195777102L, 780860174L, -2735792627L, -428976754L, -3894680211L, 684135030L, 322685358L, -3979359055L, 1820000822L, -3786939191L, -3587833271L, 3286566915L, 1033905774L, -3673526323L, -2870075791L, -1893629866L, -2332170951L, -2659074371L, -1598498114L, 172564754L, 1506672710L, -2227077227L, -2295493951L, -3241379047L, -2967785423L, 152192570L, -1876283154L, -3977328827L, -831040222L, -1279533050L, 48208746L, -4054778795L, -1074743278L, 3979588007L, -1091765182L, -3260998899L, -4124220787L, 3795180999L, -2847496471L, -3293964919L, -3399356667L, -3998566711L, -1638246950L, 1832373334L, -3130317843L, -1663191654L, -3718540783L, 71137018L, 394759842L, 1497639218L, -4014691511L, -3289071247L, 3176176287L, 2547124671L, -879956350L, -1872112966L };
		long[] output0 = new long[]{ 6107629712L, 5378252296L, 1544005180L, 3076039148L, 6910266289L, 5702244508L, 7562721149L, 12628896328L, 9935753645L, 4530849624L, 8878324265L, 12871403676L, 8140456929L, 8113908533L, 9454886405L, 3266947440L, 4509429504L, 7990872777L, 5774725680L, 3839647000L, 9386759525L, 5058420864L, 11847641932L, 2824869472L, 4872784884L, 9495393669L, 7682659509L, 9350280801L, 5014817624L, 5511277132L, 11172080804L, 12239080964L, 4271393072L, 9321116429L, 9629829165L, 5095826512L, 6050917340L, 4867461920L, 1858822820L, 8885800545L, 8443532761L, 9688520661L, 8359462737L, 11143650556L, 6550675076L, 5961309312L, 9712473297L, 7176209381L, 11623998804L, 6059470372L, 6423530928L, 11836249928L, 4867076076L, 11382865772L, 10993311992L, 3003970264L, 5702375892L, 11153812680L, 9889779573L, 8707618609L, 9211837589L, 9613863857L, 8384452773L, 6573908632L, 5207083128L, 9087846061L, 9168308933L, 10419526948L, 10023013025L, 6594295232L, 8688313957L, 11830860864L, 7582815437L, 8045767385L, 6698309116L, 12049873132L, 7832790305L, 1656179000L, 7850381581L, 10449559692L, 12277910376L, 2092631440L, 9859517653L, 10500579008L, 10668785636L, 11888080408L, 8427366893L, 4853405712L, 10253831156L, 8454388197L, 11242178140L, 6675378720L, 6351203264L, 5216725688L, 11932839924L, 10492960188L, 3171642760L, 4019944724L, 7632732337L, 8683679265L };
		for (int ndx = 0; ndx < 100; ndx++)
		{
			Util.Check("Fixed64.AcosFast", Fixed64.AcosFast(input0[ndx]), output0[ndx], input0[ndx]);
		}
	}

	// Fixed64.AcosFastest
	public static void Fixed64_AcosFastest()
	{
		long[] input0 = new long[]{ -1218613170L, -3789380875L, -1756158626L, 248094514L, -1734549110L, 5046890L, 1146648462L, -1195433422L, 459819358L, -3828021771L, 66342898L, 1349285062L, 1713206154L, -3904044187L, -2064376374L, -1832384654L, -4106545195L, -2599500491L, -723045874L, 1210272126L, 3706137019L, 167100010L, 4183906091L, 2990373527L, -424233942L, 2347547123L, -77121374L, 1966287854L, -1559808834L, -957687302L, -2935987787L, 673099346L, 564577062L, -3514619511L, 2252581567L, 3960127383L, 1256372330L, 1199376310L, 2735551487L, 890563738L, -850247878L, 3852153767L, -2922413319L, -3597263367L, 2565432743L, -772858550L, 2652898159L, 3836734L, -732951702L, 2112660438L, -3477493347L, 1480709482L, -1024796750L, 2204738819L, -1283282690L, 2909254115L, -3678319671L, -451564858L, -3622638839L, 212871062L, -4212799031L, 3475327903L, -3930591883L, -2877460635L, 3402933311L, 3688210847L, -3510259295L, 932858370L, -1861658458L, -1729536462L, 1206210310L, -1010954210L, -1040084682L, 2681357683L, -2234447291L, 4148950547L, -1205453966L, 3486202163L, -3870026511L, -3946342687L, 3989616259L, 4214009187L, -1595727738L, 622498022L, -1775161250L, -121729974L, -2597071199L, 2654805539L, 2063630474L, 3638294747L, 3343479759L, -2587030107L, 527047854L, -1772286870L, 808395474L, -30608486L, 3487778355L, 4250014611L, -2705229383L, 3172189191L };
		long[] output0 = new long[]{ 7981368641L, 11387278388L, 8555688729L, 6498250152L, 8531979565L, 6741470244L, 5586506664L, 7957220081L, 6285868016L, 11471010592L, 6680152856L, 5374704080L, 4984416624L, 11646128804L, 8900905313L, 8639809249L, 12216875808L, 9539281769L, 7472720529L, 5520363592L, 2276788716L, 6579338540L, 978205168L, 3439748180L, 7171417269L, 4261478600L, 6823667605L, 4703506924L, 8342355697L, 7711756525L, 9978042909L, 6070881028L, 6180440024L, 10861649632L, 4373988560L, 1706803908L, 5472239668L, 5531712912L, 3780961528L, 5849943808L, 7601969197L, 1968054344L, 9959499385L, 11009066864L, 3996231916L, 7523248877L, 3886565564L, 6742680812L, 7482760437L, 4536744716L, 10797859024L, 5235380348L, 7780665597L, 4430028628L, 8048970585L, 3551430436L, 11161785228L, 7198873973L, 11055959772L, 6533521616L, 12652085840L, 2698856080L, 11711152832L, 9898703841L, 2819237076L, 2312012304L, 10854083612L, 5806708544L, 8672323481L, 8526488377L, 5524595556L, 7766429317L, 7796402477L, 3850432212L, 9097758673L, 1122248508L, 7967654261L, 2680341840L, 11565883692L, 11750816416L, 1628685348L, 834709060L, 8381042317L, 6122014308L, 8576587493L, 6868297741L, 9536243053L, 3884151080L, 4592985044L, 2407738244L, 2914695964L, 9523699197L, 6218242708L, 8573423281L, 5933675372L, 6777137661L, 2677648384L, 621760216L, 9673096185L, 3176090256L };
		for (int ndx = 0; ndx < 100; ndx++)
		{
			Util.Check("Fixed64.AcosFastest", Fixed64.AcosFastest(input0[ndx]), output0[ndx], input0[ndx]);
		}
	}

	// Fixed32.Acos
	public static void Fixed32_Acos()
	{
		int[] input0 = new int[]{ -23766, -39290, -37070, -50329, -51704, 27899, -27071, 8984, 2200, -17353, -2750, -43785, -13374, -60596, 7907, -63046, 11842, -3938, 48716, -11753, 30369, -28535, 48281, -18386, -11872, -7655, 42067, -54363, -36956, 31908, -55447, -17707, 28937, -41919, 29086, 34630, 35835, -39555, -4332, 10549, -40321, 16923, -27227, -16694, -7269, 29267, 39435, 3102, 30585, 9846, 53226, -8378, -49402, 36011, -47502, -60767, -22036, 46851, 27078, 21487, 51367, -38244, -19594, 35828, -27441, -50578, -7187, -36990, -24146, 38812, -33346, -14138, -65141, -27369, -36968, -52089, 64228, -560, 54418, 24396, 18444, -26570, -19413, 18733, 44217, 18466, -33841, 58462, -59953, 24317, -8868, 54519, -1098, 39716, 24717, 63458, -29018, 2479, -54788, -22226 };
		int[] output0 = new int[]{ 127264, 145076, 142344, 160330, 162521, 74124, 130850, 93931, 100743, 120506, 105694, 150893, 116412, 180278, 95017, 187764, 91036, 106884, 48020, 114760, 71367, 132467, 48667, 121579, 114881, 110616, 57267, 167053, 142206, 69617, 169039, 120873, 72972, 148427, 72806, 66457, 65028, 145408, 107278, 92348, 146374, 85826, 131021, 119823, 110227, 72604, 60629, 99840, 71123, 93060, 40825, 111344, 158901, 64818, 156078, 180731, 125417, 50746, 75029, 81051, 43911, 143779, 122842, 65037, 131257, 160720, 110145, 142247, 127672, 61405, 137927, 117193, 198688, 131178, 142221, 163151, 13115, 103503, 38735, 77945, 84247, 130301, 122652, 83945, 54410, 84224, 138504, 30730, 178640, 78031, 111838, 38553, 104041, 60276, 77599, 16547, 133004, 100464, 167821, 125619 };
		for (int ndx = 0; ndx < 100; ndx++)
		{
			Util.Check("Fixed32.Acos", Fixed32.Acos(input0[ndx]), output0[ndx], input0[ndx]);
		}
	}

	// Fixed32.AcosFast
	public static void Fixed32_AcosFast()
	{
		int[] input0 = new int[]{ -29080, 10890, -38286, 57309, -22343, 1829, -8772, 43503, 7443, -60948, -59459, 44059, 57968, -62853, -62493, 12402, 46704, 27208, 57147, 19627, 48798, -114, -42573, 17071, -17854, -22330, 52496, -39322, 13448, -34890, 42464, -3787, -11307, 11109, -12058, -57981, -53820, -11186, -24459, -23147, -38297, -11808, -14517, -64541, 18240, 12607, 62086, -3780, 36673, -53220, -48782, 9309, 10868, -8879, -5489, 36569, -12072, 10177, 9627, 65522, 14869, -34986, -35481, -23201, -37877, 9864, -10168, -18676, 14740, 61023, 686, -7644, -13868, 14758, -7611, -4928, -51132, -43567, 64367, 35074, -18880, -9259, -10459, 1133, -51644, -32380, 50879, 63107, -48936, 16908, 19627, 1537, 44722, -24445, 27519, 62225, -41863, -56851, 38872, -57160 };
		int[] output0 = new int[]{ 133074, 92003, 143830, 33191, 125744, 101114, 111741, 55371, 95484, 181219, 177441, 54624, 31806, 187069, 185838, 90466, 50956, 74885, 33524, 83010, 47897, 103057, 149282, 85673, 121026, 125730, 42060, 145116, 89399, 139735, 56748, 106732, 114307, 91781, 115070, 174108, 166091, 114184, 128009, 126601, 143843, 114816, 117581, 194452, 84459, 90257, 21359, 106725, 64023, 165051, 157965, 93603, 92025, 111849, 108439, 64148, 115084, 92725, 93281, 1354, 87944, 139849, 140436, 126659, 143327, 93042, 113152, 121881, 88076, 24463, 102257, 110605, 116917, 88058, 110571, 107876, 161599, 150601, 12396, 65933, 122094, 112233, 113447, 101810, 162424, 136811, 44691, 17898, 158196, 85842, 83010, 101406, 53722, 127994, 74543, 20920, 148353, 171763, 61332, 172389 };
		for (int ndx = 0; ndx < 100; ndx++)
		{
			Util.Check("Fixed32.AcosFast", Fixed32.AcosFast(input0[ndx]), output0[ndx], input0[ndx]);
		}
	}

	// Fixed32.AcosFastest
	public static void Fixed32_AcosFastest()
	{
		int[] input0 = new int[]{ -42760, 15227, 47014, 41186, 11628, 24398, -42358, 61645, 64268, 64974, 22165, -34040, 11346, 40089, 18867, -41407, 41009, 28921, -37093, 60039, 24521, -7739, -35276, 63368, -24139, 64685, 13169, -54958, 52775, -4300, -28600, -59817, -16904, 55991, 12298, 31427, 9261, 13889, 55040, -10507, -55558, 54769, 64375, -48374, 60278, -11867, 55727, -60903, 22223, 3390, -44320, -5248, 45777, 44368, -16145, 30515, -15032, 49182, -210, 12479, -54306, -52935, -56665, 3033, 28039, 16447, 48399, 20891, -37745, 52975, 14866, -38416, 39416, 38949, 50062, 35287, -6579, -52437, -62446, 53264, -56578, 8536, -11645, -16150, -25516, 42183, -40059, 4263, 6601, 47319, -19075, 25615, -51435, -22974, -21736, 62912, 45899, -4193, -10878, -21704 };
		int[] output0 = new int[]{ 149520, 87585, 50493, 58406, 91259, 77949, 148994, 22683, 12904, 8585, 80342, 138756, 91545, 59797, 83817, 147764, 58632, 72984, 142392, 27032, 77817, 110699, 140213, 16890, 127658, 10568, 89691, 168110, 41610, 107247, 132544, 178304, 120030, 35834, 90578, 70153, 93654, 88956, 37626, 113492, 169227, 38123, 12346, 157380, 26427, 114870, 36339, 181106, 80280, 99551, 151599, 108197, 52279, 54222, 119246, 71191, 118101, 47303, 103153, 90394, 166928, 164546, 171372, 99909, 73966, 86329, 48470, 81692, 143185, 41273, 87956, 144007, 60640, 61221, 45964, 65660, 109533, 163712, 185693, 40781, 171199, 94385, 114645, 119251, 129149, 57120, 146051, 98677, 96332, 50051, 122287, 76630, 162077, 126407, 125089, 18595, 52108, 107140, 113867, 125055 };
		for (int ndx = 0; ndx < 100; ndx++)
		{
			Util.Check("Fixed32.AcosFastest", Fixed32.AcosFastest(input0[ndx]), output0[ndx], input0[ndx]);
		}
	}

	// Fixed64.Atan
	public static void Fixed64_Atan()
	{
		long[] input0 = new long[]{ 345290522L, -2011939982L, 2777289719L, 2279597123L, 3542883075L, 3908020327L, 1367803666L, -3847484827L, 3921825759L, 924215842L, -1863947086L, -1843610230L, 3020714599L, 790460826L, 230780006L, 176490822L, 1589013882L, 1639777202L, -2423940803L, 3368000999L, -591763102L, -1402466926L, -3358460955L, -1279870478L, 426962698L, 3590529939L, -3441711399L, -206105782L, -317827182L, 3452800795L, 3599536095L, 4138643083L, 1571357502L, 1624947978L, -1149527910L, 2599006163L, 2077126494L, 1252148134L, -306385418L, -1285293998L, -2898223919L, -3072797943L, 652541458L, 3803359599L, 670127186L, -3701500119L, 2952989271L, 133606014L, 2558523339L, 2693947323L, -1760933806L, -2926680575L, -2145877446L, 214052106L, 3464282851L, -2547209847L, -2948446323L, -237807098L, -2442332871L, 4247320431L, 3054764431L, -2721057847L, 765309650L, -3825942331L, 1619647042L, -1707622874L, 879999562L, -2899200675L, -2354978559L, 1926741138L, 2394331623L, -3958101547L, -2348804675L, 3156320491L, 1971257622L, -1813932454L, 2239958911L, -2866853259L, 2344969631L, -166504478L, -3657426627L, 719649882L, 1530338174L, 1283192790L, 918767306L, 2231249375L, 1989553234L, -2937661899L, 2455632423L, -2897285359L, 1252485190L, -1980033702L, -600486290L, -258738554L, -45091134L, 4117801223L, 456859702L, 183516494L, -2111254738L, -1917217234L };
		long[] output0 = new long[]{ 344549492L, -1881553981L, 2465346664L, 2095736916L, 2962391972L, 3170809592L, 1324187236L, -3137459309L, 3178350008L, 910334268L, -1758597981L, -1741454789L, 2632588532L, 781713092L, 230558284L, 176391576L, 1521941072L, 1566419884L, -2206784741L, 2856222288L, -588060601L, -1355584809L, -2850308501L, -1243885045L, 425564512L, 2990591692L, -2901486517L, -205947789L, -317248937L, 2908231032L, 2995887488L, 3293657640L, 1506389760L, 1553462364L, -1123202029L, 2337242868L, 1934697632L, 1218378908L, -305867285L, -1248864509L, -2549531473L, -2667236537L, 647588948L, 3112853656L, 664767360L, -3055086725L, 2586939752L, 133562940L, 2307486988L, 2406057028L, -1671157497L, -2569024609L, -1990066161L, 213875144L, 2915196464L, -2299127025L, -2583853497L, -237564525L, -2220708293L, 3349303368L, 2655284764L, -2425457853L, 757360800L, -3125477889L, 1548823296L, -1625320497L, 867986516L, -2550202549L, -2154122301L, 1811156440L, 2184261956L, -3198048885L, -2149372637L, 2721974836L, 1848071236L, -1716331853L, 2064692684L, -2527902981L, 2146419380L, -166421137L, -3029668237L, 713026328L, 1470101880L, 1246935748L, 905125504L, 2057839844L, 1863159000L, -2576514877L, 2230744736L, -2548886501L, 1218689552L, -1855314669L, -596618917L, -258426233L, -45089473L, 3282824276L, 455148212L, 183404928L, -1962270509L, -1803221525L };
		for (int ndx = 0; ndx < 100; ndx++)
		{
			Util.Check("Fixed64.Atan", Fixed64.Atan(input0[ndx]), output0[ndx], input0[ndx]);
		}
	}

	// Fixed64.AtanFast
	public static void Fixed64_AtanFast()
	{
		long[] input0 = new long[]{ -286532386L, 1557222650L, -1806382722L, -3663185095L, -3995351595L, -2097799554L, 3717091395L, -1007230642L, 2537761779L, 983248010L, -492201462L, 4213374231L, 1712190566L, 2019138902L, 3609779763L, -1959852746L, 43571274L, 3777084155L, -449742342L, 3683364963L, 597791186L, -477305834L, -1059865802L, -3752660495L, -3620711347L, 79398030L, 937352038L, 2204901175L, -1093555670L, 2148423695L, 2024175138L, -2238524879L, 3539368775L, -32780430L, -4174939387L, -919681982L, -1768934690L, 898555974L, 983577090L, -1278400434L, 2809125275L, -1298183418L, -1180456382L, -2822582883L, 1889883398L, 1334078254L, 602743026L, 1675342102L, 426448978L, -2380205683L, -220737346L, 974742842L, -3661708459L, -1499652406L, 1779958874L, -4104193847L, -1677878842L, -2348689523L, 4252493547L, 220217670L, 1259815702L, -2782777075L, -4208642267L, -3905629211L, 3254040167L, -2548643879L, -3620961839L, -2549996299L, 1899110994L, 234494450L, 4104049239L, 3439982595L, -1501460230L, -3466309203L, -3420727607L, -2398992691L, -3591816747L, -2532250215L, -1347576598L, -659822306L, 3771622299L, 3556977231L, -2516515099L, -3008317283L, -1925806254L, -3245534999L, -2871783715L, 744053886L, 2482227991L, 4224221755L, -3536770435L, -3715212463L, 941029722L, -3531607875L, 1756751158L, 1296935054L, -1384508446L, -1569794466L, -1781655754L, 143559982L };
		long[] output0 = new long[]{ -286108177L, 1493912768L, -1709919673L, -3033004349L, -3218104881L, -1951422485L, 3064017476L, -989354373L, 2292131068L, 966593744L, -490065009L, 3332073036L, 1629264532L, 1887454764L, 3001897784L, -1838640689L, 43569780L, 3098082008L, -448110993L, 3044659264L, 593976592L, -475356953L, -1039106569L, -3084270753L, -3008296105L, 79388824L, 922882232L, 2037040628L, -1070804441L, 1992103332L, 1891577688L, -2063566261L, 2960299556L, -32779821L, -3312399161L, -906000661L, -1678002237L, 885780032L, 966906432L, -1242533185L, 2487719972L, -1260682809L, -1152012005L, -2497131809L, 1780373484L, 1293495996L, 598833544L, 1597376056L, 425057420L, -2173468785L, -220542617L, 958508516L, -3032149385L, -1442813545L, 1687418760L, -3275722893L, -1599577337L, -2149283029L, 3351917296L, 220024304L, 1225441284L, -2469214437L, -3329660349L, -3169501121L, 2784741044L, -2300188389L, -3008442529L, -2301188497L, 1788098200L, 234261224L, 3275647304L, 2900433184L, -1444424753L, -2916423425L, -2888677413L, -2187814845L, -2991349021L, -2288043365L, -1305795657L, -654704141L, 3095000140L, 2970765416L, -2276348005L, -2624282257L, -1810376681L, -2779332365L, -2531311521L, 736740304L, 2250733984L, 3337593844L, -2958751621L, -3062942965L, 926392184L, -2955673357L, 1667575624L, 1259538872L, -1339335061L, -1505013277L, -1688866673L, 143506008L };
		for (int ndx = 0; ndx < 100; ndx++)
		{
			Util.Check("Fixed64.AtanFast", Fixed64.AtanFast(input0[ndx]), output0[ndx], input0[ndx]);
		}
	}

	// Fixed64.AtanFastest
	public static void Fixed64_AtanFastest()
	{
		long[] input0 = new long[]{ 660072798L, -1142227970L, 4071198403L, -4103012767L, -2189287627L, 634247354L, -1818764222L, 4099568039L, -2373892095L, -116015730L, 3782590195L, -3440595923L, 3293854371L, 617348558L, 743562666L, 1997805766L, 4028705319L, 3094642311L, 2315144339L, 2204607871L, -3971827459L, -70048430L, -737256994L, 1969856534L, -523702410L, 3524294407L, -1796014422L, -2264819651L, -928093066L, -422695366L, 3280483051L, 2272945015L, 3544372835L, 2803830715L, 2975072191L, 618882974L, 3780746123L, -2708469627L, 3475937639L, 1734913686L, 2868196519L, -2676384459L, -1177021314L, -1696723574L, -3853335735L, 4198792783L, -2714099539L, -3971286131L, 19796754L, 4053912687L, 1563197030L, -184183462L, 410028490L, 308703670L, -179579854L, -3564846067L, 3889996319L, -2193625427L, 715656938L, -1418614738L, -1864705518L, -3848911867L, 732693810L, 2343770567L, 898468514L, -2785322115L, -2690001463L, -3804943639L, 1937243662L, -4170287603L, 2512026939L, 2442207651L, 3913671967L, -3714736643L, 3631378647L, 2999524295L, -3187994411L, -3335500715L, 1528224974L, -427527898L, 1943426650L, -2119695586L, 2010350890L, -687038458L, 2309074899L, -830300782L, -2432050771L, -1059298130L, -1311556726L, 2244950963L, 1023853950L, 1679404254L, 870840730L, 599585082L, -695348090L, 2422141091L, 885889026L, 774175414L, 1699775206L, 3226953675L };
		long[] output0 = new long[]{ 654829724L, -1116006057L, 3257456632L, -3274225473L, -2025110941L, 629594040L, -1720397333L, 3272414908L, -2169291517L, -116019889L, 3100201304L, -2900538061L, 2809998464L, 613057040L, 736091264L, 1870143640L, 3234892076L, 2682119332L, 2123970912L, 2037273120L, -3204381709L, -70063817L, -729971769L, 1847071808L, -521091341L, 2950836508L, -1701043409L, -2084729409L, -913748697L, -421345149L, 2801596136L, 2091091376L, 2962760796L, 2484793104L, 2602538076L, 614559376L, 3099165040L, -2417275197L, 2921893696L, 1648706628L, 2529575920L, -2394243093L, -1148428065L, -1615733325L, -3139643765L, 3324086204L, -2421300213L, -3204089613L, 19803232L, 3248300924L, 1498905156L, -184112657L, 408800748L, 308210780L, -179516905L, -2974863765L, 3159847344L, -2028558149L, 708986836L, -1369796709L, -1759258829L, -3137195017L, 725541440L, 2146120380L, 885423120L, -2471798005L, -2404037361L, -3112729513L, 1820006680L, -3309342721L, 2273767628L, 2221327848L, 3172811244L, -3061793389L, 3013810732L, 2618987428L, -2742768589L, -2836004129L, 1467919376L, -426128993L, 1825149716L, -1969420541L, 1880462436L, -681130573L, 2119258624L, -819952617L, -2213636681L, -1038215925L, -1272536509L, 2069130468L, 1004755556L, 1600714416L, 858936688L, 595653864L, -689224985L, 2206117412L, 873371596L, 765756816L, 1618375412L, 2767700420L };
		for (int ndx = 0; ndx < 100; ndx++)
		{
			Util.Check("Fixed64.AtanFastest", Fixed64.AtanFastest(input0[ndx]), output0[ndx], input0[ndx]);
		}
	}

	// Fixed32.Atan
	public static void Fixed32_Atan()
	{
		int[] input0 = new int[]{ 39578, -48891, -24621, -1600, -42008, 52123, 3007, -2597, 14836, 17026, 59785, 44716, 8745, -48092, 14235, -61645, -23869, -43872, -65006, -39157, 60145, 40653, 27489, 60840, -13720, -52831, -41558, -14967, 19463, -47084, -33284, 5078, -11296, 39615, 19433, 13009, 57813, -33260, -34010, 48646, 49858, 31022, 34536, 28496, 40005, 36442, -48655, -4155, 60449, -14501, -4707, -8145, 11283, -442, 54629, 64461, -10844, -19925, -53416, -54713, 28146, -47561, 43475, -3615, -15224, -10828, -9523, 34665, -1990, -64310, -53922, -56145, 55674, -48116, -23480, -36413, -59418, 64529, -44700, 15373, 61360, 28132, -9880, -31571, 23159, 40397, 59330, 54682, 50521, 20508, -41681, 12202, -45380, -44833, -45035, 31884, 53083, -27384, -21814, -14702 };
		int[] output0 = new int[]{ 35605, -42005, -23551, -1599, -37356, 44032, 3004, -2595, 14590, 16657, 48466, 39240, 8693, -41488, 14017, -49467, -22890, -38660, -51205, -35295, 48662, 36387, 26028, 49037, -13524, -44464, -37036, -14714, 18919, -40828, -30797, 5067, -11186, 35632, 18891, 12842, 47373, -30778, -31371, 41847, 42621, 28973, 31784, 26879, 35917, 33258, -41853, -4149, 48827, -14271, -4698, -8103, 11173, -441, 45539, 50929, -10746, -19343, -44817, -45589, 26584, -41142, 38385, -3611, -14958, -10731, -9456, 31885, -1989, -50853, -45120, -46423, 46151, -41504, -22546, -33236, -48265, 50964, -39229, 15099, 49315, 26573, -9806, -29421, 22261, 36201, 48217, 45570, 43039, 19875, -37124, 12063, -39691, -39319, -39457, 29674, 44616, -25938, -21058, -14462 };
		for (int ndx = 0; ndx < 100; ndx++)
		{
			Util.Check("Fixed32.Atan", Fixed32.Atan(input0[ndx]), output0[ndx], input0[ndx]);
		}
	}

	// Fixed32.AtanFast
	public static void Fixed32_AtanFast()
	{
		int[] input0 = new int[]{ -19570, -17785, 63370, 59223, -26114, -14098, 1716, -6135, -42498, 25507, 58344, -9838, -40760, -3253, -50537, -65522, 27855, 9510, 38761, 9913, -4622, 1330, 49680, 43037, 42907, -588, 54770, 34971, 62454, 10171, -23961, 33501, 20808, 35537, -30592, 13609, 30298, -3568, 60079, -28278, -26854, -69, 31644, -40521, 27700, 33692, -12572, 23409, -59831, -45049, -61507, -21962, -609, 33807, 55456, 44635, -1929, -45202, -49219, 40010, -3333, 32280, -3054, 12865, -16067, -40693, 34889, -10762, -38196, 1389, -30284, -34112, 14966, 1503, -28767, 60983, 35221, 24665, -50199, -56321, -53552, -34174, 29266, 41968, 6143, 63537, -31425, 52536, 45616, -9692, -49997, 9965, -19884, -45466, 40591, 6400, -62551, -46757, 41081, 2857 };
		int[] output0 = new int[]{ -19018, -17367, 50370, 48158, -24851, -13887, 1715, -6118, -37703, 24324, 47671, -9766, -36465, -3251, -43050, -51465, 26338, 9444, 35003, 9838, -4615, 1329, 42509, 38080, 37989, -588, 45622, 32124, 49894, 10090, -22972, 30969, 20148, 32563, -28622, 13418, 28379, -3565, 48626, -26697, -25487, -70, 29480, -36292, 26207, 31120, -12422, 22483, -48492, -39467, -49395, -21192, -609, 31211, 46024, 39184, -1929, -39571, -42216, 35920, -3331, 29994, -3052, 12703, -15757, -36417, 32060, -10667, -34584, 1388, -28369, -31452, 14713, 1502, -27108, 49114, 32318, 23590, -42838, -46526, -44899, -31501, 27524, 37328, 6125, 50456, -29303, 44285, 39850, -9623, -42710, 9889, -19306, -39750, 36342, 6379, -49945, -40613, 36695, 2855 };
		for (int ndx = 0; ndx < 100; ndx++)
		{
			Util.Check("Fixed32.AtanFast", Fixed32.AtanFast(input0[ndx]), output0[ndx], input0[ndx]);
		}
	}

	// Fixed32.AtanFastest
	public static void Fixed32_AtanFastest()
	{
		int[] input0 = new int[]{ 64339, 63726, -3929, 4315, 50771, 38141, 28606, 63423, -2961, 60009, -56122, 38941, -60539, -58434, 28026, -34695, -62521, 20513, -58813, -14068, 56268, 47888, 9157, 37031, -14149, 25286, 51308, -5102, 26447, 30368, 57998, 16442, 49120, 12479, -55124, -51742, 35291, -40584, 56732, 33537, -30605, -29312, -10038, 51142, -19105, -23402, 4968, -26985, -7957, 9750, 3386, -17528, -53479, -10385, 12124, -49085, -10967, 24574, -47071, -40050, 52368, -31826, -28560, 32206, -63524, -7029, 55357, -7483, 62225, 14233, -4450, 43598, 29316, -26815, -48999, 20045, -7609, 23550, -9398, -56282, -45218, 12757, -62681, -48838, -38553, 9991, 4386, -6030, -65181, 59497, 24760, -54818, -59049, 31247, 46705, -64314, 64783, 23291, 49131, 53459 };
		int[] output0 = new int[]{ 50860, 50544, -3925, 4309, 43196, 34553, 26972, 50387, -2960, 48571, -46399, 35148, -48860, -47706, 26483, -31918, -49916, 19874, -47916, -13854, 46482, 41362, 9096, 33717, -13931, 24129, 43529, -5093, 25135, 28440, 47462, 16103, 42155, 12327, -45821, -43797, 32381, -36350, 46747, 31004, -28636, -27565, -9959, 43426, -18584, -22473, 4959, -25598, -7918, 9677, 3383, -17122, -44849, -10298, 11985, -42134, -10864, 23506, -40828, -35963, 44178, -29633, -26935, 29939, -50440, -7003, 45956, -7451, 49759, 14010, -4444, 38482, 27567, -25452, -42079, 19446, -7575, 22603, -9333, -46491, -39592, 12595, -50000, -41976, -34861, 9912, 4380, -6014, -51292, 48292, 23669, -45642, -48047, 29161, 40586, -50848, 51088, 22373, 42162, 44836 };
		for (int ndx = 0; ndx < 100; ndx++)
		{
			Util.Check("Fixed32.AtanFastest", Fixed32.AtanFastest(input0[ndx]), output0[ndx], input0[ndx]);
		}
	}

	// Fixed64.Atan2
	public static void Fixed64_Atan2()
	{
		long[] input0 = new long[]{ -16786102L, -30757L, 3215892L, 128591543409L, -40557L, -7443466918L, 2608260910L, 63392975740L, -1924700L, -1227704803101L, 6095453330L, 18315596955L, -924069L, -18425L, 9723L, 2253344L, -564408L, -106014L, 310226199L, 38461015L, -706467311116L, -70485017L, 39336112L, 6611L, -813130717130L, -12344808L, 48001780645L, 3165121375048L, -38433957L, -48372L, 3639597651L, 32446718718L, -75241590506L, -207428625L, 4746428187L, 14895L, -1363430L, -225279L, 6373L, 176547572L, -1085452471685L, -18411847109L, 116810L, 15891L, -1164810L, -1596806805423L, 108665962321L, 2791824541107L, -8388487623L, -416946949L, 39643369020L, 154481985648L, -74739L, -35849785L, 3868768545523L, 1022852303277L, -3358280459L, -2089031L, 679222247849L, 14110601128L, -666005438882L, -3539325663L, 7084119L, 170894L, -1448773L, -806854244183L, 1045497435639L, 19133567043L, -16673386L, -2803557895662L, 7098L, 10760L, -71443L, -7547L, 152184280L, 164799L, -2591629L, -10631100L, 24379290126L, 2187096037908L, -487922320L, -73846359248L, 1620565L, 395907900985L, -5240646L, -101189487024L, 1864583337L, 9014284L, -230279777L, -19930300565L, 19050526L, 2803159331562L, -1424523L, -1939888L, 1138528316L, 1317195L, -11162753L, -2935730357831L, 47112105019L, 6200403L };
		long[] input1 = new long[]{ -5970573L, -16581956L, 49655278740L, 467550618739L, -21984908202L, -549682650861L, 363176324560L, 25553441L, -13951028811464L, -2320934512511L, 96736632612L, 377611799L, -29490249348L, -17296601836368L, 58809126L, 23760374L, -1698859206L, -8721857340L, 2996889719439L, 7333298130L, -482334109L, -37319102259L, 133639710L, 173522785283L, -44911942522L, -8847050L, 960819544794L, 3294349291276L, -4028889259L, -172701999L, 1618047521645L, 839811457L, -62625464882L, -2683865226L, 18278611771715L, 9511622390L, -157566430L, -39828715294L, 1313743676L, 84403500501L, -27524313L, -17510049959L, 5070712926L, 378964145893L, -29202921L, -33526529L, 4488587152L, 973892212L, -36419387L, -12830807052L, 9329422892999L, 9578008521715L, -45785302L, -752159973L, 10963005L, 6871392188L, -5329176424031L, -12290478043804L, 44712263L, 10672987340L, -24571409079049L, -4734866581390L, 272410554874L, 346951470189L, -6160720L, -494730894L, 258972980474L, 47193001L, -40642221710783L, -265552252699L, 6476635385435L, 1831980941259L, -28514003L, -152500112L, 1144307398L, 1183097266430L, -31609820L, -15145976008L, 25520552304L, 5753513079L, -84654241487L, -4237315451L, 388505227171L, 13486250350454L, -795064653L, -7255643146572L, 78779926L, 357602548L, -1051455634L, -11425055886L, 76657449193L, 550623551L, -3825863768L, -5286698038974L, 147533368215L, 249671293L, -2760726065120L, -627711598257L, 264196164842L, 2535228638370L };
		long[] output0 = new long[]{ -8214241500L, -13485071469L, 278152L, 1152753256L, -13493029789L, -13434881437L, 30845076L, 6744787576L, -13493037121L, -11403303649L, 270272036L, 6657982260L, -13492903129L, -13493037705L, 710088L, 406103864L, -13491610805L, -13492985509L, 444592L, 22525644L, -6749451192L, -13484925769L, 1229478228L, 156L, -6983503528L, -9417219428L, 214394892L, 3287345936L, -13452066721L, -13491834761L, 9660972L, 6635377952L, -9727840240L, -13161749981L, 1115268L, 6716L, -13455874101L, -13493013421L, 20828L, 8983800L, -6746627756L, -10011978488L, 98932L, 172L, -13321816269L, -6746609020L, 6569210512L, 6745020616L, -6765165724L, -13353518541L, 18250420L, 69266752L, -13486026793L, -13288483865L, 6746506688L, 6717666244L, -13490331161L, -13493036981L, 6746236128L, 3965216952L, -13376651573L, -13489827213L, 111684L, 2108L, -12501045233L, -6749152348L, 5703633232L, 6735925332L, -13493035953L, -7152126868L, 0L, 20L, -13482276665L, -13492825189L, 567866056L, 588L, -13141687493L, -13490023037L, 3275046084L, 6735220268L, -13468283049L, -6992694796L, 17908L, 126048616L, -13464727969L, -13433142625L, 6565161408L, 108242676L, -12567015929L, -8982128868L, 1067356L, 6745675200L, -13491438525L, -13493036137L, 33143988L, 22658816L, -13493020345L, -7651236464L, 757922356L, 10496L };
		for (int ndx = 0; ndx < 100; ndx++)
		{
			Util.Check("Fixed64.Atan2", Fixed64.Atan2(input0[ndx], input1[ndx]), output0[ndx], input0[ndx], input1[ndx]);
		}
	}

	// Fixed64.Atan2Fast
	public static void Fixed64_Atan2Fast()
	{
		long[] input0 = new long[]{ -43079949L, -1501070L, 4924475L, 46395986L, -1437313135L, -34823L, 54713692676L, 914360534968L, -2504153514153L, -1451586L, 4344706L, 8069654L, -12081425L, -8331770268L, 299665228877L, 296168534L, -106937L, -28451287314L, 10643235L, 67194L, -45593L, -20413374L, 79419730875L, 158009947L, -21219L, -735280421L, 11992791L, 723860L, -622738126L, -30411L, 1444818589954L, 12794974L, -108787602106L, -11620506710L, 4487L, 4085652L, -26494L, -937564L, 2894448L, 435841L, -34267L, -849660L, 2169685L, 14977L, -107497L, -668960L, 783343310031L, 13732303775L, -4164589477620L, -42295L, 32012L, 19025L, -7573621L, -394304069L, 10640216760L, 9064L, -81176912L, -133855261790L, 9391059L, 8395L, -12471375287L, -324639435L, 6306260L, 353655137720L, -4315087L, -1458414391272L, 318592384L, 4465324174L, -7973673353L, -315017550L, 48011154L, 489879964192L, -42217838L, -104883L, 8421L, 230470094191L, -40408L, -22774946119L, 6313121L, 136233824459L, -4031444861L, -3750910967L, 746521L, 63237399L, -4080246801041L, -326170910109L, 7255L, 1184971L, -4690L, -2126563389289L, 216166700644L, 850121L, -428791760802L, -1480701L, 150097609L, 453362693L, -578673092338L, -26349765L, 14907374656L, 316576L };
		long[] input1 = new long[]{ -354976377114L, -238984815L, 6555132L, 6892341127L, -180638038715L, -110866722L, 107246892934L, 119821937L, -18429536963L, -3927444012240L, 13429490429820L, 535723319456L, -9952469580L, -24899058616L, 1637160558L, 10934196L, -484191163L, -7149029651569L, 6410280858647L, 6896130842L, -12330844910330L, -333113528L, 191865329933L, 557256958919L, -267195376456L, -98973403L, 4763750L, 58163264L, -150851979138L, -8979676092L, 20988903654599L, 278010160031L, -5971929L, -44044155L, 35488220L, 3410577038L, -117558378459L, -1478561119667L, 1781965491524L, 1598802196184L, -231633515L, -2314788146990L, 792072557974L, 50301257L, -7950949L, -33673678L, 1132848936924L, 1234252818L, -10603406680543L, -5766326415L, 307651174L, 5427457L, -25416893926L, -326831670L, 424074156L, 4576853836L, -53497521766L, -505226193L, 1107892663756L, 7838817695L, -99956724L, -7919464295L, 34114985198L, 8814823L, -8036743541746L, -207471634L, 385288223941L, 970515400L, -3013412338L, -20616895548052L, 3994782620L, 14064925585L, -17230888L, -17220358L, 127868613L, 22879232L, -18062886992L, -16382399799L, 301020700569L, 34079894105L, -3752376141L, -165769560459L, 235593453L, 112359979L, -125360857L, -16609372083604L, 46978381L, 784784478022L, -4460734167485L, -333025159220L, 2738129983561L, 999372948L, -5731937L, -976356869L, 68697760506L, 1256219278228L, -291424408L, -385932377273L, 268818155L, 1645963246226L };
		long[] output0 = new long[]{ -13492516469L, -13466061017L, 2767205232L, 28910980L, -13458863725L, -13491688713L, 2026126076L, 6745956028L, -6778127252L, -13493036121L, 1388L, 64692L, -13487824033L, -12106142085L, 6723054316L, 6588026436L, -13492089133L, -13475945081L, 7128L, 41844L, -13493037693L, -13230170517L, 1685622928L, 1217844L, -13493037369L, -7321201528L, 5122553364L, 53449508L, -13475307541L, -13493023161L, 295184916L, 197668L, -6746754620L, -6762797784L, 543044L, 5145052L, -13493036741L, -13493034985L, 6972L, 1168L, -13492402345L, -13493036133L, 11760L, 1278812L, -13434973709L, -13407725409L, 2598412624L, 6361526572L, -11885662465L, -13493006205L, 446896L, 15055264L, -13491757905L, -9719099160L, 6575431812L, 8504L, -13486520577L, -6762729672L, 36400L, 4596L, -6780942056L, -13317073337L, 793928L, 6746411804L, -13493035401L, -6747129848L, 3551524L, 5827315220L, -8298425012L, -13492972081L, 51616808L, 6623239452L, -8410839468L, -13466878889L, 282848L, 6746092488L, -13493028101L, -9424758648L, 90072L, 5693715416L, -9965869980L, -13395872145L, 13609448L, 2201695412L, -6746650808L, -13408704949L, 663288L, 6484L, -13493037705L, -7413697860L, 338370992L, 3653568L, -6746576264L, -13486524065L, 9384072L, 1550020L, -6748681852L, -13492744465L, 6669077972L, 824L };
		for (int ndx = 0; ndx < 100; ndx++)
		{
			Util.Check("Fixed64.Atan2Fast", Fixed64.Atan2Fast(input0[ndx], input1[ndx]), output0[ndx], input0[ndx], input1[ndx]);
		}
	}

	// Fixed64.Atan2Fastest
	public static void Fixed64_Atan2Fastest()
	{
		long[] input0 = new long[]{ -25995288L, -37710613L, 1363160574094L, 1826728697111L, -6885L, -31519023504L, 972528898598L, 50990781L, -14353L, -183335L, 735175682776L, 19668L, -1161343363L, -377536L, 11074L, 311426004L, -394134L, -6676234L, 141448292108L, 1688918632857L, -28995L, -1720757107422L, 83975932L, 10132288023L, -57575L, -25506L, 98021289L, 23917502389L, -100746688L, -31622834L, 162980994004L, 83813630737L, -846945L, -483425214151L, 73234L, 2959288788677L, -10674782561L, -1739259L, 178116L, 44789708L, -5591L, -7838008497L, 7483645195L, 5471480732L, -48534513625L, -27232042670L, 17536630825L, 70813171911L, -1784760L, -15055L, 499028275L, 625545383689L, -304911464966L, -2228923L, 9601316182L, 64883598L, -1928717507427L, -577829L, 136269716761L, 1159343000331L, -1381058L, -174641L, 2173805825265L, 1949507327L, -4831354L, -37673L, 99738965411L, 10317897408L, -22141L, -16072L, 125301334781L, 973285392459L, -160985L, -13563736L, 1297315602828L, 15888310L, -987566L, -65918879957L, 896637103061L, 9080592L, -6247009L, -5945196632L, 57556678L, 28741217L, -272167021398L, -1119020389840L, 1180594514595L, 1632000910346L, -216251L, -4847772278L, 6589L, 79344996L, -54818201L, -659860L, 139291L, 137510625547L, -15486199260L, -16487L, 4864024L, 5533172408L };
		long[] input1 = new long[]{ -15648066992225L, -6488208L, 492420476256L, 167454616L, -178044054L, -118571820477L, 572933965222L, 10415709349L, -1409643937L, -625398278L, 111333123L, 59344896L, -657475685L, -7606443535L, 53791423843L, 64054726442L, -472666639806L, -26761868611L, 921925949107L, 2886434466L, -63487398L, -4884836123688L, 18702363646L, 3015516535L, -8592581L, -1320177790L, 8669278792L, 14336477917521L, -151194072L, -24607481L, 203369317112L, 103608678L, -7026653610L, -224683250L, 4546635928L, 819751513L, -22391204462233L, -178655814L, 97907590L, 181996791L, -113109257L, -6486450758L, 61653449115L, 6216410325007L, -8450051930L, -4336504499478L, 58408403L, 37867474985971L, -172112293437L, -43108641805L, 26846009L, 86752199L, -569629371L, -15167685138072L, 16423494332L, 13758483L, -14900065916L, -701349111L, 83701514L, 5792351575952L, -58743305L, -1716413653028L, 295878867L, 246037966L, -132078191020L, -4615174L, 362739367311L, 12568077L, -7185406L, -281832241L, 122866528100L, 11363121689L, -1173977926L, -21756657175L, 109603245L, 420378280958L, -340292582L, -129216116731L, 15327177874248L, 85102776L, -97077133L, -9832783651L, 357758894L, 150636524743L, -39368355595853L, -10068500482L, 7812024942240L, 19897068790L, -587577278825L, -1419317250L, 2362946553614L, 137120714008L, -9167347L, -725974407L, 13306542L, 2830323327L, -94157092L, -1076254819L, 202147522L, 7863775713L };
		long[] output0 = new long[]{ -13493030573L, -7478352012L, 5258248844L, 6746124856L, -13492871653L, -12377195985L, 4458873260L, 21031124L, -13492993985L, -13491778069L, 6745868468L, 1424160L, -8960469176L, -13492824429L, 884L, 20883260L, -13493034125L, -13491965669L, 653994144L, 6739175124L, -13491076241L, -12038238685L, 19298568L, 5504459804L, -13464243921L, -13492954717L, 48580472L, 7170344L, -10967251713L, -9585991316L, 2901236768L, 6741208368L, -13492519653L, -6748516132L, 69224L, 6745329164L, -13490990049L, -13451229133L, 7815000L, 1035668364L, -13492825293L, -9715036028L, 518792052L, 3780492L, -7486483484L, -13466064753L, 6732206156L, 8037532L, -13492993169L, -13493036209L, 6515694976L, 6745922876L, -6754548032L, -13493037077L, 2272197080L, 5849685688L, -6779716788L, -13489499269L, 6743880292L, 847866356L, -13392028369L, -13493037273L, 6745934188L, 6207386700L, -13492880609L, -13457956161L, 1151657628L, 6741285680L, -13479794961L, -13492792629L, 3416024112L, 6696353000L, -13492448333L, -13490359961L, 6746155856L, 162396L, -13480572733L, -11467053805L, 251077736L, 456411356L, -13217043793L, -11156163085L, 684709024L, 820048L, -13463326673L, -6785181684L, 644181972L, 6694144316L, -13493036129L, -7969720756L, 8L, 2486000L, -7458291908L, -13489134061L, 44984772L, 6658103012L, -6772641596L, -13492971897L, 103356556L, 2633863592L };
		for (int ndx = 0; ndx < 100; ndx++)
		{
			Util.Check("Fixed64.Atan2Fastest", Fixed64.Atan2Fastest(input0[ndx], input1[ndx]), output0[ndx], input0[ndx], input1[ndx]);
		}
	}

	// Fixed32.Atan2
	public static void Fixed32_Atan2()
	{
		int[] input0 = new int[]{ -1, 0, 28761632, 250, -17047003, -27504, 2300642, 606010, -266968, -1013840, 1059540, 4076756, -172, -64151880, 90513, 90659, -3541, -21691, 13, 1, 0, -2, 64, 73275, -591, -56910263, 621, 0, -887, -1002386, 3228, 14912218, -265, -1112, 0, 0, -3117, -5059317, 175729, 139, -40176, 0, 831205, 17004113, -7026, -25309311, 15, 0, -34734, -202, 5104985, 10487, 0, 0, 104, 38094240, -476804, -25, 27714227, 19630771, -2, -1240140, 44, 17454410, -20, -4656451, 1007, 10169603, -33502240, -11843, 1, 45879, -8089509, -6265737, 2925, 53209916, -215, -250, 0, 1531, -242524, -229, 229, 0, -12868281, -20177416, 2501079, 51, 0, 0, 68, 7, -11963799, -586661, 3, 2123161, -1160048, -3120924, 54156, 98886 };
		int[] input1 = new int[]{ -173332, -19476, 239, 151, -2471, -2559, 3722592, 1631, -568643, -23883, 789127, 23310, -1101, -134230, 1998, 21869978, -52462, -3328, 83, 14336, -106, -663, 24464513, 153862050, -3591, -215974160, 8653208, 504, -5186235, -3903547, 1284, 381002, -10003735, -63508, 619433774, 28321, -10235, -16201, 54794916, 4731513, -4615, -2076184, 13456299, 11309370, -137566, -412429143, 162, 85238, -548755, -39975, 56834, 559809, -48432726, -11988, 2583194, 17118, -521739, -1020, 27610653, 7498, -193822, -483660, 206138, 95468632, -1218, -135, 1527130, 11365887, -142015, -46237208, 140033, 212, -39809, -11506, 203, 33545, -32318, -141, 73299, 5707, -86979365, -6653, 602401, 8502, -4501, -1503869, 5155471, 54686, -16112104, -2371443, 35574237, 657, -384558, -478871, 1599, 6253614, -660, -92372964, 608279, 66418 };
		int[] output0 = new int[]{ -205887, 205887, 102943, 67334, -102952, -109023, 36278, 102767, -177121, -104486, 60990, 102569, -195731, -103080, 101497, 271, -201471, -112920, 10181, 4, 205887, -205690, 0, 31, -195198, -189002, 4, 0, -205876, -189415, 78133, 101269, -205886, -204740, 0, 0, -186514, -103152, 210, 1, -110438, 205887, 4043, 64479, -202543, -201871, 6050, 0, -201745, -205556, 102214, 1227, 205887, 205887, 2, 102914, -157363, -204282, 51594, 102918, -205887, -127313, 13, 11850, -204811, -102944, 43, 47835, -103220, -205871, 0, 102641, -103265, -103063, 98402, 102902, -205452, -136597, 0, 17176, -205705, -203633, 24, 0, -102965, -107818, 29601, 61, 205887, 205887, 0, 698, -105048, -147807, 122, 21449, -102980, -203674, 5819, 64182 };
		for (int ndx = 0; ndx < 100; ndx++)
		{
			Util.Check("Fixed32.Atan2", Fixed32.Atan2(input0[ndx], input1[ndx]), output0[ndx], input0[ndx], input1[ndx]);
		}
	}

	// Fixed32.Atan2Fast
	public static void Fixed32_Atan2Fast()
	{
		int[] input0 = new int[]{ -87, -38, 33996671, 219124, -13076191, -86, 1, 2993, -12, -17, 28949187, 2518, -269172, -3579, 389, 5, -49418950, -3, 23942, 6947, -84, -4, 41843816, 1755762, 0, -64, 4240, 2676783, 0, -111, 10, 2360, -1399, 0, 15294923, 8260, -48, -2443857, 171, 11392466, -885, -2, 1, 2098, -107719, -40, 309, 0, -1, -52209883, 219520, 21182171, -14, 0, 0, 1, -60, -1, 156424, 13259, -1340002, -48, 236, 7273695, 0, -803, 0, 237132, -15338, -3092285, 6829262, 1, -1513228, -137731, 0, 1, 0, -1307, 1, 149428, -13703135, -3307, 171503, 1, -33263, -31, 10, 1175, -13148792, -826998, 8, 2, -1, -845713, 0, 1, -782212, -17, 1229, 8 };
		int[] input1 = new int[]{ -6121, -3738242, 52991, 5972, -318, -751346, 510, 526583, -151207063, -179062360, 321, 60199490, -74, -67, 2965058, 6991, -1130171, -4468, 4328, 8116934, -1884, -508655, 28848138, 29484287, -1334528, -6688884, 80, 103, -1025810, -337293398, 28915, 16488323, -68, -127309757, 61826, 3401, -368, -70542, 115, 156, -1029, -4294089, 577888, 68, -4452966, -32585, 967, 536, -491, -32459475, 366617, 306879, -77, -11149391, 102, 7887067, -84923825, -1177862, 2932752, 31237, -614741, -324, 336418779, 293794843, -405845, -12783, 57408732, 385, -719845, -57127, 1242, 1049, -2533, -1811, 516677, 287616, -576845613, -27492569, 433, 2683, -453173, -97857632, 137399402, 20711204, -60293, -61749756, 13902106, 4039, -81127660, -5137363, 26249, 205158, -15763681, -2425757, 166919, 207, -8365093, -1289080, 111045, 22829 };
		int[] output0 = new int[]{ -204956, -205887, 102841, 101158, -102944, -205880, 128, 372, -205887, -205887, 102943, 2, -102961, -104169, 8, 46, -104441, -205843, 91223, 56, -202967, -205887, 63387, 3898, 205886, -205887, 101707, 102941, 205886, -205887, 22, 9, -106125, 205886, 102679, 77346, -197387, -104834, 64143, 102943, -159337, -205887, 0, 100820, -204302, -205807, 20269, 0, -205754, -139395, 35358, 101994, -194101, 205886, 0, 0, -205887, -205887, 3492, 26307, -131131, -196249, 0, 1622, 205886, -201776, 0, 102837, -204491, -104153, 102932, 62, -103052, -103804, 0, 0, 205886, -205884, 151, 101767, -105109, -205885, 81, 0, -172848, -205887, 0, 18553, -195357, -195428, 19, 0, -205887, -183903, 0, 316, -199777, -205887, 725, 22 };
		for (int ndx = 0; ndx < 100; ndx++)
		{
			Util.Check("Fixed32.Atan2Fast", Fixed32.Atan2Fast(input0[ndx], input1[ndx]), output0[ndx], input0[ndx], input1[ndx]);
		}
	}

	// Fixed32.Atan2Fastest
	public static void Fixed32_Atan2Fastest()
	{
		int[] input0 = new int[]{ -4396, 0, 6239, 144891, -31294, -121, 31, 1143580, -3, -2427, 262859, 0, -1702, -528, 2103836, 96708, -3, -2, 3613, 102493, -8174, -14308, 9, 5237466, 0, -92277, 279, 9627, -195335, -1520, 860272, 167, -78, -401484, 115556, 1737, -59, -3, 1, 0, -6591, -26495953, 0, 120, -32052136, -34, 0, 67, -1526029, -1063349, 4957876, 6679, 0, -594102, 974519, 20136838, -1491344, -78068, 53311, 22225673, -28567633, -212829, 0, 146595, -184896, -102, 233673, 277980, -299781, -79, 106, 62969305, 0, -1039, 1, 20219, -3711, -5103941, 10708882, 342146, -76818, 0, 413440, 12038817, -20100, -8, 27, 8644, -26999653, -376083, 76360, 50117, -4889, -4, 0, 2029633, -4525772, -112, 42745, 20453 };
		int[] input1 = new int[]{ -681088, -5292, 952593, 140770, -84752, -90770140, 383576, 1430511, -1999291, -1335, 52605, 251704893, -14261347, -154351344, 5381, 113546876, -391005500, -967, 307, 155764, -180, -851, 18653824, 549394772, -3133996, -5453443, 103055, 31363745, -24114, -8262, 9744670, 991, -2703, -8535, 1058, 42620, -136422, -5933, 135657, 8759324, -4899309, -3328264, 206300674, 16140970, -14749, -8920149, 113465849, 1715385, -223903492, -1901, 73631186, 5550698, -4597, -917, 446149, 52422, -185942, -1136325, 29436910, 10185039, -57723, -8015019, 3887, 15858, -89785, -3478, 6101434, 109494, -9557217, -82748487, 54546, 4318935, -4675359, -22995, 20835900, 35568, -2704, -75, 2441135, 230253557, -31498187, -39372290, 91800909, 831, -73538, -115, 141278426, 193, -12538497, -13231806, 150215542, 78679765, -132091, -8728906, 9944, 400599340, -56105, -852550, 11781, 277 };
		int[] output0 = new int[]{ -205465, 205886, 429, 52416, -182718, -205887, 5, 44180, -205887, -135911, 90002, 0, -205880, -205887, 102776, 55, -205887, -205752, 97387, 38152, -104386, -106837, 0, 625, 205886, -204779, 177, 20, -110991, -193966, 5771, 10934, -203997, -104336, 102343, 2669, -205859, -205854, 0, 0, -205799, -111133, 0, 0, -102973, -205887, 0, 2, -205441, -103060, 4408, 78, 205886, -103044, 74810, 102773, -111069, -201390, 118, 74790, -103075, -204148, 0, 95880, -132566, -203965, 2508, 78347, -203831, -205887, 127, 98456, 205886, -202929, 0, 33897, -144216, -102943, 88265, 97, -205728, 205886, 295, 102939, -188403, -201335, 0, 101480, -131446, -204024, 33, 41, -203462, -205887, 0, 332, -103755, -205879, 85331, 102056 };
		for (int ndx = 0; ndx < 100; ndx++)
		{
			Util.Check("Fixed32.Atan2Fastest", Fixed32.Atan2Fastest(input0[ndx], input1[ndx]), output0[ndx], input0[ndx], input1[ndx]);
		}
	}

	public static void TestAll()
	{
		Fixed64_Mul();
		Fixed32_Mul();
		Fixed64_DivPrecise();
		Fixed32_DivPrecise();
		Fixed64_Mod();
		Fixed32_Mod();
		Fixed64_Min();
		Fixed32_Min();
		Fixed64_Max();
		Fixed32_Max();
		Fixed64_Ceil();
		Fixed32_Ceil();
		Fixed64_Floor();
		Fixed32_Floor();
		Fixed64_Round();
		Fixed32_Round();
		Fixed64_Fract();
		Fixed32_Fract();
		Fixed64_CeilToInt();
		Fixed32_CeilToInt();
		Fixed64_FloorToInt();
		Fixed32_FloorToInt();
		Fixed64_RoundToInt();
		Fixed32_RoundToInt();
		Fixed64_Abs();
		Fixed32_Abs();
		Fixed64_Nabs();
		Fixed32_Nabs();
		Fixed64_Rcp();
		Fixed64_RcpFast();
		Fixed64_RcpFastest();
		Fixed32_Rcp();
		Fixed32_RcpFast();
		Fixed32_RcpFastest();
		Fixed64_Div();
		Fixed64_DivFast();
		Fixed64_DivFastest();
		Fixed32_Div();
		Fixed32_DivFast();
		Fixed32_DivFastest();
		Fixed64_SqrtPrecise();
		Fixed64_Sqrt();
		Fixed64_SqrtFast();
		Fixed64_SqrtFastest();
		Fixed32_SqrtPrecise();
		Fixed32_Sqrt();
		Fixed32_SqrtFast();
		Fixed32_SqrtFastest();
		Fixed64_RSqrt();
		Fixed64_RSqrtFast();
		Fixed64_RSqrtFastest();
		Fixed32_RSqrt();
		Fixed32_RSqrtFast();
		Fixed32_RSqrtFastest();
		Fixed64_Exp();
		Fixed64_ExpFast();
		Fixed64_ExpFastest();
		Fixed32_Exp();
		Fixed32_ExpFast();
		Fixed32_ExpFastest();
		Fixed64_Exp2();
		Fixed64_Exp2Fast();
		Fixed64_Exp2Fastest();
		Fixed32_Exp2();
		Fixed32_Exp2Fast();
		Fixed32_Exp2Fastest();
		Fixed64_Log();
		Fixed64_LogFast();
		Fixed64_LogFastest();
		Fixed32_Log();
		Fixed32_LogFast();
		Fixed32_LogFastest();
		Fixed64_Log2();
		Fixed64_Log2Fast();
		Fixed64_Log2Fastest();
		Fixed32_Log2();
		Fixed32_Log2Fast();
		Fixed32_Log2Fastest();
		Fixed64_Pow();
		Fixed64_PowFast();
		Fixed64_PowFastest();
		Fixed32_Pow();
		Fixed32_PowFast();
		Fixed32_PowFastest();
		Fixed64_Sin();
		Fixed64_SinFast();
		Fixed64_SinFastest();
		Fixed32_Sin();
		Fixed32_SinFast();
		Fixed32_SinFastest();
		Fixed64_Cos();
		Fixed64_CosFast();
		Fixed64_CosFastest();
		Fixed32_Cos();
		Fixed32_CosFast();
		Fixed32_CosFastest();
		Fixed64_Tan();
		Fixed64_TanFast();
		Fixed64_TanFastest();
		Fixed32_Tan();
		Fixed32_TanFast();
		Fixed32_TanFastest();
		Fixed64_Asin();
		Fixed64_AsinFast();
		Fixed64_AsinFastest();
		Fixed32_Asin();
		Fixed32_AsinFast();
		Fixed32_AsinFastest();
		Fixed64_Acos();
		Fixed64_AcosFast();
		Fixed64_AcosFastest();
		Fixed32_Acos();
		Fixed32_AcosFast();
		Fixed32_AcosFastest();
		Fixed64_Atan();
		Fixed64_AtanFast();
		Fixed64_AtanFastest();
		Fixed32_Atan();
		Fixed32_AtanFast();
		Fixed32_AtanFastest();
		Fixed64_Atan2();
		Fixed64_Atan2Fast();
		Fixed64_Atan2Fastest();
		Fixed32_Atan2();
		Fixed32_Atan2Fast();
		Fixed32_Atan2Fastest();
	}
}
