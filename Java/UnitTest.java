package fixpointcs.test;

import fixpointcs.*;

class UnitTest
{
	// Fixed64.Add
	public static void Fixed64_Add()
	{
		long[] input0 = new long[]{ -5646066422L, 7670586023L, -6500348103L, -21427982589L, 23258896030L, -1280404460L, 10324871784L, 3174252341L, 2068821380L, 7502625023L, -28978851153L, 10089002504L, -38996648598L, 136657740L, -21867794190L, 36101563116L, 7450375823L, -38880148278L, 38686266518L, -33262559515L, 16963778267L, 18691801788L, -6000867542L, 23142502150L, 15518906307L, 31657792914L, -14376383266L, -39146526438L, -21057951349L, -20426652989L, 18050162028L, -20430205789L, -16927151867L, 28657097233L, -4539682562418696704L, -1992012247346059776L, -3833166661010344448L, -2380337119979720704L, 2576832011302174720L, -4453375649831920640L, 1490631805225636864L, -1459723326468650496L, 1739103716478620672L, 3158694243597017088L, -2279222057797605376L, 2757504346178011136L, -110097997023300608L, 2601568287044485120L, 2956928753090052096L, 340218127192253440L, 2778287864731724800L, -1753224628356606464L, -2673167724069388288L, 4236636533229558784L, 1779090317289534464L, 2555928757650126848L, 2787700594802936832L, -2942638761234445312L, 2535771101731077120L, -1238045439855220736L, 2589425851852323840L, 3460935181166144512L, -3932403929130035200L, 2464166068363785216L, 1941186690968254464L, 1070347093085079552L, 619674061382028288L, -3061464782494827520L, 622312684492L, 387771898780718272L, 617755293840670592L, 777039112332989L, 7177359582174591L, 164644431144L, 1372935912490L, 507814895228391616L, 24951099327207852L, 104216902268557L, 46497005444864632L, 4669089524L, 1685988871820478464L, 21817387721626L, 51975036842L, 3972085110803L, 2517599899465L, 84313896030L, 984545212877755008L, 352879477562L, 3090449765666178L, 2826709755514L, 58612150524351L, 16846745897426660L, 26592377975874060L, 319445810378L, 69706202142900696L, 526179180860436224L, 267576249014757L, 39518802156L, 199920785148L, 34936803000809116L };
		long[] input1 = new long[]{ -533926700L, 39633938518L, 28851036593L, -13330680186L, -19929093549L, 37211886317L, -4195477061L, -12391161825L, -40454536678L, 7531172863L, 1419738740L, 32787318795L, -10266512544L, 4344296942L, -23735398471L, 18723193388L, -3351802101L, -8571334183L, -38484064277L, -13434231346L, -30861645474L, 18611804748L, -29278219393L, 13306822706L, 6002784062L, 34550776076L, -29853694153L, 6521725263L, -18717469268L, -20454198589L, 32402135955L, 34401027596L, -15933518587L, -24704072871L, 394461876243845120L, 4055129261005958144L, 1231868224613708800L, -2591245908669360128L, 1114514007041972224L, -4290505305866231808L, 1678564606225083392L, 2757665394566784000L, -4352362417029473792L, -1690733094688875008L, -903654752210180608L, 2498725703115768832L, -791726688948555264L, -1195398270011953152L, 2355022183293349888L, 2261694931909627904L, -362854696501787648L, 620691466120480768L, 1755263917484402688L, -1335799045881555968L, 180016074610120704L, -2483925301641435648L, -168026823721609216L, 3721158118651489280L, -304422203283409920L, -796808567269992960L, -2431115483256855552L, 2641382642486880256L, -2139005415766002688L, 3886623666542223360L, -3394178465798625280L, 1262116867544702976L, -2473855733631405056L, -1660319232955860992L, 156099L, 8L, 18L, 264881701L, 128782676L, 290061242L, 288285529L, 91312L, 5L, 1062970L, 43665L, 3950400381L, 15L, 28830L, 28211L, 90670335L, 2631092L, 1126290308L, 837794L, 3352731336L, 7079078L, 1L, 2936683L, 854809078L, 11893L, 46L, 99164892L, 43819L, 4276L, 4756L, 3139L, 1538054L };
		long[] output0 = new long[]{ -6179993122L, 47304524541L, 22350688490L, -34758662775L, 3329802481L, 35931481857L, 6129394723L, -9216909484L, -38385715298L, 15033797886L, -27559112413L, 42876321299L, -49263161142L, 4480954682L, -45603192661L, 54824756504L, 4098573722L, -47451482461L, 202202241L, -46696790861L, -13897867207L, 37303606536L, -35279086935L, 36449324856L, 21521690369L, 66208568990L, -44230077419L, -32624801175L, -39775420617L, -40880851578L, 50452297983L, 13970821807L, -32860670454L, 3953024362L, -4145220686174851584L, 2063117013659898368L, -2601298436396635648L, -4971583028649080832L, 3691346018344146944L, -8743880955698152448L, 3169196411450720256L, 1297942068098133504L, -2613258700550853120L, 1467961148908142080L, -3182876810007785984L, 5256230049293779968L, -901824685971855872L, 1406170017032531968L, 5311950936383401984L, 2601913059101881344L, 2415433168229937152L, -1132533162236125696L, -917903806584985600L, 2900837487348002816L, 1959106391899655168L, 72003456008691200L, 2619673771081327616L, 778519357417043968L, 2231348898447667200L, -2034854007125213696L, 158310368595468288L, 6102317823653024768L, -6071409344896037888L, 6350789734906008576L, -1452991774830370816L, 2332463960629782528L, -1854181672249376768L, -4721784015450688512L, 622312840591L, 387771898780718280L, 617755293840670610L, 777039377214690L, 7177359710957267L, 164934492386L, 1373224198019L, 507814895228482928L, 24951099327207857L, 104216903331527L, 46497005444908297L, 8619489905L, 1685988871820478479L, 21817387750456L, 51975065053L, 3972175781138L, 2517602530557L, 85440186338L, 984545212878592802L, 356232208898L, 3090449772745256L, 2826709755515L, 58612153461034L, 16846746752235738L, 26592377975885953L, 319445810424L, 69706202242065588L, 526179180860480043L, 267576249019033L, 39518806912L, 199920788287L, 34936803002347170L };
		for (int ndx = 0; ndx < 100; ndx++)
		{
			Util.Check("Fixed64.Add", Fixed64.Add(input0[ndx], input1[ndx]), output0[ndx], input0[ndx], input1[ndx]);
		}
	}

	// Fixed32.Add
	public static void Fixed32_Add()
	{
		int[] input0 = new int[]{ -261010, -637342, -46021, 468499, -289339, -333572, -17631, -94354, -308082, -116933, -479478, -625287, 433037, -50271, 138405, -276451, 321422, 619102, -355028, 119595, -10688, -398650, -584464, 25371, -101262, -388130, -63777, 221079, -591935, -135838, -474472, 257019, -311151, 444888, 571833777, -11112653, -448836600, -771669462, -159937395, 661775706, -777092746, -418811722, -60190018, 544984329, 287275557, 588961253, -843870813, -21624755, -856742394, 15825629, 343030983, 501216232, 93392905, -19650385, 405867170, 194033591, -749231414, -960872354, -708951224, -61325503, 272321109, 290399502, 659804933, 762986334, -1014621712, -112771020, 833553407, -846367707, 1145219, 86207, 796222, 121687, 98960692, 452240, 268654739, 235254213, 709588388, 631082926, 86801419, 9192586, 8645923, 1499532, 486400580, 571380842, 34741789, 7477099, 14013451, 26534765, 160149134, 78961, 77471531, 73337, 28262114, 83534, 318993, 233000, 1913904, 76812, 6884109, 221447 };
		int[] input1 = new int[]{ 256068, -510172, 652856, 137052, 61360, -103583, -61464, -410426, 293446, -261736, 505392, 194624, -528432, 604781, 88633, 53765, 310151, -125030, -455343, 356202, -458193, -517720, 602482, 583966, -85597, -556568, 385564, 416649, -157779, 483116, -297820, -81137, 341223, 643509, -654701727, -917412748, -536815717, 206080154, 1028829608, -334068525, 286952289, 741849374, 285699366, -631619004, -404246939, 344536844, 1005730178, -420408165, 465638814, 799410172, -625234331, 84575866, 847413554, -495030369, -425283094, -695941637, -335623062, -561706069, 1011023585, 975129931, -684287226, 6249574, -4874832, 250565470, 485864218, -673695245, 829149669, -1071244929, 6273, 46582, 2, 2571, 1195, 9, 7014, 2765, 145, 234, 19, 125, 353, 242, 217, 15093, 871, 695, 48094, 23, 1449, 32, 15, 35, 44, 25, 191, 3927, 2, 3815, 346, 35470 };
		int[] output0 = new int[]{ -4942, -1147514, 606835, 605551, -227979, -437155, -79095, -504780, -14636, -378669, 25914, -430663, -95395, 554510, 227038, -222686, 631573, 494072, -810371, 475797, -468881, -916370, 18018, 609337, -186859, -944698, 321787, 637728, -749714, 347278, -772292, 175882, 30072, 1088397, -82867950, -928525401, -985652317, -565589308, 868892213, 327707181, -490140457, 323037652, 225509348, -86634675, -116971382, 933498097, 161859365, -442032920, -391103580, 815235801, -282203348, 585792098, 940806459, -514680754, -19415924, -501908046, -1084854476, -1522578423, 302072361, 913804428, -411966117, 296649076, 654930101, 1013551804, -528757494, -786466265, 1662703076, -1917612636, 1151492, 132789, 796224, 124258, 98961887, 452249, 268661753, 235256978, 709588533, 631083160, 86801438, 9192711, 8646276, 1499774, 486400797, 571395935, 34742660, 7477794, 14061545, 26534788, 160150583, 78993, 77471546, 73372, 28262158, 83559, 319184, 236927, 1913906, 80627, 6884455, 256917 };
		for (int ndx = 0; ndx < 100; ndx++)
		{
			Util.Check("Fixed32.Add", Fixed32.Add(input0[ndx], input1[ndx]), output0[ndx], input0[ndx], input1[ndx]);
		}
	}

	// Fixed64.Sub
	public static void Fixed64_Sub()
	{
		long[] input0 = new long[]{ -2954840421L, 9906724104L, 20194663189L, 3087787221L, -16050769387L, -23208310910L, -15454962587L, 116887180L, 17443873028L, 30693877954L, -25218887031L, -13271348906L, 25820630912L, -14551161346L, 1198840260L, -28878857553L, 6359908422L, -16809937787L, 3968553141L, 24479752031L, -38987782238L, -22202454950L, -681640940L, 592851300L, 23186071110L, 20086457909L, -9499663184L, -11239286785L, 17736169068L, -38159254077L, 13708375746L, 15955107827L, 39736220838L, -19099047668L, -943344003845118976L, 1214272138730793984L, -576096275204499968L, 1466690205807637504L, 2385849276715006976L, -2845342092483977216L, 390366697939646464L, 712461285052536832L, 1904634608001826816L, 1992077109942194176L, -499147293201180672L, 3857002488268695552L, -2224370716902234624L, -730096463727797760L, 1266928016897478656L, -630156092281554944L, 3693977830422957056L, 3946903330706190336L, 50058232552730624L, -2289731842775811584L, -1080739410707684864L, 1925914096494211072L, 2389221332850077696L, -17789949969328128L, -3237449456917640704L, 4301088650749350912L, 131731064403525632L, -1920904614141549056L, 1604799479184803840L, 3576112687836418048L, 722613857600568320L, 372142232571231232L, -287458615759635456L, 4169609969361673216L, 203803883127792000L, 305139375422724L, 1002553316007467L, 19219611238457L, 1806722920242659840L, 198840393925015L, 24242190676L, 16677470753L, 229088798505L, 6451161608341L, 12499785319180096L, 2252098066890L, 2921290236824998L, 30783595861L, 2929132621482129408L, 2751956008398L, 80461299772L, 2625963354815L, 237201024883683L, 4813066152869L, 92407790067648944L, 395894030870041024L, 487294858565L, 550568847636126912L, 3462924526018859520L, 183776658976L, 2797864224831L, 836965707939340032L, 23701170037960L, 8783913533786985L, 1169830245528L, 355677036861274432L };
		long[] input1 = new long[]{ 37184087277L, 32839722675L, 19436130069L, 35649964396L, 3919782261L, -12481806585L, -22105494110L, -2673422061L, 3008925941L, 23715368191L, -37708150237L, 30214609194L, -2147148420L, 40249562958L, 19911199549L, -19344717949L, -29612430553L, 19899646989L, -27460768752L, 18111337428L, 33915795395L, -23702058431L, -32361307915L, -23347861070L, 22851389070L, 6812445663L, 29241025233L, 38733997158L, 25330391071L, 12653454145L, -25964170752L, 1775678100L, -10057896784L, 1970005620L, 653421900070049792L, -3688009384951865856L, 3110659020098539520L, -34614706970162176L, 4362545067233492992L, 4508450518005348352L, -3057362667818442240L, -1682466502410937344L, 162062265195922432L, -855160070290032640L, 2603875818354878464L, 3208332748323066880L, -1655834518297602560L, -741858377702258688L, -1719582759396728320L, -1261699894939544064L, 2276362481455499264L, -2123098918478513664L, -4471082266698249216L, -3401912619570564096L, -3319418864850297856L, 1742427918088056832L, 3436736824308104192L, 4053379693192216576L, 92453644297890816L, 2696446644393043968L, 1634612861539885056L, -2300414706346192384L, 3719347824295120896L, 2940207938592796672L, -3342222766085762048L, 3740396492654976000L, -467224914399057408L, -1782294667836520448L, 6898L, 1L, 306644L, 30096791L, 25449936L, 1994L, 1079L, 63566L, 2L, 5L, 62245L, 104082L, 142L, 102L, 25L, 408600L, 420L, 509567L, 3386775L, 96986855L, 4620L, 11L, 58398L, 2115285190L, 961L, 5135807L, 10638L, 28759055L, 94L, 39L, 1862705L, 55423L };
		long[] output0 = new long[]{ -40138927698L, -22932998571L, 758533120L, -32562177175L, -19970551648L, -10726504325L, 6650531523L, 2790309241L, 14434947087L, 6978509763L, 12489263206L, -43485958100L, 27967779332L, -54800724304L, -18712359289L, -9534139604L, 35972338975L, -36709584776L, 31429321893L, 6368414603L, -72903577633L, 1499603481L, 31679666975L, 23940712370L, 334682040L, 13274012246L, -38740688417L, -49973283943L, -7594222003L, -50812708222L, 39672546498L, 14179429727L, 49794117622L, -21069053288L, -1596765903915168768L, 4902281523682659840L, -3686755295303039488L, 1501304912777799680L, -1976695790518486016L, -7353792610489325568L, 3447729365758088704L, 2394927787463474176L, 1742572342805904384L, 2847237180232226816L, -3103023111556059136L, 648669739945628672L, -568536198604632064L, 11761913974460928L, 2986510776294206976L, 631543802657989120L, 1417615348967457792L, 6070002249184704000L, 4521140499250979840L, 1112180776794752512L, 2238679454142612992L, 183486178406154240L, -1047515491458026496L, -4071169643161544704L, -3329903101215531520L, 1604642006356306944L, -1502881797136359424L, 379510092204643328L, -2114548345110317056L, 635904749243621376L, 4064836623686330368L, -3368254260083744768L, 179766298639421952L, 5951904637198193664L, 203803883127785102L, 305139375422723L, 1002553315700823L, 19219581141666L, 1806722920217209904L, 198840393923021L, 24242189597L, 16677407187L, 229088798503L, 6451161608336L, 12499785319117851L, 2252097962808L, 2921290236824856L, 30783595759L, 2929132621482129383L, 2751955599798L, 80461299352L, 2625962845248L, 237201021496908L, 4812969166014L, 92407790067644324L, 395894030870041013L, 487294800167L, 550568845520841722L, 3462924526018858559L, 183771523169L, 2797864214193L, 836965707910580977L, 23701170037866L, 8783913533786946L, 1169828382823L, 355677036861219009L };
		for (int ndx = 0; ndx < 100; ndx++)
		{
			Util.Check("Fixed64.Sub", Fixed64.Sub(input0[ndx], input1[ndx]), output0[ndx], input0[ndx], input1[ndx]);
		}
	}

	// Fixed32.Sub
	public static void Fixed32_Sub()
	{
		int[] input0 = new int[]{ -547738, 444308, 527751, 173198, 32959, -390823, 55050, 391079, 647044, -620653, -275601, 310763, -151712, 270897, 228170, 363523, -610611, 300248, 190730, 421878, -627921, -77928, -4788, -279404, 24785, 133038, -43692, -560783, 556423, 53188, -270550, 501536, -99662, -648501, -498362892, -452366339, -62037684, 42481449, 368738610, 160900878, 582832136, -769989768, 225696634, -767950484, -75397809, 560927631, -1035766546, 780957087, -967212965, -464217266, 645153239, 682083443, -294500521, 203852197, 72418648, 638195831, -983340449, 408932109, -212325922, -786583213, -353411563, 173133745, -1061639682, -252605980, 259971481, -182857260, -119019833, -633944187, 11070776, 1412381, 198614, 18240862, 74608, 3785667, 12046225, 472911, 105308699, 231432710, 12307570, 105537, 597504, 5911258, 310745, 3698741, 77950513, 61795329, 2390222, 75460514, 2145667, 287807160, 7319093, 2853710, 175863, 868270, 61540100, 294962776, 431668, 176163006, 47605365, 174435 };
		int[] input1 = new int[]{ -80286, -151087, -253971, 18819, -580171, -562835, -589213, 497403, 439677, -191428, 421974, 337782, 109859, 135008, -625803, 184399, 314778, -31501, 25925, 431275, -37342, 185550, -206263, 151795, -506946, 555281, 308229, -39525, 490016, -61504, 305257, -121778, -244933, -158571, -354180234, 500791778, -709584713, -600490142, 653391145, 955317146, -949972035, -364933225, -995433231, -643733941, -749641858, -317767366, 871797224, 797787879, -171288252, 193318619, 327819705, 891792697, -978762815, 468590196, 741519868, -62816900, -542767713, 602772029, -818934451, 81580000, -559429381, -664043432, -782091909, -595439208, 45819857, -966282372, -393794358, 671919464, 2, 5, 70, 5, 281, 4, 23635, 1344, 13, 1578, 3214, 135, 24, 4, 50, 6354, 2, 3573, 336, 9629, 2338, 925, 222, 1997, 11244, 3770, 288, 4725, 3303, 2129, 2, 37763 };
		int[] output0 = new int[]{ -467452, 595395, 781722, 154379, 613130, 172012, 644263, -106324, 207367, -429225, -697575, -27019, -261571, 135889, 853973, 179124, -925389, 331749, 164805, -9397, -590579, -263478, 201475, -431199, 531731, -422243, -351921, -521258, 66407, 114692, -575807, 623314, 145271, -489930, -144182658, -953158117, 647547029, 642971591, -284652535, -794416268, 1532804171, -405056543, 1221129865, -124216543, 674244049, 878694997, -1907563770, -16830792, -795924713, -657535885, 317333534, -209709254, 684262294, -264737999, -669101220, 701012731, -440572736, -193839920, 606608529, -868163213, 206017818, 837177177, -279547773, 342833228, 214151624, 783425112, 274774525, -1305863651, 11070774, 1412376, 198544, 18240857, 74327, 3785663, 12022590, 471567, 105308686, 231431132, 12304356, 105402, 597480, 5911254, 310695, 3692387, 77950511, 61791756, 2389886, 75450885, 2143329, 287806235, 7318871, 2851713, 164619, 864500, 61539812, 294958051, 428365, 176160877, 47605363, 136672 };
		for (int ndx = 0; ndx < 100; ndx++)
		{
			Util.Check("Fixed32.Sub", Fixed32.Sub(input0[ndx], input1[ndx]), output0[ndx], input0[ndx], input1[ndx]);
		}
	}

	// Fixed64.Mul
	public static void Fixed64_Mul()
	{
		long[] input0 = new long[]{ -2895178131348L, -527233478245L, -4177309487945L, -3138065499461L, -3255400003515L, -3809177975773L, 3778296691759L, 1349591962628L, 2610248127215L, 2099402810977L, 390496026181L, 1871406386871L, -2969604071382L, -3603051799677L, -3026219219409L, -4018653771871L, 3917337415824L, 3691905867719L, 2890147311345L, -222830834103L, -1539922002717L, 3121155099453L, -674620822314L, -471154718219L, 1199911546558L, 1534534194714L, -1946746266906L, 2150842519001L, 809843590377L, -2965057603380L, 3552541607654L, 89987098041L, 1135899218528L, 2259592979052L, 290434948335244L, -133024494261944L, 409147491590524L, 240936475112194L, -193057438289899L, 311483105945045L, 166400028677486L, -13027595006066L, 302083893140668L, -11640089005420L, -85592137839856L, 347171843961664L, -284610520732532L, 20149158609382L, -281130616730911L, -302263917940752L, -117021209454492L, -317213221547713L, 151609035870598L, -346267167161243L, -311985407545279L, 380389924377132L, 245160567514161L, -10900662205076L, 155098241472223L, -247248743915134L, -265721933523736L, 78068200236353L, 234557287109224L, -118002226654949L, -340004843158327L, -421070956396076L, 128765323459961L, -327506543552507L, 959111626446620672L, 3781202091760759808L, 1531320262713076736L, -1260969130587184640L, 1057521466492446720L, 1762057382820521984L, -2102274978978948096L, 4255324807981539328L, -43830482020409856L, -2107149854981218304L, -1553740526723516928L, -3524223987641094656L, 3766308847753824256L, 3701671255723725824L, 636888958296574976L, 3078152615433376768L, -3630572795690617344L, -824074554383739392L, 1299839162605284352L, 1384441690644680704L, 3129244835457168384L, -4153037575933908992L, 1484309654691185664L, 4130460907923396608L, 3527341995642546176L, -476599442221934080L, -1723050122802357760L, 2051252318955189248L, -604362766281428480L, 3941835823835560960L, -3019859307406231552L, 2384913015110561792L };
		long[] input1 = new long[]{ -2212433987030L, 2598993019210L, -3815161391776L, -2786994631297L, 1327512954618L, 4070283547895L, 2408136175121L, 2885321243343L, -4194651127953L, 3736747363740L, -3910200635820L, 2023160402942L, 85672106039L, 2146729442999L, 667181390310L, -462484526215L, 2500121787164L, 2429706527131L, 2868864035335L, 303603594141L, 1084479758505L, -1721365934801L, -4147579951931L, 588812526274L, -43009750020L, -494966902230L, 2432535587132L, -2667513123242L, -3755218923748L, 1280338434596L, 2841828499323L, -3994458367860L, -3559460127657L, -934229754435L, 3537347255L, -2297540963L, -258992146L, -4204210259L, 65313614L, 4049000271L, 2934570603L, -3080211587L, -447237570L, 263788234L, -2850233391L, 780239106L, -1943828990L, -2063923294L, -4151174251L, 3562387551L, -1844416766L, 1718993418L, -1215581430L, 4198178839L, -2109342974L, 3395417535L, 513116678L, -94485758L, -3436584959L, -3753054239L, 1477083098L, -3411649011L, 1819118474L, -94106098L, -1011319754L, -940179110L, -2110902090L, -3866007067L, -1403826L, -2372789L, 1271932L, -3637409L, -2263900L, 3711519L, -3633495L, 1317328L, 2005486L, -2069700L, -855719L, -1674700L, -2835712L, -4207328L, -3224395L, 2070379L, 246429L, 3035933L, -758500L, 4107722L, 2054949L, 799623L, -2700284L, 817181L, -1998074L, 1695826L, -493343L, -2760846L, -809859L, 141439L, 564720L, 309300L };
		long[] output0 = new long[]{ 1491371192107983L, -319042273203974L, 3710647551321269L, 2036283654080737L, -1006197574811440L, -3609907451503170L, 2118445221279944L, 906644007101548L, -2549281402272081L, 1826541945186129L, -355513256475826L, 881532975409683L, -59234964404555L, -1800893196607277L, -470093718308057L, 432730928460574L, 2280301559011988L, 2088548565364929L, 1930501237124627L, -15751515077220L, -388830490788228L, -1250917572860798L, 651470338409941L, -64592296234436L, -12015899564972L, -176845033821556L, -1102576398608558L, -1335842685183056L, -708070578020936L, -883889666385604L, 2350591585427030L, -83690908916600L, -941378059188641L, -491500597899501L, 239203047763961L, 71159849094500L, -24672128930117L, -235845241796688L, -2935826546582L, 293644885621827L, 113694144528197L, 9342969648639L, -31456180453388L, -714910803909L, 56800797879284L, 63068477707221L, 128809870467263L, -9682569142526L, 271718524708670L, -250707664151821L, 50253207025924L, -126959625618322L, -42909087758629L, -338463926179523L, 153222174243107L, 300720012599471L, 29289158056364L, 239805628347L, -124100661792512L, 216052389340037L, -91384485544588L, -62012415874495L, 99345923911712L, 2585521225307L, 80059658349884L, 92173488119456L, -63285927849626L, 294796799277592L, -313489194518900L, -2088955307869921L, 453492450619388L, 1067915108129382L, -557425163684472L, 1522691327945478L, 1778501464227473L, 1305169081000775L, -20466143746205L, 1015413565294497L, 309563542201025L, 1374170629331502L, -2486670202408380L, -3626138232881574L, -478136719364367L, 1483816312111061L, -208308553199574L, -582503884591603L, -229554251962367L, 1324084957684005L, 1497203145496983L, -773198987725424L, -933198633512514L, 785881228558195L, -1640964842075828L, -188180647256192L, 197918786838111L, -1318564582564440L, 113958638519493L, 129809909753379L, -397063546832290L, 171748361451015L };
		for (int ndx = 0; ndx < 100; ndx++)
		{
			Util.Check("Fixed64.Mul", Fixed64.Mul(input0[ndx], input1[ndx]), output0[ndx], input0[ndx], input1[ndx]);
		}
	}

	// Fixed32.Mul
	public static void Fixed32_Mul()
	{
		int[] input0 = new int[]{ -51609158, 5436916, 33181295, 28139202, -28461126, -315388, 15977254, -46495440, -22667640, 65269134, 56059607, 13793610, 15222915, -17333326, 40759371, 52485702, -23607955, 7652863, -37996586, 9989492, 6185441, -43222261, -60501149, 31914027, -60538816, -58597058, 40521745, 5115366, -1374874, 52220433, -33077682, -37092907, 25337929, 47759201, -2147483648, -2147483648, 1879373246, -2147483648, -2147483648, -2147483648, -2035791709, -2147483648, 250323306, -2147483648, -2147483648, -554213370, -2147483648, -2147483648, 1999847605, -2147483648, -2147483648, -1306734006, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2062326481, -2147483648, 1450620450, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648 };
		int[] input1 = new int[]{ -39480746, 16829544, -31844030, -11803577, -5483394, -61460398, -35188590, -30614360, 19810505, 31622899, 21677678, 10539316, 62782290, 52381123, 50652890, 5522468, 47016782, 45525657, -25381210, 64163455, 64070116, 57149102, 402065, -64268731, 23142019, -35400068, 24698866, -54674112, 20415434, -9352074, 32810817, 27616515, 53991680, 32999714, 30233, 26723, 52264, 58821, 32389, -48845, 18985, 27270, -10890, -38545, 56566, -36851, -45092, 36558, -9136, 27312, -14555, -19657, 39328, -38254, 49310, 53241, -58033, -13630, -42394, 48755, 44087, -39843, 22293, -26659, -25400, -49360, 37910, 45446, -9, -25, 13, -2, 20, -26, 25, -63, -45, 27, -57, -47, -55, 21, 39, -29, -2, 35, -4, 21, 61, -22, 0, -19, -25, 6, -23, 36, -1, 14, -48, 29 };
		int[] output0 = new int[]{ 1026050129, 1396191666, 1057033591, -773136304, -1913626239, 295774414, 11183366, 244953231, 1737862516, 1429357838, 1363253822, -2076717562, 1698372406, -969149034, 1438218670, 127802017, 243069963, 1021219471, 1830664038, 1190343734, 1752120142, 963766293, -371176064, -1232134696, 97419028, 1587142956, -1908245194, 27418260, -428293601, 1138009638, 619417357, 1549119328, -600243060, -1721342261, -990674944, -875659264, 1498772633, -1927446528, -1061322752, 1600552960, -589744654, -893583360, -41595777, 1263042560, -1853554688, 311635084, 1477574656, -1197932544, -278787350, -894959616, 476938240, 391944432, -1288699904, 1253507072, -1615790080, -1744601088, 1901625344, 446627840, 1389166592, -1597603840, -1387356378, 1305575424, 493449122, 873562112, 832307200, 1617428480, -1242234880, -1489174528, 294912, 819200, -425984, 65536, -655360, 851968, -819200, 2064384, 1474560, -884736, 1867776, 1540096, 1802240, -688128, -1277952, 950272, 65536, -1146880, 131072, -688128, -1998848, 720896, 0, 622592, 819200, -196608, 753664, -1179648, 32768, -458752, 1572864, -950272 };
		for (int ndx = 0; ndx < 100; ndx++)
		{
			Util.Check("Fixed32.Mul", Fixed32.Mul(input0[ndx], input1[ndx]), output0[ndx], input0[ndx], input1[ndx]);
		}
	}

	// Fixed64.DivPrecise
	public static void Fixed64_DivPrecise()
	{
		long[] input0 = new long[]{ -4125679963921L, 65670050030L, -3565399107660L, 2259431355052L, 3982961203854L, -2261115835052L, -2211540627029L, 305169874142L, 3814655831776L, -3110465427448L, -1622256894755L, 1222383298569L, 2268820079056L, 75742078035L, -665291758309L, -3348301707559L, -3646971879698L, -4137201487926L, 4047395831884L, -1974170814919L, 1350753926628L, -2281419463062L, 2915401815357L, -3429753051597L, 2693207143254L, 1868840367720163328L, -240231236955206144L, 1281410015266142208L, 3314474176374292480L, -3981731190460901376L, 2631426384304105472L, 1551809834814424064L, 4466037174771719168L, 4145922812396342272L, 2010739249658144768L, -4083863554302253056L, -3424851984074606592L, 518567726573462528L, -4378232345095124480L, 1046566258588011520L, 2509244571949809664L, -4029434941268220928L, -651788687215377408L, -1008111848705953792L, 3228183576073314304L, 305564157778536448L, -4254098714917023744L, 1931614574660613120L, 2124152177603970048L, 2259043575582128128L, 2677372565773606912L, -3127362087790919168L, -898953966337094656L, -2090619164590259712L, 1617584097887363072L, 1511253064209799168L, 2439840206811569152L, 3768943856089560064L, -3556255417635223552L, -1488780854708825088L, -2101954416513337344L, 1473184608679074816L, 3700661340704524288L, 4513737304921606144L, -4034344303638199808L, 1576433754212219904L, -3337515889949047296L, 2632610051521630208L, 2851478222068316160L, 581052083350839296L, 3430098217909637120L, -1445233760367607808L, -3109749556478220288L, -4077810768558331392L, 4110842554593397760L, 4291782267086L, 4293188678277L, 4294480868009L, 4293482981683L, 4292277775216L, 4292592066872L, 4294959094525L, 4292152599254L, 4292079515352L, 4293829635669L, 4293731400873L, 4293447038349L, 4292227020504L, 4293962606469L, 4294882185715L, 4292625740032L, 4294402947461L, 4290946920700L, 4294192227153L, 4293112372489L, 4293623586145L, 4292480292680L, 4293635907253L, 4291775512804L, 4291862269366L };
		long[] input1 = new long[]{ -710570935370L, -179643450817L, 45842906666L, 2998811829137431040L, -851744683362428160L, -233879177839982L, 317279578985119L, 730202888728909L, -4533538647042L, -50080062829L, 636204734400873L, 699012412821782L, -9206508955L, -2648308932327L, 643137132998L, 237926322724135L, -1021956928875131520L, -14001290523402682L, 136927164067321232L, 6211348697L, -218782219160280960L, -919542483916160L, 62602305208119416L, 55819471691L, -328077238798L, -1246475167879172608L, -2244995618020870656L, -4572373405359749632L, -4228998101394147328L, -183907246266755584L, -1589144241782030336L, -2830148654258895872L, -43668047067034624L, -1057021162477394432L, -3614855283582648832L, -4378928930809018368L, -460426822983779840L, -1292100590453398528L, -3382705583797110784L, -3076836558502628352L, -441329489263925760L, -1877563448452431872L, -4209708177045683200L, -1886477038899098624L, -3764744247803783168L, -2782813690818663424L, -2899314221362787328L, -1402401975652992512L, -3609087329332517888L, -3478644851755277312L, 4336188536553103872L, 4388501828800698880L, 546441317016959040L, 2520977327393232384L, 1606492469397128448L, 1652839053487910144L, 3769092376059510272L, 3648399942400155648L, 3861332768788518400L, 783249480067824128L, 2280379811332109312L, 4536857356552462336L, 3307484544447258624L, 440029797799813568L, 2547047211956384768L, 1318679993429562368L, 4572630276616424448L, 2791870127582693888L, 4279213871199837696L, 279983658973197792L, 1127921215617359360L, 3189634908840259072L, 450952198138844608L, 2436538122138259456L, 2364567902734070784L, -4294453449797L, -4293841658559L, -4291681361186L, -4294955145933L, -4293683614097L, -4291740139980L, -4294339457563L, -4293207006177L, -4290817996332L, -4291058553024L, -4293990272749L, -4294668997509L, -4291259512952L, -4292663028566L, -4293777015753L, -4292804299374L, -4293417335827L, -4292345477076L, -4292219798718L, -4294280346397L, -4293420702801L, -4293376230705L, -4294277149909L, -4294742767467L, -4293274639773L };
		long[] output0 = new long[]{ 24937215465L, -1570058445L, -334037993623L, 3236L, -20084L, 41523228L, -29937302L, 1794973L, -3613914718L, 266759794847L, -10951726L, 7510733L, -1058436817656L, -122836782L, -4442919243L, -60442435L, 15327L, 1269107L, 126953L, -1365081804357L, -26516L, 10655975L, 200017L, -263898541919L, -35257662628L, -6439444978L, 459593461L, -1203666809L, -3366177484L, 92989295373L, -7111934817L, -2354990251L, -439256731104L, -16846023072L, -2389047040L, 4005559506L, 31947806971L, -1723729129L, 5558971737L, -1460905630L, -24419676537L, 9217420220L, 664989347L, 2295181617L, -3682837922L, -471604717L, 6301909161L, -5915722860L, -2527831360L, -2789166095L, 2651920577L, -3060706914L, -7065677074L, -3561769811L, 4324620831L, 3927050533L, 2780253931L, 4436873933L, -3955629216L, -8163765498L, -3958913086L, 1394639332L, 4805530976L, 44056912064L, -6802927234L, 5134476485L, -3134852531L, 4049964202L, 2861975605L, 8913376246L, 13061337497L, -1946063393L, -29617934448L, -7188093521L, 7466875580L, -4292295793L, -4294314144L, -4297768946L, -4293495127L, -4293561036L, -4295819863L, -4295587023L, -4293912456L, -4296230034L, -4297740902L, -4294708365L, -4293745251L, -4295935639L, -4296267571L, -4296072772L, -4294788646L, -4295953263L, -4293567885L, -4296940987L, -4293799135L, -4295170252L, -4294071025L, -4294325950L, -4291999886L, -4293554368L };
		for (int ndx = 0; ndx < 100; ndx++)
		{
			Util.Check("Fixed64.DivPrecise", Fixed64.DivPrecise(input0[ndx], input1[ndx]), output0[ndx], input0[ndx], input1[ndx]);
		}
	}

	// Fixed32.DivPrecise
	public static void Fixed32_DivPrecise()
	{
		int[] input0 = new int[]{ -16256000, 16738993, -29065943, 60322351, 42675832, 44233949, 51887654, 17024888, -16075785, -860319, 27401488, 34492483, -19990937, 16582791, -1769652, 46979582, -58210799, -22535994, 23088677, -38316976, 3180730, 30394008, 13164544, -52864753, -56134354, 180429138, -426302909, -723357943, 515521074, -898441198, 309428083, -1015178038, -683822119, 834284852, 596075677, 657321224, 142073068, -616131072, 515831051, -552705012, 666691655, -51655661, 979699051, -426546730, 785093881, -466325546, -159001240, -816604538, -163840058, -362888203, -521225672, -353405798, -82313358, -1056106718, 426879090, -734311444, -683440194, 514223938, -195332545, 768844339, 368430442, -221420531, -861772099, 107366961, -1028239875, 81053333, -836994035, 596839267, 401735083, -443875644, -912662436, 920826729, 314746596, 258383994, -489738119, 65483587, 65490756, 65492227, 65498915, 65478875, 65491992, 65515609, 65525602, 65518715, 65523543, 65501497, 65502757, 65520409, 65495925, 65517779, 65517531, 65502835, 65484829, 65501186, 65509801, 65518375, 65513884, 65473186, 65522368, 65504918 };
		int[] input1 = new int[]{ -104438, -88872, 1607055, 3741464, -31746300, -747303, 401398437, 1063914, -2920586, -1537336, 27118070, 17466138, -29597786, -494822, 759269, 324370463, -1212205, -103933242, 803005711, 74934, -80653777, -1110645, 107712450, 315529004, -898434679, -833642784, -29501243, -396878794, -984766839, -710282900, -261584096, -785607895, -584208301, -606485198, -1016693843, -54414746, -284064825, -486241231, -741265616, -342465407, -436325862, -650682189, -277633811, -611221378, -594469075, -740356035, -979718805, -1053168456, -292666666, -855388893, 954390309, 735004075, 739790013, 1049419929, 22041065, 146076086, 1023667278, 969529695, 944363877, 87200930, 451989802, 866161549, 480716035, 790688037, 961074625, 824176340, 1069435989, 148296045, 484925005, 10190392, 211255407, 317074844, 205553721, 439769538, 975617029, -65475642, -65522282, -65483239, -65510495, -65475392, -65509362, -65502779, -65488775, -65474968, -65524221, -65524623, -65511179, -65501188, -65519691, -65519794, -65518441, -65533727, -65517088, -65531179, -65498089, -65488473, -65485791, -65519589, -65518281, -65489554 };
		int[] output0 = new int[]{ 10200819, -12343670, -1185314, 1056614, -88098, -3879170, 8471, 1048715, 360729, 36675, 66220, 129421, 44264, -2196284, -152746, 9491, 3147077, 14210, 1884, -33511374, -2584, -1793463, 8009, -10980, 4094, -14184, 947017, 119447, -34307, 82896, -77522, 84686, 76710, -90151, -38422, -791664, -32777, 83042, -45605, 105768, -100136, 5202, -231259, 45734, -86551, 41278, 10636, 50815, 36688, 27802, -35791, -31511, -7291, -65953, 1269264, -329443, -43754, 34759, -13555, 577826, 53420, -16753, -117485, 8899, -70116, 6445, -51291, 263759, 54293, -2854633, -283127, 190325, 100349, 38505, -32897, -65543, -65504, -65544, -65524, -65539, -65518, -65548, -65572, -65579, -65535, -65512, -65527, -65555, -65512, -65533, -65535, -65505, -65503, -65506, -65547, -65565, -65564, -65489, -65540, -65551 };
		for (int ndx = 0; ndx < 100; ndx++)
		{
			Util.Check("Fixed32.DivPrecise", Fixed32.DivPrecise(input0[ndx], input1[ndx]), output0[ndx], input0[ndx], input1[ndx]);
		}
	}

	// Fixed64.Mod
	public static void Fixed64_Mod()
	{
		long[] input0 = new long[]{ 1742027882811L, -3641271435695L, 1912568458890L, 2657099023237L, -2769854035289L, 323864870150L, -1991993078927L, 344335934160L, 3508115515633L, -3871225519802L, 324785974151L, -52196210024L, -2314802767077L, 1383520918644L, -2436195487134L, 4126987871921L, -2462310075146L, 1661047678773L, 586109122272L, 3397955299582L, -3462406131612L, -4079085631899L, -274535130127L, 1855978906864L, 3162463871472L, -3767035079754L, 348002018162L, -2737050315274L, 2869642635336L, -2625356699222L, 1526146218710L, 928230990432L, -4238377743973L, 3789602447764L, -757595254352L, 743869518346L, -2980604955387L, -2837936063321L, 1352716246629L, -2540940051183L, -28126930013L, -4049086791885L, 3530322935643L, -1815390474845L, 1708910938795L, -2491014059159L, 2089592298973L, 2595737699208L, -1841225990857L, -1397818894650L, -2679083766644475904L, 2986714076423774208L, 2413883992852900864L, -4509151323524395520L, -2480309072320505856L, -1676819745695499776L, 2198198208390439936L, 3649801974344148992L, -29534091369110016L, -2964060872705895424L, -2647544189687689216L, 3153002067602402304L, 50115767934654464L, -1741686666861964800L, -1098817868662804992L, 1714323683609477120L, 2287235740926199808L, -2395792199024320512L, -295011431717285376L, 3685419880448424960L, 1263662213958392832L, -946361085227977728L, 2636170012475988992L, 866307408803888128L, 2670697701261210624L, 4293495441139L, 4293555634945L, 4292540322166L, 4293240972953L, 4291020985246L, 4294160434125L, 4290835563504L, 4291392975208L, 4291623918260L, 4294043558007L, 4291118401046L, 4292457011926L, 4291986762334L, 4293098191195L, 4290992188812L, 4293469123279L, 4293134509531L, 4293775286637L, 4294497844365L, 4291418569566L, 4293021034619L, 4292193048250L, 4293000024757L, 4293235357029L, 4292103761972L };
		long[] input1 = new long[]{ 25043908458L, 38376457684L, 5598213162L, 10079177187L, 7653874922L, 30067287500L, 4721112295L, 12538892084L, 8963913797L, 10124233678L, 14138585505L, 25316093203L, 12677939689L, 33430865608L, 8232634972L, 15533218719L, 5177860652L, 15609093253L, 21616661674L, 7044820218L, 7432198070L, 23321889374L, 4823190570L, 22030284823L, 11859107597L, -5957134395L, -67568852255407L, 35689128975829496L, 144156563574995L, -2101083703017664L, -8172618816L, 585283773551136896L, 19531656826028L, -1061781131309614976L, -220786808579L, 2420846366014L, 249457538156666848L, -2155386435640686L, -57990063120L, 8073215831303144L, 700699635155645952L, -33978413537228536L, -256798650459278L, 91669286271574L, 8285072067387729L, -19637689631830L, -733254747379679104L, 612814269216837760L, 133978379747728L, -13146550004044632L, -496596838540412928L, -2634752806411635712L, -1634379829499197440L, 827077246223432704L, 3984337913488239616L, -3650955224603269120L, 569757229890166784L, -2134490997113911296L, 2609936382284576768L, -733546958850632192L, -2701357918023470080L, -3329483863015122944L, -978484618823503360L, 1828890626318601216L, 3424299187423616000L, 611440342783790080L, 4279706787416450048L, -3371778660856360448L, 4118546248457259008L, -168023898848879104L, -3988770620387486720L, -2228224908886310400L, -2603249917065507840L, -3703022206918823424L, -4518402283652328960L, -4293562840801L, -4291801751774L, -4294277010773L, -4291153976752L, -4293773385295L, -4291478680860L, -4294952626323L, -4291635615376L, -4293161511583L, -4291852051838L, -4292531364896L, -4291217132774L, -4293552185573L, -4293686502145L, -4293285089805L, -4291398659746L, -4294843721401L, -4291412580388L, -4294595193907L, -4293968303577L, -4291319853226L, -4293498272493L, -4293118810365L, -4294417799791L, -4294239742847L };
		long[] output0 = new long[]{ 13998199209L, -33884413399L, 3577770648L, 6275423056L, -6805188447L, 23191995150L, -4404802732L, 5785847892L, 3225221006L, -3768254806L, 13737093041L, -1564023618L, -7417743679L, 12855428716L, -7568170394L, 10684911386L, -2826265446L, 6483793955L, 2459257074L, 2351954506L, -6434029062L, -21076880823L, -4436458207L, 5434981732L, 7941250670L, -2126142114L, 348002018162L, -2737050315274L, 2869642635336L, -2625356699222L, 6039118934L, 928230990432L, -4238377743973L, 3789602447764L, -95234828615L, 743869518346L, -2980604955387L, -2837936063321L, 18944794869L, -2540940051183L, -28126930013L, -4049086791885L, 3530322935643L, -1815390474845L, 1708910938795L, -2491014059159L, 2089592298973L, 2595737699208L, -1841225990857L, -1397818894650L, -196099573942411264L, 351961270012138496L, 779504163353703424L, -373765092407232000L, -2480309072320505856L, -1676819745695499776L, 488926518719939584L, 1515310977230237696L, -29534091369110016L, -29873037303366656L, -2647544189687689216L, 3153002067602402304L, 50115767934654464L, -1741686666861964800L, -1098817868662804992L, 491442998041896960L, 2287235740926199808L, -2395792199024320512L, -295011431717285376L, 156918004621963776L, 1263662213958392832L, -946361085227977728L, 32920095410481152L, 866307408803888128L, 2670697701261210624L, 4293495441139L, 1753883171L, 4292540322166L, 2086996201L, 4291020985246L, 2681753265L, 4290835563504L, 4291392975208L, 4291623918260L, 2191506169L, 4291118401046L, 1239879152L, 4291986762334L, 4293098191195L, 4290992188812L, 2070463533L, 4293134509531L, 2362706249L, 4294497844365L, 4291418569566L, 1701181393L, 4292193048250L, 4293000024757L, 4293235357029L, 4292103761972L };
		for (int ndx = 0; ndx < 100; ndx++)
		{
			Util.Check("Fixed64.Mod", Fixed64.Mod(input0[ndx], input1[ndx]), output0[ndx], input0[ndx], input1[ndx]);
		}
	}

	// Fixed32.Mod
	public static void Fixed32_Mod()
	{
		int[] input0 = new int[]{ -751635, 4712258, -22667879, 55675425, -4815174, -25790123, -48580122, 44325219, -30831075, -12035275, 6445272, -39488635, -58242345, -60528, 12737838, -51475269, -40468966, 29685498, -27506844, 18564073, 3189296, 52789538, -62826512, -28525667, -64928400, 60229846, 56555462, -28904459, -35333367, -25392456, 11994825, 2002770, -59678211, 55067826, 50808811, -49608112, 100576, -64379027, -54754071, -14005743, 46638711, -35192096, 35927761, -29912900, 58378182, -8159465, 51345282, 14442490, -23763261, -21213331, 512992809, -769926978, -212531326, -277474108, -596182530, -928177125, -383762891, 989508420, 842399158, -922105790, -870799457, 618951999, 690377925, 828681860, -584975213, 241846117, -669257198, 729303720, 771502553, -408891390, -124654553, -11352854, 641751670, 291070818, 663311095, 65510726, 65499315, 65500887, 65509187, 65520361, 65486465, 65492918, 65520631, 65507289, 65497298, 65506864, 65532052, 65502707, 65493849, 65477987, 65530820, 65533485, 65522998, 65509164, 65516931, 65503543, 65486633, 65528972, 65516604, 65506334 };
		int[] input1 = new int[]{ 246662, 99585, 278660, 442412, 99769, 67844, 323465, 607714, 125319, 110722, 293948, 306200, 130614, 85659, 613647, 131812, 127395, 166809, 128852, 75099, 612162, 539587, 308528, 135725, 299646, -645133, -8148776, 75963929, 571711, -91373, -39643223, 9145462, 1358707, -338561, -570556, 147432, 3636721, -83489463, -844635860, 31468209, 246489, -28170732, -2602202, 602734, 250261331, -158284252, -990527, 1512752, 408728653, -471419, 671975442, 26531563, -254405928, -67039878, 76117446, 978853986, -701090968, 701344085, -1031056470, -439443407, 39870114, -842094101, 948379152, 959576476, -740416134, 563184174, -100725220, 739850041, 868994571, 89635677, -325794958, 651445589, -13972312, -1071476742, -564143507, -65535269, -65513075, -65529065, -65476611, -65500649, -65471090, -65471700, -65495399, -65485634, -65530828, -65504252, -65516949, -65485911, -65487404, -65473819, -65481993, -65492902, -65495348, -65505681, -65509771, -65524366, -65533450, -65502425, -65522228, -65511146 };
		int[] output0 = new int[]{ -11649, 31763, -96419, 373925, -26262, -9403, -60372, 569811, -2601, -77299, 272364, -295035, -119115, -60528, 464898, -68589, -84751, 160305, -61368, 14620, 128486, 449599, -195328, -23417, -204864, 232477, 7662806, -28904459, -458996, -82135, 11994825, 2002770, -1253810, 220944, 29327, -70960, 100576, -64379027, -54754071, -14005743, 52290, -7021364, 2099135, -378934, 58378182, -8159465, 828405, 827722, -23763261, -470895, 512992809, -511651, -212531326, -9314596, -63360408, -928177125, -383762891, 288164335, 842399158, -43218976, -33527063, 618951999, 690377925, 828681860, -584975213, 241846117, -64905878, 729303720, 771502553, -50348682, -124654553, -11352854, 12997630, 291070818, 99167588, 65510726, 65499315, 65500887, 32576, 19712, 15375, 21218, 25232, 21655, 65497298, 2612, 15103, 16796, 6445, 4168, 48827, 40583, 27650, 3483, 7160, 65503543, 65486633, 26547, 65516604, 65506334 };
		for (int ndx = 0; ndx < 100; ndx++)
		{
			Util.Check("Fixed32.Mod", Fixed32.Mod(input0[ndx], input1[ndx]), output0[ndx], input0[ndx], input1[ndx]);
		}
	}

	// Fixed64.Min
	public static void Fixed64_Min()
	{
		long[] input0 = new long[]{ -97361149045337L, -427995522799300L, 346154426761190L, -178652565883191L, 199759968293020L, -113706705852948L, 40773063418986L, 223493693104072L, -392103023182587L, 234094575509008L, 80722694637589L, -44277569820618L, 147481815068676L, -342459773959470L, -85978401040036L, 31411703414627L, 50925618623714L, -205718861495795L, -55198810625703L, 85228643839687L, -247676028315333L, 194062470690367L, 37029000617243L, 33772277015726L, 28435822213241L, -290020588735051L, 315266634746807L, -124209423457839L, -339943005558298L, 193146777889941L, -405655784388898L, -289908490334999L, -339885441158271L, -23163610210786L, -365989888370427L, -422785995196875L, -329952876353646L, -353512567564617L, -918516600427L, 45921471821383L, 402104570387244L, 385795669179650L, -264413011523126L, -12046547005609L, -36741593817109L, 195400345890990L, 146618131868274L, -190364671888645L, -311418007545015L, -375191411174712L, -1075970111516260864L, -257991098531128320L, -2296677779854254080L, 2263102637506318336L, 1314662304922287104L, 2696695932884954112L, 4049150511908319232L, -3046745697636347392L, 549099047072142336L, -3259931677987386368L, -3440294277001561088L, -908421461536324096L, -2014645148753521152L, 4180859304758922240L, -3887706805755171328L, 3799817068870063104L, 4373035116836964352L, 1059692593478733824L, 3293034283738229760L, -759971500338441216L, -1651711723353677312L, -641458839892121088L, -3369087546016583680L, 1053301892592707584L, 3162911261533526016L, 1553770418666484736L, -3308532424124958720L, 3069814224691943424L, 3038457050701334528L, 3274863698734567424L, 4328927507788521472L, 1477884209141186560L, -1697811359709768704L, -4092103208545297408L, -716797810454112256L, -4430381464365285376L, -1497519442417976320L, -252965772044103168L, -936185431525687296L, 1561255949666444288L, -1031597846582915584L, 4066393448400123904L, -1345260876018919424L, 3849624507544845312L, -1972040954353037824L, -3249731813554437120L, -270688658246556672L, -1141390941730247168L, 3230551640652805120L, -3312358866325322240L };
		long[] input1 = new long[]{ -203405893094718L, 172306183080236L, -384870587179219L, -265737092723743L, -78083034636360L, 138073109864295L, -35527793816543L, -117114579854535L, 222408341503566L, 60283827428071L, 523389000243L, -264514242723174L, 133939969062370L, -155753071472528L, 210253630297907L, -58865544627411L, -133888858262346L, -258851304320537L, -405966615189042L, -92689135443161L, -68132149831726L, -25058543411668L, 224696384704632L, 328376447152912L, 112620803052443L, -203974967894983L, 28978752613494L, -380421181977147L, -358982858767164L, 262532205922251L, -7141991003325L, 76134577035452L, -242288145512824L, -394248323983586L, -32944058615340L, -148465237869134L, -334534632755779L, 355348381165472L, -374577305174426L, -74566268634722L, 42238528219668L, 216658433100889L, -146424179468184L, 368294385571500L, -384098646778859L, 237122083510418L, -177641029482720L, 320836789549401L, 207196552296483L, -407372778789697L, 2784729886181995520L, 1644587394808512512L, -4459761505994834432L, -1626958478195571712L, 1889265836325080064L, 4177174746803248128L, -1500589570941932544L, 1261706345980426240L, 3711877394400180224L, 4372577904683190272L, 1393542338582525952L, -3632349731211011584L, -1473516729910294528L, 1885921366764963840L, -2977173167348520448L, -306492467715359232L, -3822296120253942784L, -2534227958635611648L, 285971096785646592L, -4069011359817273344L, 685650492860651520L, 14314870453680128L, -2615807993422966784L, -2879907684355602944L, -4340059672182913536L, -1106419153326412800L, -3907883982300590080L, -2607026035134040064L, -1586343171481642496L, 1800957056660574208L, -2787226941514346496L, 2444544536032675840L, 4450948602466526208L, 1739129898599269376L, -4121552205874816000L, -1927345905447378432L, 1325959696708633600L, 4540833136913190912L, -1369683026442989056L, -282286538829972480L, 1681894125004035072L, 1852460230028985344L, 646842851983104000L, -697077317781489664L, -4443972407343469056L, -2010934133799291904L, 928224159883029504L, 1380503775643504640L, 2215111656465977344L, 2946137531789709312L };
		long[] output0 = new long[]{ -203405893094718L, -427995522799300L, -384870587179219L, -265737092723743L, -78083034636360L, -113706705852948L, -35527793816543L, -117114579854535L, -392103023182587L, 60283827428071L, 523389000243L, -264514242723174L, 133939969062370L, -342459773959470L, -85978401040036L, -58865544627411L, -133888858262346L, -258851304320537L, -405966615189042L, -92689135443161L, -247676028315333L, -25058543411668L, 37029000617243L, 33772277015726L, 28435822213241L, -290020588735051L, 28978752613494L, -380421181977147L, -358982858767164L, 193146777889941L, -405655784388898L, -289908490334999L, -339885441158271L, -394248323983586L, -365989888370427L, -422785995196875L, -334534632755779L, -353512567564617L, -374577305174426L, -74566268634722L, 42238528219668L, 216658433100889L, -264413011523126L, -12046547005609L, -384098646778859L, 195400345890990L, -177641029482720L, -190364671888645L, -311418007545015L, -407372778789697L, -1075970111516260864L, -257991098531128320L, -4459761505994834432L, -1626958478195571712L, 1314662304922287104L, 2696695932884954112L, -1500589570941932544L, -3046745697636347392L, 549099047072142336L, -3259931677987386368L, -3440294277001561088L, -3632349731211011584L, -2014645148753521152L, 1885921366764963840L, -3887706805755171328L, -306492467715359232L, -3822296120253942784L, -2534227958635611648L, 285971096785646592L, -4069011359817273344L, -1651711723353677312L, -641458839892121088L, -3369087546016583680L, -2879907684355602944L, -4340059672182913536L, -1106419153326412800L, -3907883982300590080L, -2607026035134040064L, -1586343171481642496L, 1800957056660574208L, -2787226941514346496L, 1477884209141186560L, -1697811359709768704L, -4092103208545297408L, -4121552205874816000L, -4430381464365285376L, -1497519442417976320L, -252965772044103168L, -1369683026442989056L, -282286538829972480L, -1031597846582915584L, 1852460230028985344L, -1345260876018919424L, -697077317781489664L, -4443972407343469056L, -3249731813554437120L, -270688658246556672L, -1141390941730247168L, 2215111656465977344L, -3312358866325322240L };
		for (int ndx = 0; ndx < 100; ndx++)
		{
			Util.Check("Fixed64.Min", Fixed64.Min(input0[ndx], input1[ndx]), output0[ndx], input0[ndx], input1[ndx]);
		}
	}

	// Fixed32.Min
	public static void Fixed32_Min()
	{
		int[] input0 = new int[]{ -2147483648, -2147483648, -2147483648, -2147483648, 872086984, -2147483648, -499214010, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, 1988154551, 1983533414, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -1618928232, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -961651010, -299069815, 112557522, 1745651090, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, 1216487204, 817774521, -1414817471, -1796362149, 1941898905, -2147483648, 901114088, 197266351, 620512511, 696391062, -717525243, -588598176, -173319452, -859459986, 637655822, 1048941481, 158280760, 52913359, -397639940, 216552884, -619324662, 645265330, 56106265, 261333435, 982625510, 461579851, -1027220772, -1031694306, -455217308, 879667322, -551577780, 708881540, -738226600, -857530792, 31646555, 854424045, 756015141, -550570057, -288369751, -373788054, 847140179, 836610104, 600273389, -387549253, 797933053, -293784262, -190787646, -368280206, 700650396, 50947604, -879034745, -953307748, 690038029, -697121113, -606928952, 178989568 };
		int[] input1 = new int[]{ -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -1681999301, -2147483648, -1114968839, -2147483648, -1717727146, -2147483648, 2085823032, 611835153, 594926468, -655989493, 1871410599, -2147483648, 969930038, -2147483648, -2147483648, -2147483648, 388789303, -2147483648, -2147483648, -2147483648, -1374884793, -2147483648, -408944534, -2147483648, -243318893, 897485825, -2147483648, -2147483648, 1167964993, -2147483648, -939931454, 1614772922, 159590225, -2147483648, 1058028775, -2147483648, -2147483648, -930858102, -1522747342, -2147483648, -2147483648, -2147483648, -244887533, -2147483648, 285733519, 73487750, -657316577, 572039598, -813476292, 859066571, -421258163, 814587012, 174227019, -352664960, -924113399, -389530483, 182635281, 856973600, -780815483, -364891005, -732458712, 1049889937, 443154528, -382192943, -1028749882, -630086304, 537142205, 202667949, -421374325, 414801257, -658602879, 567576910, 684960244, -672011855, -1054898312, 1032636336, 823139983, 926398810, -505051297, -391214432, -966995303, 213332473, -634053585, 1061815431, 184126444, 859428200, 511965550, 76856190, -443412686, -874998986, 522826335, 917418619, -241978735, 559598083 };
		int[] output0 = new int[]{ -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -1681999301, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, 969930038, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -961651010, -2147483648, -2147483648, 1167964993, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -1522747342, -2147483648, -2147483648, -2147483648, -244887533, -2147483648, 285733519, 73487750, -657316577, 572039598, -813476292, -588598176, -421258163, -859459986, 174227019, -352664960, -924113399, -389530483, -397639940, 216552884, -780815483, -364891005, -732458712, 261333435, 443154528, -382192943, -1028749882, -1031694306, -455217308, 202667949, -551577780, 414801257, -738226600, -857530792, 31646555, -672011855, -1054898312, -550570057, -288369751, -373788054, -505051297, -391214432, -966995303, -387549253, -634053585, -293784262, -190787646, -368280206, 511965550, 50947604, -879034745, -953307748, 522826335, -697121113, -606928952, 178989568 };
		for (int ndx = 0; ndx < 100; ndx++)
		{
			Util.Check("Fixed32.Min", Fixed32.Min(input0[ndx], input1[ndx]), output0[ndx], input0[ndx], input1[ndx]);
		}
	}

	// Fixed64.Max
	public static void Fixed64_Max()
	{
		long[] input0 = new long[]{ 3411571151L, 2855559663L, -266135274L, 3396023259L, 535990510L, -631687998L, 2440349475L, 855029186L, -321311598L, -618142906L, 1775710510L, 339626998L, -3776460223L, -910011794L, -1486033886L, -3532031651L, -555714574L, 1319913178L, 1153132298L, 2736563091L, -1886550102L, 511802550L, 2440806799L, 1820323682L, 2029689742L, -3257745039L, -273240126L, -2453823235L, -1710644750L, -2480468651L, 3862866983L, -2009118702L, -1056744710L, -3793518651L, -340032781158340L, -300081556339736L, 66122231830790L, -45225125021059L, -184969155486132L, 254164949118354L, -184816429486061L, 283646029932083L, -66283894230865L, -423105635597023L, -65122753430325L, 163281096276033L, -188198347487636L, -323111412350460L, -424728188397779L, -346902565561539L, 46381272221597L, 309147481943958L, 406427370789257L, 264773332323294L, 67147350231267L, 388551471180933L, -319493848348775L, 218817228301894L, 282517045531557L, 367083647970936L, 326489797552033L, 398552197185590L, -299371704339405L, 331045173554155L, -173202884280653L, 298168929938845L, 329547436753457L, 290214730335141L, 3538608475044533248L, 4126761120738994176L, -291216978433357824L, -1437873930175559168L, -4106607420484826112L, -220746585231884288L, 224497689410873344L, 3949178039876491264L, -4264967086714939904L, -3807252722414790656L, -721085914394370048L, -1292054361569794560L, 2458959777724625920L, -4190530411472847360L, -924454479970477056L, 4140869508492338176L, -2877477647692968960L, 1659455716895695872L, -1110070270666704384L, 270441942440057856L, -792856243873093120L, -3796563025551438848L, -4283997197754147328L, 2817615102163049472L, 843307790203621376L, -481382982039137792L, 749623377929331712L, 4270671232783413248L, 4346763944336399360L, -1131762935013156864L, -1551662010629961728L, 2359746741810430976L };
		long[] input1 = new long[]{ -1804651278L, -2780185619L, 101713326L, 4191503971L, -1125362562L, 2906450103L, 289760090L, -428043106L, -3120325803L, 2376895859L, -1823416078L, -3898088515L, 2919205731L, -1337093298L, -2501508647L, -2536586391L, 1350685922L, -3523575131L, -1778425114L, 590489262L, -170024858L, -1395198694L, -3880214431L, 2208508339L, -2928633779L, -501231746L, 3936519423L, 599205414L, -1729293358L, -2135810242L, -186042594L, -510138082L, -2898595587L, -4277908867L, -223173278303923L, -379566037976749L, 109715858651090L, -249203012316044L, 262108371922053L, -2510731001169L, -185631373886441L, 128848213859999L, 356260754365896L, -394412537183662L, -143523142266833L, -26647744612408L, -291421556735703L, 287266625133769L, 55152000225682L, -255523499918987L, 169534433078945L, 101744988247378L, -27944449413012L, -125136161458271L, -65441507430473L, -299087522739273L, -410084437590960L, 276801733128895L, 101754559047383L, -122556073857069L, 357171881166321L, -153871897071652L, 153521004671488L, 32167661814979L, 179593978283630L, 66205046230829L, 263230389122576L, -48916348222778L, 1499143257884199936L, 2007806169245701120L, 4157579443837427712L, 1077114990884117504L, 2159240308081972224L, -1353449974201899008L, 587399894693428224L, 4532381362825232384L, 3043549026490890240L, -40164856986166272L, -3558146753729538048L, 4015690620712858624L, -918464125871199232L, -2227050398539064832L, 836790417847074816L, 3413948264695828480L, 3883953584157304832L, 2119235745717818368L, -1388810732024109056L, -4342766077106271744L, -2790744476781735936L, -2055713179380398080L, -4344065064195747840L, 2723485482168584192L, 3799072300065753088L, 1502853937830980608L, 2330504298048207872L, 986461579981700096L, 3641316055266171904L, 565512475054846976L, 4214100113967479808L, 1478481866725605376L };
		long[] output0 = new long[]{ 3411571151L, 2855559663L, 101713326L, 4191503971L, 535990510L, 2906450103L, 2440349475L, 855029186L, -321311598L, 2376895859L, 1775710510L, 339626998L, 2919205731L, -910011794L, -1486033886L, -2536586391L, 1350685922L, 1319913178L, 1153132298L, 2736563091L, -170024858L, 511802550L, 2440806799L, 2208508339L, 2029689742L, -501231746L, 3936519423L, 599205414L, -1710644750L, -2135810242L, 3862866983L, -510138082L, -1056744710L, -3793518651L, -223173278303923L, -300081556339736L, 109715858651090L, -45225125021059L, 262108371922053L, 254164949118354L, -184816429486061L, 283646029932083L, 356260754365896L, -394412537183662L, -65122753430325L, 163281096276033L, -188198347487636L, 287266625133769L, 55152000225682L, -255523499918987L, 169534433078945L, 309147481943958L, 406427370789257L, 264773332323294L, 67147350231267L, 388551471180933L, -319493848348775L, 276801733128895L, 282517045531557L, 367083647970936L, 357171881166321L, 398552197185590L, 153521004671488L, 331045173554155L, 179593978283630L, 298168929938845L, 329547436753457L, 290214730335141L, 3538608475044533248L, 4126761120738994176L, 4157579443837427712L, 1077114990884117504L, 2159240308081972224L, -220746585231884288L, 587399894693428224L, 4532381362825232384L, 3043549026490890240L, -40164856986166272L, -721085914394370048L, 4015690620712858624L, 2458959777724625920L, -2227050398539064832L, 836790417847074816L, 4140869508492338176L, 3883953584157304832L, 2119235745717818368L, -1110070270666704384L, 270441942440057856L, -792856243873093120L, -2055713179380398080L, -4283997197754147328L, 2817615102163049472L, 3799072300065753088L, 1502853937830980608L, 2330504298048207872L, 4270671232783413248L, 4346763944336399360L, 565512475054846976L, 4214100113967479808L, 2359746741810430976L };
		for (int ndx = 0; ndx < 100; ndx++)
		{
			Util.Check("Fixed64.Max", Fixed64.Max(input0[ndx], input1[ndx]), output0[ndx], input0[ndx], input1[ndx]);
		}
	}

	// Fixed32.Max
	public static void Fixed32_Max()
	{
		int[] input0 = new int[]{ 33482, 21754, 25870, -59124, -53097, 37091, -37375, 43878, -50301, -14648, 26127, 54839, 62147, -52409, -12443, -21903, 46803, 27673, -60040, -33880, -61883, -25872, 7656, -15018, 24729, -45156, 26854, -56208, 13183, 59864, -52873, -30320, 5079, -6038, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, 173132058, -1445877829, -2147483648, -2147483648, 1023000882, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, 1663125272, -2147483648, -2147483648, -2147483648, -2147483648, -1687732669, -2147483648, -2147483648, 230005612, -2147483648, -2147483648, -2147483648, -1070312817, -588322148, 70306583, 584691339, 354721333, -786585385, 718488564, 434393559, 352078760, -497007218, 525885217, -216093175, -578152054, 805381686, -986026942, -586046515, 645943096, -775533879, -73605951, -698561704, 219436460, 426109956, 93448837, -804141295, -427581421, -756524816, 583586003, 286562913, 829982738, -157014002, -801791413, 738289778 };
		int[] input1 = new int[]{ -41951, 30729, 8017, 5480, 36076, -47433, 1955, 1921, 54122, 40525, 10194, -51036, 42091, 40861, -31736, -10513, 32750, -41463, 2540, 28230, 17357, -6181, -51438, -24646, -18318, 57594, -55298, -46703, -34841, -44630, -27310, -9087, -15775, 2650, -2147483648, 1143618576, 1940664389, -857256778, -2147483648, 1514755203, -2147483648, -2147483648, -2147483648, -1856983402, 56637997, -2147483648, 1376997733, -2147483648, -2147483648, -2147483648, -2147483648, -1590111234, -2147483648, 737597977, -2147483648, -2147483648, -2147483648, 295153354, -2147483648, -2147483648, -2147483648, -1895910032, -2147483648, 1786030619, -2147483648, 2104074796, -2147483648, -2147483648, 934427007, 153778402, -679950759, -849652676, 44325479, -686408492, 458496665, 102366126, 476101311, 1066104249, 62632394, 590928848, 596214531, 503221646, 793018231, 1006693449, -398340780, -1061656722, 720421983, -874406514, -655404257, 370141997, -147607554, -422680950, 391970837, -199293944, -61469062, 37504326, -296429565, -641816172, 678152644, -564649060 };
		int[] output0 = new int[]{ 33482, 30729, 25870, 5480, 36076, 37091, 1955, 43878, 54122, 40525, 26127, 54839, 62147, 40861, -12443, -10513, 46803, 27673, 2540, 28230, 17357, -6181, 7656, -15018, 24729, 57594, 26854, -46703, 13183, 59864, -27310, -9087, 5079, 2650, -2147483648, 1143618576, 1940664389, -857256778, -2147483648, 1514755203, -2147483648, 173132058, -1445877829, -1856983402, 56637997, 1023000882, 1376997733, -2147483648, -2147483648, -2147483648, -2147483648, -1590111234, -2147483648, 737597977, -2147483648, -2147483648, 1663125272, 295153354, -2147483648, -2147483648, -2147483648, -1687732669, -2147483648, 1786030619, 230005612, 2104074796, -2147483648, -2147483648, 934427007, 153778402, 70306583, 584691339, 354721333, -686408492, 718488564, 434393559, 476101311, 1066104249, 525885217, 590928848, 596214531, 805381686, 793018231, 1006693449, 645943096, -775533879, 720421983, -698561704, 219436460, 426109956, 93448837, -422680950, 391970837, -199293944, 583586003, 286562913, 829982738, -157014002, 678152644, 738289778 };
		for (int ndx = 0; ndx < 100; ndx++)
		{
			Util.Check("Fixed32.Max", Fixed32.Max(input0[ndx], input1[ndx]), output0[ndx], input0[ndx], input1[ndx]);
		}
	}

	// Fixed64.Ceil
	public static void Fixed64_Ceil()
	{
		long[] input0 = new long[]{ -3075830515L, 3445349051L, -307113438L, 1367245466L, 1646362490L, 3749470231L, 1773479314L, 1034439062L, -641154886L, 3591078983L, -403684770L, 908296138L, -2841057047L, 2305047251L, -1306456014L, 571755022L, -1903204898L, 2602537511L, -1555352518L, 3271590551L, 785223350L, -4004506891L, 1279808850L, -2037827254L, -3089423467L, 3265888059L, -671526762L, -3320489599L, 1795209574L, -2610997939L, -2699784527L, 176702642L, -2743160875L, -1785841474L, 114457861453298L, 323447637150617L, -197496727091966L, -249013983515956L, -191455598689153L, -104786605848795L, -172513891080333L, -244771842313980L, 143849612266985L, -191772871889301L, -241071453512257L, 279624093930210L, -314463405146433L, 355780339565673L, -378568705976284L, 347733602361926L, -224174509104389L, 50671152223595L, 328305512352879L, 373598732373970L, 125114770258261L, -336629091956755L, -212942709499159L, -256425347919407L, 16170163807529L, 267544172724585L, 12602969805868L, 79900161837206L, 353419678364573L, -232512424308272L, 199589621492941L, 371457988372973L, -64351028229965L, 323975172350862L, -3365642307933721600L, -264103004499906560L, -1877163778120486400L, -3981469429383956992L, 238506193404735488L, 4066776580957941760L, 753511388485911552L, -1140341221657844736L, -1232693966436487680L, -1178356196255775232L, -4211301350067345408L, -1707998017118277120L, 2271559685814118400L, 70477340311077888L, -4112184048974222336L, 2805516497112163328L, 4215203791714046976L, 1168737101595828224L, 1276265439012087808L, -2345246386751535616L, 1350743719602396160L, 231823262943753216L, 1147761473449841664L, -3978944770296781312L, 1764292917997342720L, -316786499306317824L, 3351225047607141376L, 1901410762598275072L, -1811346526719861760L, -570529422060673536L, 409463243533019136L, -1965298783408114176L };
		long[] output0 = new long[]{ 0L, 4294967296L, 0L, 4294967296L, 4294967296L, 4294967296L, 4294967296L, 4294967296L, 0L, 4294967296L, 0L, 4294967296L, 0L, 4294967296L, 0L, 4294967296L, 0L, 4294967296L, 0L, 4294967296L, 4294967296L, 0L, 4294967296L, 0L, 0L, 4294967296L, 0L, 0L, 4294967296L, 0L, 0L, 4294967296L, 0L, 0L, 114460878438400L, 323449692094464L, -197495481171968L, -249013613887488L, -191452462186496L, -104784317120512L, -172511656411136L, -244770186199040L, 143851339644928L, -191770289766400L, -241067924389888L, 279628140773376L, -314460325543936L, 355782205898752L, -378567007404032L, 347737732153344L, -224171523047424L, 50672024158208L, 328307300106240L, 373602025209856L, 125116692299776L, -336626651758592L, -212940183568384L, -256422432473088L, 16170551869440L, 267546397769728L, 12605729013760L, 79903571574784L, 353419973885952L, -232512349536256L, 199591425212416L, 371458836529152L, -64347200028672L, 323977973071872L, -3365642304218988544L, -264103002229440512L, -1877163775098880000L, -3981469425382457344L, 238506195441156096L, 4066776581211684864L, 753511390282514432L, -1140341218979348480L, -1232693963714985984L, -1178356193559576576L, -4211301345958821888L, -1707998014175444992L, 2271559686903824384L, 70477342425743360L, -4112184044911853568L, 2805516497953226752L, 4215203791898673152L, 1168737103199076352L, 1276265440565264384L, -2345246383511961600L, 1350743721120890880L, 231823264983285760L, 1147761475062857728L, -3978944766296457216L, 1764292919323262976L, -316786497011318784L, 3351225048194088960L, 1901410763860344832L, -1811346523728904192L, -570529419647516672L, 409463245489831936L, -1965298780345466880L };
		for (int ndx = 0; ndx < 100; ndx++)
		{
			Util.Check("Fixed64.Ceil", Fixed64.Ceil(input0[ndx]), output0[ndx], input0[ndx]);
		}
	}

	// Fixed32.Ceil
	public static void Fixed32_Ceil()
	{
		int[] input0 = new int[]{ -13049, -31881, 36580, 11524, 14200, -43162, -61193, 57839, -19237, -30239, 31688, 49788, -44817, -38796, -56992, -64614, 5093, -51477, -29844, -51689, -26992, -42027, -35296, 14412, 45472, -35667, -16116, -57644, -55367, 49223, -56000, 56126, 42971, 33618, -2147483648, -137319949, -2147483648, -442577920, -2147483648, -2147483648, 1226632578, -2147483648, -2147483648, -1610099954, -2147483648, -2147483648, -2147483648, -166737252, -1304500321, -2147483648, -2147483648, -2147483648, -2147483648, -802738351, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -1566806571, -2147483648, -2147483648, -2147483648, -292476712, -2147483648, -2147483648, -2147483648, -1289959512, -451771877, 162470228, -475719278, -917778817, 883524028, -30082819, 25884760, 208231135, -457714477, 759242177, 701344063, -853958699, -392247720, 837012333, 343018487, -598567420, 447220021, 808306558, 563438510, -238172370, 566134824, 415101414, -78442303, 127625328, 483693210, 677262367, 1057979079, 259114306, 715968883, -182940306, -685861485, 1008930962 };
		int[] output0 = new int[]{ 0, 0, 65536, 65536, 65536, 0, 0, 65536, 0, 0, 65536, 65536, 0, 0, 0, 0, 65536, 0, 0, 0, 0, 0, 0, 65536, 65536, 0, 0, 0, 0, 65536, 0, 65536, 65536, 65536, -2147483648, -137297920, -2147483648, -442564608, -2147483648, -2147483648, 1226637312, -2147483648, -2147483648, -1610088448, -2147483648, -2147483648, -2147483648, -166723584, -1304494080, -2147483648, -2147483648, -2147483648, -2147483648, -802684928, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -1566769152, -2147483648, -2147483648, -2147483648, -292421632, -2147483648, -2147483648, -2147483648, -1289945088, -451739648, 162529280, -475660288, -917766144, 883556352, -30081024, 25886720, 208273408, -457703424, 759300096, 701366272, -853934080, -392232960, 837025792, 343080960, -598540288, 447283200, 808321024, 563478528, -238157824, 566165504, 415105024, -78381056, 127664128, 483721216, 677314560, 1058013184, 259129344, 715980800, -182910976, -685834240, 1008992256 };
		for (int ndx = 0; ndx < 100; ndx++)
		{
			Util.Check("Fixed32.Ceil", Fixed32.Ceil(input0[ndx]), output0[ndx], input0[ndx]);
		}
	}

	// Fixed64.Floor
	public static void Fixed64_Floor()
	{
		long[] input0 = new long[]{ 1654158818L, 76847538L, -2597152711L, 2790169051L, 668588798L, -3481796711L, -1847432666L, 1544855742L, 3665345647L, -894249438L, 3729938511L, -2813193499L, -1352607894L, 1191014090L, -3752798767L, 3469396115L, -1604645250L, 1223434674L, 2314409671L, -1544975398L, -3855320455L, 1399464202L, 1185040130L, 827474126L, -3331317167L, 1881588866L, -1310920818L, -3469920651L, -57280302L, 3362049111L, 2264016303L, 3195870611L, 1485447358L, 3064619699L, -77502632236090L, 264912887523359L, 165023475076845L, 287687219533964L, 123210881457374L, 97570950245435L, 78569160636586L, -358606899566989L, -32306783415044L, -113617855852907L, 222543444303629L, -179554301083611L, -243185808713242L, -355120854365366L, 216688094300903L, -353244709164492L, -165386481877014L, -265452643523611L, 124879639858151L, 309649675144191L, 359607701167455L, -404027267988139L, 318677470348395L, 87034045840528L, 182651892285053L, 308196722743515L, 212409140298910L, -267247931124447L, -269283125125394L, -399167075985876L, 113670155452931L, -376089939575130L, -367356200171L, -12226029805693L, -2500666199405775872L, -2262331446063191040L, -2658376376386119168L, -200306698421748736L, 4602372231517819904L, -3174267657580611584L, 2109151377250479104L, 4322579464517699584L, -2762131327333048320L, -2119296429310771712L, 3110637558146951168L, 2962661074144000000L, 19842381697055744L, -2206195390254675456L, -1440783607311196672L, -880254091038462976L, 774110554158294016L, 669559032806473728L, -2521031001597607936L, 2881834904901692416L, 4041038074596641792L, -1105654438693971456L, 4034393206135855104L, -3774280898418171904L, -3483877779780562944L, 2625415672059835392L, 3378620341898611712L, -898503269648711680L, 3652579293472564224L, -672553621445593088L, 2171199580098743296L, 1816090996705336320L };
		long[] output0 = new long[]{ 0L, 0L, -4294967296L, 0L, 0L, -4294967296L, -4294967296L, 0L, 0L, -4294967296L, 0L, -4294967296L, -4294967296L, 0L, -4294967296L, 0L, -4294967296L, 0L, 0L, -4294967296L, -4294967296L, 0L, 0L, 0L, -4294967296L, 0L, -4294967296L, -4294967296L, -4294967296L, 0L, 0L, 0L, 0L, 0L, -77502684856320L, 264909287849984L, 165021233446912L, 287685499420672L, 123209726820352L, 97568772063232L, 78567836745728L, -358608294379520L, -32311038967808L, -113619064848384L, 222539435474944L, -179555402776576L, -243189638234112L, -355125075902464L, 216685395050496L, -353248175194112L, -165390600634368L, -265454748696576L, 124876174131200L, 309645667205120L, 359604726792192L, -404027573534720L, 318673688461312L, 87033217286144L, 182647779229696L, 308193968259072L, 212407607623680L, -267250045026304L, -269285859524608L, -399169965522944L, 113666309488640L, -376093106241536L, -369367187456L, -12227771891712L, -2500666200388796416L, -2262331447157194752L, -2658376377295699968L, -200306700475957248L, 4602372227227189248L, -3174267658249961472L, 2109151374120845312L, 4322579460357357568L, -2762131328194314240L, -2119296430471380992L, 3110637554550964224L, 2962661070616920064L, 19842379540332544L, -2206195391374819328L, -1440783608787763200L, -880254092776046592L, 774110551650336768L, 669559030347202560L, -2521031002571145216L, 2881834901412249600L, 4041038070567403520L, -1105654440326594560L, 4034393202109710336L, -3774280898808119296L, -3483877780305739776L, 2625415668689797120L, 3378620338177835008L, -898503271377797120L, 3652579289624215552L, -672553623279894528L, 2171199576940216320L, 1816090993712168960L };
		for (int ndx = 0; ndx < 100; ndx++)
		{
			Util.Check("Fixed64.Floor", Fixed64.Floor(input0[ndx]), output0[ndx], input0[ndx]);
		}
	}

	// Fixed32.Floor
	public static void Fixed32_Floor()
	{
		int[] input0 = new int[]{ 38194, 30294, 46885, -322, 49412, 43146, -40372, -1371, -48260, 58980, 43138, 13207, 34611, 51304, -18790, -1773, 45231, 36955, -6372, -57706, 43975, 24526, 6243, 45711, -23945, -49678, -18873, -37441, -27586, -22794, -56014, 35841, 4564, -47139, -2147483648, -2147483648, -1270138413, -2147483648, 361390158, -2147483648, -1564849179, -2147483648, -2147483648, -2147483648, 668512698, -2141116092, -2147483648, -2147483648, -943570993, -1574990201, 753553213, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -351579660, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, 1621490995, 776549446, 183852530, -894691426, 1071257643, -527467849, 422263973, 384666417, -862496073, -1059828226, 127753875, -434330606, 1032213654, 631918388, -804982727, 614890739, 879816911, 576812008, 984790144, 639402669, 771284432, -474683104, 913835142, 187976238, -227330548, 356517622, 583187221, -469073686, -208367571, 79749131, 805155412, -835790168, -10029246 };
		int[] output0 = new int[]{ 0, 0, 0, -65536, 0, 0, -65536, -65536, -65536, 0, 0, 0, 0, 0, -65536, -65536, 0, 0, -65536, -65536, 0, 0, 0, 0, -65536, -65536, -65536, -65536, -65536, -65536, -65536, 0, 0, -65536, -2147483648, -2147483648, -1270153216, -2147483648, 361365504, -2147483648, -1564868608, -2147483648, -2147483648, -2147483648, 668467200, -2141126656, -2147483648, -2147483648, -943587328, -1575026688, 753532928, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -351600640, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, 1621426176, 776536064, 183828480, -894697472, 1071251456, -527499264, 422248448, 384630784, -862519296, -1059848192, 127729664, -434372608, 1032192000, 631898112, -805044224, 614858752, 879755264, 576782336, 984743936, 639369216, 771227648, -474742784, 913833984, 187957248, -227344384, 356515840, 583139328, -469106688, -208404480, 79691776, 805109760, -835846144, -10092544 };
		for (int ndx = 0; ndx < 100; ndx++)
		{
			Util.Check("Fixed32.Floor", Fixed32.Floor(input0[ndx]), output0[ndx], input0[ndx]);
		}
	}

	// Fixed64.Round
	public static void Fixed64_Round()
	{
		long[] input0 = new long[]{ -1969626350L, 1743900474L, -1123170298L, 2941178487L, -1748387166L, 503785354L, 3089664399L, -1897770166L, 4265262695L, 2259389855L, -3454899667L, 1065156990L, 1814246710L, -2580666107L, 3966352803L, -1305447630L, -2651632231L, -1801286190L, -3976148243L, 3597148903L, -2079377210L, -2518713223L, -1333574538L, 3745824511L, 4278472463L, 1625523782L, -1436007210L, -147652990L, -729616654L, -1922831338L, 525986474L, -3164967263L, -440791118L, 2597761855L, 180351367483982L, -351119421563502L, 219820668302362L, 381335176777573L, 97268751845294L, -249150461516019L, -344547111560442L, 16041355007469L, 311484233145046L, 13684502206372L, 281527294331096L, 398171525985413L, 157139839073173L, -28823069813421L, 266136337923929L, 372412017973417L, -247680535115335L, -217468457901266L, 290180259935125L, -264534228323183L, -225570707105039L, -374588042374431L, -121749228256693L, -57402751426730L, 295767331937727L, 92105634642890L, -235517473109671L, -105764990649250L, 312681378345603L, 189312673888155L, -256156391519282L, 400503489186498L, -278901918729873L, 351145215163514L, -95791177485820928L, 3417268957316982784L, 849665845043215360L, -2330037692800952832L, 1633154428084438016L, 3017562060566368256L, 2950269646812670976L, 2206729001286746112L, -1437298198399196672L, 3032835037292500992L, -3612513880011731968L, -4293045396770909184L, -4553569321269530112L, 3379270372314261504L, 1595527658400704512L, -170477493407141888L, -4016860952056923136L, -1711862555678573568L, -1902458519870621696L, -2244567229390429184L, 599686559182424064L, 1346930523081180160L, 2148842321102532608L, -1635022214873057280L, -3692908280486539264L, -4556247469603034624L, 4465302920047354880L, 2047782517969674240L, 1426538021122484224L, -3299878889653210112L, -1714291484239644160L, 3334188853661194240L };
		long[] output0 = new long[]{ 0L, 0L, 0L, 4294967296L, 0L, 0L, 4294967296L, 0L, 4294967296L, 4294967296L, -4294967296L, 0L, 0L, -4294967296L, 4294967296L, 0L, -4294967296L, 0L, -4294967296L, 4294967296L, 0L, -4294967296L, 0L, 4294967296L, 4294967296L, 0L, 0L, 0L, 0L, 0L, 0L, -4294967296L, 0L, 4294967296L, 180349971726336L, -351117871415296L, 219820721176576L, 381337261309952L, 97268124352512L, -249151052840960L, -344546571452416L, 16041702850560L, 311483913207808L, 13683765805056L, 281526516318208L, 398173533110272L, 157139968458752L, -28823525523456L, 266137648496640L, 372412319268864L, -247682174025728L, -217467079098368L, 290180875419648L, -264535625695232L, -225571682385920L, -374589867687936L, -121749437939712L, -57402237911040L, 295768627871744L, 92105573662720L, -235518826643456L, -105763569664000L, 312682209083392L, 189313568473088L, -256156144500736L, 400501405384704L, -278902291300352L, 351143641219072L, -95791179588698112L, 3417268957873176576L, 849665846795042816L, -2330037693863428096L, 1633154429471424512L, 3017562061308690432L, 2950269647586328576L, 2206729002406641664L, -1437298199877386240L, 3032835038027710464L, -3612513880477007872L, -4293045396919287808L, -4553569321296592896L, 3379270372888150016L, 1595527659805212672L, -170477495475240960L, -4016860952333910016L, -1711862557028909056L, -1902458521132204032L, -2244567230492704768L, 599686561050656768L, 1346930524601450496L, 2148842322249383936L, -1635022216259174400L, -3692908280914378752L, -4556247469628850176L, 4465302920115519488L, 2047782519163584512L, 1426538022605684736L, -3299878890264068096L, -1714291485588848640L, 3334188854256074752L };
		for (int ndx = 0; ndx < 100; ndx++)
		{
			Util.Check("Fixed64.Round", Fixed64.Round(input0[ndx]), output0[ndx], input0[ndx]);
		}
	}

	// Fixed32.Round
	public static void Fixed32_Round()
	{
		int[] input0 = new int[]{ 37777, 35933, 62499, 57582, -20784, 60854, 9144, -64140, -16754, -242, 28803, 3859, -22958, 40602, 13228, -18423, 26723, -15401, 20433, 50776, 22611, 54876, -20477, 45033, -47510, -30226, -46168, 22420, 44962, -52710, -54448, -39067, 1924, -33182, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -1244048740, 1634320578, -2147483648, -2147483648, -179194845, -960221384, -2147483648, -2147483648, -912532022, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -1133004428, 233477304, -2147483648, -2147483648, 136239691, -281812049, -64659979, 1009791621, -553193633, 119597516, -767162398, -237453908, -1000295482, -479108678, 896144083, 931985892, -490691799, 768627452, -502576274, -604845519, -902560070, 670906432, 463025144, -884884452, -949497240, -264603214, 648054034, 550396979, 927424493, -927584462, -464535960, 742863801, -825768543, 236536481, 329235930, -196565003 };
		int[] output0 = new int[]{ 65536, 65536, 65536, 65536, 0, 65536, 0, -65536, 0, 0, 0, 0, 0, 65536, 0, 0, 0, 0, 0, 65536, 0, 65536, 0, 65536, -65536, 0, -65536, 0, 65536, -65536, -65536, -65536, 0, -65536, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -1244069888, 1634336768, -2147483648, -2147483648, -179175424, -960233472, -2147483648, -2147483648, -912523264, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -1132986368, 233504768, -2147483648, -2147483648, 136249344, -281804800, -64684032, 1009778688, -553189376, 119603200, -767164416, -237436928, -1000275968, -479133696, 896139264, 931987456, -490668032, 768606208, -502595584, -604831744, -902561792, 670892032, 463011840, -884867072, -949485568, -264634368, 648085504, 550371328, 927399936, -927596544, -464519168, 742850560, -825753600, 236519424, 329252864, -196542464 };
		for (int ndx = 0; ndx < 100; ndx++)
		{
			Util.Check("Fixed32.Round", Fixed32.Round(input0[ndx]), output0[ndx], input0[ndx]);
		}
	}

	// Fixed64.Fract
	public static void Fixed64_Fract()
	{
		long[] input0 = new long[]{ -2673417691L, 3606738583L, 1944770862L, -3983018879L, -2965259043L, -3883386863L, -4039209019L, 3699140095L, -1855608386L, 2573150819L, 2880584843L, -2976569567L, -2439955259L, 3159460315L, 2581528315L, 3939363987L, 1140231814L, 3859174755L, -2623261359L, 868815782L, 2595878403L, 3666326291L, -4121870931L, -2691595671L, 575502958L, 1834739458L, -3965498783L, -2797403979L, -1958433386L, -1745137506L, -1941708754L, -652360562L, 1061588858L, 75869054L, 210639396698086L, -127453848659350L, -316522834747392L, -232225351508138L, -374909033174580L, -402182071587280L, 242786745513056L, 244792777913990L, 261103787121586L, -207617248696679L, 35596959416576L, 127381841059316L, 34657588216138L, -374472963574377L, -199689887092987L, -150254053469967L, -246374390314727L, -286728163533518L, -72556001033786L, -384683935579132L, 91282887842506L, -204477668695217L, 343364221959891L, 34139923815897L, -26355454212272L, -50503120623517L, -421285537596176L, 305316225542174L, 136260618663451L, 418449641594855L, 21989227810239L, -76202189035484L, 25680887011958L, 177914298282847L, -3480964636606316032L, -471265817201511424L, 3016811914463001600L, -893870705036187136L, 3557626414146417664L, -3109994343844403200L, 2937667031644332032L, -4452825245477714432L, -3478578704962865664L, 2415134038790017024L, 1339387731577203712L, 3861875510920366080L, -3013782545178703872L, 4374636950660557824L, 3752150203241897984L, 4122174795744399360L, -3840088275688978432L, -3617859705548468224L, -4533088709579474944L, 658698645352764416L, 3713007249972428800L, -154400468738053120L, -443684520761266688L, 846473318541200384L, 2401174828135833600L, 1128404055837756416L, -4406564114056250880L, 3940280839025025024L, -3446330832064063488L, 2922197770617714688L, 2146305249559866368L, -3411251802621765632L };
		long[] output0 = new long[]{ 1621549605L, 3606738583L, 1944770862L, 311948417L, 1329708253L, 411580433L, 255758277L, 3699140095L, 2439358910L, 2573150819L, 2880584843L, 1318397729L, 1855012037L, 3159460315L, 2581528315L, 3939363987L, 1140231814L, 3859174755L, 1671705937L, 868815782L, 2595878403L, 3666326291L, 173096365L, 1603371625L, 575502958L, 1834739458L, 329468513L, 1497563317L, 2336533910L, 2549829790L, 2353258542L, 3642606734L, 1061588858L, 75869054L, 1315600358L, 3600816746L, 3370065920L, 3530186582L, 2957060556L, 2960977456L, 834204768L, 1116878470L, 4135263154L, 1470391961L, 270467328L, 1700994548L, 1497104714L, 939996567L, 322367237L, 1082413297L, 2113653017L, 3853147442L, 3176464838L, 3400221700L, 1947900618L, 1429300047L, 3061481171L, 3523747289L, 2760083280L, 1399810147L, 3509501168L, 4180338718L, 2781197851L, 3862847463L, 3290222015L, 3415697444L, 1277549174L, 3867980639L, 526533120L, 1928033280L, 3552295936L, 1731242496L, 3804132352L, 699279360L, 3515441152L, 73975296L, 527644160L, 3272118272L, 2771184640L, 3945809920L, 744081408L, 4184583168L, 3894714368L, 4067020800L, 359303168L, 462786560L, 36599808L, 2454213632L, 3876487168L, 2075585536L, 1940876800L, 2541652992L, 3265617920L, 2672937984L, 95517184L, 3982319616L, 542660608L, 3508238336L, 3146935296L, 558995456L };
		for (int ndx = 0; ndx < 100; ndx++)
		{
			Util.Check("Fixed64.Fract", Fixed64.Fract(input0[ndx]), output0[ndx], input0[ndx]);
		}
	}

	// Fixed32.Fract
	public static void Fixed32_Fract()
	{
		int[] input0 = new int[]{ -50017, 43676, 57863, 41762, -262, 40644, -28772, -32411, -34908, 11671, -47303, -47463, 51711, 6633, -30413, -60914, 58802, 27748, 52885, -10767, -12744, 60093, 39918, 18262, 65144, -34693, 18710, -31014, -47110, 51288, 51232, -25424, -61715, 1974, -2147483648, -2096918668, -2147483648, -2147483648, -669394797, -2147483648, -2147483648, -2147483648, -2126645957, -2147483648, -2042692307, -2147483648, -2147483648, -2147483648, -1908667514, -2147483648, -2147483648, -1118739999, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2066087052, -2147483648, -2147483648, -2147483648, -1579915372, 537521475, 919002282, -1068536441, 774043523, -509443420, 279005421, 194525420, 315606785, 259266661, -19256602, -439851368, 392974923, 81735706, -143822601, 878313490, -743899047, 886301322, -51048380, -230459765, 460187620, 617791254, 301495178, -405133501, 495437804, -501290683, -673794565, -845646828, 666054866, 308498895, 1063819852, 247719998, 23786486 };
		int[] output0 = new int[]{ 15519, 43676, 57863, 41762, 65274, 40644, 36764, 33125, 30628, 11671, 18233, 18073, 51711, 6633, 35123, 4622, 58802, 27748, 52885, 54769, 52792, 60093, 39918, 18262, 65144, 30843, 18710, 34522, 18426, 51288, 51232, 40112, 3821, 1974, 0, 36724, 0, 0, 55443, 0, 0, 0, 62779, 0, 64813, 0, 0, 0, 2950, 0, 0, 25057, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 884, 0, 0, 0, 26516, 60739, 56490, 28039, 63363, 33444, 18669, 14572, 50945, 6245, 10982, 26264, 21067, 12314, 28919, 18, 89, 57994, 4164, 30347, 59364, 48918, 29578, 10051, 51180, 59717, 46587, 29716, 12498, 20943, 39500, 59454, 62454 };
		for (int ndx = 0; ndx < 100; ndx++)
		{
			Util.Check("Fixed32.Fract", Fixed32.Fract(input0[ndx]), output0[ndx], input0[ndx]);
		}
	}

	// Fixed64.CeilToInt
	public static void Fixed64_CeilToInt()
	{
		long[] input0 = new long[]{ -2531593827L, -1565211454L, -348578490L, -631906178L, 4162299359L, -3280168963L, -2990371059L, -1860402954L, 1926481450L, -3604181615L, 336594942L, 323323798L, -4235253499L, -3104210987L, 1929540862L, 2012778758L, -3366288419L, 3938919423L, -604268806L, -2388524551L, -512005714L, -906743434L, 788388938L, -3350862107L, 1001575842L, -1960929690L, 806369534L, -3637562715L, 203641706L, 2408849511L, -4266535735L, 1076754530L, 3227060891L, 2440415875L, -19147377408916L, -240281301511889L, 406825537989442L, -14980715406975L, -284292825532384L, 253040695917831L, -150878975870258L, -335640340356294L, 420923632796007L, 178037933882905L, -342558152359516L, 235110949109482L, 192203742289501L, -319591904348821L, -32975183015355L, -110039877851241L, 173554059080817L, 159004345474042L, 56458092226290L, -91556275042634L, -368781563571727L, 267011690324337L, 194136690290401L, -129268367860195L, 266148527523935L, 182826175485135L, 20842879809705L, -364777563969862L, 223092263503885L, 381259923577538L, -363261317569156L, 355480770765533L, 139123020264784L, -238070207910860L, 1484158250125464576L, 40143536768498688L, 2404634802251494400L, 1158015557549962240L, 2670267478681936896L, 1245853544374096896L, 3667077977789179904L, -1557537255310686208L, -881555423180084224L, 3546544436444903424L, -4531456656365973504L, 3162635296999727104L, 442381827115012096L, -314261380657640960L, 1059951124740270080L, -3211483209915364864L, -3888726070214463488L, -1676768004224460800L, -4061743794112719872L, -163577752996956672L, 1968452461930918912L, 1539076425006959616L, -52841650534708736L, 1144578464595359744L, 1593083757583633408L, -403966063348701696L, -2118480952459834880L, -2314967417056449536L, -1387659633543604736L, -4185800183598933504L, 1200470437412330496L, -2883449846965478400L };
		int[] output0 = new int[]{ 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, -4458, -55944, 94722, -3487, -66192, 58916, -35129, -78147, 98004, 41453, -79758, 54742, 44751, -74410, -7677, -25620, 40409, 37022, 13146, -21317, -85863, 62169, 45201, -30097, 61968, 42568, 4853, -84931, 51943, 88769, -84578, 82767, 32393, -55430, 345557521, 9346646, 559872669, 269621508, 621720096, 290072883, 853808126, -362642401, -205253116, 825744224, -1055061969, 736358412, 103000046, -73169679, 246789103, -747731702, -905414593, -390402973, -945698421, -38085913, 458316054, 358344155, -12303155, 266492941, 370918717, -94055678, -493247283, -538995353, -323089685, -974582550, 279506305, -671355483 };
		for (int ndx = 0; ndx < 100; ndx++)
		{
			Util.Check("Fixed64.CeilToInt", Fixed64.CeilToInt(input0[ndx]), output0[ndx], input0[ndx]);
		}
	}

	// Fixed32.CeilToInt
	public static void Fixed32_CeilToInt()
	{
		int[] input0 = new int[]{ -50889, 118, -4321, 59933, 14573, -55510, 51851, 56446, -546, 31398, -12265, 44759, -20864, 61203, -43925, -57889, -5187, 14143, 47901, 33935, 46426, -41982, 1235, 64755, -64214, -47629, 59353, -21848, -17725, 19473, 63121, -18579, -32196, 42116, -2147483648, -2147483648, -2147483648, 2066489902, 532474734, -2147483648, -1014366098, -2147483648, -2147483648, -2147483648, -2147483648, 2002559464, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -354057760, -2147483648, -333314621, -2147483648, 816386825, 863610873, -2147483648, -2147483648, -2147483648, 1141976358, 255466995, -567375682, -820733424, -946090722, 650176929, -929261946, 780758988, -351556578, 483687470, -658719435, 76364513, 501651553, -306449541, 758777837, -543203018, -983586801, -745639318, 773065820, -558484316, -692490907, -251018705, -25434301, 642312231, -954377630, 55634601, 452008109, -931890895, 812244564, 773791264, 135477048, -774852102, -610097295, -617891095 };
		int[] output0 = new int[]{ 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, -32768, -32768, -32768, 31533, 8125, -32768, -15477, -32768, -32768, -32768, -32768, 30557, -32768, -32768, -32768, -32768, -32768, -32768, -32768, -32768, -32768, -32768, -32768, -5402, -32768, -5085, -32768, 12458, 13178, -32768, -32768, -32768, 17426, 3899, -8657, -12523, -14436, 9921, -14179, 11914, -5364, 7381, -10051, 1166, 7655, -4676, 11579, -8288, -15008, -11377, 11797, -8521, -10566, -3830, -388, 9801, -14562, 849, 6898, -14219, 12394, 11808, 2068, -11823, -9309, -9428 };
		for (int ndx = 0; ndx < 100; ndx++)
		{
			Util.Check("Fixed32.CeilToInt", Fixed32.CeilToInt(input0[ndx]), output0[ndx], input0[ndx]);
		}
	}

	// Fixed64.FloorToInt
	public static void Fixed64_FloorToInt()
	{
		long[] input0 = new long[]{ -3730975551L, 2265952007L, -257841326L, -2804517883L, -2984701055L, 4173210211L, 1497806894L, -1570721882L, 300285518L, 927128674L, 2051183174L, -378686850L, 2056325786L, 772060550L, 1041414874L, 3235055471L, 174407182L, -746433998L, 4185596727L, 154902102L, 3183775263L, -2542486847L, -4025807239L, -543784362L, -3760390471L, 288065998L, -3502292015L, -4284451499L, 4169024991L, -206424078L, -2902125607L, -3830436627L, -1549120058L, 183203302L, -178978991083343L, -352580795164183L, 237999654710827L, 316513797147388L, -429282351599900L, 321402036749664L, 56322313426227L, 309572554744156L, 299060695539261L, 326610141552089L, -377690154375875L, 85614362239867L, 246117991514607L, -325899540751758L, -47401116222072L, -428104450799351L, -137420941863991L, -300662510340006L, -299003784339234L, 169967601079147L, -136037235063347L, 310647859144656L, 199679195092982L, -400902425986684L, -333909470755488L, 102220024247599L, 338053493157418L, 148729109869257L, -144477957867277L, -378825769976404L, -46571301421686L, 158665250673884L, -312453408745497L, -242184481112775L, -1860920031410823680L, 292332149512414208L, -3693573489316621312L, 1400413285531944960L, -803779269129875968L, -3568463844999919104L, 4173254648545984512L, -4517143355722841088L, -1329428213514250240L, -3217941281658427392L, -1140152878751892992L, -345279720383142912L, 2278322717415207936L, 4350448274658806784L, 520256859902354432L, 4461507019359447040L, -3357786056831434752L, -4499480538933017600L, 3709314694787646464L, 1123317800944642048L, -2954284281595130880L, -645642254004490240L, -1318160474182129664L, 2248472836428028928L, 2372180642073369600L, -1095277286600894976L, 4432892366672205824L, 3619475596800027648L, 263644237567971328L, 2667064481049650176L, -604680785811244032L, -1147386290876492800L };
		int[] output0 = new int[]{ -1, 0, -1, -1, -1, 0, 0, -1, 0, 0, 0, -1, 0, 0, 0, 0, 0, -1, 0, 0, 0, -1, -1, -1, -1, 0, -1, -1, 0, -1, -1, -1, -1, 0, -41672, -82092, 55413, 73694, -99951, 74832, 13113, 72077, 69630, 76044, -87938, 19933, 57303, -75880, -11037, -99676, -31996, -70004, -69618, 39573, -31674, 72328, 46491, -93343, -77745, 23799, 78709, 34628, -33639, -88203, -10844, 36942, -72749, -56388, -433279209, 68063882, -859977093, 326059126, -187144445, -830847734, 971661565, -1051729395, -309531627, -749235340, -265462529, -80391700, 530463344, 1012917671, 121131739, 1038775550, -781795489, -1047616950, 863642127, 261542806, -687847911, -150325302, -306908152, 523513377, 552316345, -255014116, 1032113182, 842724832, 61384457, 620974339, -140788217, -267146689 };
		for (int ndx = 0; ndx < 100; ndx++)
		{
			Util.Check("Fixed64.FloorToInt", Fixed64.FloorToInt(input0[ndx]), output0[ndx], input0[ndx]);
		}
	}

	// Fixed32.FloorToInt
	public static void Fixed32_FloorToInt()
	{
		int[] input0 = new int[]{ -4795, 8973, 42252, 54148, 52701, 24666, 31080, -60449, 32165, -22101, 757, 10662, 20565, 19492, 48756, 55295, -50235, -19911, 55448, -8700, 37033, 1896, -60507, 48265, -42649, -18905, 51726, -61393, -48170, -57666, -2403, 8742, 28399, -65433, -2147483648, -2147483648, -2147483648, 1878042069, -2147483648, -684716842, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, 121454885, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, 1219679642, -2147483648, 394455868, -2147483648, -2147483648, 607083816, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, 2046289841, 321179149, 415379552, 585312393, -57007377, -501546382, -53084928, -733189832, 900200791, 296521949, -665612721, 953522668, -217170134, -496313736, 614528105, 47970502, -915374390, -463097064, -426985107, 430734405, 463529789, -198148152, -965923234, 318821337, -654580596, 869237119, 75853148, 331170254, 149276383, 981488312, -663518981, 1070732917, 1041833478 };
		int[] output0 = new int[]{ -1, 0, 0, 0, 0, 0, 0, -1, 0, -1, 0, 0, 0, 0, 0, 0, -1, -1, 0, -1, 0, 0, -1, 0, -1, -1, 0, -1, -1, -1, -1, 0, 0, -1, -32768, -32768, -32768, 28656, -32768, -10448, -32768, -32768, -32768, -32768, -32768, -32768, -32768, -32768, 1853, -32768, -32768, -32768, -32768, -32768, 18610, -32768, 6018, -32768, -32768, 9263, -32768, -32768, -32768, -32768, -32768, -32768, -32768, 31223, 4900, 6338, 8931, -870, -7653, -811, -11188, 13735, 4524, -10157, 14549, -3314, -7574, 9376, 731, -13968, -7067, -6516, 6572, 7072, -3024, -14739, 4864, -9989, 13263, 1157, 5053, 2277, 14976, -10125, 16338, 15897 };
		for (int ndx = 0; ndx < 100; ndx++)
		{
			Util.Check("Fixed32.FloorToInt", Fixed32.FloorToInt(input0[ndx]), output0[ndx], input0[ndx]);
		}
	}

	// Fixed64.RoundToInt
	public static void Fixed64_RoundToInt()
	{
		long[] input0 = new long[]{ 3530981463L, -594796150L, -352890602L, 2713045759L, -1836628382L, -1698802594L, 3556637847L, -937654478L, 2939818975L, 1493493378L, -1624639366L, -1374005810L, -4208153619L, -1377474290L, -1911853898L, -4231529471L, -2721408019L, 2856759731L, -850328926L, 417006478L, -2246243251L, -3016531947L, -2161318175L, 853442242L, -3908734435L, 664604666L, 589989306L, 1985369170L, 2757946563L, 765102430L, 3969817211L, -454803570L, -2650415263L, 3941724055L, -10469470604875L, 290450849935251L, -148396427069102L, 177380354682599L, 247009811515023L, 414138163192848L, -96961098245151L, -163437519476106L, 320926747949443L, 200888130693545L, 205591372295735L, -164567613476632L, -270513606325967L, 55945547426051L, -207970080296843L, 126124319458731L, -97645374245469L, -322577377550211L, 249122029516006L, -42904210219978L, 211860987098655L, 225254611504892L, -272844527127053L, 308863445143825L, 232681289908350L, 179373424683527L, 200617539493419L, -272369861926832L, 59936625427910L, -212025075098731L, 181864346284687L, 312513149945525L, -301855784340562L, -385491037979508L, 3245049345716877312L, -559843728106843648L, 1661510347646680064L, -215010647815470592L, -4196511269399429632L, -748122381347961344L, -3122816857043432448L, 3954697695624679424L, -2073215214069421056L, 133968420243236864L, 3320542097582972928L, 2181745670435519488L, -993454461052709888L, -4578900565946731520L, -246850369971943936L, -3004613013335773184L, -2741704316834872320L, 3114520973088522240L, 1448416979675488256L, 2226504748713657344L, -2654132068227399168L, 2080617959574712320L, 1436652037749082112L, -298104473891776512L, 4017896747845345280L, -3885445844775190528L, -2319025778900970496L, -2728248759815856128L, 2213224400590596096L, 1110840607411339264L, -4407419688721881600L, 3463622172837315584L };
		int[] output0 = new int[]{ 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, -1, 0, 0, -1, -1, 1, 0, 0, -1, -1, -1, 0, -1, 0, 0, 0, 1, 0, 1, 0, -1, 1, -2438, 67626, -34551, 41300, 57511, 96424, -22576, -38053, 74722, 46773, 47868, -38316, -62984, 13026, -48422, 29366, -22735, -75106, 58003, -9989, 49328, 52446, -63527, 71913, 54175, 41764, 46710, -63416, 13955, -49366, 42344, 72763, -70281, -89754, 755546928, -130348776, 386850524, -50061068, -977076420, -174185816, -727087459, 920774810, -482708033, 31191954, 773123954, 507977249, -231306642, -1066108366, -57474331, -699565982, -638352781, 725155923, 337235858, 518398534, -617963278, 484431619, 334496619, -69407857, 935489486, -904650857, -539940265, -635219915, 515306462, 258637734, -1026182363, 806437380 };
		for (int ndx = 0; ndx < 100; ndx++)
		{
			Util.Check("Fixed64.RoundToInt", Fixed64.RoundToInt(input0[ndx]), output0[ndx], input0[ndx]);
		}
	}

	// Fixed32.RoundToInt
	public static void Fixed32_RoundToInt()
	{
		int[] input0 = new int[]{ -44587, -47991, 27957, 41758, 61169, 53691, -55121, -16891, -27704, 41663, -1702, 21999, 65477, -61036, -24047, 30145, 27483, -13692, -58926, 49026, -38433, -12164, 44432, -48988, 37164, -37688, 5382, 61115, -43212, 59928, -40788, 20287, -998, 63502, 1005595834, -2147483648, -2147483648, 2026990323, -2147483648, -2147483648, -2147483648, -2147483648, -619069821, -1384527194, -2147483648, -2147483648, -417739962, -2147483648, -2147483648, 243476370, -71835879, -2039191184, 917649173, -2147483648, -2147483648, -2147483648, -2147483648, 1141012302, -2147483648, -2147483648, -1722678458, -2147483648, -2147483648, -2147483648, 1691596274, -2147483648, -2147483648, -2147483648, -91030845, -948993223, -129406126, -955552418, -670049845, 552590505, -825018003, 903802048, 975874052, -118923381, 832528251, 634838363, 524700895, 300169584, -635518150, 325863280, -80097953, 739569431, -891693406, -334422025, -395703788, 695982047, 995525530, 436373061, 256833125, -100228151, 911685049, 311464407, -890991471, -813122876, 569749754, -201119622 };
		int[] output0 = new int[]{ -1, -1, 0, 1, 1, 1, -1, 0, 0, 1, 0, 0, 1, -1, 0, 0, 0, 0, -1, 1, -1, 0, 1, -1, 1, -1, 0, 1, -1, 1, -1, 0, 0, 1, 15344, -32768, -32768, 30929, -32768, -32768, -32768, -32768, -9446, -21126, -32768, -32768, -6374, -32768, -32768, 3715, -1096, -31116, 14002, -32768, -32768, -32768, -32768, 17410, -32768, -32768, -26286, -32768, -32768, -32768, 25812, -32768, -32768, -32768, -1389, -14480, -1975, -14581, -10224, 8432, -12589, 13791, 14891, -1815, 12703, 9687, 8006, 4580, -9697, 4972, -1222, 11285, -13606, -5103, -6038, 10620, 15191, 6659, 3919, -1529, 13911, 4753, -13595, -12407, 8694, -3069 };
		for (int ndx = 0; ndx < 100; ndx++)
		{
			Util.Check("Fixed32.RoundToInt", Fixed32.RoundToInt(input0[ndx]), output0[ndx], input0[ndx]);
		}
	}

	// Fixed64.Abs
	public static void Fixed64_Abs()
	{
		long[] input0 = new long[]{ 2683975319L, -403162402L, -483789874L, 1753375950L, -3617778115L, -519835982L, -2951172247L, 2685995835L, -4017644503L, 2129320550L, 2561537475L, 3008525111L, 1712628110L, -2238277579L, -4209996003L, 1965314402L, 3514306759L, 421492638L, 3167169723L, 2445294103L, 2125600346L, 2844912343L, 1712207494L, 1146915722L, -3483107723L, 2031850542L, -554574882L, 2015680518L, 2858589119L, -250962350L, 2884206787L, 2861020423L, 1540274750L, -160375798L, 415034543193265L, -179300131083493L, -261049908321560L, -48125800022L, 62626394229162L, -409552312790712L, 161448267875180L, -195780216691167L, -161501089475204L, 58283159027140L, -407257657989644L, -332139028354664L, -426210315998469L, -102935721447933L, -48588389822625L, -261354149921702L, 202651816694367L, 30950877014412L, -212469393498938L, 412867221192256L, 136488845863557L, 413403027192505L, 217959739901495L, 266426169924064L, 94151637843842L, -135466136263081L, -426022839598382L, -67188547031287L, 412237401191963L, 52828514224600L, 354008105964847L, 399548434786054L, -282671693531629L, -242196338712781L, -2248045706225210368L, 2016457728032492544L, 301556300454473728L, -837711121396812800L, 4391814504865183744L, 3186571050967233536L, -3719609044206184960L, -227165955024624640L, 177120094125196288L, -3399027874720091136L, 992701166738313216L, 4438043239348318208L, 2146395310729138176L, -4101892371025342976L, -1925651678287270912L, 1263969493098761216L, 2166259933914346496L, -1847125073191017472L, 741684010619894784L, 1832415407195822080L, 2973945993345312768L, -4594167748761978368L, 346140633693125632L, -1052045245290855424L, 3600223758074060800L, -2484683668312210432L, -4434835083460306432L, -2156716911715182080L, -1916853442072285184L, 2310339422289130496L, 1436363579155414016L, -4051328438285528064L };
		long[] output0 = new long[]{ 2683975319L, 403162402L, 483789874L, 1753375950L, 3617778115L, 519835982L, 2951172247L, 2685995835L, 4017644503L, 2129320550L, 2561537475L, 3008525111L, 1712628110L, 2238277579L, 4209996003L, 1965314402L, 3514306759L, 421492638L, 3167169723L, 2445294103L, 2125600346L, 2844912343L, 1712207494L, 1146915722L, 3483107723L, 2031850542L, 554574882L, 2015680518L, 2858589119L, 250962350L, 2884206787L, 2861020423L, 1540274750L, 160375798L, 415034543193265L, 179300131083493L, 261049908321560L, 48125800022L, 62626394229162L, 409552312790712L, 161448267875180L, 195780216691167L, 161501089475204L, 58283159027140L, 407257657989644L, 332139028354664L, 426210315998469L, 102935721447933L, 48588389822625L, 261354149921702L, 202651816694367L, 30950877014412L, 212469393498938L, 412867221192256L, 136488845863557L, 413403027192505L, 217959739901495L, 266426169924064L, 94151637843842L, 135466136263081L, 426022839598382L, 67188547031287L, 412237401191963L, 52828514224600L, 354008105964847L, 399548434786054L, 282671693531629L, 242196338712781L, 2248045706225210368L, 2016457728032492544L, 301556300454473728L, 837711121396812800L, 4391814504865183744L, 3186571050967233536L, 3719609044206184960L, 227165955024624640L, 177120094125196288L, 3399027874720091136L, 992701166738313216L, 4438043239348318208L, 2146395310729138176L, 4101892371025342976L, 1925651678287270912L, 1263969493098761216L, 2166259933914346496L, 1847125073191017472L, 741684010619894784L, 1832415407195822080L, 2973945993345312768L, 4594167748761978368L, 346140633693125632L, 1052045245290855424L, 3600223758074060800L, 2484683668312210432L, 4434835083460306432L, 2156716911715182080L, 1916853442072285184L, 2310339422289130496L, 1436363579155414016L, 4051328438285528064L };
		for (int ndx = 0; ndx < 100; ndx++)
		{
			Util.Check("Fixed64.Abs", Fixed64.Abs(input0[ndx]), output0[ndx], input0[ndx]);
		}
	}

	// Fixed32.Abs
	public static void Fixed32_Abs()
	{
		int[] input0 = new int[]{ 57987, 37457, -49296, 29466, 21371, -22709, 7847, -12168, 50321, -41481, -4972, 16025, -38989, 16834, 14363, 58821, -48423, -20595, 42812, 14730, -15109, -3636, -13682, -32195, -41799, -46300, 2469, 32184, 42770, 43325, -41524, 35221, -3179, 6143, -2147483648, -2147483648, -2147483648, 870443149, -2147483648, -1204239908, -2147483648, -2147483648, -2147483648, 1820754697, 522168161, -2147483648, -2147483648, -2147483648, 1586312528, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -391164969, -1439576175, -2147483648, 572977871, 213531387, -2147483648, -2147483648, 1059714987, -2147483648, -2147483648, -2147483648, -2147483648, 2040230332, 192569477, 349290160, -1036373639, 137765946, -281585080, -174997742, 799983098, -619607316, 338242869, 551254591, 460697073, -502877592, 995042463, -521979370, -806325596, 549567896, 418639957, -571467729, 740586594, -145169176, 796378740, 147327445, 121899881, -940946385, -1025005112, -90839053, 215219385, 913852138, 198426110, 561306531, 297610164, 744088267 };
		int[] output0 = new int[]{ 57987, 37457, 49296, 29466, 21371, 22709, 7847, 12168, 50321, 41481, 4972, 16025, 38989, 16834, 14363, 58821, 48423, 20595, 42812, 14730, 15109, 3636, 13682, 32195, 41799, 46300, 2469, 32184, 42770, 43325, 41524, 35221, 3179, 6143, -2147483648, -2147483648, -2147483648, 870443149, -2147483648, 1204239908, -2147483648, -2147483648, -2147483648, 1820754697, 522168161, -2147483648, -2147483648, -2147483648, 1586312528, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, 391164969, 1439576175, -2147483648, 572977871, 213531387, -2147483648, -2147483648, 1059714987, -2147483648, -2147483648, -2147483648, -2147483648, 2040230332, 192569477, 349290160, 1036373639, 137765946, 281585080, 174997742, 799983098, 619607316, 338242869, 551254591, 460697073, 502877592, 995042463, 521979370, 806325596, 549567896, 418639957, 571467729, 740586594, 145169176, 796378740, 147327445, 121899881, 940946385, 1025005112, 90839053, 215219385, 913852138, 198426110, 561306531, 297610164, 744088267 };
		for (int ndx = 0; ndx < 100; ndx++)
		{
			Util.Check("Fixed32.Abs", Fixed32.Abs(input0[ndx]), output0[ndx], input0[ndx]);
		}
	}

	// Fixed64.Nabs
	public static void Fixed64_Nabs()
	{
		long[] input0 = new long[]{ 2308550971L, 238351766L, 1479457930L, 3937412431L, -3839691331L, 613786954L, 690888046L, 45896570L, -2827597611L, -304434354L, 2685641943L, 1146508286L, -2963486215L, -1907950146L, 454737370L, 437829274L, 1630311774L, 2791190523L, -1216109614L, 2288680059L, 2993443267L, 1839240122L, 2446537683L, -4113999167L, -3385406179L, 3913258279L, 356116942L, 3531983187L, 2734098783L, 3839491135L, 1022833586L, 3402712647L, -3280389587L, 3161402519L, -2509404601168L, -55314920625758L, 72759188233881L, -286774752333539L, 174299562281164L, -323419441950603L, 131820833061383L, -137851748664192L, -204804639095369L, -80501797837486L, 219863513502381L, 363605853569317L, 349466796762733L, 210289699097923L, 347687371161904L, -387191902780300L, -226987051505699L, 229748121506984L, -83363155438819L, 319672789548859L, 427787709999204L, -382565644778146L, 208678137897173L, 129848980260465L, 302785131540995L, -345798231561024L, -403729728388001L, 145387215467701L, 160676508274820L, -237212145110460L, 296769935538194L, 357789659166608L, 13193057806143L, -182992143885212L, 2589984674342433792L, -3529476047424090112L, 4300555787041589248L, 218068376768837632L, -3486195314069792768L, -2444783958984702976L, -3569649934579000320L, 82671096067483648L, -437743906678266880L, -1120354711595686400L, -2166453452255892480L, -2927554312097859072L, -4162228093102483456L, 2736095222687670272L, -4552512669119908864L, 2481471595414023168L, 1948191104026459136L, 3243043548744070144L, -62946067909394944L, -2343065922048654336L, 3412880565890316288L, -530863212925288960L, 1777082136609876992L, 3998689044203332608L, -1718665032259328512L, 972821519757496320L, -3749360883974852608L, 4466018096526981120L, 1406263267215022080L, -4263713072228040704L, 560761627042935808L, 3130715306199420928L };
		long[] output0 = new long[]{ -2308550971L, -238351766L, -1479457930L, -3937412431L, -3839691331L, -613786954L, -690888046L, -45896570L, -2827597611L, -304434354L, -2685641943L, -1146508286L, -2963486215L, -1907950146L, -454737370L, -437829274L, -1630311774L, -2791190523L, -1216109614L, -2288680059L, -2993443267L, -1839240122L, -2446537683L, -4113999167L, -3385406179L, -3913258279L, -356116942L, -3531983187L, -2734098783L, -3839491135L, -1022833586L, -3402712647L, -3280389587L, -3161402519L, -2509404601168L, -55314920625758L, -72759188233881L, -286774752333539L, -174299562281164L, -323419441950603L, -131820833061383L, -137851748664192L, -204804639095369L, -80501797837486L, -219863513502381L, -363605853569317L, -349466796762733L, -210289699097923L, -347687371161904L, -387191902780300L, -226987051505699L, -229748121506984L, -83363155438819L, -319672789548859L, -427787709999204L, -382565644778146L, -208678137897173L, -129848980260465L, -302785131540995L, -345798231561024L, -403729728388001L, -145387215467701L, -160676508274820L, -237212145110460L, -296769935538194L, -357789659166608L, -13193057806143L, -182992143885212L, -2589984674342433792L, -3529476047424090112L, -4300555787041589248L, -218068376768837632L, -3486195314069792768L, -2444783958984702976L, -3569649934579000320L, -82671096067483648L, -437743906678266880L, -1120354711595686400L, -2166453452255892480L, -2927554312097859072L, -4162228093102483456L, -2736095222687670272L, -4552512669119908864L, -2481471595414023168L, -1948191104026459136L, -3243043548744070144L, -62946067909394944L, -2343065922048654336L, -3412880565890316288L, -530863212925288960L, -1777082136609876992L, -3998689044203332608L, -1718665032259328512L, -972821519757496320L, -3749360883974852608L, -4466018096526981120L, -1406263267215022080L, -4263713072228040704L, -560761627042935808L, -3130715306199420928L };
		for (int ndx = 0; ndx < 100; ndx++)
		{
			Util.Check("Fixed64.Nabs", Fixed64.Nabs(input0[ndx]), output0[ndx], input0[ndx]);
		}
	}

	// Fixed32.Nabs
	public static void Fixed32_Nabs()
	{
		int[] input0 = new int[]{ -12067, 15710, 60817, 37673, -54659, 27801, 19062, -43513, 33969, -1435, 13381, -17773, -14935, 22268, -59151, -34950, 21343, 54789, 1654, 64733, -10047, -30225, -10886, -21186, -9874, -61246, -38013, 2169, -46996, -48657, 46726, -11165, 41645, -9741, -2147483648, -932360532, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -173094265, -1560044748, -2147483648, -2147483648, 622425180, 1884390738, 744042929, -2147483648, -2147483648, -2147483648, 329015457, 877182425, -1099874643, -2147483648, -2147483648, 1646784976, -1798751871, -2147483648, 27894949, -2147483648, -2147483648, 1709168418, 1737377341, -2147483648, 611705496, -2147483648, 848759879, 257356616, -213237847, -120581739, -575631267, 29015478, 617828407, -862885218, 606879955, -996505806, -4263670, -866740281, -31694313, 142192307, 987383894, -469659539, 660140513, -811665356, 836896970, -535132967, -1053139749, 292315505, -588525191, -629200711, 764979915, 291641018, -6472914, -907758999, -432535756, 765351905, 533492188, 328705824 };
		int[] output0 = new int[]{ -12067, -15710, -60817, -37673, -54659, -27801, -19062, -43513, -33969, -1435, -13381, -17773, -14935, -22268, -59151, -34950, -21343, -54789, -1654, -64733, -10047, -30225, -10886, -21186, -9874, -61246, -38013, -2169, -46996, -48657, -46726, -11165, -41645, -9741, -2147483648, -932360532, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -173094265, -1560044748, -2147483648, -2147483648, -622425180, -1884390738, -744042929, -2147483648, -2147483648, -2147483648, -329015457, -877182425, -1099874643, -2147483648, -2147483648, -1646784976, -1798751871, -2147483648, -27894949, -2147483648, -2147483648, -1709168418, -1737377341, -2147483648, -611705496, -2147483648, -848759879, -257356616, -213237847, -120581739, -575631267, -29015478, -617828407, -862885218, -606879955, -996505806, -4263670, -866740281, -31694313, -142192307, -987383894, -469659539, -660140513, -811665356, -836896970, -535132967, -1053139749, -292315505, -588525191, -629200711, -764979915, -291641018, -6472914, -907758999, -432535756, -765351905, -533492188, -328705824 };
		for (int ndx = 0; ndx < 100; ndx++)
		{
			Util.Check("Fixed32.Nabs", Fixed32.Nabs(input0[ndx]), output0[ndx], input0[ndx]);
		}
	}

	// Fixed64.Rcp
	public static void Fixed64_Rcp()
	{
		long[] input0 = new long[]{ -386962280055369L, -90749372582L, 93436088422496L, 306645064715780928L, -375793842L, -23872655312604276L, 2391689974L, 1L, -349417707317869L, -857457L, 4397438L, 1306L, -240L, -93660L, 35100506628L, 293617443083802880L, -1432L, -81232879539319L, 2292485230317731L, 3373912524L, -357971L, -332576L, 556145433166092416L, 68561L, -22469326L, -4122L, 92770663726L, 133771699805L, -2L, -18152503478351L, 838835215341124L, 193452415925840576L, -232589L, -5888565986105773L, 750324L, 57874801677888288L, -1824204600375397L, -2L, 2182787832600813L, 226565858462705184L, -365486304070L, -24496771649836996L, 633263259L, 8122706118778L, -169533L, -12L, 30L, 102056481982L, -20L, -29631347744L, 89210590944436736L, 21226261258L, -4L, -27567L, 4313959L, 1163527422L, -752514698069L, -1362812261L, 13647274547L, 91159L, -257329L, -82451843192735536L, 3730373386265415168L, 19L, -4714063775L, -104829943L, 25898656592641956L, 188724L, -575663333439856064L, -2796942900261L, 160L, 536L, -171624804395995968L, -46662909212545408L, 42571842071644232L, 67390577L, -2421962694093414L, -68467L, 1865019593433293312L, 1780584L, -136L, -4192082310873233408L, 6383882667L, 316620668L, -938382378194398L, -39518L, 46052068935666712L, 8L, -1365002712L, -2973940371171803L, 76908L, 1338558L, -902604724L, -23944759899L, 880449400876L, 20442333526347L, -30284212226610700L, -32898485L, 1723L, 7458119365701388L };
		long[] output0 = new long[]{ -47671L, -203271315L, 197426L, 60L, -49087403712L, -773L, 7712848760L, 0L, -52793L, -21513316892672L, 4194884190208L, 14124612556161024L, -76861433756778496L, -196954344652800L, 525540685L, 62L, -12881804511936512L, -227085L, 8046L, 5467463680L, -51531391303680L, -55466252042240L, 33L, 269055922012160L, -820974530560L, -4475192873058304L, 198842429L, 137897209L, -9223372036854775808L, -1016210L, 21990L, 95L, -79310474969088L, -3133L, 24585037873152L, 318L, -10113L, -9223372036854775808L, 8451L, 81L, -50471781L, -754L, 29129660480L, 2271009L, -108809162194944L, -1537228673524957184L, 614891470054227968L, 180750340L, -922337203470729216L, -622541514L, 206L, 869052885L, -4611686018427387904L, -669160373747712L, 4276059099136L, 15854155872L, -24513467L, -13535792672L, 1351679718L, 202357904769024L, -71685446041600L, -224L, 4L, 970881266754781184L, -3913130008L, -175968273408L, 712L, 97744558751744L, -33L, -6595324L, 115292150433841152L, 34415565460209664L, -108L, -396L, 433L, 273728845568L, -7617L, -269425314889728L, 9L, 10359940415488L, -135637824039813120L, -5L, 2889580656L, 58261337856L, -19659L, -466793477963776L, 400L, 2305843009213693952L, -13514071424L, -6203L, 239854677393408L, 13781056897024L, -20437234080L, -770387519L, 20951509L, 902379L, -610L, -560717129728L, 10706177620967424L, 2473L };
		for (int ndx = 0; ndx < 100; ndx++)
		{
			Util.Check("Fixed64.Rcp", Fixed64.Rcp(input0[ndx]), output0[ndx], input0[ndx]);
		}
	}

	// Fixed64.RcpFast
	public static void Fixed64_RcpFast()
	{
		long[] input0 = new long[]{ -2247L, -740588577051043L, 817582819170L, 34550590L, -184095468L, -166377289232779L, 570365411995L, 415L, -2986301L, -295213752061751744L, 2215485464914L, 10990750L, -3369863928L, -7664L, 670L, 283087L, -12915626L, -11781837899L, 94599L, 119286L, -10497742972L, -3069608502726139L, 637608776158299L, 193L, -36367133L, -554536992591092L, 2739583241351L, 7167530L, -52998L, -2082L, 10262250902L, 73619275L, -39L, -250L, 792L, 847005L, -5127409L, -184L, 1L, 5L, -319528572361L, -110926731050874L, 13029277052514L, 21323410168L, -1342L, -32270590155466376L, 1831828790229103L, 117764L, -35728330L, -3110172L, 1582759L, 2570414L, -347L, -66615104489431728L, 710449L, 3375878L, -1L, -4223723158L, 4381331760952318976L, 1530989837429L, -60L, -79576L, 36124783520772000L, 1433L, -28766959L, -30093L, 276595L, 13475916L, -9L, -3648980120574082L, 254613648320325472L, 69901L, -6850414998L, -16772L, 1721639970137L, 436434879434026L, -235L, -29901L, 665016914384014848L, 5197109830L, -1396064145881925120L, -23263246L, 925159422011267200L, 78585556270327392L, -6067876129479954L, -3992L, 211691L, 2750L, -1623231288951043L, -1082493733853253L, 729227L, 5598379452261588L, -194L, -5180642L, 428288080030451840L, 4015374L, -14160894676725862L, -9086123415L, 741L, 205705411121691072L };
		long[] output0 = new long[]{ -8209502469881856L, -24909L, 22562580L, 533910767104L, -100203092480L, -110872L, 32342317L, 44449518019674112L, -6177177853952L, -63L, 8326311L, 1678396424192L, -5473985328L, -2406949039636480L, 27532584183398400L, 65163099963392L, -1428242307072L, -1565709472L, 195000795922432L, 154644628111360L, -1757196326L, -6010L, 28930L, 95578877341990912L, -507238493696L, -33265L, 6733379L, 2573648707584L, -348061233053696L, -8860175679094784L, 1797515498L, 250569605888L, -472989454466809856L, -73786224556376064L, 23291196335980544L, 21778559860736L, -3597644763136L, -100254843804844032L, 0L, 3689332815129739264L, -57730546L, -166296L, 1415795L, 865088657L, -13745779713769472L, -572L, 10070L, 156643154460672L, -516309755904L, -5931115323392L, 11654786990080L, 7176510447616L, -53161156818239488L, -277L, 25965158596608L, 5464222760960L, 0L, -4367367520L, 4L, 12049027L, -307447413285584896L, -231810852978688L, 510L, 12872948792688640L, -641246819328L, -612997384896512L, 66692871749632L, 1368853157888L, -2049627037966008320L, -5056L, 72L, 263900071985152L, -2692764736L, -1099863866474496L, 10714546L, 42266L, -78497579268046848L, -616933824135168L, 27L, 3549390740L, -14L, -792964966400L, 19L, 234L, -3041L, -4620882550980608L, 87139033153536L, 6707965050486784L, -11365L, -17041L, 25296565567488L, 3294L, -95086096819421184L, -3560683208704L, 43L, 4594014109696L, -1303L, -2030228608L, 24894565206982656L, 89L };
		for (int ndx = 0; ndx < 100; ndx++)
		{
			Util.Check("Fixed64.RcpFast", Fixed64.RcpFast(input0[ndx]), output0[ndx], input0[ndx]);
		}
	}

	// Fixed64.RcpFastest
	public static void Fixed64_RcpFastest()
	{
		long[] input0 = new long[]{ -116670726766L, -135933526L, 12175L, 45154491665L, -56332945L, -22L, 1730398329053145L, 95619155553222224L, -38692L, -7507125463L, 14329L, 179136807010769L, -29290209936L, -843032359L, 5057392562120L, 12039236467999L, -396667L, -2119933572886929152L, 1089844L, 7205L, -655591329265792256L, -100L, 38285790781L, 41206L, -5003895410L, -45L, 359L, 1322L, -180603L, -428761L, 142130894790703984L, 119575930722L, -40L, -3L, 205428040159741504L, 10270197354L, -1910L, -20488757L, 1395019478L, 267983321289867L, -10640279L, -10209835L, 327867764851008384L, 216225L, -75544225249L, -18773194337L, 191134L, 1063894328396L, -4724073546114L, -35574L, 10L, 30805493542020064L, -8337L, -474425332807514112L, 1447012378042236416L, 1160342672L, -16373770308381450L, -1362628910285678080L, 9L, 1238634L, -290526413974610688L, -1308617698836L, 529442366486L, 416172958094630400L, -243581844665L, -552637155754L, 4440684397498L, 9060152526L, -18925364522L, -492L, 6301033731L, 89283432869039408L, -1519644424L, -18754983138L, 3122922893720212L, 64211745721L, -1414L, -177064L, 2515496870188L, 1229220455803407616L, -1097335004529418L, -1557988638L, 1290851780L, 5L, -42356L, -4L, 14342664L, 392L, -10L, -177040838L, 2892609622254L, 6466L, -2270507L, -1126L, 4253847073857541L, 37497298178558L, -88932349067816L, -3633160582991654400L, 4093752168858L, 630406847838107392L };
		long[] output0 = new long[]{ -158166963L, -135722470656L, 1515056003022848L, 408370849L, -327584698880L, -838184827982184448L, 10661L, 192L, -476780946784256L, -2457836256L, 1287682990800896L, 102944L, -630014346L, -21886697824L, 3648162L, 1531651L, -46506613211136L, -9L, 16931363192832L, 2560802670247936L, -29L, -184507643413397504L, 481972094L, 447553495629824L, -3686916232L, -409803298451750912L, 51367641893306368L, 13948840734359552L, -102103189159936L, -43039490703360L, 129L, 154309770L, -461058261341175808L, -6148914694099828736L, 89L, 1796105334L, -9655569078026240L, -900216028160L, 13218535296L, 68810L, -1733160468480L, -1806554372096L, 56L, 85345588346880L, -244272794L, -982977401L, 96497588502528L, 17332243L, -3906355L, -518744048140288L, 1844233045364703232L, 599L, -2213029355716608L, -39L, 12L, 15903815104L, -1127L, -14L, 2050225253895897088L, 14893478313984L, -64L, -14096411L, 34828305L, 44L, -75743173L, -33381475L, 4154470L, 2036776006L, -975056856L, -37478843744780288L, 2927223784L, 206L, -12135443440L, -983933526L, 5904L, 287204181L, -13041177997606912L, -104141120733184L, 7334798L, 15L, -16805L, -11838032512L, 14289642832L, 3688466090729406464L, -435364875468800L, -4611686018427387904L, 1286587592704L, 47063375523348480L, -1844233045364703232L, -104155086208L, 6374782L, 2853638993084416L, -8127634145280L, -16388443462434816L, 4335L, 492137L, -207367L, -6L, 4505012L, 29L };
		for (int ndx = 0; ndx < 100; ndx++)
		{
			Util.Check("Fixed64.RcpFastest", Fixed64.RcpFastest(input0[ndx]), output0[ndx], input0[ndx]);
		}
	}

	// Fixed32.Rcp
	public static void Fixed32_Rcp()
	{
		int[] input0 = new int[]{ -83276372, -6979658, 13, 93328, -3767572, -37, 5233, 1147506, -20, -5498, 1167, 269337, -961, -10, 70117, 14775, -50, -284916, 2388362, 207220, -279, -100859, 30520, 17, -28943, -1265, 180547, 1473, -3356067, -15, 36434613, 66, -385880, -3203040, 13, 6, -6057, -420197463, 1218, 15, -839018, -4165150, 3, 1162707, -24, -10, 135329532, 361, -819371, -5530, 175451, 46, -804, -15, 3031680, 1651, -457, -794960138, 6, 5954, -222250, -7, 367133686, 2, -162052, -35, 749451667, 322317, -802752943, -22575, 4, 130, -467, -305774, 265192170, 71990, -64728, -28185028, 773061002, 5783, -10039, -997, 1930882, 1213, -96850, -1551107, 88844623, 50423, -2, -9034059, 14583042, 8181, -130314904, -219748567, 75472, 236233, -12181657, -2, 14, 755885881 };
		int[] output0 = new int[]{ -52, -616, 330382100, 46020, -1140, -116080195, 820746, 3742, -214748365, -781188, 3680349, 15946, -4469269, -429496730, 61254, 290691, -85899346, -15075, 1798, 20726, -15394149, -42584, 140726, 252645135, -148394, -3395231, 23788, 2915795, -1280, -286331154, 117, 65075259, -11131, -1341, 330382100, 715827883, -709092, -11, 3526245, 286331153, -5120, -1032, 1431655766, 3693, -178956971, -429496730, 31, 11897416, -5242, -776667, 24479, 93368854, -5342000, -286331154, 1416, 2601433, -9398178, -6, 715827883, 721358, -19325, -613566757, 11, -2147483648, -26504, -122713356, 5, 13325, -6, -190254, 1073741824, 33038211, -9196933, -14047, 16, 59660, -66355, -153, 5, 742688, -427829, -4307891, 2224, 3540780, -44347, -2769, 48, 85178, -2147483648, -476, 294, 524992, -33, -20, 56908, 18181, -353, -2147483648, 306783378, 5 };
		for (int ndx = 0; ndx < 100; ndx++)
		{
			Util.Check("Fixed32.Rcp", Fixed32.Rcp(input0[ndx]), output0[ndx], input0[ndx]);
		}
	}

	// Fixed32.RcpFast
	public static void Fixed32_RcpFast()
	{
		int[] input0 = new int[]{ -14, -839, 484, 72, -2267, -2695, 107883721, 2824111, -61, -84, 27393073, 17424, -2, -1197387, 636872088, 445, -3950, -604983, 29371, 112179507, -424, -29726, 305074, 177, -1662210, -640216, 1072, 2284, -8, -2245, 6345537, 55026, -3928289, -2, 806, 23, -4, -53199, 574789556, 71, -15437817, -62, 1627, 26938318, -354113142, -1673, 7956, 217, -370487625, -338, 119, 40, -86004, -137, 3564700, 518025, -2955511, -5, 46891, 3802548, -5, -94442, 697054, 29637096, -14251, -995, 4762694, 2, -2969, -53268076, 216, 79725028, -1130146, -817, 14, 13, -36, -12160032, 538, 1986, -160, -9, 6621, 25678369, -37, -315141, 686983854, 57200, -616, -1671652, 8687, 812558119, -2, -302, 28, 326, -96919, -58958, 3780, 711328 };
		int[] output0 = new int[]{ -306784709, -5119100, 8873920, 59651997, -1894557, -1593690, 39, 1520, -70409214, -51130833, 156, 246499, -2147483648, -3587, 6, 9651636, -1087327, -7100, 146232, 38, -10129552, -144487, 14078, 24265608, -2584, -6709, 4006540, 1880451, -536870912, -1913128, 676, 78052, -1094, -2147483648, 5328695, 186739198, -1073741824, -80734, 7, 60492356, -279, -69273107, 2639781, 159, -13, -2567199, 539835, 19792393, -12, -12707084, 36092448, 107373716, -49940, -31350333, 1204, 8290, -1454, -858989734, 91595, 1129, -858989734, -45478, 6161, 144, -301381, -4316512, 901, -2147483648, -1446614, -81, 19884003, 53, -3801, -5256945, 306784709, 330378647, -119303996, -354, 7983288, 2162603, -26843430, -477215983, 648681, 167, -116079082, -13629, 6, 75087, -6972282, -2570, 494417, 5, -2147483648, -14221596, 153392354, 13174737, -44316, -72849, 1136245, 6038 };
		for (int ndx = 0; ndx < 100; ndx++)
		{
			Util.Check("Fixed32.RcpFast", Fixed32.RcpFast(input0[ndx]), output0[ndx], input0[ndx]);
		}
	}

	// Fixed32.RcpFastest
	public static void Fixed32_RcpFastest()
	{
		int[] input0 = new int[]{ -377371, -7913, 78708522, 13, -3, -1610, 38261, 210, -18, -528858, 28359, 260974295, -10854719, -47, 47257, 547806850, -28, -29147347, 1578898, 48558359, -1556, -166, 3504608, 1907311, -12263, -285, 70271008, 7476, -57, -47731766, 149348, 665331, -6433, -813422, 5650997, 21836822, -134, -952, 16379395, 25022940, -16, -6530744, 6052, 1250907, -117, -35742, 149, 51596702, -6869029, -56, 22, 3570371, -40095154, -83592, 914, 4532, -2424413, -82, 1217929, 11788155, -24614, -10, 7, 425, -7, -45767593, 81132, 26, -8972, -2323694, 8149934, 32174382, -3, -67751017, 5895433, 255854, -29542810, -5, 32357, 368408652, -3, -2, 1168705, 2, -4164926, -44914627, 17817471, 82635704, -1779, -2493, 18, 3, -839300, -2, 2033, 3, -1775894, -28, 353254, 2765 };
		int[] output0 = new int[]{ -11379, -542565, 54, 330501700, -1431655766, -2668341, 112266, 20459981, -238677633, -8122, 151494, 16, -396, -91371884, 90866, 7, -153428390, -148, 2720, 88, -2760460, -25864093, 1225, 2251, -350234, -15074957, 61, 574457, -75359488, -90, 28764, 6453, -667808, -5282, 759, 196, -32063021, -4510500, 262, 171, -268435456, -658, 709618, 3433, -36705893, -120212, 28828851, 83, -626, -76714195, 195155113, 1203, -108, -51365, 4699584, 948023, -1772, -52360579, 3526, 364, -174495, -429393967, 613713559, 10109728, -613713559, -94, 52927, 165250850, -478885, -1849, 526, 133, -1431655766, -64, 728, 16780, -146, -858787934, 132705, 11, -1431655766, -2147483648, 3676, -2147483648, -1032, -96, 241, 51, -2414932, -1722612, 238677632, 1431655766, -5119, -2147483648, 2112304, 1431655766, -2420, -153428390, 12153, 1552735 };
		for (int ndx = 0; ndx < 100; ndx++)
		{
			Util.Check("Fixed32.RcpFastest", Fixed32.RcpFastest(input0[ndx]), output0[ndx], input0[ndx]);
		}
	}

	// Fixed64.Div
	public static void Fixed64_Div()
	{
		long[] input0 = new long[]{ 288423935L, 288423935L, 288423935L, 288423935L, 288423935L, 288423935L, 288423935L, 288423935L, 288423935L, 288423935L, 288423935L, 288423935L, 288423935L, 288423935L, 288423935L, 288423935L, 288423935L, 288423935L, 288423935L, 288423935L, 288423935L, 288423935L, 288423935L, 288423935L, 288423935L, 3944665035836L, -3558038699656L, -595512886277L, -3831796335784L, -785057654365L, -1753775050816L, 1610215862749L, 4070795263895L, 2476245979153L, 1887243310878L, 541972566252L, 1250850254582L, 1743195566811L, 1854023946863L, 2090930634973L, -402367802187L, -681579914317L, -3747437279745L, 367929842171L, -2398216623116L, -3891822759812L, 1335209322621L, 2500235427164L, -3747816175745L, 733679386341L, 950216471212961792L, 1085059374715359232L, 823469057081284608L, -1104631553577247232L, -1726217848216978432L, -1809804281272561152L, -1893336292797511168L, -1226926134592919040L, -290456210875863040L, 1620476711117925376L, -3556215530273926656L, 1615432843257075712L, -407432982426483712L, -3957983259708303872L, 2915402870359273472L, 3449129991101189120L, -2809313755009736704L, 743208676766044160L, 2105441199814873088L, 2740046910429410304L, 3398481765333183488L, 2896190180260228096L, -264653443213851136L, -3552122357719455744L, -4001355626189903872L, 4291824732840L, 4293853853147L, 4291531271940L, 4292716177994L, 4290770440646L, 4294061131377L, 4291300837712L, 4292709872234L, 4292021220964L, 4291050733046L, 4293818356411L, 4291195417596L, 4291079526082L, 4292161933922L, 4291806684730L, 4294371565417L, 4294691492909L, 4294233100169L, 4294780460171L, 4292949157701L, 4293997052705L, 4291211109402L, 4293984032409L, 4290863405858L, 4291297077514L };
		long[] input1 = new long[]{ -4396875775L, -4396875775L, -4396875775L, -4396875775L, -4396875775L, -4396875775L, -4396875775L, -4396875775L, -4396875775L, -4396875775L, -4396875775L, -4396875775L, -4396875775L, -4396875775L, -4396875775L, -4396875775L, -4396875775L, -4396875775L, -4396875775L, -4396875775L, -4396875775L, -4396875775L, -4396875775L, -4396875775L, -4396875775L, -17858305371454944L, -186706500579L, 5547715049L, 204955977682580L, -12933401951102314L, -621470164368479488L, 7186220532147662L, 49970305698095L, -54694427505L, -3560861583440143360L, 1510986464350152448L, 818980678867583L, -1292819772700645L, -962006523676236L, 31461146096353L, 107025275177L, -114315389339236704L, -24712048784L, 1641553310760682L, 60419006693818192L, -66198220830642L, -3426937229424L, 1037502820472824448L, 1252907301785L, -481137859148709184L, -2538834985372582400L, 657524697646235648L, -3016661135341038592L, -2101375845763591168L, -3489359059995943936L, -815534306861692928L, -2276893846219673088L, 2207715469375751168L, 1169240557662499840L, -3556756374030927360L, -1974050170119813120L, -3690660436336687104L, -3966336494361543680L, 2854751158948084736L, 1695106135902417920L, 1398409056222202880L, -2603594768579799040L, -3337574829785277440L, 3843768628871667712L, -1719972489024316416L, -189142708319678464L, -1232544901006475776L, -4489243381299019264L, 2785865612974539776L, 3851430914955808768L, -4293467263389L, -4293575151743L, -4293054162889L, -4294114134733L, -4293192096025L, -4294359007277L, -4293068979353L, -4292265283924L, -4292195304340L, -4294337516079L, -4293553492449L, -4290900607796L, -4291804010688L, -4293266170473L, -4292069733222L, -4291272064600L, -4293358638427L, -4293918918029L, -4293770755109L, -4294758097245L, -4292947908421L, -4291200221682L, -4294070995037L, -4293475350573L, -4292614618330L };
		long[] output0 = new long[]{ -281738996L, -281738996L, -281738996L, -281738996L, -281738996L, -281738996L, -281738996L, -281738996L, -281738996L, -281738996L, -281738996L, -281738996L, -281738996L, -281738996L, -281738996L, -281738996L, -281738996L, -281738996L, -281738996L, -281738996L, -281738996L, -281738996L, -281738996L, -281738996L, -281738996L, -948702L, 81848567679L, -461038156584L, -80297440L, 260704L, 12120L, 962372L, 349886438L, -194451172683L, -2277L, 1540L, 6559814L, -5791193L, -8277462L, 285446646L, -16147181522L, 25607L, 651306603355L, 962653L, -170481L, 252503032L, -1673412723L, 10350L, -12847517382L, -6550L, -1607488748L, 7087634364L, -1172412972L, 2257738148L, 2124759629L, 9531236194L, 3571452165L, -2386905233L, -1066931846L, -1956809435L, 7737305626L, -1879942997L, 441190842L, -5954777556L, 7386888523L, 10593396034L, 4634327558L, -956400127L, 2352587243L, -6842209278L, -77171190767L, -10092161702L, 253200325L, -5476305026L, -4462157533L, -4293324199L, -4295246095L, -4293443734L, -4293569076L, -4292544652L, -4294669387L, -4293198382L, -4295412179L, -4294793117L, -4291680043L, -4295232261L, -4295262399L, -4294242287L, -4293862636L, -4294704084L, -4298069476L, -4296300664L, -4295281563L, -4295977300L, -4293158287L, -4296016949L, -4294978204L, -4294880329L, -4292354450L, -4293649052L };
		for (int ndx = 0; ndx < 100; ndx++)
		{
			Util.Check("Fixed64.Div", Fixed64.Div(input0[ndx], input1[ndx]), output0[ndx], input0[ndx], input1[ndx]);
		}
	}

	// Fixed64.DivFast
	public static void Fixed64_DivFast()
	{
		long[] input0 = new long[]{ 288423935L, 288423935L, 288423935L, 288423935L, 288423935L, 288423935L, 288423935L, 288423935L, 288423935L, 288423935L, 288423935L, 288423935L, 288423935L, 288423935L, 288423935L, 288423935L, 288423935L, 288423935L, 288423935L, 288423935L, 288423935L, 288423935L, 288423935L, 288423935L, 288423935L, 375453306174L, 320494770149L, -3807262047772L, -1959118458912L, -3062523447426L, -3067720419428L, 4034608771878L, -2959235131378L, -1456766334678L, -1098678190511L, -3323008027547L, 788316942367L, 1486442298692L, 1953217174909L, -2321581167081L, -2796213179302L, 2155234639003L, 2063410778960L, -56197018026L, 801351858373L, 2646947947232L, 1479997146689L, -2361107903099L, 1126486602524L, -940781094438L, 2572604659674346496L, -1081928914785767936L, -1864450571839191040L, -4064373413610724352L, 1328896496562757632L, 3425691100425551872L, -1732337072810032640L, -685886256500540416L, 3518254599249507328L, 4564028301079568384L, 2521035030276933632L, 3874118667390632960L, -4037040495129323008L, 1980941436559519744L, 3175240317349752832L, -2503237334334083584L, 1750942536137519104L, -1624131689633818112L, 1700917789297328128L, 3769325944970324992L, 1597862441278603264L, 1401418874815361024L, 268331683272629248L, 2609847291777913856L, 3617007176014651392L, 4294357527269L, 4293371712531L, 4292150257874L, 4293176316521L, 4291117173858L, 4291217704584L, 4294338531911L, 4292883788697L, 4291390374426L, 4293823050689L, 4291240123362L, 4292041897560L, 4290701119610L, 4290839127994L, 4294102294293L, 4292529099190L, 4292227328182L, 4293876034453L, 4294443569747L, 4293675028375L, 4293429276121L, 4294311208483L, 4293330299997L, 4292875034979L, 4294536895319L };
		long[] input1 = new long[]{ -4396875775L, -4396875775L, -4396875775L, -4396875775L, -4396875775L, -4396875775L, -4396875775L, -4396875775L, -4396875775L, -4396875775L, -4396875775L, -4396875775L, -4396875775L, -4396875775L, -4396875775L, -4396875775L, -4396875775L, -4396875775L, -4396875775L, -4396875775L, -4396875775L, -4396875775L, -4396875775L, -4396875775L, -4396875775L, -94478841279L, -9337511366269L, 12061787995L, 29826898544L, -1558499723587435L, -251073552569432L, 418085203729847232L, 600123905037177088L, -6108693846196L, -10495965947L, 3407468133171L, 144405647603642L, -33624781867L, -346388845119L, 11204500642271252L, 9221915822872868L, -548975867411907392L, -1146867949173025536L, 532822745343L, 354311976075L, -380777543521538L, -1714290008071821824L, 7771965171L, 118369193870778L, -44492919885864192L, 3786144590232693760L, 2206361356381004800L, 4549908239605107712L, -747714256375436288L, 3160055851309698048L, -2801766715783102464L, -1466349228353849856L, 534782714182097920L, -1693574168311861760L, 3105634999281572864L, -3273008126832943104L, 799635205507891200L, 3159879749060545536L, 1891290458139552768L, -3029357917667385856L, -4529767669065969664L, -3914387224214725632L, -2605507901633150976L, -2616789530889512960L, 4032148626161148928L, 2592691199524875264L, 3093034621791196160L, -2598167957139691520L, -1036996826634931712L, 4460507370015805440L, -4293239169979L, -4292538199384L, -4292015817962L, -4294304985329L, -4291149313000L, -4290995083184L, -4292909612009L, -4293273934109L, -4292542028812L, -4294901096757L, -4293110721525L, -4294954028407L, -4294859819437L, -4291586335270L, -4293720610463L, -4291924463262L, -4290980711518L, -4293573200301L, -4294844758411L, -4290841362986L, -4293635873347L, -4290968242852L, -4291439728898L, -4292466276476L, -4292840657385L };
		long[] output0 = new long[]{ -281741636L, -281741636L, -281741636L, -281741636L, -281741636L, -281741636L, -281741636L, -281741636L, -281741636L, -281741636L, -281741636L, -281741636L, -281741636L, -281741636L, -281741636L, -281741636L, -281741636L, -281741636L, -281741636L, -281741636L, -281741636L, -281741636L, -281741636L, -281741636L, -281741636L, -17068123360L, -147418927L, -1355705578916L, -282106705554L, 8439896L, 52478141L, 41447L, -21179L, 1024250029L, 449577368526L, -4188481210L, 23446648L, -189864557170L, -24218391507L, -889916L, -1302307L, -16862L, -7728L, -452988107L, 9713999319L, -29856441L, -3708L, -1304816291576L, 40873761L, 90814L, 2918310353L, -2106108054L, -1759964140L, 23346357554L, 1806178812L, -5251365797L, 5074046631L, -5508562281L, -8922463798L, 6311922931L, -3308230479L, 20808724730L, -5487277132L, 4498513075L, -4501821133L, 2373457083L, -1921172212L, 2677231713L, -2791716448L, 4015030225L, 2646952406L, 1946017548L, -443569918L, -10809406079L, 3482745248L, -4296042625L, -4295757929L, -4295058577L, -4293794818L, -4294892046L, -4295147062L, -4296353473L, -4294533521L, -4293771664L, -4293845507L, -4293052465L, -4292011443L, -4290764800L, -4294176341L, -4295305538L, -4295529123L, -4296172007L, -4295226700L, -4294522366L, -4297760620L, -4294717097L, -4298270285L, -4296816253L, -4295332956L, -4296620961L };
		for (int ndx = 0; ndx < 100; ndx++)
		{
			Util.Check("Fixed64.DivFast", Fixed64.DivFast(input0[ndx], input1[ndx]), output0[ndx], input0[ndx], input1[ndx]);
		}
	}

	// Fixed64.DivFastest
	public static void Fixed64_DivFastest()
	{
		long[] input0 = new long[]{ 288423935L, 288423935L, 288423935L, 288423935L, 288423935L, 288423935L, 288423935L, 288423935L, 288423935L, 288423935L, 288423935L, 288423935L, 288423935L, 288423935L, 288423935L, 288423935L, 288423935L, 288423935L, 288423935L, 288423935L, 288423935L, 288423935L, 288423935L, 288423935L, 288423935L, -695367114323L, -3526798531642L, -1372279966639L, 1618756694753L, -1359723626633L, -4202329723956L, -4212142227961L, 2845413087324L, 1573809698732L, 50975054023L, 1653977694770L, 350460602163L, 1452574030676L, -3812844443775L, 1360967714633L, 955990002445L, 1830894198852L, 613148890285L, -3828970231783L, -2311821759076L, -554891138258L, -970015214451L, 284431070132L, -2849048727326L, -793837070369L, 4398255985149574144L, -22892813500983808L, -3464067187283963392L, -2888598816971078656L, -3971111827982021120L, -4316784866437929472L, 519409394134982656L, -3026017635700385280L, -2021183188492705280L, 2505127463542587392L, 3126294350330701824L, -1270478597643258880L, -1312038311831443456L, -245064655713421824L, 4401327213185159168L, -583002380756220928L, 1343656499574685696L, -1584930827320269824L, -1253285259433811968L, 1593032918055726080L, -639831240559707648L, 2728815394851481600L, -205092911194392064L, -3869694855368660480L, 1593596353340715008L, 4291123544146L, 4290992465432L, 4291768261654L, 4293422460795L, 4294956279919L, 4291449722558L, 4290757172236L, 4290861213806L, 4292880111227L, 4294107058035L, 4294695246245L, 4293807984703L, 4290761563064L, 4293352448379L, 4293267368075L, 4291902441296L, 4290792152974L, 4292013697838L, 4291705287152L, 4294735236271L, 4291984261888L, 4294698334685L, 4290915734080L, 4293696345769L, 4291717341212L };
		long[] input1 = new long[]{ -4396875775L, -4396875775L, -4396875775L, -4396875775L, -4396875775L, -4396875775L, -4396875775L, -4396875775L, -4396875775L, -4396875775L, -4396875775L, -4396875775L, -4396875775L, -4396875775L, -4396875775L, -4396875775L, -4396875775L, -4396875775L, -4396875775L, -4396875775L, -4396875775L, -4396875775L, -4396875775L, -4396875775L, -4396875775L, -604621737873356L, -153019823036L, 3016151198578100L, 81115045729503L, -336908477237L, -255841342101618L, 876356982278L, 520827639770181696L, -5151795752876L, -7628064220989280L, 3426913733681584640L, 183867530395L, -825795049826167424L, -30088315773L, 2674677493638977536L, 470997879235933L, -134595249178L, -1852766239788L, 10391358513221422L, 6139830803L, -25869278627987132L, -18607801887105L, 1681370891167426L, 2883503675849L, -31533145155286L, -2123764866042970624L, -3732562468008457216L, 3009011446395981824L, -3217646964729364992L, 1446675671083859968L, -3067677152043673600L, 484647672581693440L, -1527799258221619712L, -4192606594369733632L, -2463326032889838592L, -4323700352198229504L, -3400357441976729088L, 1921246523603240960L, -2107639892358966784L, 1476059578183976960L, -651114355874755072L, -4531036711643444224L, 1258275470268208128L, -1641670944509445632L, -3367924975678426112L, -2805417468051173376L, 2839993354959412224L, 2936081218048760832L, 2118438913319921664L, 741506568340944896L, -4292484312452L, -4291357102218L, -4291341287480L, -4294733641191L, -4292720779142L, -4292655865956L, -4291861966796L, -4291087033856L, -4293123671469L, -4293042257765L, -4291071177132L, -4291949561060L, -4293653210587L, -4290878493848L, -4290895342926L, -4290721588948L, -4291047512426L, -4291506679958L, -4292698604010L, -4293779205909L, -4293675924899L, -4294915616899L, -4290725622852L, -4293755277671L, -4294316354775L };
		long[] output0 = new long[]{ -281802156L, -281802156L, -281802156L, -281802156L, -281802156L, -281802156L, -281802156L, -281802156L, -281802156L, -281802156L, -281802156L, -281802156L, -281802156L, -281802156L, -281802156L, -281802156L, -281802156L, -281802156L, -281802156L, -281802156L, -281802156L, -281802156L, -281802156L, -281802156L, -281802156L, 4941500L, 99022476836L, -1953354L, 85726649L, 17331389932L, 70544249L, -20649707057L, 23464L, -1312177629L, -28713L, 2072L, 8183240751L, -7554L, 544393569493L, 2185L, 8720911L, -58405396208L, -1421901277L, -1582864L, -1616786876600L, 92105L, 223977883L, 726545L, -4242056339L, 108132475L, -8893406474L, 26351485L, -4942682577L, 3854487529L, -11786643702L, 6041466264L, 4604782096L, 8503498340L, 2070441670L, -4369537767L, -3104628023L, 1604583739L, -2934213957L, 499351089L, 12802624283L, 3846716170L, -1273277798L, -5411994663L, 3278020644L, -2031236159L, 979441869L, 4126115043L, -299922462L, -7844475180L, 9227349529L, -4292112722L, -4293101974L, -4293893882L, -4292177465L, -4295711178L, -4292268506L, -4292364706L, -4293239182L, -4293234269L, -4294542238L, -4297091127L, -4295329536L, -4290589702L, -4295939305L, -4295837414L, -4294644508L, -4293209380L, -4293974951L, -4292481652L, -4294438012L, -4291789797L, -4293272246L, -4293653166L, -4293422967L, -4290887026L };
		for (int ndx = 0; ndx < 100; ndx++)
		{
			Util.Check("Fixed64.DivFastest", Fixed64.DivFastest(input0[ndx], input1[ndx]), output0[ndx], input0[ndx], input1[ndx]);
		}
	}

	// Fixed32.Div
	public static void Fixed32_Div()
	{
		int[] input0 = new int[]{ 4400, 4400, 4400, 4400, 4400, 4400, 4400, 4400, 4400, 4400, 4400, 4400, 4400, 4400, 4400, 4400, 4400, 4400, 4400, 4400, 4400, 4400, 4400, 4400, 4400, -43524126, -576604, 10200833, 37186728, -29499581, -43557949, -63194344, 6695542, -13499879, 9902460, -62709451, 47710217, -52641105, -60673570, -21249132, 20928826, 17500830, -6549827, -56069733, 1486428, 64098018, -21776549, -30892323, -40818463, 56950795, -932419149, 81472828, 945293590, -630362811, 771831093, 717429516, -577049081, -237841657, 749927345, -951695871, -161997161, -143941182, 151129836, 758109810, -769589514, 804312310, -158804350, -1071115076, 489825180, -275619673, 988951133, -385093440, -742563077, 403960978, -136704890, 65517742, 65535197, 65498583, 65520418, 65477226, 65519296, 65495611, 65486984, 65520934, 65510878, 65522713, 65499262, 65485604, 65474539, 65524708, 65525423, 65534818, 65513283, 65495030, 65486563, 65514222, 65483215, 65520499, 65487055, 65512191 };
		int[] input1 = new int[]{ -67090, -67090, -67090, -67090, -67090, -67090, -67090, -67090, -67090, -67090, -67090, -67090, -67090, -67090, -67090, -67090, -67090, -67090, -67090, -67090, -67090, -67090, -67090, -67090, -67090, -544078, -88772552, 19119022, 890417485, -12854265, -4417655, 272971, 4593898, -168244, -1314485, 773691706, 57946262, -1364379, -1156523, 2724538, 135692, -91555458, -1170352, 6420815, 87989, -274143, -964787781, 301189, 240313, -121603, -552476293, -994668132, 626761332, -733966651, 616394093, -581688998, 184575954, -105234755, 895512875, -46872693, 850358595, -629553907, -576632283, -563187885, -53846831, 504522970, -408211575, -78100305, -560537076, 986873313, 304999720, -695955248, -120228660, -363311646, -739115369, -65513102, -65526631, -65530445, -65518210, -65522520, -65474842, -65509314, -65500678, -65470621, -65474763, -65486283, -65480745, -65515602, -65523798, -65518504, -65504035, -65533035, -65500699, -65511166, -65514875, -65489830, -65475633, -65496773, -65497417, -65478389 };
		int[] output0 = new int[]{ -4298, -4298, -4298, -4298, -4298, -4298, -4298, -4298, -4298, -4298, -4298, -4298, -4298, -4298, -4298, -4298, -4298, -4298, -4298, -4298, -4298, -4298, -4298, -4298, -4298, 5242625, 425, 34966, 2736, 150400, 646183, -15171957, 95517, 5258601, -493704, -5311, 53959, 2528540, 3438153, -511126, 10108123, -12527, 366769, -572292, 1107121, -15323125, 1479, -6721889, -11131644, -30692723, 110605, -5368, 98842, 56285, 82062, -80829, -204888, 148118, 54881, 1330632, -12484, 14984, -17176, -88218, 936653, 104477, 25495, 898800, -57268, -18303, 212498, 36263, 404767, -72868, 12121, -65540, -65544, -65504, -65538, -65490, -65580, -65522, -65522, -65586, -65572, -65572, -65554, -65505, -65486, -65542, -65557, -65537, -65548, -65519, -65507, -65560, -65543, -65559, -65525, -65569 };
		for (int ndx = 0; ndx < 100; ndx++)
		{
			Util.Check("Fixed32.Div", Fixed32.Div(input0[ndx], input1[ndx]), output0[ndx], input0[ndx], input1[ndx]);
		}
	}

	// Fixed32.DivFast
	public static void Fixed32_DivFast()
	{
		int[] input0 = new int[]{ 4400, 4400, 4400, 4400, 4400, 4400, 4400, 4400, 4400, 4400, 4400, 4400, 4400, 4400, 4400, 4400, 4400, 4400, 4400, 4400, 4400, 4400, 4400, 4400, 4400, 20978158, 2955797, -56470408, -54372997, -1556270, 3519541, -36140104, -42479712, -49083234, -6215290, 50867263, -4130854, 3082466, 62365021, 6536047, -38738302, 62703984, -35569186, 65086247, 11314531, 23820627, -27102795, 44505450, 18587004, 30591604, -392750516, 752170801, -204264810, 697834335, -130572551, -285983468, 392992313, -155998829, -318318207, 590974792, 630603689, -897945731, 215621370, 610554489, 817894874, -144972996, 997557704, 893120064, 733457448, -1061706379, 388281781, 220163738, 460329617, -90606584, 148641968, 65475657, 65504238, 65512669, 65474762, 65522395, 65517295, 65479370, 65532531, 65487224, 65518857, 65512199, 65483878, 65511784, 65513858, 65502806, 65506246, 65471161, 65503109, 65520285, 65480910, 65495484, 65489175, 65519449, 65475320, 65479923 };
		int[] input1 = new int[]{ -67090, -67090, -67090, -67090, -67090, -67090, -67090, -67090, -67090, -67090, -67090, -67090, -67090, -67090, -67090, -67090, -67090, -67090, -67090, -67090, -67090, -67090, -67090, -67090, -67090, -66233381, -80632570, 261012, 17453171, -1796780, -16824585, 5451894, 8717246, -23838047, -241172, 12889232, 10551858, -2515134, -9634600, 12219220, 77370, -892703435, -15494026, 2182188, 238493118, -100221, -4304594, 7291406, 130782, -6468722, 431139823, 493905943, -46577324, 637485722, 407210241, -468824913, -541918475, -920817331, -854094670, -1021983688, 475586653, -964836590, 384411690, -712044389, 574314533, 775800674, -866971301, -1021987100, 513413689, 526375971, 934681047, -256484036, 598971006, -42140249, -187983237, -65508771, -65508371, -65534380, -65517171, -65512011, -65491448, -65532793, -65535864, -65495655, -65510465, -65520686, -65510023, -65470831, -65490771, -65490748, -65508839, -65477256, -65498203, -65498644, -65479023, -65513492, -65500989, -65494184, -65486557, -65483513 };
		int[] output0 = new int[]{ -4298, -4298, -4298, -4298, -4298, -4298, -4298, -4298, -4298, -4298, -4298, -4298, -4298, -4298, -4298, -4298, -4298, -4298, -4298, -4298, -4298, -4298, -4298, -4298, -4298, -20758, -2403, -14178763, -204171, 56763, -13710, -434434, -319365, 134941, 1688958, 258636, -25657, -80318, -424213, 35055, -32812803, -4604, 150450, 1954706, 3109, -15576597, 412635, 400021, 9314085, -309929, -59700, 99805, 287411, 71739, -21015, 39977, -47527, 11102, 24424, -37897, 86898, 60993, 36760, -56196, 93331, -12247, -75407, -57273, 93623, -132186, 27224, -56256, 50366, 140909, -51822, -65503, -65532, -65514, -65493, -65546, -65562, -65482, -65532, -65527, -65544, -65527, -65510, -65577, -65559, -65548, -65533, -65530, -65541, -65557, -65538, -65518, -65524, -65561, -65525, -65532 };
		for (int ndx = 0; ndx < 100; ndx++)
		{
			Util.Check("Fixed32.DivFast", Fixed32.DivFast(input0[ndx], input1[ndx]), output0[ndx], input0[ndx], input1[ndx]);
		}
	}

	// Fixed32.DivFastest
	public static void Fixed32_DivFastest()
	{
		int[] input0 = new int[]{ 4400, 4400, 4400, 4400, 4400, 4400, 4400, 4400, 4400, 4400, 4400, 4400, 4400, 4400, 4400, 4400, 4400, 4400, 4400, 4400, 4400, 4400, 4400, 4400, 4400, 55652432, 50127171, -63083933, -23464872, -61514088, 38499910, 35113106, 9162622, 55214328, -38287802, -47688187, -44483433, -34815520, 15960059, -10717432, 24347990, -38435980, -33277080, -58749509, 29776412, 57981087, -64876000, -40861146, -6462160, 9677902, -107775676, -602016884, -407648509, 39499071, -522366509, 900996017, 417010770, 146050687, 530730601, 542336680, 926597667, -106461512, 271439614, -142855827, -882305357, 901292709, -148376688, 474160692, 885596325, 1031807121, 544157189, 63995317, 842697990, -568792947, 491206897, 65535609, 65480193, 65528733, 65472514, 65515778, 65530757, 65491910, 65475381, 65522214, 65493278, 65535927, 65510304, 65489512, 65509670, 65492986, 65527528, 65479948, 65478835, 65496384, 65482920, 65471342, 65484854, 65500870, 65478496, 65485989 };
		int[] input1 = new int[]{ -67090, -67090, -67090, -67090, -67090, -67090, -67090, -67090, -67090, -67090, -67090, -67090, -67090, -67090, -67090, -67090, -67090, -67090, -67090, -67090, -67090, -67090, -67090, -67090, -67090, -974264, -282075245, 1426980, 620600142, -7450162, -207449, 535524, 77945514, -9570250, -63987526, 4585468, 557016499, -46715317, -2028326, 181196941, 1057609158, -90916, -148600, 176312, 352391, -4049261, -301931793, 156439970, 73461, -4911590, 877522521, 903386812, -888477791, -478129872, -753999285, -195680817, -943286657, -417249575, -2863854, -992220590, 857014893, 872516176, -619938950, -522211676, 622380926, 523071343, -291290402, 923022617, 217237287, 827126961, 103111350, -198999996, 324024268, -1046169522, -529038872, -65495959, -65509784, -65489551, -65493399, -65482307, -65503316, -65488144, -65475276, -65472017, -65480612, -65487530, -65481712, -65488447, -65523365, -65478193, -65507939, -65524941, -65498097, -65530016, -65522298, -65479354, -65475294, -65492193, -65487339, -65471409 };
		int[] output0 = new int[]{ -4299, -4299, -4299, -4299, -4299, -4299, -4299, -4299, -4299, -4299, -4299, -4299, -4299, -4299, -4299, -4299, -4299, -4299, -4299, -4299, -4299, -4299, -4299, -4299, -4299, -3742754, -11651, -2896121, -2479, 541191, -12166007, 4297939, 7704, -378187, 39199, -681819, -5236, 48825, -515478, -3875, 1508, 27696747, 14679679, -21829013, 5535529, -938043, 14085, -17120, -5766753, -129146, -8053, -43690, 30080, -5415, 45389, -301710, -28979, -22945, -12140624, -35815, 70878, -8000, -28700, 17921, -92920, 112883, 33395, 33677, 267260, 81765, 345903, -21075, 170428, 35618, -60834, -65553, -65484, -65553, -65493, -65547, -65541, -65517, -65514, -65564, -65526, -65562, -65542, -65515, -65500, -65528, -65533, -65469, -65494, -65480, -65474, -65506, -65523, -65522, -65505, -65528 };
		for (int ndx = 0; ndx < 100; ndx++)
		{
			Util.Check("Fixed32.DivFastest", Fixed32.DivFastest(input0[ndx], input1[ndx]), output0[ndx], input0[ndx], input1[ndx]);
		}
	}

	// Fixed64.SqrtPrecise
	public static void Fixed64_SqrtPrecise()
	{
		long[] input0 = new long[]{ 33651457L, 165360L, 58368L, 2270536358327075L, 30474L, 284591869681139L, 5959767458658L, 202625232949409L, 670549365619279L, 440721L, 939658L, 4L, 34080328897611L, 231791541393L, 6384621854237815L, 40534046803124L, 9452456170L, 96011L, 188568224L, 35L, 11165846481464L, 17512347047135302L, 959425L, 151526L, 345727782935L, 2508L, 780544790803240L, 23094715823L, 1547499L, 77L, 768011L, 102259L, 4L, 1830548L, 323451067073680L, 13729L, 1L, 47668L, 419156463742076L, 12583563L, 56106400245L, 36350326L, 909944472L, 2640379417L, 780300498701708L, 10013855561L, 95L, 1474310958464414L, 14L, 14L, 166045827222L, 1140442309212781L, 37732001270121160L, 1786L, 767812L, 8861745207L, 794841363890574208L, 1776427589588485376L, 6567L, 12L, 1681451675586752256L, 258L, 130937191L, 8647731910433L, 2646400000627667968L, 9L, 1L, 18617554L, 3304826972138647L, 465018416602L, 21813979514860L, 198293L, 1056350093L, 14L, 2941729146L, 307173L, 19245511L, 1675732222934026L, 895542669L, 34L, 26L, 2441565992463964672L, 1617303836L, 108544L, 2153576499L, 3105663535L, 12498358L, 11012794804788844L, 2L, 36499L, 79660L, 4L, 7L, 34507247197152L, 34512704L, 217418108L, 1280280195565397248L, 485257665732197L, 4601194393L, 84917076966278L };
		long[] output0 = new long[]{ 380173522L, 26649874L, 15833150L, 3122799930093L, 11440490L, 1105582549151L, 159990644497L, 932881958696L, 1697052620188L, 43507266L, 63527949L, 131072L, 382588418606L, 31552132887L, 5236577323145L, 417243820078L, 6371655210L, 20306750L, 899941306L, 387716L, 218990742886L, 8672655754937L, 64192670L, 25510766L, 38534264246L, 3282038L, 1830959953020L, 9959470325L, 81525809L, 575076L, 57433284L, 20957076L, 131072L, 88668730L, 1178648274481L, 7678906L, 65536L, 14308476L, 1341738910399L, 232477937L, 15523374444L, 395124614L, 1976912175L, 3367542612L, 1830673406967L, 6558138618L, 638765L, 2516369875582L, 245213L, 245213L, 26705081867L, 2213179256419L, 12730188980050L, 2769623L, 57425842L, 6169352141L, 58427884296952L, 87348144805683L, 5310842L, 227023L, 84981056456421L, 1052664L, 749913963L, 192721887028L, 106612388843089L, 196608L, 65536L, 282775150L, 3767508960078L, 44690478754L, 306088759368L, 29183247L, 2130020915L, 245213L, 3554522538L, 36322141L, 287504504L, 2682762586282L, 1961205362L, 382137L, 334169L, 102403349987480L, 2635577182L, 21591501L, 3041305744L, 3652221695L, 231689531L, 6877469994418L, 92681L, 12520463L, 18496948L, 131072L, 173391L, 384977269701L, 385007707L, 966335171L, 74153634905309L, 1443664020627L, 4445444796L, 603917269534L };
		for (int ndx = 0; ndx < 100; ndx++)
		{
			Util.Check("Fixed64.SqrtPrecise", Fixed64.SqrtPrecise(input0[ndx]), output0[ndx], input0[ndx]);
		}
	}

	// Fixed64.Sqrt
	public static void Fixed64_Sqrt()
	{
		long[] input0 = new long[]{ 9095075503L, 23764092861285L, 2057311711410040576L, 141615432L, 3014038L, 837373L, 1079606L, 2517937712157514L, 2800989634576L, 2L, 460L, 474L, 1983632549L, 190L, 2142101412386698240L, 3175964609147991040L, 735842395700L, 1206L, 4015L, 852120640L, 3390576793862L, 461L, 7809022L, 90543941763L, 5837486L, 4522073487184L, 27319L, 141174835852133L, 2002375832832L, 13L, 1106465L, 182901299218L, 364195L, 48635230476085L, 17505978094L, 5074859L, 1L, 11L, 166080012306449632L, 2571L, 2876L, 22891156931L, 3931L, 4398593901653256192L, 79L, 167L, 11214909939L, 175970659655327296L, 74289941882918L, 50114461L, 1362607072097965L, 1061325242289329L, 120845502164L, 5L, 25L, 19726457L, 3043158L, 22721693L, 24L, 3073767151766L, 30L, 35266948632L, 1257L, 207016295037L, 10418219961080L, 11610013793L, 6006224085964017L, 188091850401431L, 50111173342L, 422100611011L, 2676130485758479360L, 64432320614L, 33496L, 1L, 296218L, 148L, 540792778400686080L, 8187334L, 1142246571L, 34758L, 403L, 715956L, 1L, 39956L, 45792L, 4807831921L, 1L, 67447L, 1941911918162L, 887L, 1L, 240872599150L, 2170981060549575168L, 54031L, 83L, 376167095060L, 18204064L, 87587321428L, 422202L, 31486655294L };
		long[] output0 = new long[]{ 6250044636L, 319477692672L, 94000460070912L, 779893415L, 113776953L, 59970739L, 68094582L, 3288534450176L, 109682077952L, 92681L, 1405590L, 1426819L, 2918841692L, 903351L, 95917961445376L, 116793252773888L, 56217604000L, 2275902L, 4152624L, 1913068289L, 120674838272L, 1407117L, 183137908L, 19720124064L, 158340804L, 139363396224L, 10832091L, 778679175680L, 92736933568L, 236293L, 68936432L, 28027756208L, 39550038L, 457041262592L, 8671077904L, 147635882L, 65536L, 217358L, 26707829932032L, 3323004L, 3514587L, 9915481456L, 4108955L, 137447505723392L, 582496L, 846911L, 6940293536L, 27491602087936L, 564865398784L, 463939611L, 2419163676672L, 2135030944768L, 22782174400L, 146542L, 327680L, 291074723L, 114325257L, 312392256L, 321059L, 114898776576L, 358955L, 12307330176L, 2323526L, 29818252672L, 211532310528L, 7061488980L, 5079029084160L, 898803842560L, 14670577792L, 42578261056L, 107209574514688L, 16635345176L, 11994340L, 65536L, 35668565L, 797279L, 48194266136576L, 187521550L, 2214929444L, 12218203L, 1315626L, 55452749L, 65536L, 13099988L, 14024091L, 4544169748L, 65536L, 17020065L, 91326053312L, 1951828L, 65536L, 32164264736L, 96562376409088L, 15233560L, 597061L, 40194841568L, 279617348L, 19395480464L, 42583373L, 11629022120L };
		for (int ndx = 0; ndx < 100; ndx++)
		{
			Util.Check("Fixed64.Sqrt", Fixed64.Sqrt(input0[ndx]), output0[ndx], input0[ndx]);
		}
	}

	// Fixed64.SqrtFast
	public static void Fixed64_SqrtFast()
	{
		long[] input0 = new long[]{ 128951L, 274970144941838L, 3511605L, 176L, 86360573L, 21147L, 31684699796L, 77397985057L, 84065364490671L, 779785831217999232L, 168220127L, 1714122092274355968L, 91736162583584640L, 3218748656684893L, 7623056520L, 197435621340973L, 18558403475L, 145136482876387072L, 4520728L, 2166L, 7670902027L, 89050628530L, 96L, 56467336L, 253114192111L, 11110149L, 136869748664L, 2858987290898613760L, 85816683474394672L, 3631541868456L, 37522971064749L, 6174327L, 19L, 167298891949102656L, 1243055350502264832L, 6762636L, 940243843344224000L, 49793535793787560L, 2133667482878170L, 2L, 699776592210393856L, 90181276L, 3700046422L, 11484548299654L, 24328707825906L, 4L, 12108952090854L, 674L, 32687145375499L, 1959851L, 20L, 578430909L, 19374L, 194L, 4L, 6678045924016L, 2838867289900L, 286792717850438624L, 3206692176L, 7L, 712556205727L, 51108966981L, 4159275225918L, 23L, 20781L, 27L, 88393342392530960L, 2528757802529893888L, 11941429776934630L, 1127L, 968377619192085L, 1718808043398L, 68L, 2087753L, 14280L, 85L, 24L, 38894327L, 10703800109223L, 56415576930L, 4231292583269L, 202926376L, 87465L, 43787350282L, 179164047353L, 64870L, 318L, 458992752488196352L, 40758009939162776L, 186140L, 10985773843526L, 3L, 15528006L, 274492895521279L, 14014248L, 13691855L, 99990432793551L, 159838401L, 552631705L, 892957363513L };
		long[] output0 = new long[]{ 23533976L, 1086742148608L, 122808551L, 869439L, 609035103L, 9530352L, 11665616112L, 18232340656L, 600883465216L, 57872410673152L, 850008020L, 85802415161344L, 19849734963200L, 3718130960384L, 5721950604L, 920862970880L, 8927827680L, 24967041908736L, 139341224L, 3050032L, 5739886488L, 19557038800L, 642116L, 492464146L, 32971675504L, 218446143L, 24245694016L, 110812760637440L, 19198503059456L, 124888064768L, 401442987776L, 162844870L, 285665L, 26805645230080L, 73066899111936L, 170424995L, 63547067400192L, 14624112181248L, 3027246761984L, 92681L, 54822944899072L, 622360895L, 3986399446L, 222096416896L, 323252965888L, 131072L, 228053367680L, 1701431L, 374689852416L, 91747733L, 293088L, 1576163156L, 9122012L, 912805L, 131072L, 169356581632L, 110422387776L, 35096606261248L, 3711137122L, 173391L, 55321527936L, 14815869968L, 133657465280L, 314300L, 9447514L, 340532L, 19484666281984L, 104214866624512L, 7161641656320L, 2200078L, 2039386287104L, 85919094976L, 540417L, 94693575L, 7831449L, 604218L, 321058L, 408717051L, 214413329920L, 15565921520L, 134809680832L, 933569964L, 19382127L, 13713830512L, 27740228336L, 16691831L, 1168684L, 44399530606592L, 13230747508736L, 28274921L, 217219724160L, 113511L, 258250403L, 1085799013376L, 245335617L, 242497024L, 655331036672L, 828556376L, 1540615546L, 61928507904L };
		for (int ndx = 0; ndx < 100; ndx++)
		{
			Util.Check("Fixed64.SqrtFast", Fixed64.SqrtFast(input0[ndx]), output0[ndx], input0[ndx]);
		}
	}

	// Fixed64.SqrtFastest
	public static void Fixed64_SqrtFastest()
	{
		long[] input0 = new long[]{ 234L, 22083050025326L, 260478L, 28997721107L, 9333360670L, 54384174L, 8503576L, 42796990919260232L, 62920369520957264L, 222540861593516832L, 277472268734L, 72989L, 26793L, 262130749702385440L, 8471928L, 3511L, 584334L, 94L, 595847211L, 1477379695283365120L, 394267689963570304L, 888123699173627136L, 62L, 64152747837L, 473197239L, 295374068418079L, 110690L, 1142821L, 687019718211932544L, 4809965807829971L, 3923117L, 694397932541L, 324571362247852416L, 11L, 241013514L, 883636672640703104L, 779L, 13910126924590L, 4L, 3294L, 35180646962044140L, 34340L, 7L, 844623064858477440L, 3093721474712L, 150512243L, 564289514471137L, 273185381L, 32400283L, 3991L, 23L, 1052663232844L, 1237103250758249984L, 1725056812L, 10444779253268L, 1215L, 355930161251L, 18724784997783L, 61L, 145722097878803L, 491L, 7L, 287278922891458400L, 13L, 56725511731L, 1842768997799673088L, 1037070L, 2235L, 1087618469L, 44214865L, 4L, 193727159713L, 20L, 180865L, 41L, 11481214452327L, 121747175809189216L, 338L, 95629917775080224L, 3L, 2413960257273833984L, 1868589735862144L, 162663235296828000L, 172139297807365L, 205277596424518L, 17187061049302L, 2588583640666L, 188151114L, 5292583L, 198288L, 2482612L, 191870859L, 226991412320L, 148472L, 6L, 4728034799537487L, 551263L, 2571727917487812608L, 14889650L, 7742300899827L };
		long[] output0 = new long[]{ 1002416L, 307972023808L, 33447027L, 11159755728L, 6330789244L, 483313779L, 191103367L, 13557015158784L, 16438098108416L, 30918365757440L, 34520803776L, 17703868L, 10727520L, 33550600994816L, 190748797L, 3883115L, 50092202L, 635454L, 1599582214L, 79659379195904L, 41153757380608L, 61765938839552L, 515995L, 16597635480L, 1425518714L, 1126245143552L, 21803519L, 70053165L, 54317954072576L, 4544774070272L, 129793909L, 54612082688L, 37333284880384L, 217375L, 1017338727L, 61609911091200L, 1829297L, 244438152320L, 131072L, 3761475L, 12291564437504L, 12143599L, 173382L, 60235494031360L, 115281587456L, 803944952L, 1556784754688L, 1083161367L, 373011576L, 4139944L, 314329L, 67233944352L, 72885870657536L, 2722065578L, 211790733952L, 2284258L, 39100080224L, 283563637248L, 511808L, 791071631872L, 1452062L, 173382L, 35125908946944L, 236299L, 15608933328L, 88968148549632L, 66737645L, 3097971L, 2161257244L, 435799047L, 131072L, 28847942672L, 293085L, 27873609L, 419645L, 222071280768L, 22866604916736L, 1204928L, 20267566186496L, 113521L, 101815239639040L, 2832946364416L, 26429335633920L, 859824890880L, 939057063424L, 271679248128L, 105435059008L, 899025956L, 150771038L, 29185358L, 103254867L, 907873678L, 31223999504L, 25250184L, 160543L, 4505955602432L, 48654767L, 105087762366464L, 252866483L, 182342297984L };
		for (int ndx = 0; ndx < 100; ndx++)
		{
			Util.Check("Fixed64.SqrtFastest", Fixed64.SqrtFastest(input0[ndx]), output0[ndx], input0[ndx]);
		}
	}

	// Fixed32.SqrtPrecise
	public static void Fixed32_SqrtPrecise()
	{
		int[] input0 = new int[]{ 20, 430831, 562659642, 928422351, 47, 24667, 205740, 2016140, 7281, 1027261533, 303, 33170, 19789280, 8, 11413028, 1401, 24, 64, 722, 74171007, 1092, 94278332, 28351580, 112, 7, 290036, 997034937, 16708722, 236, 287, 5299, 257781175, 7230646, 164, 178829926, 3682, 53065418, 259792193, 381268, 802, 30, 681583049, 4, 2918, 3, 63437399, 812475, 102186, 49376, 3731171, 3512470, 30, 2262419, 65577, 3910, 233, 16316609, 10029398, 241412501, 177008, 26565, 13221385, 17060, 50, 387660, 1264, 4925772, 241301, 48, 6198, 28361, 101, 181118, 966494536, 4918874, 1721, 46268469, 19427, 56, 130, 383302609, 19513, 676, 68017, 87844, 351, 227, 220, 45032141, 1530399, 242323, 10, 2, 4, 32434815, 2449, 79903, 86341027, 8084227, 3362967 };
		int[] output0 = new int[]{ 1144, 168032, 6072434, 7800326, 1755, 40206, 116117, 363496, 21844, 8205035, 4456, 46624, 1138819, 724, 864849, 9582, 1254, 2048, 6878, 2204738, 8459, 2485683, 1363102, 2709, 677, 137868, 8083420, 1046433, 3932, 4336, 18635, 4110224, 688380, 3278, 3423419, 15533, 1864857, 4126226, 158072, 7249, 1402, 6683429, 512, 13828, 443, 2038978, 230751, 81834, 56885, 494495, 479784, 1402, 385058, 65556, 16007, 3907, 1034081, 810732, 3977588, 107705, 41724, 930847, 33437, 1810, 159391, 9101, 568168, 125753, 1773, 20154, 43112, 2572, 108948, 7958654, 567770, 10620, 1741335, 35681, 1915, 2918, 5011997, 35760, 6656, 66764, 75874, 4796, 3857, 3797, 1717913, 316695, 126019, 809, 362, 512, 1457960, 12668, 72363, 2378748, 727879, 469462 };
		for (int ndx = 0; ndx < 100; ndx++)
		{
			Util.Check("Fixed32.SqrtPrecise", Fixed32.SqrtPrecise(input0[ndx]), output0[ndx], input0[ndx]);
		}
	}

	// Fixed32.Sqrt
	public static void Fixed32_Sqrt()
	{
		int[] input0 = new int[]{ 25, 6, 4242, 15, 263, 69537, 178722, 2513468, 14314913, 4, 5423, 1679, 353935, 3708680, 495852, 2, 39071, 269317139, 619476, 2205, 11, 44673, 5753558, 33798, 27466793, 5360, 93, 84086, 59, 4016, 23129376, 575397259, 2580348, 18094, 10, 113838844, 9, 84, 517, 2, 2112358, 97349, 16541, 19818583, 564, 288, 32102, 623, 9328, 23825793, 67307488, 318566, 278, 7332, 606183, 619083, 1256, 134776649, 622, 52706702, 1481, 4, 84350, 7127, 210, 10120, 698979, 39, 733753, 4676943, 317786103, 919, 1041826, 490372, 1120898, 122381, 5, 311719351, 119, 190394, 179284799, 161764520, 18, 2685, 64078, 145, 4128336, 703, 32051936, 17532, 181165, 73, 146483126, 10532, 1831228, 993832, 2, 4, 187882, 59874553 };
		int[] output0 = new int[]{ 1280, 627, 16673, 991, 4151, 67506, 108225, 405860, 968577, 512, 18852, 10489, 152300, 493003, 180266, 362, 50601, 4201186, 201489, 12021, 849, 54108, 614056, 47063, 1341664, 18742, 2468, 74233, 1966, 16223, 1231181, 6140784, 411224, 34435, 809, 2731399, 767, 2346, 5820, 362, 372069, 79874, 32924, 1139662, 6079, 4344, 45867, 6389, 24724, 1249578, 2100253, 144490, 4268, 21920, 199315, 201425, 9072, 2971989, 6384, 1858544, 9851, 512, 74350, 21611, 3709, 25753, 214028, 1598, 219288, 553631, 4563598, 7760, 261298, 179268, 271033, 89556, 572, 4519827, 2792, 111703, 3427770, 3255979, 1086, 13265, 64802, 3082, 520148, 6787, 1449329, 33896, 108962, 2187, 3098373, 26272, 346426, 255209, 362, 512, 110964, 1980893 };
		for (int ndx = 0; ndx < 100; ndx++)
		{
			Util.Check("Fixed32.Sqrt", Fixed32.Sqrt(input0[ndx]), output0[ndx], input0[ndx]);
		}
	}

	// Fixed32.SqrtFast
	public static void Fixed32_SqrtFast()
	{
		int[] input0 = new int[]{ 443219, 1641, 911856, 2141663, 80503052, 146364, 328325143, 610374, 7023736, 9, 229224, 4328, 2250437, 3512263, 315661957, 9833, 253187581, 62, 119435521, 2, 2632309, 1986, 1310, 83, 51, 8672028, 6741, 197, 287530054, 2, 106038, 2, 3318, 2148, 461248765, 218472, 354, 9038, 35822, 470084354, 474, 13, 107598, 6470900, 82127543, 83, 34968, 83, 35826, 372, 4214736, 39457879, 41, 129319, 45, 446, 2, 21788, 82959, 18, 43, 3319257, 2279362, 6227517, 100312, 196966, 2, 2095, 8176203, 2889, 55, 56024, 1882725, 272808302, 6569948, 389187, 19820509, 217458, 1094, 662355453, 495, 161, 5929021, 1543985, 574, 2885568, 59893969, 27551305, 94, 2066981, 174445, 17484782, 116983789, 3858, 21652683, 153620, 6372, 18551985, 129, 833 };
		int[] output0 = new int[]{ 170429, 10370, 244456, 374638, 2296932, 97938, 4638687, 200003, 678453, 767, 122565, 16841, 384033, 479765, 4548328, 25385, 4073479, 2015, 2797734, 362, 415348, 11408, 9265, 2332, 1828, 753869, 21018, 3593, 4340871, 362, 83361, 362, 14745, 11864, 5497999, 119655, 4816, 24337, 48451, 5550426, 5573, 923, 83972, 651206, 2319997, 2332, 47870, 2332, 48454, 4937, 525562, 1608079, 1639, 92060, 1717, 5406, 362, 37787, 73735, 1086, 1678, 466397, 386493, 638846, 81079, 113614, 362, 11717, 732014, 13759, 1898, 60593, 351264, 4228306, 656170, 159704, 1139720, 119377, 8467, 6588537, 5695, 3248, 623351, 318097, 6133, 434869, 1981215, 1343712, 2482, 368053, 106923, 1070448, 2768859, 15901, 1191243, 100337, 20434, 1102634, 2907, 7388 };
		for (int ndx = 0; ndx < 100; ndx++)
		{
			Util.Check("Fixed32.SqrtFast", Fixed32.SqrtFast(input0[ndx]), output0[ndx], input0[ndx]);
		}
	}

	// Fixed32.SqrtFastest
	public static void Fixed32_SqrtFastest()
	{
		int[] input0 = new int[]{ 64, 33, 10954, 24, 13, 150, 41, 164, 21135020, 125509, 24177, 12367, 39, 134484, 40192771, 288418889, 601115315, 2, 21673, 37326958, 3531091, 101, 44, 7, 17786687, 3403, 514228, 975, 25, 85, 122, 2, 3371, 2, 20647607, 29, 15844969, 478221, 229783, 7, 137684, 729382, 2, 807892, 170, 28, 878162, 1739, 103090, 80609808, 274404, 4316, 1711, 3711, 253581, 677469702, 807575885, 2769, 1496, 4239049, 314168, 46123897, 13, 494184, 2055, 22630, 7, 30, 6993647, 2704703, 36, 2513, 13796, 5674, 542, 9, 78, 58980, 49681205, 1261025, 4162078, 591, 10163242, 335, 334697, 30385667, 1340189, 975321655, 11112, 32725006, 39, 11443, 638, 58203703, 26107, 3205224, 111911, 5664, 786, 8112663 };
		int[] output0 = new int[]{ 2048, 1470, 26794, 1254, 923, 3135, 1639, 3278, 1176913, 90686, 39809, 28471, 1598, 93875, 1622911, 4347224, 6275944, 362, 37689, 1563906, 481048, 2572, 1698, 677, 1079569, 14933, 183567, 7992, 1280, 2360, 2827, 362, 14863, 362, 1163235, 1378, 1018932, 177017, 122708, 677, 94983, 218652, 362, 230117, 3338, 1354, 239896, 10675, 82200, 2298349, 134092, 16816, 10589, 15593, 128904, 6663295, 7275613, 13472, 9902, 527065, 143483, 1738753, 923, 179946, 11604, 38513, 677, 1402, 677003, 421030, 1535, 12832, 30068, 19285, 5959, 767, 2260, 62166, 1804580, 287464, 522258, 6223, 816097, 4685, 148106, 1411031, 296369, 7994210, 26987, 1464381, 1598, 27387, 6466, 1952964, 41365, 458356, 85637, 19268, 7177, 729105 };
		for (int ndx = 0; ndx < 100; ndx++)
		{
			Util.Check("Fixed32.SqrtFastest", Fixed32.SqrtFastest(input0[ndx]), output0[ndx], input0[ndx]);
		}
	}

	// Fixed64.RSqrt
	public static void Fixed64_RSqrt()
	{
		long[] input0 = new long[]{ 17L, 3454016975L, 90841073768L, 4269197970923811L, 36783642211832L, 22759L, 384539147398904128L, 355772843740779776L, 61L, 2790391960L, 683293859971081L, 697426300L, 3710800735L, 2566068639350L, 1L, 671186L, 25L, 4443430136218041L, 2L, 5610414091L, 748904279435776L, 19L, 15233154982855L, 170243178598765024L, 21758744173L, 21115447693629L, 18L, 81940059816L, 176518734708751904L, 39833227913L, 9499099220L, 484223354105033L, 10207L, 48L, 140922644145L, 9326L, 9720928164694L, 234684213693103136L, 7158097797L, 6465066L, 27087418490699544L, 37030905549880L, 61471872795324384L, 167614677985954080L, 3L, 3895600993137L, 134192262649700128L, 406360067454L, 8716325626880237L, 938L, 726276495239L, 14679208176435L, 10438585L, 289610243269815L, 826355741861624576L, 4150009186903452160L, 1045669253253058L, 2460777067506L, 196206L, 1L, 1217L, 4692932L, 2L, 7071875621L, 1354698091761472768L, 1L, 68325L, 77064547L, 18L, 514222121756579L, 318416257570L, 498L, 620755L, 1640981616711L, 955183980710L, 20L, 1483L, 419119188695753L, 43950517837344800L, 25758412235093256L, 725658938740343L, 212217291L, 43353339971361L, 188141681946824L, 252931688470189760L, 2984279706243741L, 46387833L, 162540171L, 268L, 156599891329L, 41132817L, 3L, 1196110792272L, 4109066708L, 5311L, 5771960296L, 18373095945307L, 8692442L, 570596704647264000L, 2L };
		long[] output0 = new long[]{ 68267709366272L, 4789360840L, 933896328L, 4307910L, 46410092L, 1865791911936L, 453909L, 471903L, 36039177666560L, 5328527232L, 10768024L, 10658366144L, 4620680864L, 175713712L, 281474976710656L, 343572456448L, 56294995394560L, 4222606L, 199032864768000L, 3757875092L, 10285529L, 64574788337664L, 72118197L, 682189L, 1908195558L, 61254732L, 66344288256000L, 983312730L, 669953L, 1410317940L, 2888009240L, 12791365L, 2786061774848L, 40627413385216L, 749806820L, 2914688131072L, 90278830L, 581029L, 3326909424L, 110701449856L, 1710235L, 46254888L, 1135276L, 687517L, 162509653540864L, 142610846L, 768380L, 441554462L, 3014901L, 9190483771392L, 330284963L, 73466352L, 87120224128L, 16539897L, 309639L, 138170L, 8704475L, 179433558L, 635453319168L, 281474976710656L, 8068531617792L, 129932464000L, 199032864768000L, 3347129256L, 241834L, 281474976710656L, 1076836997120L, 32063613888L, 66344288256000L, 12412647L, 498818054L, 12613195350016L, 357256127488L, 219729283L, 288002514L, 62939718156288L, 7309189472256L, 13748997L, 1342634L, 1753800L, 10448970L, 19321881248L, 42749251L, 20520941L, 559677L, 5152524L, 41327368576L, 22077984800L, 17193820979200L, 711285685L, 43887976640L, 162509653540864L, 257367721L, 4391048104L, 3862350151680L, 3704913888L, 65667218L, 95470429568L, 372627L, 199032864768000L };
		for (int ndx = 0; ndx < 100; ndx++)
		{
			Util.Check("Fixed64.RSqrt", Fixed64.RSqrt(input0[ndx]), output0[ndx], input0[ndx]);
		}
	}

	// Fixed64.RSqrtFast
	public static void Fixed64_RSqrtFast()
	{
		long[] input0 = new long[]{ 57015252L, 1741296958L, 22316369212L, 16L, 13588461275L, 1456574507L, 23647318L, 29335781021073L, 303L, 40860631014865768L, 2796988341919273L, 2L, 258206996301709L, 35127974L, 11070L, 26449551643407L, 499207903042L, 49403L, 128941020098L, 453L, 140286999305L, 1938574231989143L, 286780L, 536235745L, 12501504L, 80604589528L, 1922461302L, 696686295816609L, 308937087L, 165L, 5076207L, 787184080058730L, 3387411961584512L, 16011059078942588L, 451781081L, 416734L, 43854782373921784L, 2557642683352L, 13845L, 173648300L, 126199497L, 7292327553150L, 536085L, 30329L, 258202552547751L, 16486621L, 70554L, 34050L, 371160L, 926136678L, 53321408651464920L, 371899542L, 310892653845696L, 1256973916538297L, 90237331L, 135633929539L, 6071L, 41L, 6252880502392L, 777446014435063552L, 3494095971185164288L, 156532443386L, 94957L, 1L, 8049440622L, 3L, 3396L, 74371694516498864L, 358578957846611968L, 122512849469628304L, 2781384854850157L, 900121866800951936L, 3L, 742L, 16588422953692L, 88717846058109264L, 3616168086L, 9L, 9577561743927L, 3496957496021131776L, 1142437L, 56459L, 1877049361L, 1538348368443906816L, 14312L, 62946770685407000L, 2L, 2L, 177432764L, 15360997824022790L, 68L, 1053778134332970L, 1886337824373401088L, 82130L, 229189881L, 3718030870448915L, 76795993L, 292597L, 17376182689089L, 72668496950776L };
		long[] output0 = new long[]{ 37276855232L, 6745334104L, 1884187184L, 70368744177664L, 2414668756L, 7375196688L, 57883221120L, 51968211L, 16170133848064L, 1392472L, 5322163L, 199032864768000L, 17516742L, 47491896640L, 2675258486784L, 54731432L, 398377818L, 1266395179008L, 783873180L, 13224662810624L, 751511342L, 6392823L, 525616457728L, 12155211792L, 79609507968L, 991415582L, 6419564816L, 10663871L, 16014096160L, 21912567185408L, 124929247744L, 10032399L, 4836285L, 2224456L, 13242550048L, 436026332160L, 1344080L, 176001532L, 2392151994368L, 21359950080L, 25056070592L, 104232740L, 384439200768L, 1616254697472L, 17516892L, 69323358592L, 1059702845440L, 1525412567040L, 462022808064L, 9249032320L, 1218976L, 14595845696L, 15963829L, 7939220L, 29630974240L, 764294071L, 3612567289856L, 43958502948864L, 112565225L, 319230L, 150583L, 711436992L, 913444058112L, 281474976710656L, 3137316160L, 162511981117440L, 4830069604352L, 1032147L, 470046L, 804162L, 5337070L, 296683L, 162511981117440L, 10333406248960L, 69109819L, 944991L, 4680705176L, 93825056636928L, 90952868L, 150522L, 263346582016L, 1184587927552L, 6496742664L, 226939L, 2352791003136L, 1121880L, 199032864768000L, 199032864768000L, 21131019616L, 2271040L, 34134324445184L, 8670942L, 204941L, 982161398784L, 18592453376L, 4616164L, 32119501888L, 520362646016L, 67525417L, 33019647L };
		for (int ndx = 0; ndx < 100; ndx++)
		{
			Util.Check("Fixed64.RSqrtFast", Fixed64.RSqrtFast(input0[ndx]), output0[ndx], input0[ndx]);
		}
	}

	// Fixed64.RSqrtFastest
	public static void Fixed64_RSqrtFastest()
	{
		long[] input0 = new long[]{ 4853L, 4375011L, 437918L, 13971391L, 1535584535691L, 273187002594163744L, 104227827L, 418687405160L, 75L, 4690671115L, 37L, 642L, 20038838L, 8246117266392L, 680514932423L, 61886442985249L, 83L, 284664L, 590338505803770L, 589728311220L, 1L, 1260L, 419154234L, 23L, 1785031246028442L, 2L, 2200602338759572480L, 200353741725280L, 14941178505996L, 20575568323365808L, 1155240559L, 12358L, 2509539L, 607810941996120576L, 720455550516472L, 1204240060503141120L, 594573856930600448L, 134L, 1001799L, 241613L, 603934399L, 27889175L, 164013771927747136L, 174445016005858016L, 409543174741095L, 492901646085719616L, 52586786L, 228754L, 556578341968L, 17078890323081L, 44584543118404L, 269L, 2285752761L, 29L, 51784247050568L, 3L, 48135458808975448L, 18759L, 36095542455L, 581784072171L, 572503563269751424L, 2399086798641L, 129230425276970800L, 16983L, 4L, 13995921271447840L, 1180051732410507L, 152042066L, 52783969360044272L, 2606059457843L, 480009069552132L, 2862545330232657408L, 1310422702752802560L, 2443315788L, 976L, 232045187640L, 35439L, 11080899695L, 262860L, 16701108030655298L, 231470153237L, 9619923169455L, 359L, 4034455559551830016L, 461L, 4282195L, 24934947223027L, 85170L, 11737L, 187081475436020L, 25L, 31694065663361L, 17164935960L, 7941067167879L, 1946269L, 1160923326400534L, 995246443L, 9657200748866L, 42963139593879872L, 134945352739934544L };
		long[] output0 = new long[]{ 4042447814656L, 134630786048L, 425297214976L, 75293634944L, 227023843L, 538881L, 27554756000L, 434728744L, 32519326826496L, 4112495828L, 46301444571136L, 11110412664832L, 62906408384L, 98085296L, 341284791L, 35792016L, 30892769050624L, 527900068352L, 11590436L, 366754825L, 281474976710656L, 7931725496320L, 13740759504L, 58654718623744L, 6658958L, 199032864768000L, 189863L, 19873733L, 72821387L, 1963522L, 8286483176L, 2530356707328L, 177758230784L, 361227L, 10486542L, 256614L, 365166L, 24327244349440L, 281397142016L, 572999711744L, 11461194208L, 53290941248L, 695465L, 674168L, 13899749L, 400956L, 38794150656L, 588668496896L, 377351221L, 68143958L, 42157399L, 17170384453632L, 5890779664L, 52297431515136L, 39088845L, 162402373468160L, 1282561L, 2056383260672L, 1482274612L, 369227159L, 372063L, 181844086L, 783370L, 2160753395712L, 140737488355328L, 2377871L, 8197818L, 22842202528L, 1224340L, 174444339L, 12848185L, 166399L, 246043L, 5698047552L, 9015499177984L, 584308298L, 1496141785088L, 2673771964L, 549027056128L, 2179463L, 585021064L, 90810932L, 14847517114368L, 140175L, 13116293922816L, 136055715456L, 56335217L, 964375827456L, 2596521185280L, 20573539L, 56263774961664L, 50023483L, 2148462328L, 99937782L, 201893258752L, 8264005L, 8928050512L, 90635955L, 1358585L, 766742L };
		for (int ndx = 0; ndx < 100; ndx++)
		{
			Util.Check("Fixed64.RSqrtFastest", Fixed64.RSqrtFastest(input0[ndx]), output0[ndx], input0[ndx]);
		}
	}

	// Fixed32.RSqrt
	public static void Fixed32_RSqrt()
	{
		int[] input0 = new int[]{ 33, 653476663, 5198, 521553109, 225548595, 6056178, 49, 1040779137, 208816026, 25, 15024950, 2545, 312345234, 2404392, 3, 342, 78708, 214732060, 10, 1635466, 38, 110837, 167, 28, 284765, 7, 14023, 551, 56, 2414, 25, 121709, 889553, 3576, 4604712, 679752, 909, 64, 8, 6249, 102, 3809082, 2080, 12, 677242376, 3802765, 14199352, 54713670, 1404826, 10, 565, 161712, 438702, 147, 10656395, 325933, 7792762, 371, 3663, 63267060, 863, 96188092, 36976928, 172959, 1051973743, 246, 3073102, 174672, 560664063, 4861, 403892943, 2436, 48017679, 1855559, 31945, 10889, 106, 26, 44, 80405856, 539, 275207, 421469, 11, 8, 170072, 297889638, 12072, 360353, 28, 93661062, 4, 18939355, 151, 14, 1142, 110608738, 12918916, 13, 5486014 };
		int[] output0 = new int[]{ 2920538, 656, 232702, 734, 1117, 6817, 2396745, 520, 1161, 3355443, 4328, 332564, 949, 10819, 9686330, 907207, 59801, 1144, 5305421, 13118, 2721623, 50393, 1298259, 3170595, 31439, 6341191, 141677, 714733, 2241949, 341468, 3355443, 48090, 17788, 280557, 7818, 20349, 556465, 2097152, 5931641, 212233, 1661191, 8596, 367864, 4843165, 644, 8603, 4452, 2268, 14154, 5305421, 705822, 41720, 25329, 1383761, 5139, 29387, 6009, 871029, 277205, 2109, 571103, 1710, 2759, 40341, 517, 1069676, 9570, 40142, 708, 240634, 834, 339923, 2421, 12316, 93868, 160777, 1629547, 3290282, 2529260, 1871, 722645, 31980, 25842, 5058520, 5931641, 40682, 972, 152696, 27948, 3170595, 1733, 8388608, 3855, 1365310, 4483899, 496462, 1595, 4667, 4653162, 7162 };
		for (int ndx = 0; ndx < 100; ndx++)
		{
			Util.Check("Fixed32.RSqrt", Fixed32.RSqrt(input0[ndx]), output0[ndx], input0[ndx]);
		}
	}

	// Fixed32.RSqrtFast
	public static void Fixed32_RSqrtFast()
	{
		int[] input0 = new int[]{ 2, 162, 104783524, 577, 27, 249249272, 3616106, 253860599, 4953379, 1957, 6119, 593077, 16, 48916, 234684, 3369869, 456, 6713413, 40510, 12370, 889, 509, 520470640, 39685312, 55736, 164822784, 138127, 632678, 256432, 55, 105714, 8853, 4, 8689, 64977841, 6, 2820113, 1458, 435324842, 36, 50500016, 2, 2616891, 368, 4957800, 315, 314647649, 774, 694486, 4611, 5, 32, 637, 1130788, 12328, 5219543, 335, 5, 11132949, 177, 3608, 11, 1979, 177225, 19878568, 742153817, 294025, 2066509, 808328, 70767, 2, 336001569, 16558835, 2202, 263033, 758, 208897, 2826735, 16, 352, 562461270, 356, 978180833, 111, 22, 6416, 27, 3830, 756817858, 24, 21232626, 1068079, 140680, 4918774, 10944160, 8835549, 1272736, 29, 19890, 7172904 };
		int[] output0 = new int[]{ 11863283, 1318125, 1638, 698444, 3228744, 1062, 8822, 1052, 7538, 379253, 214479, 21785, 4194304, 75857, 34631, 9139, 785654, 6475, 83355, 150848, 562681, 743641, 735, 2663, 71063, 1306, 45142, 21092, 33131, 2262209, 51600, 178311, 8388608, 179986, 2081, 6849367, 9990, 439385, 804, 2796204, 2360, 11863283, 10371, 874583, 7534, 945275, 945, 603052, 20131, 247071, 7502893, 2965820, 664728, 15777, 151105, 7343, 916630, 7502893, 5028, 1261058, 279306, 5058538, 377140, 39852, 3762, 615, 30940, 11670, 18660, 63068, 11863283, 915, 4122, 357533, 32712, 609384, 36707, 9978, 4194304, 894231, 707, 889196, 536, 1592400, 3576927, 209455, 3228744, 271094, 609, 3424683, 3640, 16233, 44731, 7564, 5071, 5644, 14871, 3115420, 118958, 6264 };
		for (int ndx = 0; ndx < 100; ndx++)
		{
			Util.Check("Fixed32.RSqrtFast", Fixed32.RSqrtFast(input0[ndx]), output0[ndx], input0[ndx]);
		}
	}

	// Fixed32.RSqrtFastest
	public static void Fixed32_RSqrtFastest()
	{
		int[] input0 = new int[]{ 1153434, 304, 1028616, 19, 3858, 16, 2136, 310918814, 8, 32, 49, 127406, 354178629, 63087, 337, 20, 12, 35, 15878, 6196, 53463503, 153, 2931878, 64931, 3578733, 2402, 4776, 6, 216099, 31965147, 639827, 14147, 284, 2396, 328549, 3694073, 372403, 99675497, 30946701, 2, 6, 95, 891, 46555134, 534975696, 333, 3238030, 4, 29113, 1081847, 1408299, 71494, 1997055, 6, 144058031, 15027, 111524, 31, 5888, 3, 3597511, 634, 2877, 288, 54562, 3792756, 896, 295581, 206179523, 98217, 58335, 135, 1235, 11383, 2063, 1115239, 184984278, 67620475, 130322, 21474, 796694, 2142, 248318, 214480301, 45, 17, 7606472, 88, 17862, 43, 66, 23507, 33852, 19267078, 832, 10160079, 35776318, 6, 1706, 282 };
		int[] output0 = new int[]{ 15631, 962693, 16548, 3850772, 270288, 4194304, 363172, 952, 5931641, 2965820, 2395250, 47025, 891, 66834, 913728, 3752080, 4839967, 2837723, 133213, 213001, 2293, 1356949, 9792, 65853, 8869, 342502, 242901, 6844748, 36082, 2969, 20980, 141079, 996207, 342935, 29273, 8732, 27476, 1679, 3017, 11863283, 6844748, 1720160, 562193, 2457, 725, 919273, 9317, 8388608, 98368, 16135, 14132, 62786, 11879, 6844748, 1398, 136946, 50240, 3014850, 218505, 9679935, 8846, 666454, 312613, 989255, 71814, 8619, 560649, 30879, 1167, 53498, 69493, 1444705, 477588, 157170, 369413, 15895, 1232, 2040, 46480, 114469, 18784, 362671, 33689, 1145, 2499598, 4071358, 6086, 1787633, 125613, 2557650, 2065860, 109357, 91219, 3824, 581452, 5265, 2806, 6844748, 406134, 999730 };
		for (int ndx = 0; ndx < 100; ndx++)
		{
			Util.Check("Fixed32.RSqrtFastest", Fixed32.RSqrtFastest(input0[ndx]), output0[ndx], input0[ndx]);
		}
	}

	// Fixed64.Exp
	public static void Fixed64_Exp()
	{
		long[] input0 = new long[]{ 387213581180L, -327202747152L, -324709624751L, 377533752775L, -304706310341L, -34155598215L, -256072724719L, -208683450697L, 182812318685L, -221763881103L, 27028062212L, 155686540272L, 73870834634L, 374208821174L, -101302561447L, -112151315452L, 174408648681L, -49929506223L, -350423659963L, -86674440240L, 399758354786L, -330565397153L, -309576421144L, 227155831505L, -117477370254L, -390657730381L, 193471027490L, 16914465807L, -317733136747L, 66184383030L, 281288373530L, 306200745142L, 22930097410L, -167306767477L, 271024L, 358814L, 247L, 7041621L, 172286159L, 24595398L, 4421065745L, 191115L, 114420L, 174L, 4108546L, 174120L, 2288513045L, 683514L, 27779L, 7855451018L, 4L, 13651L, 17787077920L, 9107825268L, 968L, 767275473L, 25988083013L, 6335L, 1341043L, 11L, 65359346L, 17939764L, 22L, 27L, 25467L, 15040084L, 43L, 966L, -32777L, -1382314699L, -34L, -4L, -12449223L, -16630L, -170224L, -96283L, -6296013L, -7526339113L, -32L, -1796419947L, -56L, -75L, -12L, -132L, -277578L, -46047L, -3087512937L, -1878723L, -1L, -15171079L, -593000L, -1676587003L, -5L, -14869960L, -16162406583L, -246L, -8539L, -4119L, -293613615L, -11732694021L };
		long[] output0 = new long[]{ 9223372036854775807L, 0L, 0L, 9223372036854775807L, 0L, 1510936L, 0L, 0L, 9223372036854775807L, 0L, 2322513143808L, 9223372036854775807L, 126637326343340032L, 9223372036854775807L, 0L, 0L, 9223372036854775807L, 38391L, 0L, 7L, 9223372036854775807L, 0L, 0L, 9223372036854775807L, 0L, 0L, 9223372036854775807L, 220445352832L, 0L, 21150970461290496L, 9223372036854775807L, 9223372036854775807L, 894507418112L, 0L, 4295238328L, 4295326124L, 4294967540L, 4302014732L, 4470756020L, 4319633392L, 12022785184L, 4295158416L, 4295081716L, 4294967464L, 4299077832L, 4295141416L, 7317581072L, 4295650864L, 4294995072L, 26747302480L, 4294967296L, 4294980944L, 270107710464L, 35802755072L, 4294968260L, 5135047532L, 1823049528320L, 4294973628L, 4296308556L, 4294967304L, 4360826784L, 4312944684L, 4294967312L, 4294967320L, 4294992760L, 4310033832L, 4294967336L, 4294968260L, 4294934512L, 3113037038L, 4294967254L, 4294967282L, 4282536152L, 4294950656L, 4294797068L, 4294871008L, 4288675922L, 744592382L, 4294967256L, 2826904742L, 4294967230L, 4294967212L, 4294967274L, 4294967156L, 4294689718L, 4294921242L, 2092953860L, 4293088986L, 4294967284L, 4279823048L, 4294374334L, 2906888288L, 4294967282L, 4280123112L, 99693026L, 4294967044L, 4294958750L, 4294963170L, 4011165136L, 279630365L };
		for (int ndx = 0; ndx < 100; ndx++)
		{
			Util.Check("Fixed64.Exp", Fixed64.Exp(input0[ndx]), output0[ndx], input0[ndx]);
		}
	}

	// Fixed64.ExpFast
	public static void Fixed64_ExpFast()
	{
		long[] input0 = new long[]{ -138866220264L, 85445812639L, -322926259950L, 50054149423L, 245886677514L, -424274386397L, 190372979088L, 57577825826L, -47509202622L, 268126990724L, -260986536321L, -386018517179L, -244728396313L, 176881986282L, 373735835574L, 50267814623L, 69088115832L, 367179879970L, 106375729849L, 408716686790L, 242690716713L, 55413378225L, -209278149897L, 214166694299L, -157445978273L, -191699922289L, 422022142396L, 423262679597L, -54217246225L, -200120279493L, -344500770760L, -172256015480L, -315684910347L, -261609175121L, 453804L, 1030312L, 3L, 601210L, 24776L, 239189L, 41992554L, 2886L, 35L, 180L, 124488L, 171737L, 8655472L, 7033L, 72868553L, 18611L, 7128369L, 50445L, 41167816L, 530884148L, 56L, 169079268L, 4448L, 9651L, 370L, 260987L, 1L, 56254761L, 24L, 77L, 38313169L, 3424667995L, 5785524450L, 1L, -70L, -8506L, -240598L, -2L, -293452L, -17L, -565L, -72475L, -28637L, -2L, -745L, -582970279L, -4357242L, -4934484L, -493L, -2L, -4161805L, -9599626L, -1594516L, -2073L, -2L, -115275838L, -231L, -16060906L, -1623L, -4077373982L, -166561L, -32060690638L, -119L, -19469301320L, -202557L, -1561249L };
		long[] output0 = new long[]{ 0L, 1874944362559832064L, 0L, 494639561572352L, 9223372036854775807L, 0L, 9223372036854775807L, 2851424880820224L, 67447L, 9223372036854775807L, 0L, 0L, 0L, 9223372036854775807L, 9223372036854775807L, 519870278795264L, 41586066410438656L, 9223372036854775807L, 9223372036854775807L, 9223372036854775807L, 9223372036854775807L, 1722647991812096L, 0L, 9223372036854775807L, 0L, 0L, 9223372036854775807L, 9223372036854775807L, 14147L, 0L, 0L, 0L, 0L, 0L, 4295421048L, 4295997556L, 4294967296L, 4295568444L, 4294992064L, 4295206448L, 4337159776L, 4294970176L, 4294967328L, 4294967472L, 4295091760L, 4295139004L, 4303630096L, 4294974324L, 4368448160L, 4294985900L, 4302100424L, 4295017732L, 4336327112L, 4860057252L, 4294967348L, 4467404076L, 4294971740L, 4294976940L, 4294967664L, 4295228244L, 4294967296L, 4351584408L, 4294967316L, 4294967368L, 4333446284L, 9533487344L, 16518721600L, 4294967296L, 4294967222L, 4294958788L, 4294726730L, 4294967288L, 4294673890L, 4294967272L, 4294966728L, 4294894826L, 4294938658L, 4294967288L, 4294966548L, 3749832260L, 4290612824L, 4290036282L, 4294966800L, 4294967288L, 4290808044L, 4285379612L, 4293373278L, 4294965218L, 4294967288L, 4181235160L, 4294967060L, 4278938390L, 4294965670L, 1662135126L, 4294800754L, 2460808L, 4294967174L, 46161661L, 4294764766L, 4293406532L };
		for (int ndx = 0; ndx < 100; ndx++)
		{
			Util.Check("Fixed64.ExpFast", Fixed64.ExpFast(input0[ndx]), output0[ndx], input0[ndx]);
		}
	}

	// Fixed64.ExpFastest
	public static void Fixed64_ExpFastest()
	{
		long[] input0 = new long[]{ 63740265829L, 114057919453L, -268080923924L, -111783513452L, 339703025958L, 92407557043L, 367718277171L, 84306473839L, 52991996224L, 178139645082L, -124840709458L, -172662585480L, -339644808358L, -71143964633L, 330728490754L, -98526047445L, -20969829809L, -348042119962L, 47363025822L, -380936816777L, -160318893874L, 91214988642L, 419768081995L, -72394867033L, -303066663941L, 282104680331L, 201853695893L, 94813304244L, 109012935050L, -196869550291L, -204618678695L, -41680079419L, 38692089018L, 161199952275L, 457L, 34981446851L, 49564L, 2474187071L, 30L, 1L, 55843467L, 29890294423L, 94905589L, 2759L, 19524L, 6584532391L, 1240359L, 2556444359L, 1L, 13L, 281232L, 11L, 24355L, 50752L, 726L, 19627586729L, 7059255L, 162435392L, 233L, 5L, 1897546312L, 2388L, 21238974285L, 1238L, 54693L, 4013883659L, 103926986L, 27121L, -59L, -3158564395L, -10831090985L, -1978948L, -14261626388L, -554387L, -3069L, -3086L, -1262534071L, -11796568L, -1L, -239L, -518L, -1097559604L, -1950309L, -347693L, -115729766L, -51L, -2L, -12L, -28209L, -1000L, -4955L, -13105467L, -10608506L, -5L, -32L, -23380L, -1L, -76631L, -2166733347L, -208920L };
		long[] output0 = new long[]{ 11971467134631936L, 9223372036854775807L, 0L, 0L, 9223372036854775807L, -8963206110886494208L, 9223372036854775807L, 1438016218551287808L, 980374476292096L, 9223372036854775807L, 0L, 0L, 0L, 274L, 9223372036854775807L, 0L, 32552053L, 0L, 264369208688640L, 0L, 0L, 7183549844437336064L, 9223372036854775807L, 205L, 0L, 9223372036854775807L, 9223372036854775807L, -1841439482671267840L, 9223372036854775807L, 0L, 0L, 262055L, 35106913042432L, 9223372036854775807L, 4294967752L, 14798071955456L, 4295017020L, 7641607912L, 4294967320L, 4294967296L, 4351338444L, 4522811351040L, 4391183368L, 4294970060L, 4294986880L, 19897055056L, 4296211896L, 7789410940L, 4294967296L, 4294967304L, 4295249460L, 4294967304L, 4294991728L, 4295018212L, 4294968020L, 414588682752L, 4302055212L, 4460884608L, 4294967528L, 4294967296L, 6680684204L, 4294969688L, 603427106816L, 4294968536L, 4295022168L, 10934626384L, 4400434532L, 4294994500L, 4294967234L, 2058771255L, 344921421L, 4292993706L, 155198411L, 4294414322L, 4294964232L, 4294964212L, 3200850818L, 4283215626L, 4294967290L, 4294967054L, 4294966778L, 3326309884L, 4293022262L, 4294620478L, 4181012152L, 4294967242L, 4294967290L, 4294967280L, 4294939152L, 4294966296L, 4294962350L, 4281913622L, 4284397760L, 4294967288L, 4294967262L, 4294943970L, 4294967290L, 4294890852L, 2593364518L, 4294758900L };
		for (int ndx = 0; ndx < 100; ndx++)
		{
			Util.Check("Fixed64.ExpFastest", Fixed64.ExpFastest(input0[ndx]), output0[ndx], input0[ndx]);
		}
	}

	// Fixed32.Exp
	public static void Fixed32_Exp()
	{
		int[] input0 = new int[]{ -4332533, -4507027, 2854292, -4909821, -4429695, 5509052, -4646524, 4880559, -5051715, 5779545, -5084690, 6278712, 3407710, 6539229, 4085792, -6260509, 2964018, -653998, 426413, -2827665, 4774388, 1984982, 6532535, 5044053, 601470, -2957556, 5654694, 5009175, -1339173, 5466651, -2435137, -1355525, 3762716, 155641, 3, 7, 10, 744, 191, 83787, 2, 16, 562179, 861, 17, 215, 207356, 8940, 55, 9, 11958, 2575, 258776, 3765, 6445, 1439, 14, 78530, 3143, 157402, 569107, 56, 828, 24, 5724, 17671, 22, 46, -324193, -17019, -161892, -54, -6, -13535, -60, -14094, -9133, -1490, -17502, -19, -206, -61, -5328, -68, -38, -27517, -779, -23, -135354, -1815, -311537, -89, -155316, -796, -96486, -28273, -13121, -45762, -98621, -643 };
		int[] output0 = new int[]{ 0, 0, 2147483647, 0, 0, 2147483647, 0, 2147483647, 0, 2147483647, 0, 2147483647, 2147483647, 2147483647, 2147483647, 0, 2147483647, 3, 43875186, 0, 2147483647, 2147483647, 2147483647, 2147483647, 634284426, 0, 2147483647, 2147483647, 0, 2147483647, 0, 0, 2147483647, 704492, 65538, 65542, 65545, 66283, 65726, 235350, 65537, 65551, 348265036, 66402, 65552, 65751, 1550892, 75113, 65590, 65544, 78653, 68161, 3398836, 69410, 72308, 66990, 65549, 217209, 68755, 723674, 387097582, 65591, 66368, 65559, 71516, 85817, 65557, 65581, 465, 50546, 5541, 65481, 65529, 53307, 65475, 52854, 57010, 64062, 50176, 65516, 65329, 65474, 60418, 65467, 65497, 43065, 64761, 65512, 8308, 63745, 564, 65446, 6126, 64744, 15034, 42571, 53644, 32600, 14552, 64895 };
		for (int ndx = 0; ndx < 100; ndx++)
		{
			Util.Check("Fixed32.Exp", Fixed32.Exp(input0[ndx]), output0[ndx], input0[ndx]);
		}
	}

	// Fixed32.ExpFast
	public static void Fixed32_ExpFast()
	{
		int[] input0 = new int[]{ -4239802, 2113869, 2847685, 636351, -3537634, -986176, -355973, -3508322, -2289845, 5746059, 4646419, 1795134, -5004321, -1282968, 297757, 2874526, 1864351, -3975437, 6097220, 4933146, -3332667, 6535549, -1673644, -1202393, 3553197, 1184526, -1660079, 1567657, 4526534, 208996, -6479719, 4890379, 2227151, -3144099, 2, 15212, 2224, 5, 3, 56904, 67, 40, 122638, 295993, 11523, 95, 20, 940, 341576, 10, 8, 1079, 71211, 474080, 28, 19, 78, 101, 38822, 6751, 3, 101630, 272, 58207, 278985, 517395, 431210, 108070, -326, -65814, -16, -2774, -13, -14, -4017, -2, -10, -500, -20309, -749, -360, -159705, -10032, -17675, -345, -1304, -3, -13694, -3, -69195, -387, -43, -84, -355, -29618, -437, -98062, -4, -2, -14595 };
		int[] output0 = new int[]{ 0, 2147483647, 2147483647, 1080016583, 0, 0, 286, 0, 0, 2147483647, 2147483647, 2147483647, 0, 0, 6160920, 2147483647, 2147483647, 0, 2147483647, 2147483647, 0, 2147483647, 0, 0, 2147483647, 2147483647, 0, 2147483647, 2147483647, 1590186, 0, 2147483647, 2147483647, 0, 65537, 82658, 67797, 65540, 65538, 156159, 65602, 65575, 425766, 5997302, 78134, 65631, 65555, 66482, 12023309, 65545, 65543, 66623, 194257, 90802904, 65563, 65554, 65613, 65636, 118507, 72646, 65538, 308999, 65808, 159295, 4626460, 175848607, 47207310, 340906, 65210, 24007, 65519, 62819, 65522, 65521, 61639, 65533, 65525, 65037, 48072, 64791, 65176, 5729, 56233, 50043, 65191, 64244, 65532, 53177, 65532, 22800, 65149, 65492, 65451, 65181, 41706, 65100, 14677, 65531, 65533, 52451 };
		for (int ndx = 0; ndx < 100; ndx++)
		{
			Util.Check("Fixed32.ExpFast", Fixed32.ExpFast(input0[ndx]), output0[ndx], input0[ndx]);
		}
	}

	// Fixed32.ExpFastest
	public static void Fixed32_ExpFastest()
	{
		int[] input0 = new int[]{ -2130636, -2316693, -5462089, -4854039, 6066654, 531611, -2013532, 2197033, -1629832, -3924982, -5933409, 4640812, 1082022, -2479097, -3530004, -4422553, -4163803, 2247641, -1262672, -1016277, 5682125, -2993364, 4021603, 1025920, -1254396, 5553112, -2954087, 3158389, -1291653, -4265503, -4483974, -5611078, -914375, -6212652, 10, 5, 55464, 1933, 28332, 118196, 16, 250, 116, 98412, 37940, 2473, 8820, 536332, 19, 3756, 43, 19, 8198, 3251, 33958, 4, 1410, 1219, 20033, 3, 58, 4366, 58, 25, 3, 479561, 435, 2347, -20, -12, -186, -6868, -233749, -1867, -53, -2251, -355616, -375368, -53435, -89961, -56, -79, -2569, -57131, -278492, -501669, -398, -95141, -53, -4, -2762, -90, -63234, -17226, -4034, -2406, -8, -9, -57256, -51849 };
		int[] output0 = new int[]{ 0, 0, 0, 0, 2147483647, 218449790, 0, 2147483647, 0, 0, 0, 2147483647, 2147483647, 0, 0, 0, 0, 2147483647, 0, 0, 2147483647, 0, 2147483647, 2147483647, 0, 2147483647, 0, 2147483647, 0, 0, 0, 0, 0, 0, 65545, 65540, 152771, 67502, 100974, 397841, 65551, 65786, 65652, 294215, 116933, 68061, 74981, 234783025, 65554, 69408, 65579, 65554, 74273, 68875, 110035, 65539, 66964, 66769, 88958, 65538, 65593, 70057, 65593, 65561, 65538, 98715186, 65973, 67930, 65515, 65523, 65350, 59021, 1851, 63698, 65482, 63327, 288, 213, 29001, 16609, 65480, 65457, 63020, 27409, 935, 31, 65139, 15347, 65482, 65531, 62835, 65446, 24970, 50385, 61629, 63177, 65527, 65527, 27357, 29712 };
		for (int ndx = 0; ndx < 100; ndx++)
		{
			Util.Check("Fixed32.ExpFastest", Fixed32.ExpFastest(input0[ndx]), output0[ndx], input0[ndx]);
		}
	}

	// Fixed64.Exp2
	public static void Fixed64_Exp2()
	{
		long[] input0 = new long[]{ -311956680745L, -339963471158L, 259858442321L, -401636633987L, -226312884305L, 86649141040L, -206055234295L, -329443116353L, -151491825470L, -245960454714L, -331607441554L, 51803370624L, 173848043480L, 327906765152L, 237323762310L, 408481001190L, -393618394383L, -35836444216L, -198880797492L, -374786778774L, 50263146623L, 65098037830L, -173990701081L, -327820636752L, 64869319030L, -380977577577L, 279348929530L, -253107285517L, 377395041975L, 171850182680L, -52255262624L, 286205447933L, -302312182740L, -427458048399L, 32762951L, 48L, 154062L, 445000L, 1188821L, 3368L, 43990918L, 1564L, 376664L, 3L, 12436524636L, 1L, 2292165L, 8564517228L, 9229557883L, 4278750L, 312134L, 9401296L, 1096932347L, 82189449L, 371L, 923906L, 378864092L, 18815832L, 72171L, 82L, 176866617L, 3L, 76L, 4270757L, 171870202L, 967L, 24175L, 27746230L, -72L, -3690215L, -153152L, -268358L, -2696034940L, -9124935066L, -4643L, -555L, -3L, -478L, -62L, -1054637L, -74696L, -2982827519L, -709L, -2273L, -88L, -213508805L, -28315476495L, -19610L, -122427510L, -35L, -5515L, -351667356L, -6L, -14474L, -817897L, -11506259L, -20L, -3787994441L, -759L, -12860883L };
		long[] output0 = new long[]{ 0L, 0L, 9223372036854775807L, 0L, 0L, 5082906724663296L, 0L, 0L, 0L, 0L, 0L, 18357212643328L, 9223372036854775807L, 9223372036854775807L, 9223372036854775807L, 9223372036854775807L, 0L, 13219621L, 0L, 0L, 14317061578752L, 156897748189184L, 0L, 0L, 151211935531008L, 0L, 9223372036854775807L, 0L, 9223372036854775807L, 9223372036854775807L, 934201L, 9223372036854775807L, 0L, 0L, 4317737116L, 4294967328L, 4295074084L, 4295275756L, 4295791404L, 4294969628L, 4325568140L, 4294968380L, 4295228388L, 4294967296L, 31961235264L, 4294967296L, 4296556404L, 17109541952L, 19048044496L, 4297934140L, 4295183656L, 4301488764L, 5126756896L, 4352316460L, 4294967548L, 4295607748L, 4565770668L, 4308029336L, 4295017316L, 4294967348L, 4419328716L, 4294967296L, 4294967348L, 4297928596L, 4415766620L, 4294967964L, 4294984048L, 4314242752L, 4294967238L, 4292410202L, 4294861134L, 4294781278L, 2779697018L, 984922888L, 4294964070L, 4294966904L, 4294967284L, 4294966956L, 4294967244L, 4294236336L, 4294915514L, 2653972520L, 4294966798L, 4294965712L, 4294967228L, 4149495326L, 44499613L, 4294953696L, 4210940154L, 4294967264L, 4294963468L, 4057998478L, 4294967282L, 4294957256L, 4294400406L, 4286999200L, 4294967274L, 2330575052L, 4294966762L, 4286062094L };
		for (int ndx = 0; ndx < 100; ndx++)
		{
			Util.Check("Fixed64.Exp2", Fixed64.Exp2(input0[ndx]), output0[ndx], input0[ndx]);
		}
	}

	// Fixed64.Exp2Fast
	public static void Fixed64_Exp2Fast()
	{
		long[] input0 = new long[]{ 83165279438L, 342008968759L, 222659471903L, -154975734672L, -312664635945L, -424195089197L, 230962276707L, 355169647565L, -86318306240L, 415437928793L, 8305858603L, 47039469021L, 13022359806L, 335402290356L, 190467142688L, 330373836353L, 246212197914L, 310477311144L, -51326723823L, 421885467596L, -173699079480L, -422153473596L, 377416063175L, -404428777988L, -201239340693L, 157974535873L, -54753364625L, -3746081001L, -102513229447L, 155299941472L, -313692939146L, -300167741139L, 413254489992L, 327726600L, 20423517732L, 904192L, 25L, 12190675780L, 81L, 76L, 1L, 5L, 1L, 182769784L, 5799919L, 299087714L, 1170L, 90L, 13164930L, 13793717L, 2136497598L, 608L, 78935L, 944L, 8768L, 1799015L, 15655858249L, 57855640L, 3L, 64150L, 1147795L, 804L, 462784L, 43864571L, 1060399424L, 6582L, 1258362L, 1L, -6180891100L, -52L, -100924393L, -814936393L, -17749112L, -627L, -24252189867L, -267L, -1L, -53L, -15129L, -96077L, -15976L, -483L, -607646162L, -34738358L, -348418587L, -1915484844L, -21705673L, -28635748L, -23L, -11352L, -2480527L, -18732L, -3261058708L, -54484279L, -2863103L, -76144918L, -508972L, -1084L, -7402778880L, -881L };
		long[] output0 = new long[]{ 2896896813170688L, 9223372036854775807L, 9223372036854775807L, 0L, 0L, 0L, 9223372036854775807L, 9223372036854775807L, 3828L, 9223372036854775807L, 16410078168L, 8509632241664L, 35130394592L, 9223372036854775807L, 9223372036854775807L, 9223372036854775807L, 9223372036854775807L, 9223372036854775807L, 1085223L, 9223372036854775807L, 0L, 0L, 9223372036854775807L, 0L, 0L, 9223372036854775807L, 624240L, 2346388502L, 280L, 9223372036854775807L, 0L, 0L, 9223372036854775807L, 4528229824L, 115990766720L, 4295593976L, 4294967312L, 30718003408L, 4294967348L, 4294967348L, 4294967296L, 4294967296L, 4294967296L, 4423527408L, 4298988712L, 4507348860L, 4294968104L, 4294967356L, 4304100760L, 4304537484L, 6063236356L, 4294967716L, 4295021996L, 4294967948L, 4294973372L, 4296214248L, 53735585408L, 4335251776L, 4294967296L, 4295011752L, 4295762824L, 4294967852L, 4295288032L, 4325475224L, 5096632360L, 4294971856L, 4295839468L, 4294967296L, 1583967422L, 4294967258L, 4225585856L, 3765668608L, 4282683710L, 4294966856L, 85733245L, 4294967108L, 4294967288L, 4294967254L, 4294956804L, 4294900704L, 4294956220L, 4294966958L, 3893781490L, 4270958812L, 4060139894L, 3152857928L, 4279950278L, 4275166758L, 4294967276L, 4294959424L, 4293248490L, 4294954310L, 2537444356L, 4257371646L, 4292983460L, 4242516528L, 4294614560L, 4294966542L, 1300492289L, 4294966682L };
		for (int ndx = 0; ndx < 100; ndx++)
		{
			Util.Check("Fixed64.Exp2Fast", Fixed64.Exp2Fast(input0[ndx]), output0[ndx], input0[ndx]);
		}
	}

	// Fixed64.Exp2Fastest
	public static void Fixed64_Exp2Fastest()
	{
		long[] input0 = new long[]{ -237549970710L, -194303299890L, -203567453094L, 6870227403L, 359672259167L, -395681463984L, 68785125432L, -259856313121L, -169106952678L, -307053035542L, 72072641433L, 254622401518L, -140080618265L, 73234684634L, -380725644777L, -156773459073L, -45390232221L, 277988380329L, 356790415966L, 408750158790L, 145278499067L, 319861940348L, 330898249154L, 33887711415L, 51689425424L, -128052097859L, 380844627977L, 390146347181L, 133865401062L, -227280679505L, 164563794276L, 188033989887L, -228344187106L, -329740263553L, 404L, 19L, 33136483279L, 2410L, 254169904L, 132899277L, 1301L, 172463L, 17127L, 31256012991L, 301600494L, 362416109L, 4L, 1951L, 13569488L, 1204L, 1339L, 38205399L, 8616L, 13372235428L, 2905222L, 5408L, 13545L, 49390812L, 11972094867L, 1089543L, 10L, 4518808L, 574535L, 5L, 62387L, 1575957676L, 951373L, 222L, -4134L, -8800144481L, -3079L, -23L, -2L, -40L, -18272637L, -75L, -110193L, -3552182426L, -77532395L, -107167819L, -1099L, -5500144L, -1031L, -7808L, -10210586650L, -25371760744L, -5113L, -992L, -253866L, -3209911727L, -62134058L, -670L, -8648L, -233L, -12668028L, -12367597L, -12892583354L, -3262L, -500994L, -8219537105L };
		long[] output0 = new long[]{ 0L, 0L, 0L, 13015556032L, 9223372036854775807L, 0L, 284481898676224L, 0L, 0L, 0L, 483606707568640L, 9223372036854775807L, 0L, 583365969838080L, 0L, 0L, 2828526L, 9223372036854775807L, 9223372036854775807L, 9223372036854775807L, 9223372036854775807L, 9223372036854775807L, 9223372036854775807L, 1018965748224L, 18023838662656L, 4L, 9223372036854775807L, 9223372036854775807L, -8083691401025421312L, 0L, 9223372036854775807L, 9223372036854775807L, 0L, 0L, 4294967576L, 4294967304L, 902559690240L, 4294968968L, 4475196888L, 4388329292L, 4294968200L, 4295087228L, 4294979204L, 666282289152L, 4509616980L, 4554123020L, 4294967296L, 4294968648L, 4304413560L, 4294968132L, 4294968224L, 4321613404L, 4294973284L, 37175006816L, 4296988100L, 4294971056L, 4294976712L, 4329443916L, 29655572384L, 4295725048L, 4294967300L, 4298110860L, 4295366856L, 4294967296L, 4295010676L, 5538400408L, 4295628948L, 4294967448L, 4294964436L, 1037993981L, 4294965164L, 4294967278L, 4294967290L, 4294967266L, 4282351102L, 4294967242L, 4294891102L, 2421164082L, 4241681404L, 4221483030L, 4294966534L, 4291165996L, 4294966580L, 4294961896L, 826593799L, 71568625L, 4294963756L, 4294966608L, 4294791766L, 2558498780L, 4252213180L, 4294966828L, 4294961314L, 4294967132L, 4286216952L, 4286424272L, 536207415L, 4294965038L, 4294620908L, 1139998822L };
		for (int ndx = 0; ndx < 100; ndx++)
		{
			Util.Check("Fixed64.Exp2Fastest", Fixed64.Exp2Fastest(input0[ndx]), output0[ndx], input0[ndx]);
		}
	}

	// Fixed32.Exp2
	public static void Fixed32_Exp2()
	{
		int[] input0 = new int[]{ -3372190, 4510292, 6151706, 3087351, 6051191, -4390804, 2358441, -3686510, -3022664, -901590, 4939927, -125990, 6312192, -4028909, -2860527, -496875, -2064466, -4252454, -4896849, -360896, 212449, -2878134, 2785344, -707115, -3901875, -5737716, 3392445, 4069134, -217914, -6344638, -3594247, -4669360, -1806906, 4056943, 1341, 547, 9256, 2102, 340, 38260, 88, 10, 2, 5, 2, 43, 73, 19, 309528, 27, 123, 37764, 26, 4, 395, 406053, 10, 1538, 1746, 182704, 347, 124918, 22746, 49, 27, 22109, 10, 17, -11279, -85728, -50082, -48291, -35831, -170, -18, -269, -60, -6393, -463, -393119, -39083, -3210, -124970, -67, -13018, -610, -304762, -88, -295, -2165, -102, -12, -2, -1219, -220, -465, -300, -30706, -128386, -73 };
		int[] output0 = new int[]{ 0, 2147483647, 2147483647, 2147483647, 2147483647, 0, 2147483647, 0, 0, 4, 2147483647, 17288, 2147483647, 0, 0, 342, 0, 0, 0, 1441, 619916, 0, 2147483647, 37, 0, 0, 2147483647, 2147483647, 6539, 0, 0, 0, 0, 2147483647, 66472, 65916, 72276, 67009, 65772, 98224, 65597, 65542, 65537, 65539, 65537, 65565, 65586, 65549, 1730817, 65554, 65621, 97710, 65554, 65538, 65810, 4804240, 65542, 66610, 66757, 452588, 65776, 245624, 83360, 65569, 65554, 82800, 65542, 65547, 58166, 26466, 38586, 39324, 44863, 65418, 65523, 65349, 65494, 61251, 65215, 1025, 43346, 63348, 17476, 65489, 57106, 65114, 2609, 65475, 65331, 64052, 65465, 65527, 65534, 64696, 65383, 65214, 65328, 47362, 16856, 65485 };
		for (int ndx = 0; ndx < 100; ndx++)
		{
			Util.Check("Fixed32.Exp2", Fixed32.Exp2(input0[ndx]), output0[ndx], input0[ndx]);
		}
	}

	// Fixed32.Exp2Fast
	public static void Fixed32_Exp2Fast()
	{
		int[] input0 = new int[]{ -5055324, -5083031, -32747, -5228552, -1200851, 391490, -6499376, 4639416, 5107703, -6159081, 2547162, -50174, -5316178, 963093, -4961956, 4259835, 6553173, -551929, 812906, 3341527, 3845901, 4321275, 3654242, -4850191, 386984, 2047704, 3670497, -3065038, 6290872, 3208903, 6441790, 117672, 3457556, -4655193, 92056, 9401, 5, 34612, 124300, 15, 579, 5, 359, 201, 105048, 61858, 3, 542, 260, 2030, 465, 293680, 24, 8, 1016, 74, 137, 212, 2841, 28151, 27333, 23513, 132298, 12, 3, 21, 21899, 345414, -20722, -651, -24531, -37, -3536, -323, -100, -16000, -418, -392, -64, -17647, -4590, -147, -147552, -500, -110, -4, -105, -7413, -8115, -2478, -136, -17818, -24, -8, -373, -16145, -29, -57, -123, -9978 };
		int[] output0 = new int[]{ 0, 0, 46351, 0, 0, 4118438, 0, 2147483647, 2147483647, 0, 2147483647, 38549, 0, 1739021854, 0, 2147483647, 2147483647, 191, 355177288, 2147483647, 2147483647, 2147483647, 2147483647, 0, 3926770, 2147483647, 2147483647, 0, 2147483647, 2147483647, 2147483647, 227504, 2147483647, 0, 173510, 72387, 65539, 94507, 244025, 65546, 65938, 65539, 65785, 65675, 199067, 126071, 65538, 65912, 65716, 66958, 65859, 1463712, 65552, 65541, 66243, 65587, 65631, 65683, 67534, 88264, 87504, 84039, 265564, 65544, 65538, 65550, 82617, 2529820, 52637, 65086, 50559, 65510, 63130, 65312, 65466, 55333, 65246, 65264, 65491, 54377, 62430, 65434, 13763, 65190, 65459, 65533, 65463, 60594, 60145, 63840, 65441, 54279, 65519, 65530, 65277, 55248, 65515, 65496, 65450, 58972 };
		for (int ndx = 0; ndx < 100; ndx++)
		{
			Util.Check("Fixed32.Exp2Fast", Fixed32.Exp2Fast(input0[ndx]), output0[ndx], input0[ndx]);
		}
	}

	// Fixed32.Exp2Fastest
	public static void Fixed32_Exp2Fastest()
	{
		int[] input0 = new int[]{ -5481924, -5278136, 2793175, 5608847, 3982155, -3964015, -1992329, 3886474, 4038617, 3708762, 4768461, 5475770, -5329058, 4668623, -4681782, -1167491, 4658094, -797200, 4314369, 6343294, 4893621, -5435648, -2682298, -4362021, -4938223, -6223645, -6098932, -368854, 6405945, 1313378, -53496, -4498198, -5359605, 1358286, 6247, 1333, 5657, 368547, 6044, 8, 15800, 1393, 84782, 127764, 13977, 387, 5439, 151, 471843, 2, 101314, 36483, 500, 151, 49840, 626624, 52986, 2050, 54851, 39407, 15, 135934, 57055, 28, 76, 15863, 72528, 1005, -33, -6025, -42790, -185714, -57337, -16697, -67, -188, -45, -436, -783, -16194, -331, -13454, -1112, -562262, -26438, -19526, -19188, -27570, -56132, -6534, -16498, -5, -13, -100516, -371274, -76177, -16008, -6046, -3336, -577427 };
		int[] output0 = new int[]{ 0, 0, 2147483647, 2147483647, 2147483647, 0, 0, 2147483647, 2147483647, 2147483647, 2147483647, 2147483647, 0, 2147483647, 0, 0, 2147483647, 14, 2147483647, 2147483647, 2147483647, 0, 0, 0, 0, 0, 0, 1324, 2147483647, 2147483647, 37220, 0, 0, 2147483647, 70019, 66469, 69583, 3230940, 69869, 65541, 77457, 66511, 160658, 253147, 75980, 65805, 69423, 65641, 9634876, 65537, 191343, 96388, 65884, 65641, 111029, 49516658, 114789, 66976, 117077, 99418, 65546, 276003, 119839, 65555, 65588, 77509, 141146, 66238, 65513, 61495, 41677, 9193, 35739, 54929, 65489, 65406, 65504, 65235, 64996, 55223, 65307, 56848, 64771, 171, 49546, 53308, 53499, 48956, 36198, 61165, 55045, 65532, 65527, 22632, 1291, 29282, 55331, 61482, 63268, 145 };
		for (int ndx = 0; ndx < 100; ndx++)
		{
			Util.Check("Fixed32.Exp2Fastest", Fixed32.Exp2Fastest(input0[ndx]), output0[ndx], input0[ndx]);
		}
	}

	// Fixed64.Log
	public static void Fixed64_Log()
	{
		long[] input0 = new long[]{ 94076383609L, 302L, 160L, 2560917L, 10599L, 593324054414252544L, 998789079035581312L, 32304393959395L, 15L, 157916626L, 100129674758304L, 11277683L, 25L, 62L, 10496618L, 563307351L, 11550526L, 2001950075295157L, 396839618L, 33159622140L, 2422336646353937408L, 26L, 5662828341174L, 84372239012L, 152618931896022368L, 14526576478796L, 102605914986895L, 690019152048671104L, 127507964487970L, 217704558L, 1362925034086L, 304429248855L, 4735640526456475L, 915138948L, 178L, 107294L, 56096577789L, 760L, 259053574880767L, 686100860527945L, 146172228731905L, 4259767273597126656L, 6698586522147L, 7143047L, 35888707468222668L, 1587343L, 1L, 10L, 771739233L, 1196781178L, 4294553952L, 4298298164L, 4292134305L, 4290848519L, 4290715350L, 4295066452L, 4294532409L, 4295245861L, 4294300937L, 4295054928L, 4292402440L, 4290746176L, 4298987565L, 4295966551L, 4297449291L, 4291829796L, 4295291368L, 4295786109L, 4299050730L, 4291587614L, 4298341785L, 4292595332L, 4291080665L, 4296389452L, 4297583665L, 4299149322L, 4294011348L, 4293385521L, 4296669849L, 4295725082L, 4296692359L, 4296655764L, 4294790011L, 4292984526L, 4299215921L, 4297218836L, 4294492225L, 4297709196L, 4294751595L, 4295900434L, 4297714082L, 4291043439L, 4296955896L, 4292919602L, 4295767124L, 4297116096L, 4290930644L, 4291278596L, 4295636235L, 4297131581L };
		long[] output0 = new long[]{ 13257117072L, -70739325796L, -73467717519L, -31889418437L, -55457454549L, 80504039469L, 82740870929L, 38334793268L, -83634436027L, -14186843955L, 43193530158L, -25522299419L, -81440456680L, -77539515865L, -25830560851L, -8724684141L, -25419627543L, 56058722130L, -10229181900L, 8778436386L, 86545972659L, -81272005000L, 30856053554L, 12789529920L, 74672347727L, 34902154801L, 43298454010L, 81152487785L, 44231678450L, -12807851527L, 24738773196L, 18300833162L, 59756668564L, -6640549057L, -73009832199L, -45515408112L, 11036480529L, -66775537349L, 47276192065L, 51459446191L, 44818399957L, 88970403951L, 31577492366L, -27483752494L, 68455290306L, -33943717828L, -95265423072L, -85375895403L, -7372536885L, -5488145034L, -413359L, 3329576L, -2833923L, -4120751L, -4254047L, 99152L, -434911L, 278552L, -666411L, 87628L, -2565619L, -4223191L, 4018384L, 999132L, 2481272L, -3138647L, 324056L, 818732L, 4081492L, -3381011L, 3373160L, -2372619L, -3888391L, 1421920L, 2615568L, 4179988L, -956055L, -1582067L, 1702212L, 757716L, 1724712L, 1688136L, -177283L, -1983223L, 4246520L, 2250948L, -475099L, 2741024L, -215703L, 933032L, 2745904L, -3925651L, 1988136L, -2048183L, 799752L, 2148260L, -4038551L, -3690283L, 668880L, 2163736L };
		for (int ndx = 0; ndx < 100; ndx++)
		{
			Util.Check("Fixed64.Log", Fixed64.Log(input0[ndx]), output0[ndx], input0[ndx]);
		}
	}

	// Fixed64.LogFast
	public static void Fixed64_LogFast()
	{
		long[] input0 = new long[]{ 666545242407265L, 42317792L, 29L, 7888540L, 119180636027L, 18071L, 4818359358850022L, 2611765350L, 10652L, 2L, 196L, 310L, 3720395309950639L, 3711667430070094L, 1278994067700918L, 2639180353L, 7465893751L, 10966333622314L, 405578674109L, 3L, 7526810798892L, 25845059847360L, 176L, 6931656L, 224668L, 7220433296873837L, 1545197126L, 462948402066945L, 22L, 10L, 719294105875164160L, 872614L, 59303717489676L, 458226109014032064L, 665223691622424L, 286725L, 345688729343L, 113L, 4122651220081L, 202432918971751L, 161558348084981024L, 355836698702829824L, 183963706165L, 338220040L, 1177997888L, 6460964216840L, 7950L, 56316529037433520L, 277576052L, 44L, 4292572196L, 4293517312L, 4294524419L, 4295405878L, 4291206295L, 4291321341L, 4293146189L, 4296786683L, 4291382963L, 4297059573L, 4296990670L, 4291140123L, 4294382144L, 4292057467L, 4291199123L, 4297581891L, 4294068383L, 4298299272L, 4291015617L, 4295111265L, 4298286962L, 4294268744L, 4290867688L, 4298019366L, 4291571750L, 4297109174L, 4291659895L, 4296369270L, 4298234873L, 4295827352L, 4296174038L, 4295779985L, 4293534129L, 4299123602L, 4297827030L, 4296041967L, 4298141302L, 4292274332L, 4298265390L, 4296843164L, 4290708438L, 4298456030L, 4290906337L, 4298678900L, 4290936444L, 4298123139L, 4295036121L, 4294468437L, 4294068500L, 4296524426L };
		long[] output0 = new long[]{ 51335251663L, -19842713705L, -80802997348L, -27057384350L, 14273019324L, -53165886362L, 59831041888L, -2136392823L, -55436030429L, -92288378601L, -72596093395L, -70627032796L, 58720348289L, 58710260581L, 54134370106L, -2091545635L, 2374692296L, 33694624777L, 19532956398L, -90546919225L, 32078177738L, 37376655448L, -73058363419L, -27612776494L, -42341208109L, 61568276668L, -4390711982L, 49769766884L, -81989496832L, -85375895407L, 81330947345L, -36513497747L, 40943851975L, 79394314518L, 51326727619L, -41293671954L, 18846722942L, -74961447314L, 29492714887L, 46216940717L, 74916824275L, 78308154978L, 16137457079L, -10915671064L, -5556094442L, 31422366590L, -56692634300L, 70390454389L, -11764360908L, -79012452361L, -2395779L, -1450235L, -442907L, 438548L, -3762663L, -3647519L, -1821507L, 1818968L, -3585843L, 2091732L, 2022864L, -3828895L, -585203L, -2910827L, -3769839L, 2613756L, -899015L, 3330632L, -3953511L, 143960L, 3318332L, -698615L, -4101579L, 3050936L, -3396903L, 2141308L, -3308687L, 1401720L, 3266284L, 859956L, 1206548L, 812596L, -1433415L, 4154232L, 2858736L, 1074516L, 3172784L, -2693819L, 3296776L, 1875428L, -4260983L, 3487264L, -4062895L, 3709944L, -4032759L, 3154632L, 68820L, -498895L, -898899L, 1556820L };
		for (int ndx = 0; ndx < 100; ndx++)
		{
			Util.Check("Fixed64.LogFast", Fixed64.LogFast(input0[ndx]), output0[ndx], input0[ndx]);
		}
	}

	// Fixed64.LogFastest
	public static void Fixed64_LogFastest()
	{
		long[] input0 = new long[]{ 267316L, 979189L, 10093331380429018L, 286972441469994560L, 5888L, 946983114192658L, 576388L, 118165017787L, 215528057L, 685346L, 846576931429639936L, 457656956279L, 3304875648378714L, 1009739798L, 83L, 426L, 28779002387714L, 232325416L, 1342508L, 137475760L, 281327824030428832L, 7937L, 1L, 997574L, 3722771704L, 1980642214404551168L, 20405556L, 49L, 2461709390110264L, 26845L, 31848L, 3621360023532L, 99706L, 5179L, 599900L, 927513L, 57813989882582L, 26802180L, 391618583474102L, 3L, 813937L, 143850L, 65156377977987L, 46121063847L, 140510545012519L, 12074100L, 24L, 14743131290L, 2980019330297580L, 40608802407675704L, 4291928591L, 4291187335L, 4291649350L, 4298914583L, 4297083700L, 4291374639L, 4293393875L, 4295274977L, 4294300167L, 4292574909L, 4294198755L, 4292543830L, 4297273056L, 4292467991L, 4291285184L, 4293141525L, 4293736419L, 4296103448L, 4292155908L, 4297399574L, 4294136583L, 4293446139L, 4296394519L, 4293227750L, 4291696682L, 4296327398L, 4294697130L, 4294386011L, 4295509728L, 4291816889L, 4298450764L, 4297945383L, 4292917053L, 4298701445L, 4291452647L, 4292228082L, 4295472471L, 4293318477L, 4294556623L, 4292627189L, 4290695323L, 4292400059L, 4299050895L, 4295482431L, 4295994854L, 4291518914L, 4295031759L, 4295230900L, 4294964754L, 4294710633L };
		long[] output0 = new long[]{ -41594714006L, -36018515815L, 63006985239L, 77384366259L, -57982368648L, 52843553795L, -38294621571L, 14236323504L, -12851067251L, -37551063823L, 82030578733L, 20051817794L, 58211539517L, -6217987185L, -76286667994L, -69261797840L, 37838452676L, -12528608403L, -34663221080L, -14782214027L, 77299050403L, -56699652536L, -95265423072L, -35938650231L, -614003507L, 85681406112L, -22975404260L, -78550311925L, 56946685889L, -51466078958L, -50732060682L, 28935872663L, -45830566312L, -58533269256L, -38122876495L, -36251357335L, 40834564819L, -21804399028L, 49050981716L, -90547064833L, -36812585819L, -44256080389L, 41348163463L, 10195430757L, 44648733826L, -25229371439L, -81615931420L, 5297184819L, 57767242633L, 68986055161L, -3040659L, -3782703L, -3320183L, 3944900L, 2115572L, -3595187L, -1574179L, 307620L, -667383L, -2393751L, -768843L, -2424859L, 2304804L, -2500759L, -3684743L, -1826699L, -1231419L, 1135832L, -2813119L, 2431232L, -831047L, -1521879L, 1426772L, -1740411L, -3272803L, 1359684L, -270255L, -581499L, 542316L, -3152471L, 3481552L, 2976616L, -2051339L, 3731984L, -3517091L, -2740879L, 505064L, -1649623L, -410819L, -2341431L, -4275307L, -2568747L, 4081068L, 515024L, 1027280L, -3450755L, 64448L, 263556L, -2547L, -256751L };
		for (int ndx = 0; ndx < 100; ndx++)
		{
			Util.Check("Fixed64.LogFastest", Fixed64.LogFastest(input0[ndx]), output0[ndx], input0[ndx]);
		}
	}

	// Fixed32.Log
	public static void Fixed32_Log()
	{
		int[] input0 = new int[]{ 3, 14506, 3534, 5, 35219, 30747552, 5463, 26658938, 43245100, 11, 449536, 105280712, 619937793, 669, 1148, 167578, 448125035, 38041852, 21, 118011738, 4587946, 5, 74, 356167433, 13060385, 116, 2170, 16, 1653810, 3, 41, 307917601, 277133487, 12, 18, 22202, 27952, 152, 16433, 434, 15027406, 6117570, 24384, 3037, 464950, 21, 198, 1956342, 270, 6, 65489, 65558, 65524, 65550, 65567, 65598, 65504, 65526, 65505, 65507, 65532, 65508, 65488, 65577, 65593, 65558, 65595, 65585, 65493, 65582, 65482, 65567, 65520, 65581, 65483, 65599, 65546, 65577, 65513, 65557, 65598, 65557, 65583, 65551, 65585, 65532, 65539, 65512, 65516, 65488, 65496, 65476, 65595, 65491, 65574, 65535, 65549, 65555, 65526, 65593 };
		int[] output0 = new int[]{ -654818, -98831, -191376, -621341, -40699, 403108, -162831, 393757, 425461, -569668, 126197, 483771, 599966, -300454, -265065, 61528, 578696, 417059, -527291, 491252, 278434, -621341, -444746, 563644, 346995, -415286, -223338, -545112, 211565, -654818, -483444, 554104, 547201, -563966, -537393, -70938, -55844, -397572, -90657, -328814, 356189, 297291, -64794, -201309, 128406, -527291, -380245, 222575, -359919, -609392, -47, 21, -12, 13, 30, 61, -32, -10, -31, -29, -4, -28, -48, 40, 56, 21, 58, 48, -43, 45, -54, 30, -16, 44, -53, 62, 9, 40, -23, 20, 61, 20, 46, 14, 48, -4, 2, -24, -20, -48, -40, -60, 58, -45, 37, -1, 12, 18, -10, 56 };
		for (int ndx = 0; ndx < 100; ndx++)
		{
			Util.Check("Fixed32.Log", Fixed32.Log(input0[ndx]), output0[ndx], input0[ndx]);
		}
	}

	// Fixed32.LogFast
	public static void Fixed32_LogFast()
	{
		int[] input0 = new int[]{ 56, 2225, 54242, 5234, 551068781, 6375, 660, 161311, 53641, 7971470, 5417, 15819, 13, 365160, 1027, 25539189, 10363, 64402, 327326127, 20871, 40, 620026, 82007, 4, 972428, 4, 15821653, 170, 6, 362876, 4243, 273988496, 4917, 5165, 42827, 567687, 43, 25597, 1047314, 29345, 88, 511998692, 26337910, 313905, 6227312, 7752727, 405030459, 2178, 56855806, 692089902, 65480, 65482, 65563, 65597, 65573, 65540, 65577, 65531, 65567, 65591, 65550, 65479, 65536, 65589, 65519, 65530, 65478, 65562, 65484, 65560, 65556, 65595, 65583, 65531, 65506, 65494, 65577, 65592, 65509, 65587, 65482, 65528, 65518, 65480, 65539, 65508, 65499, 65525, 65549, 65596, 65575, 65560, 65566, 65566, 65583, 65486, 65530, 65589, 65499, 65507 };
		int[] output0 = new int[]{ -463012, -221698, -12396, -165637, 592248, -152713, -301342, 59030, -13126, 314639, -163385, -93152, -558720, 112573, -272365, 390945, -120872, -1144, 558110, -74989, -485063, 147269, 14693, -635964, 176763, -635964, 359564, -390237, -609392, 112162, -179394, 546453, -169732, -166507, -27881, 141489, -480323, -61612, 181625, -52657, -433390, 587429, 392963, 102661, 298456, 312815, 572070, -223097, 443394, 607181, -56, -54, 26, 60, 36, 3, 40, -5, 30, 54, 13, -57, 0, 52, -17, -6, -58, 25, -52, 23, 19, 58, 46, -5, -30, -42, 40, 55, -27, 50, -54, -8, -18, -56, 2, -28, -37, -11, 12, 59, 38, 23, 29, 29, 46, -50, -6, 52, -37, -29 };
		for (int ndx = 0; ndx < 100; ndx++)
		{
			Util.Check("Fixed32.LogFast", Fixed32.LogFast(input0[ndx]), output0[ndx], input0[ndx]);
		}
	}

	// Fixed32.LogFastest
	public static void Fixed32_LogFastest()
	{
		int[] input0 = new int[]{ 2409786, 280, 255, 58, 1190, 22, 191, 269, 2332848, 365638, 4168457, 111554183, 59, 46083329, 39804370, 59, 2590056, 9920, 3922, 10, 233, 722422, 16, 39, 99729331, 625543065, 182, 28, 328942, 41, 4466091, 152330292, 3357217, 2, 111, 46436773, 113, 109, 9061919, 7306, 7, 723613813, 4401772, 1042245769, 224, 201316916, 66890, 110792463, 125797368, 2444030, 65525, 65475, 65540, 65488, 65476, 65478, 65488, 65482, 65507, 65515, 65587, 65482, 65555, 65541, 65585, 65578, 65493, 65490, 65554, 65600, 65597, 65536, 65557, 65597, 65472, 65504, 65589, 65484, 65590, 65596, 65530, 65514, 65501, 65588, 65566, 65561, 65518, 65545, 65597, 65488, 65562, 65484, 65590, 65525, 65537, 65597, 65514, 65494, 65486, 65524 };
		int[] output0 = new int[]{ 236237, -357535, -363665, -460710, -262709, -524244, -382606, -360162, 234111, 112657, 272150, 487565, -459590, 429625, 420029, -459590, 240965, -123734, -184549, -575914, -369577, 157285, -545112, -486721, 480219, 600557, -385770, -508436, 105728, -483444, 276671, 507983, 257965, -681390, -418172, 430126, -417002, -419364, 323042, -143778, -599288, 610099, 275720, 634013, -372158, 526253, 1340, 487115, 495440, 237162, -11, -61, 3, -48, -60, -58, -48, -54, -29, -21, 50, -54, 18, 4, 48, 41, -43, -46, 17, 63, 60, 0, 20, 60, -64, -32, 52, -52, 53, 59, -6, -22, -35, 51, 29, 24, -18, 8, 60, -48, 25, -52, 53, -11, 0, 60, -22, -42, -50, -12 };
		for (int ndx = 0; ndx < 100; ndx++)
		{
			Util.Check("Fixed32.LogFastest", Fixed32.LogFastest(input0[ndx]), output0[ndx], input0[ndx]);
		}
	}

	// Fixed64.Log2
	public static void Fixed64_Log2()
	{
		long[] input0 = new long[]{ 71889613661485L, 6280773L, 35492L, 65471498478831808L, 41046038902434L, 147661544924442528L, 10138079L, 34226144261L, 186L, 542280546532246L, 625L, 4L, 2336L, 985671L, 40546357930157744L, 25265911979L, 9719081992207914L, 84882840308562L, 1537424355603490L, 2772L, 268471050L, 152596812890L, 2832L, 2442118978L, 259607L, 11400708738131528L, 93297819996L, 34452L, 323405341L, 7L, 165450008072058880L, 37832130957617L, 2203440046149104640L, 2057064143L, 14289L, 49L, 56L, 1993061L, 1543L, 1329294154081387L, 778634L, 1055072258568799L, 290057526L, 2249L, 3051527632073791488L, 2757518143309L, 200758739471531136L, 111747382572L, 7125287626L, 688573379693304192L, 4291651722L, 4295717176L, 4293839175L, 4298733922L, 4298938333L, 4291901563L, 4292210940L, 4297034123L, 4295917869L, 4298136604L, 4293523659L, 4291807561L, 4291603313L, 4291325146L, 4298117821L, 4294298091L, 4291126015L, 4296524404L, 4291517831L, 4297536172L, 4294651861L, 4295129079L, 4295613410L, 4290701374L, 4298134408L, 4296225272L, 4291923612L, 4290718365L, 4295073389L, 4296026478L, 4298688382L, 4299226159L, 4296814049L, 4294966863L, 4298673111L, 4293548278L, 4293750639L, 4291052183L, 4295280179L, 4291353728L, 4298500186L, 4293702895L, 4296912292L, 4293262679L, 4294777508L, 4292246276L, 4296653076L, 4293911699L, 4293356722L, 4295549755L };
		long[] output0 = new long[]{ 60262035796L, -40447808564L, -72519636940L, 102485292060L, 56789381448L, 107524814504L, -37480972812L, 12860762988L, -105058512940L, 72782656440L, -97548532552L, -128849018880L, -89379022944L, -51922947752L, 99516204068L, 10979968800L, 90665649260L, 61291494712L, 79239727908L, -88318651428L, -17179047620L, 22123092528L, -88185962676L, -3498309520L, -60189801568L, 91654486268L, 19074483708L, -72703917396L, -16025518280L, -125381455896L, 108229623812L, 56284160316L, 124272573816L, -4561514536L, -78157163424L, -113323958316L, -112496554008L, -47560086556L, -91948711380L, 78338407368L, -53383927424L, 76906814968L, -16699847264L, -89614200808L, 126290237832L, 40057044760L, 109428209296L, 20192574352L, 3136619368L, 117065295148L, -4785212L, 1081752L, -1627748L, 5431708L, 5726344L, -4424496L, -3977856L, 2981076L, 1371232L, 4570656L, -2083076L, -4560208L, -4855108L, -5256740L, 4543576L, -965536L, -5544276L, 2246024L, -4978528L, 3704996L, -455092L, 233392L, 932072L, -6157484L, 4567492L, 1814608L, -4392668L, -6132948L, 153056L, 1527884L, 5366064L, 6141188L, 2663724L, -624L, 5344048L, -2047548L, -1755516L, -5650888L, 451372L, -5215468L, 5094784L, -1824416L, 2805400L, -2459732L, -273816L, -3926844L, 2431588L, -1523088L, -2324004L, 840248L };
		for (int ndx = 0; ndx < 100; ndx++)
		{
			Util.Check("Fixed64.Log2", Fixed64.Log2(input0[ndx]), output0[ndx], input0[ndx]);
		}
	}

	// Fixed64.Log2Fast
	public static void Fixed64_Log2Fast()
	{
		long[] input0 = new long[]{ 284335433951L, 38323L, 1619971020L, 39827785322419L, 1537241344L, 127534408003L, 1L, 6636923L, 20L, 778467L, 4129705608837996032L, 1760L, 18160L, 2678765423263380992L, 292376015048080384L, 1895665L, 60856530L, 225327308069L, 499L, 8443296333L, 15L, 1L, 504L, 2L, 37220154616266224L, 115L, 617047050470298L, 128292L, 6350489615L, 6206216316722L, 542829327891793600L, 219869041141766L, 8461258902856L, 425514176611637120L, 1L, 6833549638843L, 2376767072L, 2582000679190763008L, 1L, 1902562L, 1065327L, 3424634827661018112L, 1543241684208516352L, 13339L, 33L, 58063870500685L, 213L, 62743842766347L, 6761738L, 443L, 4297253275L, 4291429134L, 4292670158L, 4297378412L, 4295002144L, 4295867937L, 4291537113L, 4294744572L, 4297893915L, 4293949306L, 4297565044L, 4297013333L, 4297889195L, 4293971435L, 4293809403L, 4292637783L, 4294804133L, 4293107148L, 4299068885L, 4292802253L, 4297835133L, 4294368842L, 4295826797L, 4297612926L, 4292465415L, 4291278820L, 4290964757L, 4298607034L, 4298721903L, 4291963078L, 4299138990L, 4291128802L, 4298469068L, 4293963964L, 4298566964L, 4298076087L, 4295271727L, 4298503796L, 4294451855L, 4294147138L, 4295711755L, 4290912953L, 4291922520L, 4296049784L, 4295256078L, 4295691627L, 4291983647L, 4295740234L, 4298020712L, 4297998306L };
		long[] output0 = new long[]{ 25979410792L, -72044112668L, -6041640956L, 56602688784L, -6366444960L, 21011390504L, -137438953472L, -40106047668L, -118876413648L, -53385256564L, 128165022364L, -91133366068L, -76671709352L, 125482941264L, 111757637280L, -47870534676L, -26375786140L, 24538141192L, -98943608304L, 4188276884L, -120658986140L, -137438953472L, -98881829788L, -133143986176L, 98985825972L, -108037797588L, 73582985456L, -64557345576L, 2423309384L, 45083632328L, 115591641428L, 67188912764L, 47004162744L, 114082856108L, -137438953472L, 45680294188L, -3666384376L, 125254968952L, -137438953472L, -47848031472L, -51441403340L, 127004999848L, 122065847060L, -78583458028L, -115773445608L, 58938573408L, -104218628588L, 59418893112L, -39990600784L, -99681196364L, 3297080L, -5106596L, -3314960L, 3477520L, 50272L, 1299208L, -4950692L, -321332L, 4220768L, -1468828L, 3746616L, 2951096L, 4213960L, -1436892L, -1670712L, -3361696L, -235404L, -2684212L, 5914504L, -3124292L, 4136024L, -863448L, 1239868L, 3815652L, -3610508L, -5323636L, -5777140L, 5248796L, 5414372L, -4335692L, 6015548L, -5540256L, 5049920L, -1447672L, 5191036L, 4483400L, 439180L, 5099980L, -743672L, -1183356L, 1073924L, -5851944L, -4394240L, 1561500L, 416604L, 1044892L, -4305996L, 1115008L, 4403572L, 4371268L };
		for (int ndx = 0; ndx < 100; ndx++)
		{
			Util.Check("Fixed64.Log2Fast", Fixed64.Log2Fast(input0[ndx]), output0[ndx], input0[ndx]);
		}
	}

	// Fixed64.Log2Fastest
	public static void Fixed64_Log2Fastest()
	{
		long[] input0 = new long[]{ 60510L, 5007532384620442L, 164939439883574L, 158L, 555505L, 1844783L, 1275904370L, 84111344L, 47300975697L, 123973089L, 45422969311L, 2009L, 10607951531L, 7698312297969L, 24664227L, 96921840820880L, 3183761677594284L, 336260241L, 480739972L, 2485940228L, 8701357090870L, 42514814101L, 5512236330187335L, 48942301587L, 2193654261991L, 1102317454142873L, 207740L, 1511726467829500160L, 131556L, 449394278949L, 135285507142747184L, 192308098L, 18L, 37L, 48854237180207176L, 497L, 274968L, 553653430108933L, 25L, 77372253195L, 9615848L, 118L, 2200521L, 1L, 3639201903485916L, 44769967L, 1450629164L, 313438862L, 19779L, 437993709215625L, 4297146914L, 4296648521L, 4291745572L, 4293695593L, 4292042860L, 4296569500L, 4299243050L, 4292294588L, 4294592148L, 4294980940L, 4291108420L, 4295084019L, 4291962558L, 4298811829L, 4295100465L, 4291763663L, 4291605818L, 4294561414L, 4297510787L, 4292831747L, 4294603968L, 4291021642L, 4293944949L, 4298245757L, 4291781702L, 4295671443L, 4292643423L, 4297859275L, 4297018608L, 4292829341L, 4293377056L, 4297798102L, 4297060380L, 4294877506L, 4298148169L, 4292577394L, 4293408942L, 4296821157L, 4298613004L, 4292452868L, 4291931568L, 4291551361L, 4293533960L, 4295599109L, 4295245092L, 4298061273L, 4298924778L, 4294039399L, 4294886570L, 4296740124L };
		long[] output0 = new long[]{ -69213800656L, 86556667852L, 65407902728L, -106069334944L, -55476177028L, -48039054660L, -7520885332L, -24370419328L, 14865422768L, -21966730684L, 14614484076L, -90313447252L, 5602589968L, 46418691732L, -31972297780L, 62113223660L, 83750216632L, -15783894416L, -13569081120L, -3387965956L, 47177537504L, 14204631832L, 87151711944L, 15076723516L, 38639556056L, 77178250580L, -61571003872L, 121938004304L, -64401674892L, 28815666172L, 106982485668L, -19246595936L, -119529145520L, -115064379532L, 100671096196L, -98968479156L, -59833590396L, 72911262040L, -117493920428L, 17914843668L, -37808535584L, -107878138460L, -46946499768L, -137438953472L, 84578715128L, -28277980396L, -6725847908L, -16219330028L, -76142405804L, 71459068316L, 3143104L, 2424536L, -4650596L, -1835312L, -4221312L, 2310600L, 6164340L, -3857848L, -541360L, 19680L, -5570736L, 168352L, -4337268L, 5542924L, 192076L, -4624472L, -4852416L, -585708L, 3667668L, -3082312L, -524304L, -5696064L, -1475404L, 4727088L, -4598424L, 1015576L, -3354196L, 4170016L, 2958124L, -3085788L, -2295108L, 4081840L, 3018348L, -129568L, 4586432L, -3449528L, -2249080L, 2673448L, 5256388L, -3629316L, -4382012L, -4931056L, -2068620L, 911260L, 400680L, 4461180L, 5705696L, -1339088L, -116488L, 2556616L };
		for (int ndx = 0; ndx < 100; ndx++)
		{
			Util.Check("Fixed64.Log2Fastest", Fixed64.Log2Fastest(input0[ndx]), output0[ndx], input0[ndx]);
		}
	}

	// Fixed32.Log2
	public static void Fixed32_Log2()
	{
		int[] input0 = new int[]{ 851, 4, 1131432, 698523359, 1417, 3367955, 1117, 265, 176, 219913, 19561, 50, 16965, 123, 85, 170, 10540474, 1167881, 9, 734, 22797710, 5366, 82197, 276265, 16, 2539, 2992647, 22372604, 2235, 445, 532550, 40892651, 2094, 3, 394048342, 526, 61, 9583618, 53, 47, 166381220, 9, 40338, 2140, 7104144, 806496387, 991992, 26, 4785, 1047, 65482, 65509, 65511, 65496, 65588, 65589, 65537, 65479, 65584, 65597, 65471, 65536, 65587, 65595, 65595, 65551, 65577, 65525, 65503, 65589, 65477, 65471, 65535, 65591, 65521, 65566, 65588, 65494, 65580, 65486, 65562, 65546, 65525, 65475, 65493, 65512, 65538, 65489, 65488, 65475, 65571, 65483, 65587, 65495, 65490, 65522, 65494, 65541, 65521, 65487 };
		int[] output0 = new int[]{ -410714, -917504, 269334, 876854, -362505, 372470, -384997, -521022, -559715, 114463, -114315, -678701, -127778, -593592, -628531, -562995, 480341, 272332, -840832, -424698, 553280, -236610, 21417, 136032, -786432, -307361, 361299, 551500, -319419, -472013, 198086, 608523, -325580, -944704, 822725, -456202, -659900, 471344, -673192, -684551, 741206, -840832, -45885, -323526, 443038, 890443, 256899, -740528, -247445, -391116, -78, -39, -37, -58, 74, 76, 1, -83, 69, 87, -94, 0, 73, 85, 85, 21, 59, -16, -48, 76, -86, -94, -2, 79, -22, 43, 74, -61, 63, -73, 37, 14, -16, -89, -63, -35, 2, -68, -70, -89, 50, -77, 73, -60, -67, -21, -61, 7, -22, -71 };
		for (int ndx = 0; ndx < 100; ndx++)
		{
			Util.Check("Fixed32.Log2", Fixed32.Log2(input0[ndx]), output0[ndx], input0[ndx]);
		}
	}

	// Fixed32.Log2Fast
	public static void Fixed32_Log2Fast()
	{
		int[] input0 = new int[]{ 61, 224, 83491887, 29486, 380, 11, 20448894, 5616, 23795136, 55, 2, 1456, 210, 7746321, 436, 10600, 11, 59868907, 11739402, 695516, 14, 1306130, 596, 145, 34, 391394052, 19, 919, 10270248, 820453344, 130297, 2807, 15913962, 3018957, 380092251, 24507, 2932035, 340510467, 12050941, 12, 66948, 25, 1800, 573255953, 3, 13867, 77019854, 31, 234783451, 4241966, 65511, 65513, 65570, 65569, 65474, 65536, 65595, 65556, 65514, 65511, 65597, 65535, 65552, 65578, 65550, 65555, 65540, 65539, 65576, 65575, 65564, 65489, 65480, 65559, 65485, 65597, 65513, 65511, 65494, 65562, 65481, 65598, 65520, 65476, 65558, 65500, 65548, 65474, 65558, 65528, 65538, 65476, 65549, 65531, 65486, 65473, 65536, 65537, 65516, 65520 };
		int[] output0 = new int[]{ -659900, -536914, 676012, -75515, -486942, -821859, 542999, -232304, 557328, -669689, -983040, -359938, -543016, 451220, -473945, -172244, -821859, 644566, 490527, 223328, -799058, 282910, -444389, -578034, -715165, 822086, -770184, -403445, 477886, 892065, 64975, -297874, 519293, 362126, 819316, -93002, 359364, 808918, 493003, -813632, 2015, -744237, -339885, 858167, -944704, -146843, 668383, -723898, 773767, 394284, -37, -34, 49, 47, -90, 0, 85, 28, -32, -37, 87, -2, 23, 60, 20, 27, 5, 4, 57, 56, 40, -68, -81, 33, -74, 87, -34, -37, -61, 37, -80, 89, -24, -87, 31, -52, 17, -90, 31, -12, 2, -87, 18, -8, -73, -91, 0, 1, -29, -24 };
		for (int ndx = 0; ndx < 100; ndx++)
		{
			Util.Check("Fixed32.Log2Fast", Fixed32.Log2Fast(input0[ndx]), output0[ndx], input0[ndx]);
		}
	}

	// Fixed32.Log2Fastest
	public static void Fixed32_Log2Fastest()
	{
		int[] input0 = new int[]{ 151517283, 2056, 1535, 24, 2, 59, 276, 10, 770173, 7, 70, 723563, 30389, 686641, 205, 989634615, 21, 242534, 41, 4834, 5, 49407, 52163793, 2929, 586, 1514538, 97499, 461853, 159909, 13, 24756, 25098046, 478958648, 17711896, 18936738, 5307240, 870162, 342, 4, 50833, 734834098, 62948, 5545, 429854, 425, 96658620, 181125, 623206721, 225, 24, 65588, 65590, 65518, 65597, 65514, 65522, 65535, 65597, 65580, 65513, 65553, 65553, 65538, 65541, 65548, 65518, 65559, 65559, 65579, 65535, 65516, 65583, 65541, 65555, 65523, 65540, 65484, 65501, 65483, 65523, 65484, 65544, 65520, 65527, 65495, 65542, 65529, 65600, 65531, 65522, 65501, 65559, 65524, 65563, 65584, 65516, 65600, 65581, 65472, 65588 };
		int[] output0 = new int[]{ 732360, -327312, -354945, -748100, -983040, -663050, -517175, -830869, 232965, -864593, -646887, 227064, -72662, 222114, -545296, 909793, -760722, 123721, -697463, -246479, -896405, -26714, 631537, -293854, -445987, 296904, 37555, 184620, 84339, -806066, -92050, 562365, 841177, 529414, 535737, 415468, 244509, -496905, -917504, -24024, 881644, -3809, -233508, 177829, -476362, 689854, 96115, 866069, -536491, -748100, 74, 77, -26, 87, -32, -21, -2, 87, 63, -34, 24, 24, 2, 7, 17, -26, 33, 33, 62, -2, -29, 67, 7, 27, -19, 5, -76, -51, -77, -19, -76, 11, -24, -13, -60, 8, -11, 92, -8, -21, -51, 33, -18, 38, 69, -29, 92, 64, -93, 74 };
		for (int ndx = 0; ndx < 100; ndx++)
		{
			Util.Check("Fixed32.Log2Fastest", Fixed32.Log2Fastest(input0[ndx]), output0[ndx], input0[ndx]);
		}
	}

	// Fixed64.Pow
	public static void Fixed64_Pow()
	{
		long[] input0 = new long[]{ 71288L, 872147248L, 28885L, 118950809L, 191046145L, 7629L, 773979L, 87976886L, 9953822L, 259540133L, 237966L, 149124L, 732010819L, 1867456L, 96549L, 10975L, 138607L, 13519L, 545935L, 7958L, 1326354851L, 54796952L, 90447L, 1755766L, 143941L, 46249080L, 2086880L, 434262196L, 186776736L, 9333L, 7559628L, 152006L, 93085L, 61863L, 67213L, 91038L, 1547581L, 29314542L, 40366073L, 34805L, 47611L, 103483178L, 1672613L, 42416625L, 19399L, 3423715308L, 294813610L, 2998493370L, 3411501L, 289237896L, 59737257891L, 6112033467L, 32810361386L, 16211568628L, 6747416625L, 16540345161L, 16781818517L, 9886589255L, 5681391533L, 39829791425L, 8991630626L, 5814012254L, 12201660925L, 7808130573L, 8280015934L, 5991482843L, 7294258334L, 64503220580L, 19584043851L, 24457859476L, 9187249674L, 37639396347L, 15970864872L, 20322730600L, 14842053443L, 54802338526L, 15360529001L, 46783339536L, 25442615234L, 8314075572L, 13013445316L, 10589410873L, 6420297270L, 8576001360L, 10462773405L, 33297583293L, 33457961651L, 48152766644L, 40066857015L, 15856881808L, 6279678733L, 15269746983L, 6515934406L, 13088078156L, 13518526793L, 14864589423L, 11235136152L, 57744475359L, 10509885605L, 14448488712L };
		long[] input1 = new long[]{ 11422603L, 36064504808L, 607128225L, 64726033940L, 76209145547L, 733472450L, 3083056354L, 4521675792L, 529795214L, 11872918L, 1538331973L, 919147597L, 50074492441L, 636057139L, 54176557L, 5922358L, 6021088L, 3570257480L, 46550801L, 4479812L, 2473628761L, 1849816491L, 277287426L, 30898188L, 23829125156L, 26734137L, 52387603L, 1045238688L, 108536585L, 62644247L, 22768439069L, 468425463L, 138600816L, 62782560475L, 56341818113L, 2169689844L, 7833978398L, 51702304L, 32763025L, 3612654260L, 1068278962L, 5551192709L, 19510042L, 1094968270L, 1074693492L, 2251572086L, 10196571015L, 41723166869L, 248641550L, 9179878L, 90523971L, 1137372704L, 59223360L, 955458079L, 1097266483L, 13575333L, 392347863L, 14166180L, 5351303L, 23258790L, 5164531L, 333916606L, 407552191L, 1663321542L, 69717784L, 2857486067L, 3354519895L, 10339159L, 2071560790L, 134021922L, 59147507L, 38982594L, 14066344L, 7267533L, 127090028L, 1211243471L, 339320024L, 7052640L, 11859792L, 4278762494L, 222651050L, 158532604L, 177274297L, 17587582L, 1056422547L, 256731913L, 2950218195L, 52565742L, 94156672L, 12490474L, 7731651L, 216715422L, 1421133418L, 206823703L, 92508431L, 142335886L, 1067098032L, 31328327L, 4248413751L, 112356904L };
		long[] output0 = new long[]{ 4171070072L, 6594L, 797655524L, 0L, 0L, 447631146L, 8815334L, 71653407L, 2032027593L, 4261777518L, 128358758L, 477111707L, 4L, 1364935804L, 3752558410L, 4219376496L, 4233150764L, 114637L, 3897043146L, 4236244630L, 2183028382L, 656353551L, 2143068540L, 4060531870L, 0L, 4175523398L, 3913308726L, 2459022290L, 3967806050L, 3551101030L, 0L, 1404449367L, 3037019778L, 0L, 0L, 18703665L, 2251L, 4044709436L, 4144745776L, 224112L, 251448729L, 34801521L, 4144497028L, 1323404977L, 197460568L, 3813664708L, 7429039L, 130905249L, 2841160726L, 4270271830L, 4540008192L, 4715593852L, 4417090568L, 5771507648L, 4820352152L, 4313310880L, 4864389568L, 4306794464L, 4296464600L, 4347082508L, 4298784828L, 4397286376L, 4742298320L, 5413657432L, 4340975020L, 5359777088L, 6495529244L, 4323070580L, 8928590776L, 4534543068L, 4340177972L, 4380422568L, 4313480832L, 4306278128L, 4455488936L, 8806892672L, 4749898984L, 4311842752L, 4316117676L, 8293382832L, 4549014692L, 4440438504L, 4366830080L, 4307146836L, 5346533444L, 4854303488L, 17593795232L, 4423913408L, 4510461180L, 4311312972L, 4297905376L, 4578843248L, 4930095056L, 4531717376L, 4402360100L, 4475368916L, 5454041972L, 4377153356L, 10408435944L, 4433458976L };
		for (int ndx = 0; ndx < 100; ndx++)
		{
			Util.Check("Fixed64.Pow", Fixed64.Pow(input0[ndx], input1[ndx]), output0[ndx], input0[ndx], input1[ndx]);
		}
	}

	// Fixed64.PowFast
	public static void Fixed64_PowFast()
	{
		long[] input0 = new long[]{ 3422627L, 89301L, 7757L, 381127045L, 9556L, 23160L, 28080379L, 285214L, 242750L, 3524692142L, 6874512L, 13292264L, 6127L, 6718L, 46868885L, 4558107L, 15238L, 2306290L, 10647L, 316728617L, 4029209319L, 17491014L, 51787880L, 118140113L, 1290526L, 319928642L, 3231704L, 19866517L, 26507656L, 3424159578L, 5533L, 503853L, 11836L, 47853590L, 5349050L, 555127L, 3239717L, 82455908L, 32367L, 48186985L, 2347235955L, 30516620L, 11382L, 2515249L, 22694256L, 4497234L, 7664228L, 300626321L, 912674665L, 1877491943L, 67760757806L, 7287320214L, 9624519766L, 20676066698L, 54349983651L, 4763367429L, 4727678064L, 43038644639L, 10786072557L, 6052529120L, 11360574385L, 10444235031L, 7143088302L, 17279240907L, 64255999644L, 63349149156L, 9924291681L, 65072916209L, 33416102867L, 9662337025L, 5160440270L, 24105286707L, 6580915947L, 49617474756L, 17595150215L, 45088542687L, 5296928576L, 13329862148L, 11597548495L, 55632540259L, 12437161450L, 36216468161L, 32060740600L, 28939251230L, 54246715091L, 5352807273L, 12347806103L, 6622036350L, 36952893611L, 18729305150L, 25348740801L, 9643197013L, 19961646743L, 5267235839L, 9416418942L, 16801622287L, 67441097216L, 39477694361L, 55746038978L, 5097576773L };
		long[] input1 = new long[]{ 262063620L, 128833897L, 38686319L, 27405047L, 484487116L, 26677303277L, 897634325L, 86236985L, 253377202L, 49031781L, 2492279058L, 5504111L, 3335101111L, 91105650L, 62167913953L, 27959316L, 660078811L, 139194666L, 715183523L, 103262639L, 5485936L, 181064575L, 91437319L, 205801782L, 20437797654L, 142281031L, 826447159L, 37551948L, 14013971L, 35102297651L, 62324255L, 3332922699L, 5526692433L, 4052198775L, 1196745726L, 3434082191L, 14512686L, 27842430190L, 30314452L, 2289019728L, 13409301637L, 24715099L, 85616706L, 32006944890L, 5922386L, 43467223669L, 63796733929L, 8143886613L, 571900337L, 307716519L, 331420941L, 3998013765L, 5005312L, 17275201L, 53497552L, 56400788L, 5537131L, 72179434L, 6420188L, 6840674L, 3296698252L, 324613249L, 112672890L, 72092545L, 713960911L, 239057459L, 262654090L, 131569147L, 248363578L, 2099217919L, 252500790L, 11768653L, 17588842L, 18171653L, 388469886L, 904579697L, 6871459L, 7479828L, 269872284L, 4818288L, 1575105021L, 28813932L, 121563804L, 33297539L, 32881167L, 65242274L, 747194405L, 159794975L, 39977646L, 181445871L, 5765955L, 3549425059L, 8449728L, 574840075L, 219419019L, 4736415L, 1228141958L, 11760157L, 42958041L, 545526616L };
		long[] output0 = new long[]{ 2779044422L, 3108224840L, 3812666280L, 4229107830L, 989279353L, 0L, 1501047191L, 3540582192L, 2411932158L, 4285288276L, 102485439L, 4263285698L, 124075L, 3234495318L, 0L, 4107712168L, 624257627L, 3364962184L, 500626138L, 4034023368L, 4294616942L, 3405620336L, 3909419704L, 3615612372L, 0L, 3940909796L, 1076275466L, 4097766554L, 4224263554L, 674063446L, 3527679188L, 3826011L, 301L, 61703481L, 666197575L, 3340544L, 4191892318L, 0L, 3951876074L, 392358179L, 651195980L, 4174438146L, 3324991774L, 0L, 4264031396L, 0L, 0L, 27735540L, 3494557556L, 4047744600L, 5313813904L, 7025734448L, 4299007164L, 4322197716L, 4432899476L, 4300808328L, 4295498740L, 4464564780L, 4300882184L, 4297314120L, 9061750320L, 4593314004L, 4352660512L, 4396494668L, 6734003184L, 4989014916L, 4520667084L, 4667880344L, 4835964688L, 6383557456L, 4341565404L, 4315312976L, 4302478324L, 4339656128L, 4879251652L, 7047222840L, 4296408124L, 4303445660L, 4571573744L, 4307324276L, 6343103372L, 4356833868L, 4546404188L, 4358954496L, 4379161700L, 4309353920L, 5161178500L, 4364703204L, 4381864264L, 4570645336L, 4305214072L, 8380081500L, 4307966768L, 4413873880L, 4470699132L, 4301431724L, 9439395808L, 4321130180L, 4406495856L, 4389441036L };
		for (int ndx = 0; ndx < 100; ndx++)
		{
			Util.Check("Fixed64.PowFast", Fixed64.PowFast(input0[ndx], input1[ndx]), output0[ndx], input0[ndx], input1[ndx]);
		}
	}

	// Fixed64.PowFastest
	public static void Fixed64_PowFastest()
	{
		long[] input0 = new long[]{ 1027858848L, 4168068L, 81130L, 6338L, 2918104L, 3406169L, 221908483L, 325861766L, 8493592L, 15022216L, 289355L, 2353674161L, 307234680L, 7625L, 81009L, 56222893L, 30625L, 49178L, 20646L, 514340L, 439640038L, 11603L, 46519L, 8047L, 569288392L, 21735484L, 8331L, 4021057L, 29457793L, 28891831L, 2330002548L, 1466329561L, 130212941L, 1051101225L, 22586L, 595229L, 10233L, 2331410L, 379947427L, 317415570L, 19181575L, 1713301581L, 3006317445L, 106389905L, 113778L, 14125L, 41005L, 9363L, 4079016L, 856318534L, 48815811438L, 8645926864L, 6244874591L, 25371575488L, 8830555438L, 7184599043L, 9605018577L, 32503324831L, 8564220733L, 62315596839L, 32218633688L, 49994331736L, 11620667135L, 13270904569L, 13041631184L, 14697150437L, 9633185597L, 13681546037L, 6427325202L, 10472082178L, 16825917426L, 14937133723L, 49150164799L, 24350593643L, 42193090513L, 32302151480L, 13204487551L, 12393052243L, 55974806172L, 13764027579L, 6367802478L, 4732227604L, 11107230750L, 60426068963L, 50781874413L, 7513522082L, 46168272016L, 11599652395L, 16996510616L, 21471625997L, 4579727290L, 6694361825L, 17714385141L, 5173639366L, 20790387600L, 6443674477L, 19014420203L, 48517511019L, 20813725786L, 56987874902L };
		long[] input1 = new long[]{ 24174343980L, 2485906448L, 5906418L, 75507378248L, 22844450086L, 15114602765L, 107756705L, 22507953L, 24168190L, 20363747013L, 319897350L, 76133001L, 24055783L, 35715655148L, 2310296711L, 189778781L, 34205168L, 35569129640L, 39440421207L, 20563808835L, 2059948287L, 3847986409L, 140268106L, 85653271L, 6417746509L, 32398673778L, 11309246L, 335690144L, 12862469745L, 8594909385L, 385353585L, 79005059669L, 85022645267L, 7672615917L, 8462909440L, 95734878L, 28910580219L, 7972794832L, 5887823L, 80226201L, 5871451L, 30542684721L, 69660060L, 63697418214L, 178220309L, 100173420L, 7936360050L, 7998985L, 11271896L, 20362739374L, 5163936L, 45482683L, 2427508120L, 913838350L, 52412636L, 82090659L, 56575978L, 144727324L, 1209524359L, 169695073L, 942808065L, 2276179105L, 1108707836L, 1316977208L, 1261839784L, 511019908L, 182246369L, 70648218L, 151678721L, 16968058L, 247990992L, 2703723847L, 2501522234L, 212742401L, 33718706L, 42678575L, 2808318239L, 1171975419L, 6367809L, 463711957L, 16082816L, 167823177L, 1180204027L, 4107256593L, 65024427L, 1081894646L, 9675273L, 215345316L, 255459902L, 105760118L, 1313467415L, 47315801L, 181270442L, 3346880007L, 1078402114L, 9509861L, 50272113L, 478071900L, 23244208L, 1836031404L };
		long[] output0 = new long[]{ 1372380L, 77456391L, 4231343178L, 0L, 0L, 0L, 3987667862L, 4237445394L, 4147381306L, 0L, 2100280390L, 4249524364L, 4232124588L, 0L, 12348701L, 3546260812L, 3908542148L, 0L, 0L, 0L, 1439326091L, 44057L, 2956333316L, 3301589004L, 209680613L, 0L, 4149038578L, 2490382204L, 1422L, 193220L, 4066007076L, 11L, 0L, 347423871L, 0L, 3523477944L, 0L, 3728L, 4280746458L, 4091322338L, 4263387176L, 6231349L, 4270246302L, 0L, 2773368796L, 3199244160L, 2L, 4192158378L, 4217402038L, 2054267L, 4307577176L, 4327004968L, 5306614072L, 6266819840L, 4333026240L, 4337538244L, 4340881052L, 4598574428L, 5216290992L, 4774143124L, 6684298712L, 15773117248L, 5552786084L, 6069383424L, 5951542516L, 4972210472L, 4445084392L, 4377830020L, 4356719712L, 4310165432L, 4647775844L, 9413811864L, 17763399104L, 4680888804L, 4372918472L, 4382184280L, 8951967632L, 5734486736L, 4311399404L, 4870771192L, 4301325520L, 4311322756L, 5575892540L, 53831695904L, 4458991160L, 4945011668L, 4318077976L, 4514763124L, 4661618048L, 4468965456L, 4380357852L, 4316083336L, 4560110072L, 4965678060L, 6381143728L, 4298838996L, 4370625028L, 5625008092L, 4331919640L, 12969493864L };
		for (int ndx = 0; ndx < 100; ndx++)
		{
			Util.Check("Fixed64.PowFastest", Fixed64.PowFastest(input0[ndx], input1[ndx]), output0[ndx], input0[ndx], input1[ndx]);
		}
	}

	// Fixed32.Pow
	public static void Fixed32_Pow()
	{
		int[] input0 = new int[]{ 274, 0, 9, 10, 7, 0, 21, 8, 48, 0, 55, 152, 33, 0, 7, 2, 0, 4775, 26, 0, 182, 46938, 5012, 0, 10, 1, 14, 36610, 2550, 0, 47232, 2, 166, 0, 0, 0, 0, 29, 507, 4, 12, 2554, 0, 153, 46506, 2, 15397, 17, 357, 130, 139914, 368689, 167398, 168973, 242831, 181594, 189775, 89122, 327635, 257525, 511536, 78493, 123736, 787550, 540325, 474812, 93187, 184068, 94286, 368528, 121502, 395519, 195839, 364258, 291713, 117889, 117189, 365143, 291725, 486801, 377369, 84615, 515566, 165517, 653777, 484636, 397313, 1029717, 513559, 595033, 74680, 791954, 546435, 189906, 462789, 428888, 382936, 297822, 572648, 758061 };
		int[] input1 = new int[]{ 79, 14573, 754, 591, 1313, 32893, 1517, 1360, 1309539, 186, 68831, 6363, 22026, 1210, 111, 654, 1231480, 970, 124, 1061, 141, 41923, 326, 251, 37726, 197949, 427126, 796, 140, 182, 1989, 1166291, 1809, 550, 330, 4660, 72, 2003, 388924, 5435, 102463, 347380, 5258, 14145, 24278, 584769, 380, 171469, 10058, 102707, 15527, 17070, 6408, 29696, 2383, 4921, 316, 9445, 16813, 396, 195, 12833, 3415, 24437, 25294, 5799, 602, 31746, 104, 85, 102, 164, 5084, 665, 3497, 613, 29292, 70, 36093, 25086, 3481, 6416, 21359, 6070, 40887, 19721, 1266, 24665, 18125, 268, 1980, 40520, 244, 1829, 5364, 463, 624, 34648, 2405, 96 };
		int[] output0 = new int[]{ 65104, 0, 59161, 60542, 54564, 0, 54399, 54358, 0, 0, 38, 36364, 5105, 0, 64527, 59076, 0, 63043, 64570, 0, 64710, 52935, 64701, 0, 416, 0, 0, 65073, 65082, 0, 64886, 0, 55566, 0, 0, 0, 0, 51756, 0, 29306, 0, 0, 0, 17719, 57715, 0, 64987, 0, 29447, 3, 78436, 102770, 71828, 100659, 68732, 70747, 65871, 68504, 99031, 66078, 65937, 67891, 67741, 165617, 147936, 78086, 65747, 108076, 65572, 65681, 65597, 65830, 71343, 66685, 70970, 65895, 84973, 65656, 149146, 141196, 71920, 67195, 128359, 71407, 275233, 119660, 67856, 184790, 115812, 66129, 65794, 305906, 66054, 67510, 76904, 66410, 66646, 145905, 70961, 65771 };
		for (int ndx = 0; ndx < 100; ndx++)
		{
			Util.Check("Fixed32.Pow", Fixed32.Pow(input0[ndx], input1[ndx]), output0[ndx], input0[ndx], input1[ndx]);
		}
	}

	// Fixed32.PowFast
	public static void Fixed32_PowFast()
	{
		int[] input0 = new int[]{ 9, 1845, 48, 1870, 5355, 581, 0, 6, 4, 0, 1849, 1, 4488, 29439, 850, 60, 23659, 20744, 23409, 0, 1, 39, 0, 9837, 123, 0, 29865, 0, 1008, 3, 63260, 46841, 56, 9165, 69, 6565, 0, 0, 6880, 2, 526, 0, 128, 332, 39, 2, 0, 2, 3932, 0, 300148, 106804, 620546, 898505, 661145, 281549, 163543, 163816, 86550, 477624, 992401, 113149, 119299, 857397, 426381, 69295, 426643, 80795, 82123, 356763, 558247, 487154, 855247, 648747, 430712, 511494, 870427, 858529, 84827, 541551, 395836, 188949, 74199, 460915, 483223, 660404, 760193, 202759, 483640, 204218, 133974, 411934, 802906, 152850, 376484, 981121, 174158, 967293, 245649, 291783 };
		int[] input1 = new int[]{ 2246, 3790, 1099387, 8029, 257788, 458103, 45418, 29279, 460, 57814, 77867, 85, 33598, 77, 469, 129247, 88234, 785615, 4992, 302892, 1407, 246174, 144, 41682, 2973, 213, 557671, 6457, 3445, 944, 71, 63800, 2132, 15907, 693321, 22096, 1228339, 68, 81, 27740, 363, 18276, 478734, 295, 16584, 31495, 6939, 12699, 4144, 64921, 45711, 1005, 1471, 17347, 38747, 19608, 367, 58666, 409, 124, 3937, 1052, 337, 679, 104, 4084, 187, 2259, 273, 22033, 167, 418, 759, 6773, 752, 139, 18872, 4782, 254, 8427, 959, 50385, 1480, 3018, 18112, 377, 40825, 337, 14299, 31787, 3691, 32852, 174, 5028, 18516, 24228, 1239, 3248, 338, 81 };
		int[] output0 = new int[]{ 48318, 53309, 0, 42387, 3, 0, 0, 1028, 61220, 0, 944, 64599, 16577, 65473, 63529, 0, 16623, 0, 60592, 0, 51649, 0, 0, 19617, 49293, 0, 81, 0, 52622, 56750, 65532, 47259, 52078, 40654, 0, 30169, 0, 0, 65352, 803, 63807, 0, 0, 63994, 10006, 443, 0, 8740, 54854, 0, 189412, 66027, 68926, 131051, 257016, 101363, 65871, 148812, 65649, 65781, 77156, 66112, 65736, 67303, 65729, 65763, 65886, 66008, 65597, 115844, 65893, 66378, 67513, 83055, 66965, 65821, 138014, 79067, 65600, 85982, 67282, 147918, 65719, 71693, 113832, 66411, 301685, 65916, 101359, 113733, 68228, 164690, 65971, 69933, 107394, 178216, 66756, 74888, 65983, 65656 };
		for (int ndx = 0; ndx < 100; ndx++)
		{
			Util.Check("Fixed32.PowFast", Fixed32.PowFast(input0[ndx], input1[ndx]), output0[ndx], input0[ndx], input1[ndx]);
		}
	}

	// Fixed32.PowFastest
	public static void Fixed32_PowFastest()
	{
		int[] input0 = new int[]{ 5747, 7184, 2517, 419, 17, 782, 0, 3093, 34, 5038, 0, 387, 3489, 154, 1097, 400, 33135, 820, 92, 5044, 656, 20251, 1636, 4, 2, 1, 0, 1493, 8769, 63, 832, 2, 13, 0, 12358, 128, 1, 5226, 0, 0, 1, 0, 3263, 40586, 14282, 35188, 0, 197, 23045, 0, 468915, 253962, 788396, 552589, 528578, 556698, 117853, 397118, 639395, 694355, 564565, 167983, 71354, 80044, 73766, 66862, 271378, 133348, 180316, 110687, 290008, 144505, 646194, 472474, 474319, 441198, 446996, 297440, 618418, 460810, 144961, 153218, 869822, 143613, 340083, 381356, 396237, 71807, 829392, 637213, 495491, 313565, 96207, 905357, 112134, 86961, 475358, 182344, 894814, 321585 };
		int[] input1 = new int[]{ 513170, 102527, 97, 4336, 2448, 531365, 189, 5791, 2707, 340, 15722, 1474, 621010, 856445, 238, 111137, 743, 31572, 56699, 305, 4778, 246, 12603, 3133, 25379, 10672, 242, 131191, 4273, 1325, 223, 14637, 184318, 49105, 23048, 732771, 547, 882466, 177932, 977813, 5193, 105250, 5177, 1135143, 20658, 478567, 626, 233557, 255762, 259, 941, 53903, 1580, 5680, 4205, 1230, 6396, 234, 95, 102, 113, 6527, 21737, 148, 3247, 1689, 1089, 11472, 1783, 1093, 778, 1799, 689, 2821, 1565, 53947, 180, 28287, 2359, 4487, 54423, 611, 4214, 334, 588, 575, 22544, 474, 7211, 211, 54023, 1619, 56246, 23293, 10966, 101, 9762, 75, 917, 9693 };
		int[] output0 = new int[]{ 0, 2062, 65220, 46909, 48138, 0, 0, 50034, 47945, 64670, 0, 58397, 0, 0, 64570, 11, 65031, 7941, 223, 64759, 46844, 65248, 32231, 41207, 1169, 10767, 0, 33, 57485, 56951, 64570, 6426, 0, 0, 36450, 0, 59747, 0, 0, 0, 27217, 0, 51707, 16, 40540, 698, 0, 0, 1109, 0, 67417, 199671, 69592, 78835, 74932, 68225, 69405, 65959, 65752, 65777, 65779, 71982, 67414, 65564, 65921, 65568, 67104, 74218, 67369, 66112, 66706, 66976, 67134, 71358, 68713, 314905, 65882, 125907, 71056, 74902, 126708, 66057, 77391, 65798, 66513, 66558, 121711, 65579, 86639, 66018, 347253, 68124, 91097, 166629, 71704, 65563, 88026, 65611, 67982, 82913 };
		for (int ndx = 0; ndx < 100; ndx++)
		{
			Util.Check("Fixed32.PowFastest", Fixed32.PowFastest(input0[ndx], input1[ndx]), output0[ndx], input0[ndx], input1[ndx]);
		}
	}

	// Fixed64.Sin
	public static void Fixed64_Sin()
	{
		long[] input0 = new long[]{ 167608231878L, 401100570386L, 335721435156L, 30349511814L, -244394228713L, 348967085162L, 112465739452L, 357425477566L, -269246558725L, 112198396252L, -190845332288L, 244634345913L, 142523683466L, -48761684222L, -350409937963L, 219695546302L, -375083800374L, 89679933841L, 258091577520L, -214415243499L, 107259599049L, -326181054351L, -371762715173L, -164141127076L, -55454254225L, 338351191557L, 1421161000L, -8130813003L, 260697970321L, -89436949441L, -216916731101L, -320926652749L, -3144162201L, 253765658318L, 357969468366L, -424204610397L, -57923619826L, -371582148773L, -412009758391L, -76085883435L, 157785561873L, 368871814771L, -343537651959L, -386638084380L, 336299325156L, -268657793925L, 256333165919L, 29754352613L, 221776906303L, 416986832794L, -429339992399927L, -326456315152018L, -240626214712050L, -316416590347343L, -344917578760614L, 64292556629938L, 343366555959892L, 70365832632766L, -343692963560044L, -153248690671361L, -81950805438161L, -308900177143842L, -332769222354957L, 249687120316269L, -100381602246743L, -299415409139426L, -181718221484619L, 318254754748198L, 22765577010601L, -355702057165636L, -151877563470723L, 425995077998369L, 72192962633617L, -95319268644386L, 57295924226680L, 167884513878177L, -412140131991917L, -414621360393073L, -70943722633035L, -216293189900719L, -347478703961807L, 401163537986806L, 199589010292940L, 273207867127222L, -89593686641720L, -319957145548991L, 349196291562607L, -116224301454121L, 169186507478783L, -135819817863246L, -338074436757428L, 301207277140260L, 401607544387013L, 170735661879505L, -423631807597268L, 37189009417317L, 272144307526727L, -163728042676241L, 143240247466701L, 206218004696027L };
		long[] output0 = new long[]{ 4166107732L, -3252878176L, 1567445752L, 3030046636L, -1488046920L, -1795043696L, 3731373124L, 4292685032L, 612103952L, 3591843452L, -1877224456L, 1710849944L, 4211761832L, 4023205696L, 408424068L, 3327670976L, 2542805532L, 3848736400L, -1677948148L, 1444632024L, -681805964L, -2232906964L, 4237369932L, -2126522376L, -1452863380L, -1015540036L, 1395369240L, -4073808600L, -3633033688L, -3950368632L, -1018336992L, 2689491120L, -2870761624L, 2445776892L, 4275983312L, 4215769716L, -3417142972L, 4263089248L, -4269045984L, 3892501824L, -3522823940L, -3750219544L, 4261713056L, -3798039900L, 1016869288L, 1187293248L, 34549936L, 2580547792L, 4209508364L, 1277697456L, 3954919040L, -4182424288L, 3892980832L, -3885725080L, -3922190060L, 1718482640L, -3599084228L, 358534988L, 1649160840L, 4030514140L, 4212893556L, 3484815276L, -3402076364L, 1509321028L, 4292407000L, -3905218968L, 4232006616L, 4122540508L, -2623619832L, 1377783720L, 68834316L, -4279752240L, 4023378112L, -3695665232L, 3713782188L, 3527378248L, -3818580844L, -4259601964L, 2500971808L, 204291624L, -4229769988L, -1959034176L, -3308684L, 834513244L, 83655496L, -2953937020L, -3141707564L, 3828067716L, 2519326468L, 1087613568L, 4279105296L, -2102127700L, 766273920L, -4032461260L, -3667719724L, 2102893160L, -2934200336L, -3141200888L, -1784881620L, -3391607828L };
		for (int ndx = 0; ndx < 100; ndx++)
		{
			Util.Check("Fixed64.Sin", Fixed64.Sin(input0[ndx]), output0[ndx], input0[ndx]);
		}
	}

	// Fixed64.SinFast
	public static void Fixed64_SinFast()
	{
		long[] input0 = new long[]{ 342557157159L, 367575140771L, -422507953996L, 147982233868L, 139367666664L, -425838340798L, 30847451814L, 284189783532L, 55784215025L, -83305363038L, 46935959021L, 328491186752L, -288187174334L, 302096955940L, -235266716309L, -53617613824L, -78992457836L, -176480359882L, -90215922642L, -209921186297L, -219114971102L, 364002809569L, -280428482330L, -270911334726L, 411869109191L, -23588111010L, -405109195988L, 330954030354L, -101184190647L, -409389814790L, 325236935951L, 181084640284L, -128364878259L, 152335002270L, -129353617460L, -285557115132L, 394174762383L, -377889953175L, -295656529137L, -93252075443L, 78692132236L, -364490221569L, 257488213119L, -177004859082L, 246740952714L, -237068893910L, 159897721874L, -329986141153L, -23494351410L, 59482535827L, -313315262345898L, 19127937808907L, 355984609565768L, -76335295835546L, -4163753801938L, 408051077190013L, 218506893501750L, 277900110329407L, 165609854277118L, -266540951924117L, 408767584790347L, 129390151060252L, -44122755420546L, 35677300216613L, 20954430609757L, 295348048337532L, 27359335412740L, -11025447005134L, 1953843800909L, -379206330776581L, -18295646608519L, -130599234260815L, -310320560344504L, -426460576798586L, 140883411065603L, -284121479132304L, -322982133150400L, 326073106351839L, -88155557841050L, 219441273502185L, 246010896714557L, 354373674765018L, -75048347834947L, 268830003125183L, 333422177155261L, -123387731457456L, 254596760318555L, 377467147175771L, -272997973527124L, -107907965050248L, -74567279034723L, -313222077545855L, -114003077853086L, 400381152386442L, -72522930633771L, 378798710776391L, 109129263450817L, -207685816696711L, 231537439907818L, 380889633977365L };
		long[] output0 = new long[]{ -4030417512L, -2958134624L, 3575133532L, 440405388L, 3688985688L, 4219254724L, 3361816564L, -830723368L, 1758783736L, -2232044600L, -4285207876L, 3797228772L, 3875870540L, 4036913220L, 4208867952L, 354134476L, 1897853920L, 1059809496L, -3581524448L, 4224499184L, -2931379184L, 308941204L, -2704325928L, -1040136072L, 4282189108L, 3054421032L, -317774484L, 4278646576L, 4294946256L, -3769015616L, 1379158704L, -4162032724L, 4291157460L, -3392835092L, 4136652208L, 2107948348L, -2666365880L, -84892156L, 1175122312L, -1183668900L, -2162411724L, 178152652L, -1107830216L, 1558935708L, 3364862500L, 4192353712L, -1945219560L, -4254060464L, 3119603256L, 4118303540L, -4291178408L, -4015864700L, 2108513380L, 4013000972L, -4141481032L, -4075888368L, 638672728L, -2356239756L, -3252777540L, 513494664L, 3441671576L, -4089478756L, -520868872L, 1663842820L, 256779172L, 1043253076L, -3742997996L, 1595989628L, 2482315588L, 1929070312L, 905658320L, 122383104L, -4194051384L, 372159012L, -2447770600L, -1390143648L, -706950964L, 356974144L, 4127324468L, -3447187984L, 4198275780L, -4234633656L, -72165512L, -4046992020L, 3604540992L, -4246143736L, 3033260168L, 580591492L, -4294061440L, 3529503808L, -3840438088L, 4053513288L, 401769980L, -2144011492L, -2058680276L, -3874198524L, -2298565232L, -971983856L, -2827962692L, 4062558080L };
		for (int ndx = 0; ndx < 100; ndx++)
		{
			Util.Check("Fixed64.SinFast", Fixed64.SinFast(input0[ndx]), output0[ndx], input0[ndx]);
		}
	}

	// Fixed64.SinFastest
	public static void Fixed64_SinFastest()
	{
		long[] input0 = new long[]{ 165068500276L, -258573560720L, 97556744645L, -73784750234L, -351718547163L, 246780701514L, -100048231446L, 352948456764L, 212278022698L, -149539004269L, 301536480740L, 321930516749L, -63441061429L, 375665310374L, -83055119038L, -375102819574L, -225058230704L, 116543971054L, 131751852661L, -285154567532L, -388745441581L, 79388917836L, -167524203078L, -319634920748L, 124857677858L, -134570298662L, 412900573192L, -281204983130L, 75559083435L, 191581429889L, 36245987016L, 314200413146L, -334961063155L, -39548462218L, -375123956374L, 75087727834L, -172679799480L, 428233131999L, 191051820688L, -342855253959L, 406157229589L, 331145033154L, -264307605123L, 306037760342L, 20052283809L, 32998933815L, 179715713483L, -60171658628L, 53939541825L, -126916840659L, 174360211881192L, 422082021996547L, 90059060241937L, 87195277840603L, 340138345958389L, -343817147160102L, 338447371957601L, -12305064205730L, 230854301507499L, 212348481098882L, 263376857922644L, -248339977915642L, -152107356270830L, -408800136790362L, 243711738313487L, 416832797194102L, 227394850305889L, 405604130388874L, 321292537149613L, 271353882726359L, 227073709505739L, -223794633104212L, 354988879965304L, 45110377021006L, -261815067521917L, -290393745135225L, -85800206639953L, -44065233820519L, 89809525041820L, -337637985557224L, 115210717453649L, 43575502220291L, 94352204643936L, -227020805505714L, -412275511591980L, 43660694620331L, -205355376695626L, 7340388603418L, 49809921423194L, 398189920385421L, 166137085477363L, 269121994325319L, -232117899108088L, 408200069190082L, -176735382282298L, 225000477904774L, 53755659825031L, -285004197932715L, -367170707570977L, 32716216215234L };
		long[] output0 = new long[]{ 2877099744L, 2110395608L, -2842344176L, 4273124156L, -893027396L, 3389906172L, 4141535120L, 2043530524L, -3200604248L, 1103130204L, 3811957660L, -1840968900L, -3461129120L, -2052559276L, -2014803536L, 2527835988L, -3629740420L, 3901370604L, -2896709696L, 1748633096L, -2405347696L, -1534731272L, -4144366532L, 3561182984L, -3070615620L, 359658168L, 4080175724L, -2060518688L, -4084988168L, 2508927140L, 3580701256L, -3361792728L, -2247476492L, -923410612L, 2510710656L, -4205276584L, -2549988608L, -3155864568L, 2060943868L, 4123176828L, 1343255504L, 4257080724L, 4129761676L, 3618313328L, -4290503748L, 4231756412L, -3620528516L, -4259487648L, -32608656L, 4109008328L, 2896892184L, -4272140636L, 4288911008L, 2962339808L, 4201439144L, 1043124280L, -1476764448L, 584361672L, -1856476552L, -3923115840L, -4266214908L, 616983596L, 341961008L, 1538842152L, 490377608L, 4206522776L, 2995300180L, 3068449316L, -3244171340L, 3769097884L, 619720052L, 883788160L, -549710500L, -2877066188L, 3346420088L, 3064891196L, -1946618180L, 2783239488L, -133842240L, 1659124064L, 4274293824L, -4286428760L, 3773679060L, 445468152L, -3592846244L, -2586610492L, 3877071440L, 176047548L, -4278201104L, 2849525628L, 2516045452L, -3026322380L, -2628750808L, 3861571836L, -3176452764L, -3490607108L, -600390864L, -3593120168L, 1779131700L, 3670183820L };
		for (int ndx = 0; ndx < 100; ndx++)
		{
			Util.Check("Fixed64.SinFastest", Fixed64.SinFastest(input0[ndx]), output0[ndx], input0[ndx]);
		}
	}

	// Fixed32.Sin
	public static void Fixed32_Sin()
	{
		int[] input0 = new int[]{ 3587353, 3106816, 732918, 3236120, 1152132, -478239, -5529839, -5867737, -1228124, 3067556, 2616573, -716920, 4995455, 2120903, -5071395, -3199697, 1324532, -5410511, -6500569, -3501063, 2940238, -3195835, -1124611, 5380239, -4948119, 5911994, -6426597, 5741661, -3168502, -874615, 1302296, -3513988, -1623401, -5682425, -2185700, 5204759, 6485591, 4757179, 1937404, 741014, -357550, -3819336, -5213469, 4246082, -3094277, -3301628, 5664620, 890858, 4746434, -6050670, -2147483648, -322842245, -2147483648, -2147483648, -2147483648, 229589102, -2147483648, 1906279251, 1630639517, 1793738773, -605242166, -2147483648, -2147483648, -2147483648, -2147483648, -423037753, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -794316031, -687984128, -2147483648, 205974954, -2147483648, 1182905875, 1920916977, -2147483648, -2147483648, -763855087, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, 478115323, -2147483648, -2147483648, 973332230, -1974288157, -2147483648, -2147483648, -2147483648, -2147483648, -1120101682, -2147483648, -2147483648, -2147483648 };
		int[] output0 = new int[]{ -63670, -18260, -64383, -50770, -62583, -55643, -28173, -65536, 7186, 20410, 51940, 65432, 48200, 53173, -59991, 64993, 64101, -50363, 63800, 976, 50601, 65376, 65075, 26394, -6809, 51185, 40836, -22706, 61625, -46053, 55908, 13797, 23185, 62349, -61233, -50449, -65536, -21371, -62935, -62385, 48246, -64710, 55546, 60678, 5957, -7414, -65480, 56083, -10972, 61538, -60809, -10729, -60809, -60809, -60809, -24058, -60809, 31037, 11127, 43527, 55838, -60809, -60809, -60809, -60809, -52499, -60809, -60809, -60809, -60809, -60809, -60809, -2380, 64559, -60809, 63733, -60809, -62426, -12537, -60809, -60809, -12693, -60809, -60809, -60809, -60809, -60809, 41347, -60809, -60809, -65534, 32255, -60809, -60809, -60809, -60809, -59307, -60809, -60809, -60809 };
		for (int ndx = 0; ndx < 100; ndx++)
		{
			Util.Check("Fixed32.Sin", Fixed32.Sin(input0[ndx]), output0[ndx], input0[ndx]);
		}
	}

	// Fixed32.SinFast
	public static void Fixed32_SinFast()
	{
		int[] input0 = new int[]{ -4208109, -5013259, -3415746, 1915389, 3634618, -1012249, -6082126, 2839735, -5511604, -2647003, -1788045, 3048521, 6538962, 3277130, 1546365, -6394987, -5713129, 972196, 2629809, -6413479, -1310898, 428365, 812077, 168294, 1857712, 5396199, -5588, -937981, -2034240, -950263, -5227523, -6229604, 5255682, 4592157, 2561618, 5260632, -3901708, -920161, -752450, 4582531, -5399934, -1951874, -563880, 5959206, -627244, 4478410, -1959650, -150589, -1402699, -5365956, -2147483648, -2147483648, -936169998, -2147483648, -1360341788, 1917125107, 728263205, -2147483648, -2147483648, -2147483648, -2147483648, 1409455594, -1679624387, 1992258860, -2147483648, -2112040482, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, 1760632450, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, 1406471018, -2147483648, -2147483648, 802250015, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, 1260165170, -2147483648, -601101059, -2147483648, -2021230289, -317668338, -977838144, 1009131406, -2147483648, -255790310, -2147483648, -2147483648, -2147483648, -2147483648 };
		int[] output0 = new int[]{ -64332, -58348, -62914, -53392, -58070, -16992, 64992, -39734, -43342, -28544, -54824, 37390, -44879, -16877, -65499, 12401, 46515, 50235, 42867, 29829, -59904, 16413, -11415, 35565, -4722, 40080, -5582, -64532, 24058, -61273, 61675, -47397, -65301, 53525, 64445, -64697, -10113, -65231, 57950, 47414, -42969, 65410, -47946, 11469, 9547, -46087, 65430, -48967, -36335, -12801, -60809, -60809, -83, -60809, 40478, -65387, -37082, -60809, -60809, -60809, -60809, -45040, 5147, 64661, -60809, -43351, -60809, -60809, -60809, -60809, -60809, -64091, -60809, -60809, -60809, -60809, -60809, -48148, -60809, -60809, 64819, -60809, -60809, -60809, -60809, -60809, 58229, -60809, 64300, -60809, 32082, -15789, 61140, -60537, -60809, -60898, -60809, -60809, -60809, -60809 };
		for (int ndx = 0; ndx < 100; ndx++)
		{
			Util.Check("Fixed32.SinFast", Fixed32.SinFast(input0[ndx]), output0[ndx], input0[ndx]);
		}
	}

	// Fixed32.SinFastest
	public static void Fixed32_SinFastest()
	{
		int[] input0 = new int[]{ -6421628, -3906455, -866101, 2311567, -2872678, 1759247, 2736654, 1016552, 3354248, -2001317, 924879, 5875392, 2174021, -3875225, -2563831, 5401936, 944737, -5011340, -91197, 5715745, 3181394, 1431460, 2547906, -6482582, -1693037, -2175610, -3815129, 715515, 5565284, -757754, -5640373, -3005215, 4581384, 5864342, 3800930, -1844894, 1011102, -1846850, 6204394, 324209, 681720, -6309987, -439269, -5153383, -280385, -1343022, 4061910, -3656212, -2980637, -6366343, -2147483648, -2147483648, -2147483648, -2147483648, -1696598172, -1299488999, 99238266, -937119241, -2147483648, -2147483648, -979223062, -2147483648, 2004867606, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -1122556357, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -1519575192, -2147483648, -2147483648, 1147689291, 351403787, -2147483648, 316079599, -2147483648, -2147483648, -2147483648, 442773398, -2147483648, -2147483648, -2147483648, 1007340335, -1453180197, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -1339419119, -1761254679, -2147483648, -2147483648, -2147483648 };
		int[] output0 = new int[]{ 36841, -5400, -39631, -42934, 9710, 64880, -52042, 12802, 51999, 50445, 65512, 65085, 64392, -34763, -64800, 44467, 63005, -57453, -64476, -44644, -64785, 9716, 60564, 65467, -42275, -64081, -65233, -65330, -6314, 55292, 62026, -62548, 46622, 65438, 65039, -8073, 18097, -6128, 26950, -63731, -54341, -58604, -26698, 6188, 59459, -65356, -49332, 45123, -65358, -16004, -60807, -60807, -60807, -60807, -63315, 58535, 531, 61651, -60807, -60807, -22073, -60807, -54337, -60807, -60807, -60807, -60807, -60807, -50832, -60807, -60807, -60807, -60807, -60807, -61498, -60807, -60807, 58741, 42346, -60807, -39522, -60807, -60807, -60807, 64335, -60807, -60807, -60807, 55820, -26076, -60807, -60807, -60807, -60807, -60807, 62925, -64878, -60807, -60807, -60807 };
		for (int ndx = 0; ndx < 100; ndx++)
		{
			Util.Check("Fixed32.SinFastest", Fixed32.SinFastest(input0[ndx]), output0[ndx], input0[ndx]);
		}
	}

	// Fixed64.Cos
	public static void Fixed64_Cos()
	{
		long[] input0 = new long[]{ -172820380280L, -350943230363L, 263451034722L, -148222777069L, 154011077071L, 167869419478L, 186621979886L, -134318281462L, -53574619024L, 125778028658L, -207763440296L, 360785443168L, 345052084360L, -144112362667L, -66397657430L, -53759590225L, 319723070348L, 208433273497L, 240466629111L, -369772473572L, -136526655463L, -368603082771L, -307865925943L, -407828965589L, -349202306762L, -269417728325L, -292562991136L, -328335209952L, 316850890347L, 417690021194L, -121540699856L, 420872304395L, 221939507903L, -130529087860L, 149881813869L, -57838906626L, -273865807127L, 390453827981L, -231053347107L, 290644907535L, -7857079403L, 98910885846L, 77485031436L, 369735757172L, -316968906747L, 370797335572L, -217373398701L, 190128125488L, 89195187041L, 139181321864L, 2199348781024L, 10563786944919L, -10924207465086L, 22304793110386L, 29008534193508L, -23371402710883L, 38641942517994L, 24178327071258L, -22851719990641L, -606792420282L, 3093568101440L, 8546046023979L, -2167244221009L, -4176791061944L, -18217800108483L, -19913901509273L, -29065079433534L, 4608444262145L, 13550255306309L, 42093797879601L, -20939051269750L, 35876597196706L, 998989100465L, 37931845117663L, 6758133543147L, 19405918829036L, -1659138460772L, -24810495351553L, 33863667075769L, -29050291273527L, 37745239997576L, -5319438702477L, 1196633260557L, -25182716111726L, -3380019621573L, 20231816029421L, 10061764944685L, 42838830639948L, 888229980413L, -4590088862137L, -1476160220687L, -8615234824011L, 18947429828823L, 20451130669523L, -16978750307906L, 33617918995654L, -30891340154384L, -31024378754446L, 12241702865700L, 31166683794513L };
		long[] output0 = new long[]{ -3537926556L, 4293170160L, 336454576L, -4290281768L, -1144846480L, 789044452L, 3703595424L, 4251424792L, 4276583112L, -2281976164L, -1355090924L, -2926678572L, 971151296L, -2307029700L, -4162979408L, 4289708460L, 2474161000L, -705597660L, 3637408856L, -1266930716L, 4001727788L, -2323863480L, -3601944184L, 3264683668L, 3994276004L, 4272138492L, 2329937768L, 2143476172L, -235377536L, -4253936884L, -4293723624L, -3538478664L, 692576944L, 2230412164L, -4049730268L, 2668787576L, 2559065116L, -4212255216L, -3973719376L, 543138904L, -1098226564L, -2180357480L, 2965519848L, -1301966640L, -117464468L, -261040096L, 4040861940L, 4121284424L, -1460707648L, 2357501760L, -4294936112L, -4111013476L, 1557146008L, -4220343212L, 4036760148L, 4048722744L, 3783497944L, 4129386216L, 1242628500L, -4276882800L, -2825770280L, -1741697996L, -1574113016L, 692854164L, 3744112456L, 3914212596L, 4160829416L, 570200488L, 3126011048L, 2163007260L, 3771223600L, -4071985764L, 4265393428L, -3342429388L, -3890739028L, 3333324528L, -4265292020L, -3156350520L, 2676000912L, -4289390876L, -1500616504L, 3169287024L, -2360719412L, 1963042992L, -13678660L, -985146456L, 2529963792L, -4013320932L, 3688334468L, 3611660300L, -1306375712L, 69741924L, 3153682772L, 2304139284L, 2137770896L, 15575636L, -961434828L, -2654397492L, -2933185644L, 3727304352L };
		for (int ndx = 0; ndx < 100; ndx++)
		{
			Util.Check("Fixed64.Cos", Fixed64.Cos(input0[ndx]), output0[ndx], input0[ndx]);
		}
	}

	// Fixed64.CosFast
	public static void Fixed64_CosFast()
	{
		long[] input0 = new long[]{ 231951400308L, 166038888277L, -374871157174L, 97753937845L, -80924895037L, 92724245443L, -333848751155L, -59063796227L, -274030133927L, -333470575955L, 212374087098L, 205027649095L, 332643329554L, -367511016771L, 45976405421L, -345366661560L, -356002601965L, -199342010692L, 421529015196L, 45000568220L, 129740065060L, -289542371134L, -392294586782L, -248093287915L, 6202851402L, 306258565142L, -260205055921L, 234975313909L, 119609224655L, 160898875074L, 73475860234L, -135844326663L, 58974747427L, -402526896787L, -92957583443L, -218083217901L, -107819959450L, 343709124360L, 258594463520L, 302972287941L, 106670181849L, -269815283925L, 272921710727L, -87143853840L, 171221753879L, 209707478297L, 10701051804L, 127488585459L, -270961828326L, -253917571118L, 26268506232232L, 31992533874897L, -30227607314075L, -35208026916395L, -24756995671528L, 9199704184283L, 12883674545999L, 30271886034096L, -33794564315736L, 4231326941970L, -7656742823565L, -13932733546487L, 25082370871679L, -543227940252L, 2255029341050L, -8127831583784L, -28344382793198L, 30567349674234L, 15494329627215L, -16543710627703L, 19195002748938L, -27021499672582L, -2843974461324L, -31094000234479L, 36782711597128L, -2994138061394L, -13296735226191L, 12434599665790L, 1018168780474L, 22599210270523L, -13393921626237L, 4180308821946L, 7644041263559L, -5596993382606L, 32771054235260L, 18304725108523L, -26306498312249L, -1844171300858L, 27453978952784L, 24454210431387L, 8257676623845L, 1895790980882L, 25215803791742L, -21321553549928L, -4995701342326L, -18349921228544L, -9114226304244L, -15114273947038L, 31980258234891L, -17699665988242L };
		long[] output0 = new long[]{ -3548859448L, 2463852856L, 3331257340L, -3086501236L, 4294839068L, -3952396072L, -2962629900L, 1614230720L, 2425254828L, -2677704940L, 2935494988L, -3513383064L, -1985387904L, -3157689268L, -1231687880L, 1274704444L, 1528633864L, -3254447708L, -3126432640L, -2126863004L, 1522380024L, -556371500L, -4179884468L, 1495886920L, 542216808L, -2497432004L, -2691775736L, -1139052804L, -3911740392L, 4174985936L, -732252648L, 4198092332L, 1696398124L, 3711825796L, -4037838236L, 3746361880L, 4293170912L, -362903700L, -3730543656L, 618898228L, 4107359880L, 4294728072L, 3249612612L, 559298348L, -2410083104L, 563762520L, -3418997308L, -692240140L, 4154599492L, -3614847152L, -3621304108L, -4260882068L, 3155060876L, -1977443432L, -3457045312L, 3561335644L, -3755209472L, 255811272L, -1233775376L, 1241645260L, -554516876L, -1157630356L, -4132197712L, 2941390628L, -3965951636L, 1677735224L, -2154646856L, -1114330680L, 2297493224L, 4115374112L, -1142697372L, -1648284740L, -3252529856L, 701973024L, 4239530448L, 4094829288L, -650905768L, 761383656L, -554017664L, -3990141692L, -2001160924L, 3569509636L, -235290844L, -3521887624L, -2921001088L, -1393774428L, 1767227060L, -2252955660L, -2271745096L, 1857043500L, 4294515280L, -19184508L, -3483463448L, 3557717640L, 3104026504L, 4251720736L, -320361724L, 3804915100L, 3939812272L, 3157370560L };
		for (int ndx = 0; ndx < 100; ndx++)
		{
			Util.Check("Fixed64.CosFast", Fixed64.CosFast(input0[ndx]), output0[ndx], input0[ndx]);
		}
	}

	// Fixed64.CosFastest
	public static void Fixed64_CosFastest()
	{
		long[] input0 = new long[]{ 63654576629L, 134524284662L, 402042018787L, 323972007550L, -16370869007L, 103403329448L, -81131646237L, -420832800395L, -290410655535L, 211868153498L, -204532335495L, -425005980797L, -136959557063L, -134441016262L, -253244243917L, 311126213144L, 213728981499L, -122703087057L, 96353907844L, 268999771925L, -247710062315L, 164494614676L, -398363022385L, 339897921558L, 181482857084L, -256504611919L, -92876305043L, -244720938713L, 168513740678L, 121829598656L, -368295847171L, -411321342391L, 234040143908L, -242318381912L, -267159203524L, 161033228674L, 69257799032L, 181965134684L, 389897664781L, -205189516695L, -165317832276L, -271728912326L, -157527787073L, -366825093570L, 19577710209L, 78086017436L, -273579262727L, -42897675419L, -389468021181L, 68413503031L, 3226853581502L, -39793590558530L, 18200008228475L, -37869391917634L, -35878332716707L, 32865669155304L, 10339057744814L, -36735263237106L, -28700757913364L, -18936298668817L, -23321709510860L, -26590743712382L, -15984981147443L, 1725647540803L, 15066727107015L, -22270772270370L, -22954939510689L, -32413790475093L, -29677854233819L, 1521925700708L, -18762831548737L, -39773288278520L, -8310402223869L, -12795330505958L, 482087460224L, -40547787958881L, -10747432785004L, 39795880078531L, -10917651825083L, -32609988995185L, -41242207879204L, 37951809997672L, -28474964713259L, -32939649195338L, -33993566675829L, -39985667118619L, -16382469507628L, 18323733348532L, -31303178434576L, -16631916547744L, -37185407837315L, 711370180331L, 3947598421838L, 14976392186973L, -40146915118694L, -32890712475315L, 31761762874790L, 25471246711860L, -8799563504097L, -18721129668717L };
		long[] output0 = new long[]{ -2712985024L, 4275158368L, 3445243216L, 4292414560L, -3366853552L, 2110136172L, 4291107432L, -3561128828L, 310076056L, 2547072552L, -3774529476L, -24706500L, 3824619128L, 4266446704L, -3208905072L, -4222493044L, 3763583856L, -4109376340L, -3880448936L, 4208291092L, 1848870100L, 3544541784L, 318119824L, -3548028760L, -670409112L, -4292489452L, -4009237204L, 3904242220L, 149200604L, -4276452196L, -2576476712L, 216216248L, -2006957036L, 4258295824L, 3473426616L, 4203814532L, -3926255980L, -190811624L, -4068346944L, -3418284984L, 3017553580L, 3895081272L, 2241484328L, -3580876228L, -659239416L, 3370341548L, 2783784140L, -3632167496L, -3910949068L, -4190070312L, -3829880120L, -3519383896L, -3792093388L, -1166823516L, -4280503544L, 3039334096L, 3025025964L, -467186452L, -4162612324L, -1165008480L, 997001200L, -2536478868L, -2343114528L, 4048494208L, -1702599968L, -512334432L, -3101081436L, 2936410520L, -82173892L, -3422151072L, -758645220L, 2411160432L, 4096638804L, 2618747484L, 2826667384L, -4125269352L, -228152968L, -1779486156L, -3929599568L, -3484235252L, -734545176L, -2478444852L, 2009900300L, -3195102216L, -2054364360L, -942391064L, 3872236592L, 4290463720L, 4242258876L, -1699907100L, 4067187232L, -2751418836L, -878670424L, 4204540188L, -1580626244L, 1406731948L, 4210879172L, 2866695484L, 3790543336L, -459258200L };
		for (int ndx = 0; ndx < 100; ndx++)
		{
			Util.Check("Fixed64.CosFastest", Fixed64.CosFastest(input0[ndx]), output0[ndx], input0[ndx]);
		}
	}

	// Fixed32.Cos
	public static void Fixed32_Cos()
	{
		int[] input0 = new int[]{ -1859456, -5782136, -2679685, 378562, -2646711, 7700, 1749646, -1824086, 701628, -5841097, 101231, 2058845, 2614145, -5957098, -3149988, -2795997, -6266090, -3966522, -1103280, 1846728, 5655116, 254974, 6384134, 4562947, -647329, 3582072, -117677, 3000317, -2380079, -1461314, -4479961, 1027068, 861476, -5362883, 3437166, 6042674, 1917072, 1830103, 4174120, 1358892, -1297375, 5877920, -4459248, -5488988, 3914539, -1179288, 4048001, 5854, -1118395, 3223663, -530623374, 225938336, -156371574, 336416445, -195813398, 443916948, -561267039, -68903329, -552770819, 32481546, -642822117, 530292954, -599760724, -439065648, 519246415, 562776313, -535623061, 142342890, -284066537, -263906320, 184053086, -154259370, -158704327, 409142712, -340949598, 633079612, -183937678, 531952234, -590519182, -602164106, 608767129, 643006773, -243488729, 94985660, -270868110, -18574519, -396281616, 405091177, 314885021, 555159721, 510174523, -394749467, 80421120, -270429515, 123351360, -4670484, 532192742, 648500764, -412785245, 484037657 };
		int[] output0 = new int[]{ -65217, 63268, -65461, 57298, -58866, 65084, 397, -59267, -18715, 25961, 1713, 65535, -38013, -64123, -38593, 16343, 13380, -44032, -28154, -65238, -6777, -47998, -65516, 57196, -58935, -20604, -14611, -14820, 12301, -62477, 47671, -65494, 54865, 64803, -37582, -29862, -36622, -61581, 42750, -20285, 38290, -10088, 31332, -31599, -65482, 43004, 31794, 65274, -13880, 31102, -46319, -22629, 82, 65437, -63946, 61304, 63094, -32486, -55424, 48281, 52767, 28885, -64668, -10687, 65515, -16752, 6935, -27392, 41428, 52920, 64733, -47580, -56477, -51053, 65535, -61122, -22275, 39258, 56875, -42588, -52556, -62396, -26115, -30198, 22732, 50903, -46209, 7667, -19484, 15547, 63939, -37278, -21668, -3604, -60901, -35922, -60357, 50938, -62795, -65434 };
		for (int ndx = 0; ndx < 100; ndx++)
		{
			Util.Check("Fixed32.Cos", Fixed32.Cos(input0[ndx]), output0[ndx], input0[ndx]);
		}
	}

	// Fixed32.CosFast
	public static void Fixed32_CosFast()
	{
		int[] input0 = new int[]{ -2376657, -3929027, -3707080, -5032932, -5170466, 2789959, -2707173, 898457, 220060, -1735330, -275053, -4378592, -1337441, -6059667, 790744, -6304688, 1184216, -393863, 4871624, -1175390, 3036979, -2853542, 4828178, -1838662, -1187208, -765574, 4206795, -5436348, -3695686, 3190808, -5544731, -1770784, 2893774, -4191968, 2908616, 3463098, 3583547, -3955554, -433276, 1054958, -4032171, 1692326, -2722748, -1669419, -726949, 2926737, 3943546, 310278, 3058560, 984602, 532267831, -83780873, -494021697, 360113818, -475020272, -607671555, -220360626, 468518234, 270787610, 214870759, 513676486, -382442523, -195945640, 358285159, -274419881, -505786930, -71876753, -369907307, -241468400, 388124530, -333463687, -141382820, -651418731, -273693431, -369681879, -520894741, 642280628, -5600162, 544188647, 243965357, 184447873, -265708323, -194130880, 187331101, 442173053, 184667743, -338416745, 584623660, -599536567, 243173243, -88689487, 545196561, -10983106, 397161588, 247179406, 634585338, -290181688, 24799973, -547882086, -222267975 };
		int[] output0 = new int[]{ 8924, -63301, 65526, 11252, -61444, 10433, -58505, 27189, -64010, 14589, -32302, -43813, 826, -13905, 57494, -24512, 46596, 63103, 31858, 39988, -46440, 59274, -10137, -63977, 48652, 41522, 13793, 19373, 64730, -448, -63998, -20398, 64555, 27812, 60371, -55372, -19198, -51502, 62040, -60630, 17164, 50540, -49907, 61771, 6333, 51117, -58025, 1446, -58898, -50788, -48151, -63758, -5152, -63413, -54823, -5148, 39064, 21038, -50265, 26462, -64326, 6637, 40583, 53091, -59627, -23928, -61863, -29469, -55076, -60152, 28078, -38467, 64911, -32398, 10972, 65534, 14706, -53006, -59560, -64576, 59950, -10568, -62215, 60271, 28807, -64198, 38196, 6331, 65097, -62447, -48738, 65195, -30629, -65364, -11503, 53518, -16447, 9428, -63671, 12434 };
		for (int ndx = 0; ndx < 100; ndx++)
		{
			Util.Check("Fixed32.CosFast", Fixed32.CosFast(input0[ndx]), output0[ndx], input0[ndx]);
		}
	}

	// Fixed32.CosFastest
	public static void Fixed32_CosFastest()
	{
		int[] input0 = new int[]{ -2908094, 1089019, -3828637, 5730915, -2234360, 182906, -877221, 4350317, 744356, -6094855, -5945921, 4405995, 5796895, -6285377, -6249371, 1240248, 4670483, 2720832, 5714721, 1962723, 4879898, -11404, -4257307, 1707183, -1785459, -2233002, 5249602, -3932203, 1344871, -3489072, 4246469, -378793, -1130780, 1110966, -1205851, -5798141, -5382045, -1118624, -2445928, -2314775, -3829701, -1180884, -1451720, -6454110, 1824054, 1260709, 6208669, -378053, 3667387, -5322054, -487823018, 93095052, 108687867, -88794461, -54897790, 365690966, -120727272, 101777878, 96277519, 655224188, 148690365, -349861821, -354815428, -232017082, -378772477, 98647160, -101682387, -186767035, 147407447, 610236998, 6869367, -76449224, -138683904, 147589704, -76117509, -49281705, -511328377, -435679703, 643672927, 350743040, -188807223, -92594352, -104599022, 11332566, -516444199, -323808105, 508792787, 631076384, -489365587, 169083838, 196273158, 15377564, 447220062, -244457025, 275192035, 622251706, -418633051, -568514954, 388721440, -571601732 };
		int[] output0 = new int[]{ 60570, -40274, -19426, 56949, -58613, -61544, 44766, -60179, 23234, 20811, -60893, -20250, 57858, -5804, 29140, 65342, -35925, -51136, 47289, 6779, 38822, 64535, -34745, 39876, -33723, -57994, -528, -62399, -6591, -64603, -25119, 57414, -1600, -21038, 59020, 57262, 59236, -13656, 60926, -47368, -20439, 44202, -64685, -30165, -59254, 60679, 57858, 57054, 54506, 58333, -26441, 56946, 62291, -42290, -27880, 56458, 25045, 32020, 24540, 12438, 53909, -40651, -30334, -63063, 39649, -60018, 60446, -59993, 65044, 64180, -27033, -35870, 18476, -58079, 39277, -27459, 6966, 61896, 32568, 13724, -64980, 43799, 65011, -64942, 23826, -45401, -50704, -58135, -59310, -47192, -37972, -36704, 57599, -32743, -23004, 39994, -36752, -40102, 65252, 41303 };
		for (int ndx = 0; ndx < 100; ndx++)
		{
			Util.Check("Fixed32.CosFastest", Fixed32.CosFastest(input0[ndx]), output0[ndx], input0[ndx]);
		}
	}

	// Fixed64.Tan
	public static void Fixed64_Tan()
	{
		long[] input0 = new long[]{ -640787958L, -1774634619L, -3101818687L, -2799948486L, -1665915160L, -2084859357L, -645335404L, -4010864337L, -4199959503L, -4252378201L, -2004672621L, -746859759L, -1657682196L, -2746521963L, -1891806693L, -656201920L, -2791283129L, -2257250778L, -707866085L, -3899274085L, -2089362230L, -1185468812L, -730826367L, -4134084735L, -888741561L, -4230829002L, -1711613970L, -517195626L, -3432162206L, -1259291125L, -821751179L, -474884355L, -1009196159L, -3631621481L, 80602514L, 205965732L, 60698431L, 91029027L, 360714953L, -68858941L, -364109537L, 358937148L, 421890186L, -317030073L, 395040846L, -77777648L, 365214179L, -399136795L, 145641676L, 22221499L, -290459152L, -34396606L, 300009343L, 290773933L, -105811873L, 199984504L, -98516691L, 322321503L, -1377656L, 81784618L, -355902755L, -346917545L, -371365973L, 19878552L, 183758074L, 107788871L, 317190029L, 136911448L, 699802018L, 3444211286L, 1763423306L, 691605555L, 2714243835L, 2692081886L, 3272399815L, 2524366076L, 1209887332L, 540619212L, 453453742L, 3461743947L, 502690168L, 1577842837L, 1106856360L, 1022636792L, 867505286L, 2849441868L, 671930683L, 1463737383L, 1525099485L, 3118484126L, 971423622L, 2129905407L, 550212848L, 907117206L, 927061036L, 4101126690L, 3041638985L, 1261660983L, 1121883123L, 927578446L };
		long[] output0 = new long[]{ -645585154L, -1883035140L, -3783715937L, -3278042038L, -1754813307L, -2265674002L, -650236082L, -5805541076L, -6374352958L, -6545339705L, -2164161216L, -754479891L, -1745213496L, -3194284445L, -2024456557L, -661355948L, -3264350011L, -2490928147L, -714345834L, -5500699885L, -2271433105L, -1216519748L, -737962481L, -6168057049L, -901647510L, -6474286164L, -1808375633L, -519710123L, -4414418570L, -1296662639L, -831927430L, -476829059L, -1028188884L, -4845470986L, 80611971L, 206123759L, 60702470L, 91042655L, 361565454L, -68864847L, -364984338L, 359775118L, 423252368L, -317607123L, 396158624L, -77786159L, 366096966L, -400289794L, 145697520L, 22221693L, -290902777L, -34397344L, 300498229L, 291218990L, -105833293L, 200129152L, -98533981L, 322927964L, -1377661L, 81794501L, -356719622L, -347673991L, -372294235L, 19878684L, 183870275L, 107811502L, 317767945L, 136957835L, 706061256L, 4439267982L, 1869684036L, 697645913L, 3144430000L, 3110517075L, 4097841031L, 2861743324L, 1242940100L, 543492595L, 455146122L, 4475685083L, 504998224L, 1652878536L, 1132029063L, 1042410482L, 879498131L, 3357064688L, 677466799L, 1523169444L, 1592605580L, 3813417027L, 988334496L, 2323577744L, 553242628L, 920850346L, 941731901L, 6068223660L, 3678127262L, 1299248920L, 1148114626L, 942274196L };
		for (int ndx = 0; ndx < 100; ndx++)
		{
			Util.Check("Fixed64.Tan", Fixed64.Tan(input0[ndx]), output0[ndx], input0[ndx]);
		}
	}

	// Fixed64.TanFast
	public static void Fixed64_TanFast()
	{
		long[] input0 = new long[]{ -1489818993L, -792004551L, -2859191075L, -2502111461L, -3510476787L, -3871433736L, -1959586928L, -484229690L, -3885786402L, -1739908289L, -824053806L, -828558140L, -3051970522L, -1678633555L, -1444785276L, -1423913111L, -2079292915L, -2107778864L, -709196449L, -3349716378L, -1158913029L, -932559601L, -552050507L, -963713811L, -1522793402L, -3555598299L, -539868025L, -1285124835L, -1247210615L, -3426727765L, -3564192063L, -4118306701L, -2069475502L, -2099417299L, -114952791L, 259900616L, 207712649L, 125214813L, -30638541L, -128529399L, -289822391L, -307279794L, 65254145L, 380335959L, 67012718L, -370150011L, 295298927L, 13360601L, 255852333L, 269394732L, -176093380L, -292668057L, -214587744L, 21405210L, 346428285L, -254720984L, -294844632L, -23780709L, -244233287L, 424732043L, 305476443L, -272105784L, 76530965L, -382594233L, 161964704L, -170762287L, 87999956L, -289920067L, 722427826L, 2276305739L, 2580256768L, 470082942L, 723624344L, 3164945621L, 2303630230L, 835175578L, 2475667739L, 629806292L, 2546341705L, 1298838982L, 509537485L, 1647072740L, 2046846237L, 1915644685L, 1737369094L, 2469894926L, 2314955068L, 617965376L, 2623004093L, 624689759L, 1899941719L, 798807062L, 1156206420L, 1267121679L, 1341803976L, 4095363733L, 1535045683L, 1426597140L, 771198933L, 812370936L };
		long[] output0 = new long[]{ -1552604773L, -801096990L, -3372772444L, -2829703652L, -4578604083L, -5427760504L, -2107949246L, -486288238L, -5465189416L, -1841801730L, -834307761L, -838982980L, -3696067495L, -1769692913L, -1501874016L, -1478488030L, -2258585000L, -2295074493L, -715705599L, -4248177098L, -1187877189L, -947487029L, -555106113L, -980210439L, -1589994581L, -4676094570L, -542724839L, -1324901289L, -1283489251L, -4403303105L, -4694914889L, -6119925790L, -2246068256L, -2284337002L, -114980115L, 260217428L, 207874208L, 125250129L, -30639060L, -128567612L, -290261967L, -307803857L, 65259119L, 381331127L, 67018110L, -371067163L, 295763931L, 13360635L, 256154552L, 269747614L, -176191764L, -293120731L, -214765921L, 21405373L, 347179804L, -255019214L, -295307502L, -23780952L, -244496124L, 426119285L, 305991300L, -272469454L, 76539005L, -383607292L, 162041221L, -170851996L, 88012188L, -290360087L, 729311211L, 2516465281L, 2943135922L, 471965639L, 730542270L, 3897327363L, 2553305186L, 845854936L, 2791936511L, 634353500L, 2893564946L, 1339935935L, 511937450L, 1732883183L, 2217330346L, 2053693402L, 1838796264L, 2783732013L, 2568655379L, 622259380L, 3006387124L, 629126361L, 2034433806L, 808138159L, 1184963961L, 1305209506L, 1387234020L, 6050920106L, 1603941455L, 1481490901L, 779587045L, 822190519L };
		for (int ndx = 0; ndx < 100; ndx++)
		{
			Util.Check("Fixed64.TanFast", Fixed64.TanFast(input0[ndx]), output0[ndx], input0[ndx]);
		}
	}

	// Fixed64.TanFastest
	public static void Fixed64_TanFastest()
	{
		long[] input0 = new long[]{ -1257716719L, -2061649571L, -836867404L, -508751608L, -465412672L, -773985352L, -3678288103L, -1036778920L, -2681388043L, -1767658262L, -1190257269L, -4201633425L, -2149090499L, -2333386289L, -3573991924L, -803139833L, -1374074528L, -3737915811L, -1203880887L, -3645185546L, -1594142632L, -1195019099L, -1022254158L, -496695173L, -514576768L, -1387333557L, -1746045454L, -2452512768L, -1013064365L, -2415665065L, -2336538337L, -745333891L, -3507171514L, -1346238997L, -417493938L, -91968198L, -176893469L, 89855597L, 98357709L, -127840043L, 280912527L, -129818341L, -118045638L, -282258288L, 188988339L, 133407825L, 60274302L, 167534210L, 42644897L, -238020568L, -22073734L, 97474284L, -366170845L, -149965240L, 177995887L, -410419384L, -167787884L, -234868952L, 425249354L, 22021767L, 125981570L, -278277707L, -420864226L, -390562921L, 325404016L, -254864387L, -362096183L, -254999629L, 2259509444L, 1446224473L, 4080295421L, 3414974251L, 908139907L, 536320219L, 542913118L, 713954883L, 518577659L, 688903236L, 946381834L, 1137962774L, 3732447429L, 3523763965L, 691814967L, 606371988L, 810502815L, 569016098L, 628974502L, 1657882151L, 2641769765L, 4213867955L, 526285929L, 501705977L, 1747767524L, 527014706L, 2174913628L, 1922714049L, 937059459L, 891657269L, 842432524L, 1411399636L };
		long[] output0 = new long[]{ -1294647340L, -2236572163L, -847514583L, -511154193L, -467258780L, -782397575L, -4950965800L, -1057185512L, -3095420526L, -1874695364L, -1221415018L, -6381534954L, -2349094290L, -2594729944L, -4714591758L, -812543641L, -1422650794L, -5092253960L, -1236149855L, -4874506988L, -1671404539L, -1226562172L, -1041800564L, -498932979L, -517061819L, -1437381535L, -1848992117L, -2760266813L, -1032079654L, -2708456974L, -2599038319L, -752843578L, -4569803119L, -1391824652L, -418833915L, -91986183L, -177004924L, 89872462L, 98379308L, -127884679L, 281333387L, -129864934L, -118081392L, -282685033L, 189122867L, 133458096L, 60280080L, 167629710L, 42647248L, -238281223L, -22074199L, 97495356L, -367082447L, -150035082L, 178109314L, -411693641L, -167883811L, -235119790L, 426663946L, 22022223L, 126024407L, -278687225L, -422236300L, -391664352L, 326049550L, -255181910L, -362978382L, -255317634L, 2494813027L, 1503188859L, 6006860028L, 4377829794L, 921775935L, 539129931L, 545826656L, 720554378L, 521120427L, 694832336L, 961837066L, 1165101305L, 5079099990L, 4605296301L, 697819491L, 610420661L, 820169089L, 572366150L, 633490422L, 1745287852L, 3035659017L, 6421030243L, 528942470L, 504011300L, 1851035934L, 529682174L, 2382799574L, 2062578440L, 952056733L, 904556717L, 853295093L, 1464198267L };
		for (int ndx = 0; ndx < 100; ndx++)
		{
			Util.Check("Fixed64.TanFastest", Fixed64.TanFastest(input0[ndx]), output0[ndx], input0[ndx]);
		}
	}

	// Fixed32.Tan
	public static void Fixed32_Tan()
	{
		int[] input0 = new int[]{ -24734, -15257, -61714, -6899, -11523, -24563, -12727, -62185, -10967, -20088, -57120, -8240, -50106, -24452, -25293, -35401, -61015, -47501, -38544, -37419, -7146, -20337, -17007, -35137, -18009, -53299, -12805, -11293, -16159, -18503, -49927, -38111, -53587, -43939, 4539, 944, 5768, -4132, 5303, 2647, 4376, -4083, -1795, -2588, -5879, 6406, -4141, -6059, 30, 6185, 2385, -281, 625, 471, -274, -5439, 5935, -3347, 1092, -2164, -2845, -5872, 1118, 3576, 1370, -4250, -4104, -5805, 34831, 6776, 40633, 39880, 59162, 7656, 54851, 46305, 8817, 8475, 31214, 18479, 34889, 11740, 35520, 17237, 38482, 16588, 10797, 15600, 14580, 37826, 27267, 32505, 26171, 24336, 17199, 39666, 26277, 25502, 32683, 49216 };
		int[] output0 = new int[]{ -25979, -15538, -90051, -6924, -11643, -25781, -12889, -91425, -11070, -20741, -77931, -8283, -62859, -25653, -26628, -39299, -88061, -58039, -43703, -42096, -7174, -21015, -17399, -38941, -18476, -69296, -12970, -11406, -16494, -19010, -62516, -43080, -69908, -51969, 4546, 944, 5782, -4137, 5314, 2648, 4382, -4088, -1795, -2589, -5894, 6426, -4146, -6076, 29, 6203, 2386, -281, 625, 471, -274, -5451, 5951, -3349, 1092, -2164, -2846, -5887, 1118, 3579, 1370, -4255, -4109, -5820, 38528, 6800, 46787, 45660, 83052, 7691, 72668, 55939, 8870, 8522, 33810, 18984, 38607, 11867, 39461, 17645, 43613, 16951, 10895, 15901, 14825, 42673, 28957, 35461, 27657, 25519, 17605, 45343, 27781, 26872, 35692, 61172 };
		for (int ndx = 0; ndx < 100; ndx++)
		{
			Util.Check("Fixed32.Tan", Fixed32.Tan(input0[ndx]), output0[ndx], input0[ndx]);
		}
	}

	// Fixed32.TanFast
	public static void Fixed32_TanFast()
	{
		int[] input0 = new int[]{ -41534, -8779, -13446, -20148, -9907, -51773, -21847, -19799, -26893, -27948, -59233, -45457, -24164, -8903, -26610, -7017, -13625, -9588, -6614, -10416, -59609, -42325, -33587, -60341, -16284, -8192, -9986, -15932, -29170, -9062, -11548, -22656, -16993, -41561, 1943, 1300, 5781, -3326, -3401, 4864, 4985, 3102, 3453, 2849, 4000, 3644, -4865, -415, 6044, -1450, -470, -814, 1128, -44, 5462, 6446, -1084, -1992, -5341, -5471, 2814, -4756, 4347, -361, -1522, -1082, -952, 3466, 20011, 6696, 8036, 7728, 55106, 8899, 13719, 10930, 7297, 64380, 9450, 27148, 60894, 33969, 17421, 11901, 31127, 42135, 58761, 54154, 50337, 29711, 9964, 25677, 9337, 9428, 9394, 36283, 52654, 12809, 14126, 16006 };
		int[] output0 = new int[]{ -48162, -8832, -13638, -20808, -9984, -66142, -22695, -20425, -28512, -29776, -83237, -54489, -25323, -8959, -28177, -7044, -13825, -9657, -6637, -10505, -84227, -49391, -36874, -86196, -16628, -8235, -10064, -16254, -31263, -9121, -11669, -23605, -17385, -48203, 1943, 1300, 5796, -3329, -3405, 4872, 4994, 3104, 3456, 2850, 4004, 3647, -4874, -416, 6061, -1451, -471, -815, 1128, -45, 5474, 6466, -1085, -1993, -5353, -5484, 2815, -4765, 4353, -362, -1523, -1083, -953, 3469, 20657, 6719, 8076, 7763, 73239, 8954, 13922, 11032, 7327, 98211, 9515, 28815, 87722, 37378, 17843, 12033, 33700, 49093, 82014, 71133, 63305, 31929, 10041, 27077, 9400, 9493, 9458, 40508, 67944, 12974, 14348, 16331 };
		for (int ndx = 0; ndx < 100; ndx++)
		{
			Util.Check("Fixed32.TanFast", Fixed32.TanFast(input0[ndx]), output0[ndx], input0[ndx]);
		}
	}

	// Fixed32.TanFastest
	public static void Fixed32_TanFastest()
	{
		int[] input0 = new int[]{ -14694, -15162, -63083, -58651, -13098, -16177, -21357, -18605, -9822, -32438, -57752, -17434, -10127, -19572, -8529, -6555, -33804, -24491, -40942, -24665, -19106, -21213, -49598, -44135, -44035, -20509, -54238, -38305, -62077, -24777, -13603, -37328, -29867, -38687, -3059, 1360, 3029, -356, 6007, -2827, -2685, -6, 3164, -4052, 2770, 3369, -1257, 2340, -5983, -4504, -6150, -2196, -60, 3380, 5545, 4463, -192, -4520, -4921, 4001, -333, 3228, -305, 1286, -1606, -4069, 3488, -1076, 10593, 21235, 12173, 11381, 26955, 21277, 12502, 60492, 38473, 31962, 8579, 7705, 8089, 11369, 34652, 43314, 23084, 63268, 11931, 52151, 46181, 17478, 8610, 24687, 14613, 9323, 42279, 23189, 6906, 9114, 42645, 21790 };
		int[] output0 = new int[]{ -14943, -15436, -94141, -81713, -13274, -16511, -22142, -19118, -9896, -35385, -79450, -17854, -10208, -20171, -8578, -6578, -37172, -25696, -47274, -25897, -19662, -21982, -61882, -52303, -52139, -21202, -71289, -43377, -91116, -26027, -13800, -41986, -32127, -43929, -3062, 1360, 3031, -357, 6024, -2829, -2687, -7, 3166, -4058, 2771, 3372, -1258, 2341, -6001, -4512, -6169, -2197, -61, 3383, 5558, 4470, -193, -4528, -4931, 4006, -334, 3230, -306, 1286, -1607, -4075, 3491, -1077, 10685, 22006, 12313, 11495, 28584, 22052, 12654, 86602, 43618, 34771, 8628, 7740, 8130, 11483, 38301, 50973, 24084, 94711, 12063, 66887, 55730, 17900, 8659, 25922, 14857, 9386, 49334, 24203, 6931, 9173, 49910, 22625 };
		for (int ndx = 0; ndx < 100; ndx++)
		{
			Util.Check("Fixed32.TanFastest", Fixed32.TanFastest(input0[ndx]), output0[ndx], input0[ndx]);
		}
	}

	// Fixed64.Asin
	public static void Fixed64_Asin()
	{
		long[] input0 = new long[]{ 4216538027L, 4176352891L, -257555978L, 282818102L, 3327365831L, 2499610535L, 1874771530L, 4156518907L, -194070142L, 3932800867L, -3678023867L, 2552045435L, -3967523363L, -3829579743L, 1836771278L, -2273774315L, -4097433039L, 1344355978L, -3854384675L, -922012082L, 3687614135L, 3138439515L, 600127462L, 2426895139L, -927282334L, 1657151550L, 3362533971L, -334414710L, 1733282722L, 1990220514L, 3800990223L, 1077601590L, 3219135867L, 817853894L, -3612634283L, -3391019235L, 2312866051L, -2659761231L, 3718033403L, 2197945827L, -2005756662L, -1921054906L, -657852030L, 3351688055L, -1252129870L, -1533728918L, 325623018L, -1768534254L, -521497998L, 639008306L, 221918254L, -1148761178L, -3504860103L, -680624882L, 794615906L, -3216868783L, -718741866L, 1610516178L, -3084866859L, -2624753015L, 3432043859L, -2085781054L, -1871731110L, 2110676638L, -4163156651L, -460658162L, 3627876863L, -490409962L, 4078021835L, 932823218L, -291673070L, 2857295487L, 1921289870L, -1757363206L, -3211222715L, 1313701746L, -498675750L, 1543406702L, -615942286L, -3688520711L, -2963438763L, 836100930L, -4107884007L, -3200692879L, -2526665035L, 654784106L, 287494398L, -395206546L, -4271729307L, 3899201795L, 1622689926L, -3592617423L, -3869861667L, 2047819122L, 3060869263L, -4214942903L, 4245643499L, 1526438626L, 3219877411L, 3503495587L };
		long[] output0 = new long[]{ 5924470984L, 5734780456L, -257710589L, 283022884L, 3806460544L, 2667899128L, 1940077780L, 5653034868L, -194136237L, 4970084748L, -4415966595L, 2732731584L, -5058559463L, -4728597803L, 1897940912L, -2396154849L, -5438858759L, 1367336168L, -4784094107L, -929244821L, 4434605688L, 3519224008L, 602097624L, 2579130464L, -934641629L, 1701294308L, 3862528660L, -334753529L, 1784154696L, 2069360316L, 4666336356L, 1089240256L, 3639241032L, 822878928L, -4292273631L, -3908626351L, 2442389708L, -2868254997L, 4494646384L, 2307340184L, -2086911157L, -1991672361L, -660451817L, 3845139840L, -1270581545L, -1568351829L, 325935768L, -1822760013L, -522787977L, 641389580L, 222017112L, -1162918629L, -4099650295L, -683506297L, 799220336L, -3635817931L, -722139505L, 1650867420L, -3441497599L, -2823848677L, 3976159260L, -2177926369L, -1936699061L, 2206458596L, -5679708639L, -461545973L, 4320602968L, -491481889L, 5375588288L, 940317176L, -291897725L, 3126091952L, 1991935080L, -1810509365L, -3627306227L, 1335099652L, -499803021L, 1578717544L, -618073361L, -4436374671L, -3270447981L, 841473932L, -5474183499L, -3611482467L, -2701261397L, 657347432L, 287709524L, -395766381L, -6299536687L, 4888258364L, 1664007504L, -4255506559L, -4819471871L, 2134620264L, 3407149032L, -5916127579L, 6094980964L, 1560549636L, 3640361372L, 4097290456L };
		for (int ndx = 0; ndx < 100; ndx++)
		{
			Util.Check("Fixed64.Asin", Fixed64.Asin(input0[ndx]), output0[ndx], input0[ndx]);
		}
	}

	// Fixed64.AsinFast
	public static void Fixed64_AsinFast()
	{
		long[] input0 = new long[]{ -866638486L, -3478934315L, -1551588794L, 2840646079L, -3364285919L, 1659590062L, 1224916246L, 2547470399L, -1764369462L, 3775881455L, 1576774262L, 2032818726L, -2068508830L, -3691313443L, -3956281547L, -1699024366L, -2272864343L, -2966005527L, 342374378L, -522973462L, 3546814735L, -271883886L, -513647950L, -4116147255L, 3605100587L, -994022942L, 2432189859L, 4168438043L, -523265174L, -3291247107L, 1363025542L, 2269852919L, 2618496587L, 175529422L, 1473085070L, -3779471743L, -1907277570L, -2653562791L, -4131374255L, 108712198L, 3724835155L, 2034991294L, -2925804379L, -3752643467L, -1972539762L, 3884838495L, 2770858703L, 4116419071L, 1709133374L, 464926334L, 2352888735L, 2916681731L, -3110903047L, -552116422L, 4251648147L, 3700212695L, 1329680930L, -1730408834L, 3530512787L, 1924704318L, 3522367499L, 1351445498L, -1224231722L, -2768089651L, -1882111382L, 3601888639L, 3709289435L, 2050929042L, -869431218L, 4118157491L, -4086714091L, -3914268847L, -3129598567L, -4061305115L, 47158678L, -2783143855L, -1641046802L, -1055971778L, 2151359803L, 4015229387L, 530085650L, 2610738083L, -1835662626L, 3306775787L, -1349168546L, 2741311107L, 1085788670L, -1124354286L, 218848570L, 2067839670L, -814185378L, 4118098559L, -1889108282L, -1761111278L, 881311994L, -1921577638L, -1035744278L, 4137252567L, 2424435211L, -1279461106L };
		long[] output0 = new long[]{ -872611325L, -4055126155L, -1587507693L, 3103854788L, -3865380179L, 1703963540L, 1242147424L, 2727003528L, -1818222797L, 4613021212L, 1614552604L, 2117599164L, -2158213553L, -4441851311L, -5029420087L, -1746810897L, -2395071677L, -3274032553L, 342736172L, -524267813L, 4173125920L, -272064177L, -514874297L, -5502795459L, 4278385852L, -1003100973L, 2585513864L, 5701408044L, -524561689L, -3749826895L, 1387007192L, 2391524244L, 2815910176L, 175577304L, 1503623028L, -4620568995L, -1976317345L, -2860330317L, -5557290871L, 108723380L, 4508260252L, 2120065560L, -3218783209L, -4564750383L, -2049464561L, 4854273476L, 3011654336L, 5503747736L, 1757824416L, 465835532L, 2490032900L, 3206337104L, -3479050499L, -553641181L, 6135995452L, 4459315052L, 1351888560L, -1781043793L, 4144360264L, 1995787480L, 4130091636L, 1374800244L, -1241433233L, -3008030677L, -1948276525L, 4272482048L, 4477249696L, 2138182168L, -875462925L, 5509855076L, -5403573071L, -4924494883L, -3506261699L, -5323286383L, 47159608L, -3027762309L, -1683877461L, -1066893257L, 2253326192L, 5187834808L, 531433500L, 2806130084L, -1896750905L, 3774081448L, -1372401385L, 2973119520L, 1097684200L, -1137594529L, 218942036L, 2157450140L, -819123965L, 5509647564L, -1956063793L, -1814649593L, 887598572L, -1992290585L, -1046037173L, 5578993644L, 2576113256L, -1299173161L };
		for (int ndx = 0; ndx < 100; ndx++)
		{
			Util.Check("Fixed64.AsinFast", Fixed64.AsinFast(input0[ndx]), output0[ndx], input0[ndx]);
		}
	}

	// Fixed64.AsinFastest
	public static void Fixed64_AsinFastest()
	{
		long[] input0 = new long[]{ -4119418235L, -3575037635L, 690882994L, 1885943178L, 256673130L, 1972190286L, 1751313002L, -3344565227L, 3695692195L, 2739824707L, 1046292202L, -1909314586L, 413198658L, 3810250695L, -2900348627L, -3383337879L, -1107859170L, -236040214L, 2876046191L, -328455194L, -1778867326L, 538676426L, -2462886823L, 1357696406L, 637375574L, -3909845355L, 2269806731L, 2926480007L, -647649814L, -2326230979L, 2547567719L, -1483332074L, 814560306L, -864146386L, 3839680327L, -189844010L, -2375112207L, 573361490L, -1244864638L, 973608462L, -3304969191L, 135386602L, -525079186L, 1773991158L, -3273419827L, -3199838087L, -590067394L, -1404391682L, -3155729947L, -30317422L, 3481248827L, 3495263231L, -3033760919L, -1542076890L, -3795561075L, -363127366L, 3182816483L, 3628153883L, -3046399691L, -128448810L, 3997350851L, 3119800291L, 1598051882L, 1726955878L, -4102710307L, -1765343018L, 1571092402L, -3017622251L, 4265537663L, 1584462678L, 3286741623L, 2613746635L, -3286142871L, -2392529567L, -1318453298L, 2380713367L, -3231211683L, 58089314L, 336148938L, -457753634L, 975189334L, -620768882L, 1787242658L, 3677634903L, -1512512510L, 3347271783L, -2744538451L, -1938330098L, -1363552606L, -92159602L, 922306802L, -1708298794L, -675206114L, 3178551467L, 1271224906L, -2129802186L, 2832302015L, 2042932230L, 1581734170L, 2786890487L };
		long[] output0 = new long[]{ -5515124755L, -4222125487L, 693630316L, 1952868204L, 256860976L, 2049671876L, 1803848224L, -3833540675L, 4449150900L, 2971073952L, 1056277732L, -1978993069L, 413816808L, 4685595088L, -3183025477L, -3895501579L, -1119834149L, -236196561L, 3150286556L, -328793257L, -1834150013L, 539985224L, -2624135401L, 1380682372L, 639529264L, -4913630887L, 2392809856L, 3218526484L, -649909549L, -2459633849L, 2728129200L, -1513936145L, 819114200L, -869618337L, 4750394348L, -189945029L, -2518029841L, 574933132L, -1262250157L, 981561284L, -3771437807L, 135443760L, -526294209L, 1828780436L, -3722732455L, -3611488747L, -591778365L, -1430030217L, -3546152019L, -30327649L, 4057728892L, 4081695464L, -3368020061L, -1576791341L, -4653946099L, -363564853L, 3586167776L, 4319740172L, -3387376467L, -128501665L, 5138882292L, 3493541972L, 1637031708L, 1777143828L, -5457317971L, -1819264849L, 1607974320L, -3345100041L, 6243569220L, 1622374792L, 3743218440L, 2810614016L, -3742295223L, -2538954865L, -1339365297L, 2524752180L, -3658546911L, 58109300L, 336507404L, -458574657L, 983182928L, -622758785L, 1843380124L, 4413939440L, -1545112621L, 3837827772L, -2977166097L, -2011536953L, -1386860065L, -92193469L, 929014924L, -1756739525L, -677768717L, 3579844960L, 1289820868L, -2229530757L, 3091981140L, 2129908824L, 1619434420L, 3032233660L };
		for (int ndx = 0; ndx < 100; ndx++)
		{
			Util.Check("Fixed64.AsinFastest", Fixed64.AsinFastest(input0[ndx]), output0[ndx], input0[ndx]);
		}
	}

	// Fixed32.Asin
	public static void Fixed32_Asin()
	{
		int[] input0 = new int[]{ -7262, -28494, -20980, -6793, 14921, -52298, 37940, 55751, 62123, -28706, -21772, -17856, -15303, 26036, 48695, 4930, -45202, 33804, -16105, -48141, -50594, -11986, 40296, 957, -55432, 10682, -15350, -33107, 9631, -53155, 58645, -14941, 42287, 28140, -65258, -22161, -54027, -31471, -24341, -36316, -52400, -32093, -26164, -57635, -45169, -33606, 54773, 29196, 65341, -51069, -52831, -56122, -18257, 6741, 27583, -60812, -3255, 43598, -16897, -61296, 28587, 5511, -19415, 49743, -21815, 58704, 5392, 22091, 25758, 5321, -6577, 51804, -7390, -45325, -61276, 47035, -51358, 32396, -19409, 43709, 21444, 20988, -32912, -4834, 65211, 49231, -62219, -29990, -64978, 61090, 46630, -32090, 50962, -28580, 632, 7623, 52858, -10371, 29716, -38338 };
		int[] output0 = new int[]{ -7277, -29478, -21356, -6806, 15053, -60554, 40462, 66669, 81700, -29714, -22194, -18085, -15446, 26774, 54891, 4934, -49881, 35517, -16272, -54070, -57802, -12054, 43399, 957, -66068, 10729, -15494, -34707, 9666, -61997, 72620, -15074, 45963, 29085, -96906, -22607, -63513, -32827, -24939, -38492, -60724, -33538, -26915, -70431, -49835, -35287, 64850, 30259, 97886, -58555, -61447, -67382, -18502, 6752, 28470, -77909, -3257, 47699, -17091, -79241, 29581, 5517, -19711, 56479, -22240, 72752, 5398, 22532, 26472, 5326, -6589, 59740, -7406, -50051, -79185, 52460, -59018, 33885, -19705, 47848, 21846, 21364, -34481, -4839, 96414, 55698, -82004, -31150, -94386, 78664, 51881, -33535, 58383, -29574, 632, 7640, 61491, -10415, 30841, -40952 };
		for (int ndx = 0; ndx < 100; ndx++)
		{
			Util.Check("Fixed32.Asin", Fixed32.Asin(input0[ndx]), output0[ndx], input0[ndx]);
		}
	}

	// Fixed32.AsinFast
	public static void Fixed32_AsinFast()
	{
		int[] input0 = new int[]{ 26537, -32853, -62097, -5516, 21043, -39099, 16803, -38468, 2482, 46083, 56081, 29884, -2528, 4928, -17205, -57937, -27112, 50954, 50067, -5511, 55387, -30153, 21533, 30204, 24227, -40022, -64693, -44345, 19578, -3364, 59713, 24549, -62855, -46606, -48363, -11237, 17550, 38139, 39657, 38775, -33108, 41784, 33063, -45526, -60527, -48790, 35973, -19502, 54160, -6966, -30800, -63632, 5096, -30308, -28190, -8845, 11148, -26766, 35792, -4469, -39942, -4386, 7489, -59689, 51906, -34003, 27203, -21457, -12244, 59567, -9951, 284, -54238, -54243, -37939, -51932, 2318, 1524, 25196, 7481, -10460, 20345, -32970, -38991, -38100, 57810, -46082, 32988, 47119, 26018, 43150, -21219, -63189, -21408, 13181, 36814, -31240, 27217, -31897, 39011 };
		int[] output0 = new int[]{ 27322, -34413, -81619, -5523, 21422, -41895, 16992, -41112, 2482, 51108, 67302, 31031, -2529, 4932, -17409, -71071, -27953, 58371, 56979, -5518, 65983, -31334, 21940, 31391, 24816, -43052, -92422, -48708, 19881, -3366, 75107, 25163, -84134, -51848, -54398, -11293, 17766, 40705, 42592, 41491, -34708, 45307, 34655, -50330, -77155, -55034, 38079, -19802, 63747, -6980, -32065, -87108, 5101, -31509, -29142, -8872, 11202, -27573, 37863, -4473, -42951, -4390, 7505, -75050, 59907, -35750, 28052, -21861, -12317, 74755, -9990, 284, -63887, -63896, -40461, -59951, 2318, 1524, 25862, 7497, -10505, 20686, -34549, -41760, -40658, 70799, -51108, 34569, 52581, 26755, 47101, -21609, -85352, -21809, 13271, 39090, -32564, 28067, -33314, 41784 };
		for (int ndx = 0; ndx < 100; ndx++)
		{
			Util.Check("Fixed32.AsinFast", Fixed32.AsinFast(input0[ndx]), output0[ndx], input0[ndx]);
		}
	}

	// Fixed32.AsinFastest
	public static void Fixed32_AsinFastest()
	{
		int[] input0 = new int[]{ -10457, -8104, 58277, 60128, -62551, 34451, 56141, -6196, -57904, -41793, 54372, -55912, 13573, -37224, -59545, 5248, -36952, -19055, 43947, 59632, -53457, 59750, -3040, 27273, -49118, -54268, -2062, 32706, -1889, -9218, 44843, 40637, -32114, 51720, -47597, 63180, 27603, -27562, -41975, -7016, -63867, 25650, 25357, 23376, 37182, 33527, 30743, 39571, -27399, -57602, 8230, 53350, 48805, -25993, 26933, -4672, 60472, -34532, 43711, 57253, -29021, -42100, 61228, 16849, -21101, -51801, 41737, 27388, -55163, -57189, 43180, 56146, -42615, -14572, 57964, -13571, -31142, 39118, 55627, -17109, -19475, 23901, -5430, -9822, 48087, 57029, 57367, 59415, -40748, 22611, -62828, -3399, -5738, -33692, -43530, 43768, 29957, -57028, -21058, 23447 };
		int[] output0 = new int[]{ -10498, -8124, 71795, 76135, -83099, 36295, 67399, -6205, -70989, -45318, 64103, -66958, 13664, -39608, -74700, 5253, -39279, -19323, 48152, 74909, -62495, 75196, -3042, 28129, -55545, -63918, -2063, 34259, -1890, -9246, 49368, 43838, -33578, 59593, -53297, 85331, 28494, -28449, -45554, -7029, -88132, 26351, 26032, 23894, 39556, 35213, 32011, 42496, -28269, -70349, 8250, 62310, 55076, -26726, 27755, -4677, 77017, -36391, 47836, 69622, -30071, -45716, 79058, 17029, -21474, -59725, 45245, 28256, -65545, -69491, 47130, 67409, -46387, -14687, 71117, -13663, -32465, 41932, 66414, -17299, -19763, 24458, -5437, -9856, 54013, 69162, 69858, 74388, -43980, 23076, -84051, -3402, -5746, -35406, -47595, 47912, 31121, -69161, -21428, 23970 };
		for (int ndx = 0; ndx < 100; ndx++)
		{
			Util.Check("Fixed32.AsinFastest", Fixed32.AsinFastest(input0[ndx]), output0[ndx], input0[ndx]);
		}
	}

	// Fixed64.Acos
	public static void Fixed64_Acos()
	{
		long[] input0 = new long[]{ 3756870275L, -4075107963L, 1913562846L, -2342674863L, -2309995867L, 1154759174L, 1994269534L, -141452918L, -1207315838L, -1640435982L, -2560212171L, -2895515383L, -1613778942L, -308965486L, 733522958L, 826586482L, 1891742998L, 361460242L, 2247784851L, -825367742L, -2859555267L, 3136418443L, 170493802L, -802052190L, -3925399091L, -1242260926L, -239262678L, 3710216835L, -2397113399L, -3364668423L, 1442281394L, -2598533415L, -351219498L, -2186002343L, -583219354L, -1496216446L, 3947832815L, -2308167831L, -2628696075L, -2298293607L, -2551777155L, -393851858L, 806223670L, 3264886651L, -252912810L, 3072963127L, -2903992467L, 4227851051L, 1353346686L, 615535666L, -3318267331L, -2693164599L, -1690213802L, 3740253179L, 101245514L, -3674515463L, 49365530L, -1579352258L, -2712243067L, 3227232355L, -2900945443L, 2579019995L, -2039306814L, -2137614710L, 1212249918L, -4256646051L, 1750671410L, -3722743895L, -4020713427L, -2065227890L, 1173720962L, -95056466L, -1304810978L, 251111162L, -2568557883L, 1829263886L, -1964772522L, 1200574446L, 3745827915L, -2703394923L, -2633235755L, -172146434L, -1938097146L, 1282318230L, 4248566203L, -159521302L, 3386647683L, 203494618L, 2007719438L, -1203671186L, 2749385319L, 1232217778L, -3890892059L, -1560961134L, -3692315459L, -835829854L, -2649512339L, -1351128914L, -2242330563L, -291234054L };
		long[] output0 = new long[]{ 2173038140L, 12112851632L, 4763219096L, 9224378873L, 9185503161L, 5577374184L, 4672588072L, 6887997349L, 7970327961L, 8429710537L, 9489412925L, 9924078205L, 8400906429L, 7055751433L, 6009382360L, 5914742776L, 4787557436L, 6384630556L, 4380930964L, 7577053001L, 9875638501L, 3230254284L, 6575980244L, 7553307361L, 11698276372L, 8006787049L, 6985905453L, 2267437668L, 9289655357L, 10612480028L, 5275655004L, 9537340309L, 7098130969L, 9039970645L, 7331545597L, 8274781241L, 1738654240L, 9183335141L, 9575351277L, 9171636521L, 9478916897L, 7140924793L, 5935483768L, 3037522372L, 6999578049L, 3322094632L, 9935569729L, 760284128L, 5369712848L, 6128856360L, 10538619568L, 9657484509L, 8483713537L, 2207082588L, 6645263960L, 11155700188L, 6697152240L, 8363822177L, 9682032697L, 3095027476L, 9931435945L, 3980152508L, 8871461093L, 8983971509L, 5517567452L, 12918870808L, 4943340496L, 11250592576L, 11949881728L, 8900968901L, 5557674820L, 6841583077L, 8072283429L, 6495264412L, 9499816601L, 4856879328L, 8787211757L, 5529732696L, 2195714932L, 9670633693L, 9581094693L, 6918711405L, 8757266969L, 5444342324L, 631903560L, 6906076845L, 2845008088L, 6542948028L, 4657387700L, 7966530669L, 3762882568L, 5496738376L, 11615056408L, 8344063313L, 11190311444L, 7587716421L, 9601736429L, 8120988253L, 9105708797L, 7037976545L };
		for (int ndx = 0; ndx < 100; ndx++)
		{
			Util.Check("Fixed64.Acos", Fixed64.Acos(input0[ndx]), output0[ndx], input0[ndx]);
		}
	}

	// Fixed64.AcosFast
	public static void Fixed64_AcosFast()
	{
		long[] input0 = new long[]{ -2972675579L, -3476215867L, 3953597183L, -876392718L, 3736781999L, 1071756430L, 2906613675L, 2353642331L, 2013843766L, 2566948923L, 2585224355L, 3143758379L, -1030212878L, 4286119151L, 1565500814L, 1566168286L, 222149846L, 973342250L, -2091213618L, -2923196075L, -3348326439L, -2747790503L, -1435496038L, 1477925054L, -519645914L, 4236470479L, -499131702L, -4038817139L, -351540674L, 2562239267L, 183808930L, 3681323687L, -852062286L, -257905326L, -4025686639L, -3451987183L, 169223678L, 3233262867L, 1840503526L, -1118157522L, 1228832318L, -3261961943L, 2484618147L, 3735737811L, 506071754L, 3900594235L, -2032536638L, -3882043915L, 1168505346L, -963516450L, 3236987595L, 672112706L, -3554882591L, -3614101783L, -1237874910L, 4070082219L, 2254247467L, -1819295166L, 3938220491L, 3795278815L, -2724079163L, 2650463519L, -1589784290L, 3746571795L, -1911827302L, 3198867963L, -299146630L, 3522659743L, 4016838495L, 722520702L, -2898022687L, 1283854274L, 3427806019L, 3321911199L, 142938902L, 4208602799L, -937441354L, -876266554L, -3323113995L, -125272854L, 1974039822L, -912055082L, -912355190L, -3682991519L, 3620218967L, 3806663519L, 2941238983L, -1532927798L, -3314997711L, -3800801563L, -1411267354L, -2306448451L, 3590009671L, 2340192007L, -2689045655L, 2873336095L, 2622789643L, 3033013647L, 1352597818L, 1602171086L };
		long[] output0 = new long[]{ 10029783041L, 10797013444L, 1723983944L, 7629091745L, 2214155516L, 5663332252L, 3553879332L, 4255585240L, 4650428828L, 3995271224L, 3972430904L, 3219523684L, 7786857645L, 275733416L, 5144080160L, 5143363300L, 6524271200L, 5764663296L, 8930679809L, 9961740141L, 10586323020L, 9728063793L, 8210189237L, 5237741852L, 7267434573L, 709656364L, 7246775817L, 12002200804L, 7098451333L, 4001142432L, 6562654856L, 2324132296L, 7604253053L, 7004577857L, 11964065884L, 10756034412L, 6577252328L, 3085864188L, 4844411572L, 7877693905L, 5500284936L, 10451040128L, 4097069368L, 2216272060L, 6239274224L, 1854962816L, 8863797833L, 11594251244L, 5563110276L, 7718288805L, 3080199924L, 6071644688L, 10933986112L, 11041516952L, 8002193349L, 1395998356L, 4373348960L, 8625182557L, 1762931448L, 2092422456L, 9697297517L, 3890129072L, 8375068069L, 2194218732L, 8727915089L, 3137775040L, 7045906165L, 2615916456L, 1554147356L, 6020561456L, 9927501829L, 5442742464L, 2777380752L, 2948638204L, 6603554284L, 862765108L, 7691550329L, 7628962873L, 10546297648L, 6871808901L, 4695365544L, 7665553825L, 7665860949L, 11172145036L, 2440173660L, 2067967072L, 3506601848L, 8314029805L, 10533508900L, 11412445748L, 8184506293L, 9181280473L, 2495763288L, 4271642804L, 9652169393L, 3598872768L, 3925189620L, 3378871028L, 5370504424L, 5104626724L };
		for (int ndx = 0; ndx < 100; ndx++)
		{
			Util.Check("Fixed64.AcosFast", Fixed64.AcosFast(input0[ndx]), output0[ndx], input0[ndx]);
		}
	}

	// Fixed64.AcosFastest
	public static void Fixed64_AcosFastest()
	{
		long[] input0 = new long[]{ -95226430L, -1260229086L, -3603915115L, -3848982651L, -2360461059L, -2341833975L, 1539273982L, -2581826495L, 537926610L, -1151510414L, 712556278L, -1164453274L, -2791148467L, -231473950L, -2473728303L, 2482943215L, -732148586L, -2201760067L, -4168614467L, -1423523526L, -4037338315L, -3061186127L, 2542690159L, 3522672763L, -2161179239L, 3703393059L, 1988811898L, -3207353283L, 1715989558L, 1564570102L, -2709154139L, 324512294L, 2066102922L, -630317786L, 4264920871L, -1060698386L, -1603107262L, -1358339834L, 2972436835L, 1667085646L, -2027577758L, 1228098182L, 2224112887L, 2131479998L, -218390546L, 4048153215L, -3810267279L, -473483674L, 518953014L, -877021574L, -689482614L, 529582414L, 2906660819L, -1518845950L, 1344542106L, -1329007598L, 492048050L, -2831620583L, 2607163883L, -1768886822L, -35678578L, 451659970L, -2848758L, 3268323803L, -2737323571L, -3906923311L, 1064411098L, 2134136614L, -201427526L, 2881937379L, -208916818L, -3668776047L, -879229606L, -1540732818L, -3690913063L, -970469202L, -990331718L, -3883757135L, -553903986L, -1914365158L, 3218693043L, -1832671722L, 568660998L, -1701956162L, -2040914578L, 1056230742L, 1712818770L, -710018422L, 2320107403L, 1298961174L, 2742220859L, -3066453975L, 329463578L, 446356362L, -2592203071L, 1815729566L, -3064020355L, 3250756379L, 573836274L, -606434530L };
		long[] output0 = new long[]{ 6841780557L, 8024831961L, 11021281352L, 11517811132L, 9246995197L, 9224740829L, 5172734912L, 9517208757L, 6207288748L, 7911574757L, 6030944452L, 7925010005L, 9784322897L, 6978142789L, 9383876081L, 4097902672L, 7481946301L, 9059533629L, 12449487648L, 8196827685L, 11998714868L, 10155168180L, 4024425604L, 2617360384L, 9012342205L, 2282210332L, 4678063800L, 10369232784L, 4981373616L, 5145562144L, 9678125553L, 6421678592L, 4590158396L, 7378919581L, 508185392L, 7817645469L, 8389008501L, 8127879821L, 3464741464L, 5034699388L, 8858946113L, 5501775344L, 4407385156L, 4515051680L, 6965042293L, 1462279380L, 11432149920L, 7220905677L, 6226391424L, 7629270745L, 7438731909L, 6215690916L, 3554946936L, 8298409981L, 5379701468L, 8096982637L, 6253463148L, 9837597745L, 3944159972L, 8569681785L, 6782209481L, 6294068156L, 6749368581L, 3031593060L, 9714363189L, 11653074612L, 5671563204L, 4511984632L, 6948059489L, 3588319648L, 6955557197L, 11143350280L, 7631523937L, 8321867949L, 11186305672L, 7724860341L, 7745242269L, 11597879972L, 7301842753L, 8731167841L, 3106811784L, 8640127517L, 6176323884L, 8496331661L, 8874128385L, 5679998628L, 4984840060L, 7459522737L, 4294167016L, 5427624904L, 3772348968L, 10162758824L, 6416714588L, 6299397452L, 9530158289L, 4871674728L, 10159251308L, 3058382140L, 6171107092L, 7354809277L };
		for (int ndx = 0; ndx < 100; ndx++)
		{
			Util.Check("Fixed64.AcosFastest", Fixed64.AcosFastest(input0[ndx]), output0[ndx], input0[ndx]);
		}
	}

	// Fixed32.Acos
	public static void Fixed32_Acos()
	{
		int[] input0 = new int[]{ -20007, -25168, 61384, 29479, 55341, -20075, -44039, 2325, -32392, -30211, 60368, 1233, 30780, 3457, -10568, -38116, 63750, -39609, 15476, 7650, -20214, -38460, 62698, 42641, -63404, -21933, 4527, 45309, -49491, -18488, -33590, 822, -2481, -64734, 56332, 8745, -23813, 44733, -15775, 54469, -5379, -41726, -43977, 77, 24988, -24926, -12035, -63965, -48156, 64098, 29491, 58392, -31409, -64430, -54574, -47083, -22330, -46793, 27347, 11738, 40932, -23812, -13718, 51631, -62156, -5989, -61821, 29979, 12660, 46221, 51233, -46518, 41701, 26542, -52505, -44024, -60019, -2915, -47882, 27058, 55637, 2957, 27929, -48054, 17556, -26447, -33303, -3586, 55376, 37880, -34459, -42555, -48150, 38021, -51999, -47103, 37528, -30072, -3301, -34557 };
		int[] output0 = new int[]{ 123275, 128775, 23453, 72367, 37046, 123346, 151235, 100618, 136824, 134342, 26200, 101710, 70902, 99485, 113558, 143621, 15335, 145476, 87320, 95276, 123492, 144045, 19357, 56515, 189125, 125308, 98413, 52915, 159037, 121686, 138211, 102121, 105425, 195624, 35152, 94172, 127314, 53708, 118875, 38643, 108328, 148176, 151152, 102866, 77306, 128513, 115047, 191508, 157035, 13754, 72353, 30885, 135699, 193830, 167432, 155473, 125730, 155058, 74733, 91142, 58734, 127313, 116763, 43484, 184747, 108941, 183715, 71806, 90203, 51641, 44126, 154666, 57743, 75616, 163842, 151215, 178804, 105859, 156632, 75051, 36490, 99985, 74091, 156885, 85170, 130166, 137877, 106531, 36981, 62555, 139228, 149258, 157026, 62382, 163003, 155502, 62985, 134185, 106246, 139343 };
		for (int ndx = 0; ndx < 100; ndx++)
		{
			Util.Check("Fixed32.Acos", Fixed32.Acos(input0[ndx]), output0[ndx], input0[ndx]);
		}
	}

	// Fixed32.AcosFast
	public static void Fixed32_AcosFast()
	{
		int[] input0 = new int[]{ -28641, 23521, -11090, -28842, -52670, 10473, -48845, 7583, 53610, 54985, -52600, 46120, -64446, -65246, 21637, -27560, 13793, -31200, -31460, 29826, -38221, 7301, 40138, 40316, 15145, 28253, -63904, -61856, 13005, 60134, -16016, 35589, -65149, 52211, -9836, -33419, -51488, -8763, -60919, -58453, -43138, 24648, 8339, -65144, 24944, -15044, -43645, -48439, -49151, 41097, 4638, 3192, -64148, 32407, -61871, 29592, 48918, 14129, 21548, -15387, 8841, -52525, 60113, 59011, 5465, -22653, 45734, -51121, 10125, -10478, -41608, -42978, -35817, -38542, 7428, 2665, 64498, 39747, -50164, -35346, 6362, 50071, 52831, 37444, -10040, 46327, 34202, -32021, 48546, 26106, -16802, -82, 35224, 20004, -1759, -56149, 30071, 14863, -5073, -17937 };
		int[] output0 = new int[]{ 132585, 78885, 114087, 132809, 164118, 92425, 158059, 95343, 40162, 37705, 164001, 51783, 193918, 199719, 80892, 131388, 89047, 135462, 135758, 71977, 143750, 95627, 59745, 59519, 87660, 73732, 191231, 183820, 89852, 26795, 119123, 65322, 198761, 42533, 112816, 138012, 162171, 111732, 181140, 175136, 150029, 77673, 94582, 198715, 77354, 118122, 150706, 157453, 158520, 58523, 98301, 99750, 192375, 69045, 183866, 72240, 47717, 88703, 80987, 118475, 94075, 163875, 26848, 29492, 97472, 126074, 52324, 161581, 92778, 113466, 148023, 149817, 140836, 144146, 95499, 100277, 11679, 60238, 160073, 140276, 96571, 45958, 41497, 63088, 113023, 51491, 66960, 136399, 48274, 76092, 119935, 103025, 65756, 82615, 104702, 170378, 71702, 87950, 108021, 121112 };
		for (int ndx = 0; ndx < 100; ndx++)
		{
			Util.Check("Fixed32.AcosFast", Fixed32.AcosFast(input0[ndx]), output0[ndx], input0[ndx]);
		}
	}

	// Fixed32.AcosFastest
	public static void Fixed32_AcosFastest()
	{
		int[] input0 = new int[]{ 4757, -58059, 6970, 26863, 17170, -17918, -26526, 39930, -40556, 999, 30630, -56364, -1241, -8641, 43785, 24306, -39820, -42866, 3515, 24673, 8679, 12220, -34132, 49554, -59212, 24009, -12666, 9714, 28752, -1958, 38129, -15901, -20714, 33309, 25432, -1114, -22435, -39567, -45262, -57657, 7318, 59808, -57001, -17988, 61012, -25974, -64376, -21670, 41754, 39470, 49207, 7402, -54188, 35788, 38918, 58072, 41609, 22952, 20539, 58696, 60284, 29295, -54358, 26937, 28405, -19004, 29886, 30984, 31462, -20635, -18794, 65283, -63140, -4362, -48180, 14407, 3685, 49391, 54078, 32298, 22850, -56532, 33495, 54818, 14370, -34808, -27248, 9033, 59927, 32896, 22812, 20148, 5428, -38422, -52405, 43558, 48630, -18402, 19142, 14480 };
		int[] output0 = new int[]{ 98182, 174265, 95961, 75265, 85581, 121081, 130252, 59997, 146679, 101944, 71060, 170777, 104185, 111607, 55008, 78049, 145751, 149659, 99426, 77652, 94241, 90657, 138864, 46741, 176853, 78369, 115683, 93196, 73173, 104902, 62232, 118995, 124008, 67984, 76829, 104058, 125832, 145435, 152889, 173408, 95611, 27605, 172049, 121154, 24483, 129648, 193546, 125019, 57676, 60573, 47265, 95526, 166718, 65064, 61259, 31594, 57863, 79503, 82063, 30218, 26411, 72566, 167021, 75183, 73560, 122213, 71901, 70658, 70113, 123924, 121994, 5760, 188125, 107309, 157093, 88426, 99256, 46987, 39364, 69154, 79612, 171108, 67767, 38033, 88464, 139659, 131045, 93884, 27311, 68463, 79652, 82475, 97509, 144015, 163658, 55311, 48128, 121585, 83529, 88351 };
		for (int ndx = 0; ndx < 100; ndx++)
		{
			Util.Check("Fixed32.AcosFastest", Fixed32.AcosFastest(input0[ndx]), output0[ndx], input0[ndx]);
		}
	}

	// Fixed64.Atan
	public static void Fixed64_Atan()
	{
		long[] input0 = new long[]{ 634088786L, -1954593794L, 812887066L, -206120466L, -476528258L, 3241427863L, 328101898L, 1029579170L, 1207985522L, -2688635835L, -730690406L, 3784984999L, 2255079503L, 3524364859L, -1945725166L, 3360744739L, 4019724851L, -2860082751L, -3471368747L, -152180182L, -3754627295L, -2928328563L, 2398172255L, 4200974503L, 1447549562L, 1742763810811L, -372321498173L, 2675087235245L, -1146393270533L, -1717231410799L, 2052119718955L, -2847390215325L, -2312582531076L, -1699866446791L, -2812370439309L, -842875898392L, -222839958103L, -1893704946881L, -225838334105L, 1995307686929L, 1685657994784L, 1479601450688L, 3678971695713L, 2321061331080L, -1408390142655L, 2005003898933L, 3360364299564L, 1126363470524L, 3722608831733L, -2500250879164L, 274782005976197184L, 9784591008386450L, 1034178272719L, 129381185413L, 378463318105193L, 23892099477581L, 122361258895722L, 1264283401504979L, 84197338144845856L, 21411152716387976L, 27053375531916L, 15717795445976636L, 832982921428L, 5109085157882L, 47834027251328L, 721640166105L, 11054693882076668L, 61792165491801L, 19723872835530396L, 319444613122590208L, 25148280199229L, 7078744826777974L, 7841263974226186L, 8251840684177L, 53910817888708800L, -14485425319584L, -521642485012L, -5176417340L, -3390641596332309L, -1196157623704851712L, -91879693065223344L, -122529199900867088L, -365227519172611968L, -113846033910L, -36973924953753L, -8877537195L, -636960937254200704L, -17306104064L, -27997319205639792L, -30010374466738660L, -689414735124113408L, -299326810628161088L, -78714122446681L, -17546791166695884L, -2798241752330L, -2443820683895096832L, -26078975190458L, -872687279781276L, -3482138105108L, -27692294872L };
		long[] output0 = new long[]{ 629541200L, -1834286677L, 803384268L, -205962437L, -474587217L, 2776716584L, 327465880L, 1010510992L, 1177564300L, -2402243077L, -723760833L, 3102533128L, 2076562828L, 2951348800L, -1826933945L, 2851725360L, 3231134416L, -2523215865L, -2919485953L, -152116541L, -3085385761L, -2570149825L, 2187190880L, 3325745040L, 1396196608L, 6735934112L, -6696975851L, 6739623108L, -6730427815L, -6735776735L, 6737529752L, -6740040387L, -6738542179L, -6735666999L, -6739959715L, -6724633563L, -6663748867L, -6736777787L, -6664847511L, 6737273808L, 6735575528L, 6734051516L, 6741504756L, 6738571320L, -6733421147L, 6737318516L, 6741029352L, 6730141676L, 6741563532L, -6739140903L, 6746518792L, 6746516972L, 6728681856L, 6603994480L, 6746470116L, 6745746772L, 6746368100L, 6746504268L, 6746518640L, 6746517996L, 6745836992L, 6746517684L, 6724373648L, 6742908280L, 6746133216L, 6720956912L, 6746517188L, 6746220328L, 6746517924L, 6746518800L, 6745785340L, 6746516252L, 6746516504L, 6744283388L, 6746518516L, -6745245387L, -6711156843L, -3771820503L, -6746513415L, -6746518843L, -6746518655L, -6746518707L, -6746518807L, -6584563279L, -6746019943L, -4811184451L, -6746518827L, -5701718027L, -6746518199L, -6746518243L, -6746518831L, -6746518795L, -6746284507L, -6746517807L, -6739926599L, -6746518851L, -6745811515L, -6746497719L, -6741221323L, -6085651567L };
		for (int ndx = 0; ndx < 100; ndx++)
		{
			Util.Check("Fixed64.Atan", Fixed64.Atan(input0[ndx]), output0[ndx], input0[ndx]);
		}
	}

	// Fixed64.AtanFast
	public static void Fixed64_AtanFast()
	{
		long[] input0 = new long[]{ -4092563631L, -594581650L, 3379562763L, -3764476491L, 2506099015L, -2783525311L, -4203505875L, 3437052999L, -1050430870L, -2947069255L, -2715184279L, -134909678L, 3887449803L, 3198751603L, 3693275715L, 817467034L, 2995503555L, -3472852463L, 3477385535L, -745723678L, -1360500706L, 1226913718L, 1768481690L, 4121588495L, 3977195171L, 418337218194L, -2436469875134L, 3962236439845L, -3848234759791L, 2719453083266L, 4052076835886L, 1228879570572L, 1605228630747L, 544520006253L, 3535109295646L, -1023018838476L, 3711686859728L, 2716954895265L, -1152241406536L, -2063610586960L, -4086493295902L, -4254819779981L, 1626117386757L, 838566218390L, 635363786295L, -650167466302L, 3572764971663L, 856180774398L, 2595145315208L, 1859058586865L, 52886073855L, 3564284233811L, 6315548281858082L, 693907234858402816L, 24442805328068280L, 11784370833273L, 15117788398988620L, 765141966344046336L, 33478690649L, 672817299650L, 1990619088799861760L, 11993007260L, 195992162020830336L, 501704910864070L, 202028050098L, 329099264005379L, 68295363769688408L, 14044275607103L, 2042843411594608128L, 390270691171728L, 4178927137582538L, 8429617114L, 16754051234468168L, 2873450073175717L, 13971025021377L, -4740881895370L, -1754538477573176832L, -40795536713L, -19867824559838L, -314679673863879L, -2225866263053601L, -1592870549636238L, -117552201146L, -4608735939807L, -8261993512607815L, -3086654308097247L, -2012902374033238784L, -45561848800571000L, -99218231495519856L, -267083952060569L, -3607826441341731L, -6307457970L, -12972727023616656L, -55217997974L, -2206658308669L, -2735694092522192384L, -111375426996L, -61732748709L, -22780963943803L, -8551120089L };
		long[] output0 = new long[]{ -3269635513L, -590827733L, 2863372176L, -3090962221L, 2268585500L, -2469741389L, -3327038449L, 2898647884L, -1030209129L, -2582916517L, -2421264645L, -134864833L, 3159529292L, 2749397336L, 3050363436L, 807803336L, 2615673732L, -2920382841L, 2923122408L, -738361313L, -1317551469L, 1195084524L, 1677614932L, 3284796756L, 3208350804L, 6702425148L, -6738947763L, 6741863156L, -6741725259L, 6739735624L, 6741966380L, 6731507916L, 6735027124L, 6712642740L, 6741300744L, -6728487107L, 6741548960L, 6739729388L, -6730509287L, -6737579731L, -6742004727L, -6742183379L, 6735174772L, 6724521132L, 6717486184L, -6718147235L, 6741355740L, 6724973776L, 6739410740L, 6736596268L, 6398482400L, 6741343456L, 6746515932L, 6746518828L, 6746518100L, 6744953480L, 6746517632L, 6746518828L, 6198517272L, 6719102240L, 6746518844L, 5269494592L, 6746518760L, 6746482084L, 6655224616L, 6746462804L, 6746518584L, 6745205392L, 6746518844L, 6746471588L, 6746514440L, 4722635812L, 6746517752L, 6746512436L, 6745198504L, -6742627827L, -6746518843L, -6296005879L, -6745590387L, -6746460231L, -6746510567L, -6746507271L, -6589665679L, -6742516239L, -6746516619L, -6746512875L, -6746518843L, -6746518447L, -6746518667L, -6746449787L, -6746513739L, -4178912583L, -6746517431L, -6413122047L, -6738159239L, -6746518847L, -6580976567L, -6448180627L, -6745709107L, -4747384479L };
		for (int ndx = 0; ndx < 100; ndx++)
		{
			Util.Check("Fixed64.AtanFast", Fixed64.AtanFast(input0[ndx]), output0[ndx], input0[ndx]);
		}
	}

	// Fixed64.AtanFastest
	public static void Fixed64_AtanFastest()
	{
		long[] input0 = new long[]{ 1089970842L, 229835174L, 1192538466L, -2121149238L, -3836656179L, -3536376179L, 802125234L, -3969659599L, 171803650L, -763941022L, -625306386L, 1001988482L, 66716854L, 515867586L, 947222254L, -1349372082L, 3352068447L, 107679218L, 3137737331L, 315193138L, 693360398L, -4127760967L, 633820546L, -601009746L, 3376250051L, 1242002174578L, -1590143306740L, 919392146428L, -1332383318620L, -738479402343L, -2745442571278L, 2794729583301L, 1682137754783L, -1093202926509L, 3537391795647L, -3384262927575L, 4104745475911L, 3488240363624L, -1870637166871L, 923722190430L, -3821497167779L, 3627202647689L, -2079148286968L, -821917022382L, -3405008855585L, -3956911275842L, 92028442042L, -2942142915370L, 107741838050L, 3927784227829L, 24972977834L, 2812110447992767L, 1016604697914L, 348055433219848128L, 52302061448329L, 1313846210781632L, 1734345922196752640L, 330050258616L, 7660388881116L, 21109982215951L, 41468351433544512L, 3471945575130432000L, 7783923685938083L, 38902042019L, 520213980592L, 1170188491570361L, 888781319360342784L, 71190862865L, 3070614028852935L, 153745471285927L, 8506568859992L, 3316632973883023872L, 516218238804L, 913338413182L, 95941750629934L, -3796718105208476L, -32365422684536024L, -145689376625L, -3809803588815L, -220074572467370496L, -69497251177L, -113335124208L, -30639123087L, -13603820101891L, -4050512703263L, -299817495994107L, -515721090442796L, -109423751278582480L, -879889421848624640L, -2408847652681L, -103547436240L, -37866279480581024L, -366799236632583L, -331982445258700800L, -146451671243773280L, -17948264262L, -505331766296L, -101278125815L, -158882992453L, -145951421386391L };
		long[] output0 = new long[]{ 1067070200L, 229659828L, 1162845528L, -1970591225L, -3130398897L, -2958018213L, 792777580L, -3203211729L, 171752948L, -755847165L, -620846837L, 984052368L, 66732188L, 513373632L, 931996888L, -1307047353L, 2846280924L, 107687316L, 2710277620L, 314665112L, 687289224L, -3287197301L, 629176604L, -597050377L, 2861210732L, 6731657484L, -6734916491L, 6726440472L, -6732670595L, -6721541163L, -6739799107L, 6739918060L, 6735547724L, -6729641315L, 6741300548L, -6741065491L, 6742024468L, 6741227284L, -6736650783L, 6726534672L, -6741688771L, 6741429500L, -6737646587L, -6724068427L, -6741098543L, -6741855163L, 6546252708L, -6740249327L, 6575316200L, 6741820308L, 6015296324L, 6746512296L, 6728370756L, 6746518800L, 6746166056L, 6746504808L, 6746518844L, 6690616072L, 6744109328L, 6745644752L, 6746518408L, 6746518848L, 6746516484L, 6274139944L, 6711060252L, 6746503080L, 6746518832L, 6487596168L, 6746512848L, 6746398788L, 6744350416L, 6746518848L, 6710784216L, 6726307356L, 6746326592L, -6746513991L, -6746518283L, -6619856515L, -6741673875L, -6746518771L, -6481350471L, -6583731463L, -6148367595L, -6745162167L, -6741963819L, -6746457283L, -6746483075L, -6746518683L, -6746518831L, -6738855527L, -6568427219L, -6746518367L, -6746468563L, -6746518799L, -6746518727L, -5737730483L, -6710008511L, -6564464067L, -6630393479L, -6746392387L };
		for (int ndx = 0; ndx < 100; ndx++)
		{
			Util.Check("Fixed64.AtanFastest", Fixed64.AtanFastest(input0[ndx]), output0[ndx], input0[ndx]);
		}
	}

	// Fixed32.Atan
	public static void Fixed32_Atan()
	{
		int[] input0 = new int[]{ -49999, -16294, 1211, -64449, 12084, -52362, -11309, -64860, -13872, 38527, 45339, 37158, 50117, 829, -29505, 15208, 51361, -25513, 36254, 25468, -60371, -52333, -37395, -20464, -19503, 12582699, -8115798, -18763806, -10008848, -11429047, -9283242, 14355753, 64989565, 42556335, 30822582, 33841935, 19418614, -54237990, 38723752, -35537909, -49459174, 7510630, -9708796, -48969193, -5443571, -17098306, 50684328, -60327201, 12919901, -36952927, 364802, 513259219, 2503361, 6864092, 5821078, 77896, 312564, 326168, 38524285, 1034855621, 40571553, 113802, 18501999, 896064243, 2258204, 649708, 136787590, 114711, 116548826, 9864239, 786221769, 162885125, 9235017, 13330288, 16813538, -7051088, -45748862, -154389, -353113008, -898605801, -63944055, -3127935, -102839188, -481754, -646589, -8826012, -635672, -9845253, -2205465, -69136411, -21545963, -7097470, -4216144, -153042876, -15984568, -124089, -848914537, -4898680, -106242161, -565485 };
		int[] output0 = new int[]{ -42711, -15970, 1210, -50923, 11949, -44179, -11198, -51132, -13670, 34829, 39663, 33802, 42785, 828, -27723, 14943, 43563, -24329, 33114, 24290, -48784, -44161, -33981, -19835, -18956, 102602, -102413, -102714, -102513, -102567, -102480, 102644, 102877, 102843, 102804, 102817, 102722, -102863, 102833, -102822, -102856, 102372, -102500, -102855, -102154, -102691, 102859, -102871, 102611, -102826, 91294, 102935, 101228, 102318, 102206, 57105, 89399, 89949, 102832, 102939, 102838, 68701, 102711, 102939, 101042, 96355, 102912, 68926, 102907, 102508, 102938, 102917, 102478, 102621, 102688, -102333, -102849, -76634, -102930, -102938, -102875, -101570, -102901, -94082, -96323, -102456, -96210, -102506, -100996, -102880, -102743, -102337, -101924, -102914, -102674, -71098, -102937, -102066, -102902, -95381 };
		for (int ndx = 0; ndx < 100; ndx++)
		{
			Util.Check("Fixed32.Atan", Fixed32.Atan(input0[ndx]), output0[ndx], input0[ndx]);
		}
	}

	// Fixed32.AtanFast
	public static void Fixed32_AtanFast()
	{
		int[] input0 = new int[]{ 10732, 43122, -30333, -54804, -32743, -16875, -11268, 42946, 53435, 62946, -20578, -56009, -28838, 22995, -27932, -30921, -26398, -16260, 32173, 47124, -65241, -29993, 25605, -58482, 54983, -1952153, -16180025, 27612400, 63083345, 768643, 827348, -35358817, -22718205, 21406161, -13137426, 49847449, -48526794, 23121071, 59687357, 47794623, -53581286, -12258091, 14263250, -15455154, -16469099, 3214399, -38954878, 33248669, 1618600, -25905530, 112135263, 22104002, 57914702, 415239021, 553268, 1336452, 239726, 526685, 316831, 109864720, 1019834615, 60360717, 241793814, 3235186, 6513809, 195764, 91302155, 26022907, 951194, 3388448, 241289, 27458669, 3880852, 337782382, 113373893, -21247862, -40541203, -1370035, -47866283, -3027146, -1014485, -27643670, -449025, -47619114, -85028029, -433232455, -11347290, -4034803, -4847479, -155525, -91880194, -470687904, -9610906, -415400, -303964691, -2824951, -15031570, -488521, -440370101, -829653 };
		int[] output0 = new int[]{ 10637, 38140, -28409, -45643, -30366, -16517, -11159, 38017, 44828, 50150, -19940, -46346, -27167, 22115, -26405, -28892, -25096, -15939, 29907, 40855, -51325, -28129, 24409, -47749, 45747, -100743, -102677, 102788, 102875, 97369, 97763, -102821, -102753, 102743, -102616, 102857, -102854, 102758, 102872, 102854, -102862, -102592, 102642, -102665, -102682, 101608, -102832, 102814, 100291, -102777, 102905, 102749, 102869, 102933, 95217, 99732, 85454, 94830, 89576, 102904, 102939, 102872, 102926, 101616, 102284, 81773, 102896, 102778, 98435, 101676, 85563, 102787, 101837, 102931, 102906, -102740, -102837, -99810, -102853, -101524, -98715, -102787, -93444, -102852, -102892, -102933, -102564, -101878, -102057, -76807, -102896, -102933, -102496, -92688, -102928, -101422, -102657, -94203, -102933, -97776 };
		for (int ndx = 0; ndx < 100; ndx++)
		{
			Util.Check("Fixed32.AtanFast", Fixed32.AtanFast(input0[ndx]), output0[ndx], input0[ndx]);
		}
	}

	// Fixed32.AtanFastest
	public static void Fixed32_AtanFastest()
	{
		int[] input0 = new int[]{ 36505, 11289, -2883, -51673, -43510, -46531, -42037, 41717, -48001, 16260, 19446, 41992, 4625, 35050, -2257, -16803, 661, -43589, 21383, 8842, 10700, -23404, -42837, -41076, 20961, -36791806, -51356656, -35353886, -64111150, -15665737, -60861205, -5853081, -12436478, -10763283, 15263689, 25712827, -46544742, -53404859, 1427310, 12278906, 29778659, 27899022, -27420136, 41868110, -7773470, 55874132, -15764980, 32322471, 27200334, -242611, 344308198, 2960332, 12839447, 1787655, 48089966, 5531006, 3604620, 1107883, 4959450, 652939075, 93675, 654611905, 165667702, 97990248, 19779257, 426524, 3685959, 204780, 283598, 135377166, 592623, 3588435, 38323112, 128593, 227895961, -300539541, -88222, -2029198, -91222203, -80973229, -226367660, -2189401, -10460788, -9490838, -8202279, -33600843, -454827330, -122464, -84422526, -307713, -1023450, -259131626, -34834093, -15332398, -14566386, -124765115, -428945745, -12071307, -616829, -724906 };
		int[] output0 = new int[]{ 33316, 11176, -2882, -43755, -38422, -40471, -37390, 37162, -41436, 15932, 18897, 37357, 4617, 32194, -2257, -16444, 661, -38477, 20663, 8787, 10604, -22475, -37953, -36705, 20281, -102826, -102859, -102821, -102876, -102668, -102872, -102209, -102597, -102543, 102662, 102776, -102850, -102862, 99937, 102594, 102799, 102789, -102786, 102841, -102390, 102867, -102670, 102811, 102785, -85661, 102931, 101493, 102609, 100541, 102854, 102167, 101751, 99069, 102077, 102937, 62934, 102937, 102918, 102900, 102726, 92950, 101778, 82647, 88060, 102912, 95724, 101746, 102831, 72056, 102925, -102928, -61078, -100827, -102895, -102889, -102924, -100980, -102532, -102490, -102419, -102815, -102933, -70739, -102892, -89194, -98752, -102926, -102819, -102662, -102647, -102908, -102932, -102587, -96005, -97035 };
		for (int ndx = 0; ndx < 100; ndx++)
		{
			Util.Check("Fixed32.AtanFastest", Fixed32.AtanFastest(input0[ndx]), output0[ndx], input0[ndx]);
		}
	}

	// Fixed64.Atan2
	public static void Fixed64_Atan2()
	{
		long[] input0 = new long[]{ -170691606L, -985797L, 985587795L, 834166457359L, -1186041L, -73394060L, 18113357757L, 79905509L, -136997382L, -85784380157L, 29578416L, 14650L, -348445045L, -11034801152L, 41250L, 5129453983L, -29461773L, -1928145L, 857927L, 1385127218055L, -1468238L, -6171920L, 11173767L, 3608045806168L, -145690256L, -9853493L, 33495336790L, 30379L, -176321183L, -15549L, 2009183599489L, 117789966L, -54621L, -130970888L, -11483885961L, -22711880176L, 9954293416965L, 2534859172909L, -10124625L, -170033583L, 7989441L, 3500765656471L, -1382544783182L, -6336094206L, 277715910L, 387813271L, -12316160L, -2830274990360L, 132701464069L, 112121542391L, -401798851761L, -1261932842L, 129295826L, 3107655093121L, -22789057061L, -11744669L, 311820894521L, 58374365L, -83753585L, -1092713636L, 781660942L, 308429693L, -9117219645L, -32561539L, 15333772L, 1699108308596L, -442090586L, -287570241L, -13243033364563L, -13746338741149278L, 3809839445919446L, 191603633885L, -64978997947040336L, -113731958593L, 913209114010853L, 21853276248540L, -7169955315406176L, -1046105979980L, 101574589443966848L, 11210223914L, -177551760667750L, -49359249205458L, 1059284306319L, 86546263074L, -16698807109849L, -802508141918281L, 21530602838L, 214518446727L, -23305858273863396L, -6211787473L, 24435363963L, 461723471234L, -443308231617788416L, -195514117075055104L, 93830109481L, 81619162279732L, -26831850299942552L, -11618600841432470L, 13879999257L, 433825979819718272L };
		long[] input1 = new long[]{ -155322534L, -47185318745L, 987532480341L, 70105811666L, -210546152L, -6678143L, 9575219224991L, 4926274393L, -38110363370L, -13194583821504L, 580030268440L, 158853375L, -615556628L, -14947018744413L, 6365897721L, 6373640951869L, -1248795737L, -80958656973L, 403857771L, 429012894L, -24883764164537L, -56800678L, 6499224536360L, 72658942829L, -3595095840L, -8275625113487L, 366941803919L, 133337529585L, -23206841815118L, -5026874287L, 3695783692217L, 14661873060346L, -15432811143786L, -9193564L, -43378338L, -837027515907L, 2421119387343L, 240164143L, -447665905L, -13061L, 719757L, 53465L, -9849139L, -31937204L, 5513358L, 75224L, -133424463319L, -310623079825L, 4321L, 4079249L, -15368007907L, -123057302L, 13543710155L, 33715L, -185752166L, -30030635L, 148000871320L, 22884676132L, -2478459563L, -10445732535L, 604220001474L, 39173684745L, -9028842L, -3830121127L, 9922254L, 58136387L, -3629254091039L, -74775163732L, -89954120181L, -7678941475L, 107198696069697L, 1449812193020L, -5055410657456840L, -362806026002988L, 9046840257883922L, 538427670171256L, -171472549716912L, -37869883623L, 19911663886001344L, 644950551237497L, -1095756201167464192L, -993819522494227L, 265765670710L, 56074047299082L, -167817700211262L, -459993212866L, 1032561758311L, 58555693955691576L, -11982196352768L, -77976069663560688L, 14591908563L, 9156526271912L, -2416173355231929L, -35439254971150L, 1993231202236L, 1532691044548724736L, -5205951963L, -48054931826L, 3756000700870146L, 2845917777198644736L };
		long[] output0 = new long[]{ -9917453240L, -13492947981L, 4286504L, 6386403388L, -13468843729L, -7136245728L, 8124736L, 69659420L, -13477598425L, -13465114441L, 219012L, 396092L, -11280728205L, -13489866905L, 27824L, 3456548L, -13391729009L, -13492935421L, 9123908L, 6745188588L, -13493037461L, -13028173581L, 7376L, 6660038356L, -13319080545L, -13493032597L, 390971504L, 972L, -13493005081L, -13493024425L, 2138673816L, 34496L, -13493037697L, -7047512372L, -6762742244L, -13376526785L, 5721779124L, 6746111936L, -13395917253L, -6746848736L, 6360633256L, 6746518792L, -6746549444L, -6768167528L, 6661264176L, 6745685764L, -13492641253L, -7216013088L, 6746518720L, 6746362596L, -6910712776L, -7164022272L, 41000908L, 6746518812L, -6781526080L, -11891867649L, 4843204640L, 10955600L, -13347954825L, -13045375293L, 5556260L, 33815248L, -6750772180L, -13456525189L, 4279819112L, 6746371904L, -13492514529L, -13476520209L, -6775692228L, -6746521244L, 6625701840L, 564342008L, -7079998488L, -13491691333L, 432080436L, 174225104L, -6849215252L, -6901932276L, 5915119172L, 74644L, -13492341773L, -13279898101L, 5690739616L, 6628964L, -13067066457L, -6748980696L, 89544120L, 15728L, -6748727008L, -13493037369L, 4434403716L, 216393064L, -6769927580L, -6747297360L, 202033740L, 228708L, -6746519680L, -6746536608L, 15864L, 649714420L };
		for (int ndx = 0; ndx < 100; ndx++)
		{
			Util.Check("Fixed64.Atan2", Fixed64.Atan2(input0[ndx], input1[ndx]), output0[ndx], input0[ndx], input1[ndx]);
		}
	}

	// Fixed64.Atan2Fast
	public static void Fixed64_Atan2Fast()
	{
		long[] input0 = new long[]{ -318950L, -1010617433456L, 539073000668L, 95951477L, -1982856843683L, -3141427266661L, 76341500L, 199776969667L, -384159911146L, -177802144L, 5497456448L, 2525357857L, -1410357L, -168492571L, 1903012L, 1876260L, -3016934196L, -7345813520L, 2094041754162L, 241297151L, -46809721L, -1072626L, 150017110L, 5192023L, -2265181939061L, -49861L, 2643426220L, 602366L, -767968L, -25800534404L, 427001272L, 14902581L, -45042637L, -30564616066L, -44501209L, -485719586L, 67225954742L, 14938103743501L, -107055553L, -5314037943L, 1145942515570L, 7785750L, -1419254315L, -122124783184L, 142507516L, 31076101533L, -6888596L, -17841950826L, 21153543L, 235224292L, -6659440977L, -200945418L, 214267198L, 705844872L, -184149097L, -3981434472L, 45732877069L, 38940368L, -109710115L, -149113593264L, 80577317L, 18420244747L, -2008986671984L, -1165012111928L, 10200922453453L, 3258428067659L, -157500906L, -42494009894L, -295463205747749L, -821298900457L, 186303620463258400L, 29616584240L, -53644390230L, -282778347692071L, 2071067310840498432L, 21522266117774996L, -173528718127359296L, -54087278604220352L, 67247348893411192L, 609416966987L, -144823509936679104L, -7217890182001L, 12657116380194L, 57165525245085L, -35565010658L, -231191589347L, 68217793996253488L, 5689007419007L, -1633558486730L, -958575188291L, 61836456368L, 1330738309036868864L, -2078874774495632L, -558609314547711L, 48864020802822L, 33489398707L, -1048456964251L, -4417186186716378112L, 16141129324L, 2129391464297774592L };
		long[] input1 = new long[]{ -1550115883L, -4344189L, 310438235503L, 435496285593L, -12141201415L, -19854009223L, 795947202159L, 3271905508L, -9518599166176L, -5160610583656L, 32321100L, 3608962495L, -18028893L, -32899871L, 40770720L, 4428855L, -518537220L, -707558229L, 48812604L, 35026241L, -21393654121L, -16721855077350L, 4079811285L, 34240099325L, -17048950265L, -3497069708599L, 1058267047L, 185587501L, -69949329924L, -35091542L, 21728087616911L, 426027719L, -98414518L, -18222217419L, -2912748124606L, -177616544255L, 18074772L, 7930435L, -48690L, -10329941500L, 6733742L, 113373454L, -736870238L, -54329419489L, 4941471L, 1984892567090L, -93045915289L, -113654088595L, 70081L, 6500081L, -5055919739L, -12740098837L, 10392L, 341065910009L, -1579482L, -13294522361L, 12449784603L, 62372485L, -17134827838L, -389755619L, 937446L, 869682L, -473249L, -769203073L, 14522063236L, 10673632L, -3835823L, -57524047L, -2325175942417900L, -7125654105045L, 1751966342596L, 397304264111279360L, -164996616436033L, -769251221051833L, 1073567897071800L, 170001911232434L, -808400609600689792L, -345378194779004L, 371916801681213888L, 1117154497816959232L, -4420457340517226L, -127229590081876L, 12907284064370770L, 610135740288012544L, -322704051850943616L, -38799556617041224L, 96830780290330L, 284074681392071L, -741193555008221L, -3182828365139013632L, 156258458482L, 1323844828614L, -57044858727L, -645636933902236928L, 65700151414056L, 442869601258469L, -24855174326L, -265611408719305312L, 88165210650932L, 181169624588195296L };
		long[] output0 = new long[]{ -13492153977L, -6746537312L, 4502457540L, 946284L, -6772817276L, -6773663216L, 411940L, 6676182736L, -13319791685L, -13492889733L, 6721267768L, 2622303388L, -13157733529L, -7574729476L, 200323804L, 1721100312L, -7477581804L, -7158944012L, 6746418740L, 6127386688L, -13483640273L, -13493037433L, 157856832L, 651264L, -6778844780L, -13493037645L, 5111010056L, 13940412L, -13492990553L, -6752360484L, 84404L, 150175988L, -11649525041L, -9055556352L, -13492972089L, -13481292437L, 6745364092L, 6746516576L, -6748472192L, -11452405777L, 6746493620L, 294486376L, -8803329828L, -8544308884L, 6597649172L, 67238456L, -13492719729L, -12824257697L, 6732289824L, 6627863724L, -9535528308L, -13425300141L, 6746310548L, 8888504L, -6783357080L, -12243301577L, 5604960236L, 2397079468L, -13465538505L, -6757745144L, 6696553468L, 6746316072L, -6746519860L, -6749354644L, 6740404576L, 6746504788L, -6851097624L, -6752332912L, -12950173869L, -13000180785L, 6746478464L, 316L, -13491641321L, -11980037377L, 6744292468L, 6712594428L, -12584865201L, -6773944328L, 768284404L, 2340L, -6877573624L, -13249637941L, 4211764L, 402412L, -13493037237L, -13493012113L, 6740422400L, 86001680L, -13483571721L, -13493036413L, 1618426948L, 6746514584L, -6746636704L, -13489321681L, 2746579648L, 324776L, -6848317692L, -7004469080L, 786308L, 6381974708L };
		for (int ndx = 0; ndx < 100; ndx++)
		{
			Util.Check("Fixed64.Atan2Fast", Fixed64.Atan2Fast(input0[ndx], input1[ndx]), output0[ndx], input0[ndx], input1[ndx]);
		}
	}

	// Fixed64.Atan2Fastest
	public static void Fixed64_Atan2Fastest()
	{
		long[] input0 = new long[]{ -13670826410L, -137250477197L, 1157905405L, 84378930L, -17609L, -141761236L, 1493461771296L, 205469459L, -952025959L, -1688479L, 31477460L, 20689754446L, -11568120L, -251721L, 1267956L, 69510L, -187888091323L, -355253895L, 470932L, 120313508L, -188864607L, -252340830L, 12007451L, 3216131024L, -193314L, -5678L, 28343474257L, 1129116033L, -49866L, -10380L, 28501977L, 13022L, -16746L, -8795L, -34920191606465L, -5378545419L, 214396350L, 78346173595L, -412324223653L, -4259836603145L, 220591099347L, 32362434823L, -58014090537L, -18718578L, 21522326L, 806727185759L, -29250023L, -2763352539450L, 27003295031332L, 1438858534070L, -972931764L, -6907981629818L, 3590425780L, 16184213L, -376777637363L, -5615744L, 1996214758L, 16602530873311L, -18261874672955L, -1239310907207L, 102985955429L, 8986415820L, -35944122804L, -2248774018L, 4254800088L, 74220118L, -807252351055L, -29391296700L, -458621906239944576L, -50335897421812456L, 9563116906383702L, 618928478561L, -15065682057L, -2482224424851431L, 40164838665821360L, 1112159226137239424L, -23572361456652L, -6712003979L, 28092872528L, 20351266667765L, -181569120546473024L, -11351807725027782L, 33481593476L, 1564546512214254080L, -158388390596L, -50794511268869L, 402382917808L, 116870168828L, -673727152965610496L, -2484501366089400320L, 60197666462L, 52570068751381504L, -36906680130429L, -514729954281522560L, 385774192719089L, 43951830595L, -48610754524102264L, -17927475901572L, 8326924111172081L, 1021626008655173376L };
		long[] input1 = new long[]{ -125292212L, -2860740784427L, 7500753624046L, 206468971L, -2988577549675L, -1671831647L, 2406496645021L, 23294269372453L, -16279084384837L, -472335883L, 31767859926L, 4416689049L, -7836396638404L, -13444161234897L, 112172501426L, 863207248L, -376626814347L, -25070858783L, 121744552427L, 32845088813919L, -854968929L, -95824509L, 6155043217L, 19403964224767L, -485589510L, -10357241L, 697227327758L, 1150160931L, -2783434879L, -31091667934L, 4767949445146L, 1838341441L, -234988910202L, -1145137202L, -1258856206211L, -213354L, 25744L, 32335L, -117338830022L, -44451842917L, 2670950L, 40177776891L, -1137704778L, -7396887L, 194710796924L, 310721840L, -1130457665750L, -731178042867L, 10316734L, 1393975388L, -369314L, -2666458007167L, 1816256961865L, 963930807L, -2491864267L, -2331725984132L, 15360L, 2224119L, -3881466532L, -1043431028593L, 514594L, 263090L, -3752739245869L, -280451L, 4009013243L, 874416158102L, -4291375177451L, -593098208L, -323162021298150L, -8401353850250L, 7307823880L, 970802245580179L, -702162135691135872L, -2794197213392433152L, 814882326161825920L, 3364439039470L, -115459998996486976L, -10814471480357998L, 455222115558988L, 9872181463L, -347408581918L, -858644184725L, 26373740412L, 212517969143740L, -34228998654L, -11056518822L, 7714822509L, 355367532177L, -9967015112009962L, -169336779885450048L, 4228147445409238L, 851285598639177216L, -3591352388644008L, -838920198836475904L, 77338405971480640L, 134979895229L, -27635525981L, -3924902926268443L, 98264006616L, 5647338314L };
		long[] output0 = new long[]{ -6785905368L, -13287166001L, 663476L, 1666392324L, -13493037685L, -13129621689L, 2387062132L, 37876L, -13492786493L, -13477676049L, 4256372L, 5843557280L, -13493031365L, -13493037629L, 48580L, 346084L, -11505814089L, -13432171961L, 16616L, 15728L, -12559295981L, -8304593848L, 8379648L, 712364L, -13491327297L, -13490683185L, 174491484L, 3333984128L, -13492960769L, -13493036273L, 25688L, 30440L, -13493037401L, -13493004705L, -6901298204L, -6746689232L, 6746002792L, 6746517080L, -7936903808L, -6791333032L, 6746466820L, 2912199532L, -6830792792L, -8363141228L, 474768L, 6744864224L, -13492926513L, -7856842800L, 6746517216L, 6742357992L, -6748149700L, -8328829616L, 8496552L, 72131440L, -6774922660L, -13493027361L, 6746485804L, 6746518280L, -6747432312L, -9752038852L, 6746497392L, 6746393032L, -13451873585L, -6747054852L, 3502362776L, 364784L, -12694930453L, -6833232384L, -6749547172L, -6747235716L, 6746515572L, 2740012L, -13493037617L, -13489221329L, 211507200L, 6746505864L, -13492160265L, -13493035041L, 265228L, 6744434376L, -6746527064L, -6746843736L, 3881785732L, 6745935480L, -7660503360L, -6747453876L, 6664168232L, 1363826000L, -6810079632L, -7038952388L, 61148L, 264913596L, -13448874105L, -11128876213L, 21439156L, 1351267216L, -6746521288L, -13473408357L, 6746468164L, 6746518832L };
		for (int ndx = 0; ndx < 100; ndx++)
		{
			Util.Check("Fixed64.Atan2Fastest", Fixed64.Atan2Fastest(input0[ndx], input1[ndx]), output0[ndx], input0[ndx], input1[ndx]);
		}
	}

	// Fixed32.Atan2
	public static void Fixed32_Atan2()
	{
		int[] input0 = new int[]{ -55, -1, 4166388, 1368, -96955, -2341, 0, 3, -4222, -7895187, 69, 4, -347, 0, 9520, 2, -1207655, 0, 0, 273441, -148, -1483, 6, 127777, -133022, 0, 17794941, 54885941, -2, -375063, 7, 1, -6931, -5082, -26401, -310637, 23348529, 1645, -1504, -55348, 8261557, 408884, -28678339, -53219, 1494, 2936, -1070430, -24787, 2214599, 463647, -36537, -1016, 262188, 660, -136942772, -85174324, 375, 2257, -41062109, -4026, 98, 343146342, -28509151, -119681363, 626, 13666, -38714759, -1809179, -346397, -201557551, 71297188, 633449, -1247724, -1037811, 5529453, 161218903, -222707620, -18921960, 709424, 1040117, -978768, -195748100, 14978782, 1617450, -8664163, -33652310, 44662034, 1570956, -42322109, -57251171, 3258783, 785311, -135513621, -531402185, 220758668, 482092989, -2189910, -218614, 733414, 193308 };
		int[] input1 = new int[]{ -6605773, -143, 33938, 1168271, -45316208, -941929, 73, 42712160, -3651871, -29203514, 224241, 117752, -224433, -628572, 16895, 1493813, -21191, -174, 2252599, 52603, -1992676, -50827053, 249753625, 985, -18645866, -737486, 628091, 139, -98, -19997186, 3055961, 1075, -1993306, -81299298, -3, -1551326, 1911545, 1, -4115273, -7, 98398, 0, 0, -3442, 38355827, 5079, -40592471, -4, 261, 1237, -217, -1942, 55894, 1952, -33521770, -2019, 369, 9507, -145, -18482111, 225, 544073, -279521, -10440698, 19, 3807346, -330, -33376118, -235571, -71826, 86805, 16952154, -99237140, -301875, 427482, 2477952, -96676, -318879, 39960474, 212303573, -1581517, -152396, 39744686, 16282718, -498332, -3378478, 3436303, 30333490, -415649, -148139, 1212241, 6496669, -4053437, -5949906, 5019136, 2521129, -5047779, -12315477, 4824691, 66763154 };
		int[] output0 = new int[]{ -205887, -205429, 102410, 76, -205747, -205725, 0, 0, -205812, -188583, 20, 2, -205786, 205887, 33628, 0, -104092, 205887, 0, 90488, -205883, -205886, 0, 102438, -205420, 205887, 100631, 102943, -204550, -204658, 0, 60, -205660, -205883, -102950, -192936, 97590, 102904, -205864, -102951, 102163, 102943, -102943, -107175, 2, 34349, -204160, -102953, 102936, 102769, -103332, -174298, 89178, 21367, -118675, -102944, 52000, 15275, -102943, -205873, 26920, 102840, -103585, -108645, 100955, 235, -102943, -202339, -142082, -102966, 102864, 2447, -205064, -121494, 97887, 101936, -102971, -104047, 1163, 321, -169568, -102994, 23620, 6488, -106708, -109500, 97911, 3391, -103586, -103112, 79604, 7883, -104902, -103676, 101454, 102601, -179062, -204724, 9886, 189 };
		for (int ndx = 0; ndx < 100; ndx++)
		{
			Util.Check("Fixed32.Atan2", Fixed32.Atan2(input0[ndx], input1[ndx]), output0[ndx], input0[ndx], input1[ndx]);
		}
	}

	// Fixed32.Atan2Fast
	public static void Fixed32_Atan2Fast()
	{
		int[] input0 = new int[]{ -67, -1, 1, 17, -948895, -50315167, 9965, 85, -733, -31, 25, 2239, 0, -8766, 14696440, 130065, -16, -17, 155714, 25964003, -182603, -23133, 12778168, 0, -156872, -6519, 1, 26, -161967, -1481424, 14341246, 2093, -198104, -21900705, -207, -8972752, 15038355, 88924468, -194111, -167042, 490, 2480762, -71376, -104, 3749, 158300529, -443, -7251, 12281368, 360966860, -5943997, -11224044, 3176456, 2773, -290246398, -18745496, 484112277, 41429369, -42828618, -349209, 30940, 426096, -63379, -462295, 291008, 76, -81, -17504, -9075874, -662808808, 897168881, 6607218, -122661, -1532692, 302655180, 23429719, -7977769, -149864704, 838544884, 384103, -3527475, -214853804, 73763, 98557827, -28279323, -396807002, 378135012, 5797085, -484686, -7746048, 106874, 100817, -404284, -70596054, 672275, 130423218, -202206, -3196383, 46487577, 25117991 };
		int[] input1 = new int[]{ -200729, -1496, 225921594, 35844, -16804895, -2339, 42657404, 178, -1242, -115629955, 24751891, 24829810, -74601, -63776793, 374700, 11163119, -379, -1173, 43099323, 169915, -630890261, -7017698, 2025, 357, -548491, -3153, 49554186, 6560, -1843760, -1761553, 26040, 21095708, -20057968, -279, -743659, -1104507, 44677566, 8, -92073, -82, 120, 81, -23, -2, 3191440, 45000, 0, -5581, 4066, 74118, -13721064, -26869, 0, 6002, -1, -27, 388683, 17808478, 0, -30802001, 0, 10899, -7, -5933308, 2429, 9, -8017316, -581718, -94823576, -1949463, 96330, 18633828, -53597784, -5121102, 14877894, 143538809, -48969384, -11738947, 150136250, 697140303, -746968030, -284418604, 14007802, 903907, -16214637, -6494566, 808017, 24455281, -1932182, -4538347, 15890609, 76787, -406438163, -583200980, 1071054, 1865639, -149412, -152080, 7593680, 163569 };
		int[] output0 = new int[]{ -205866, -205844, 0, 31, -202191, -102946, 15, 29197, -170946, -205887, 0, 5, 205886, -205878, 101273, 763, -203122, -204938, 236, 102515, -205869, -205671, 102933, 0, -187631, -132466, 0, 259, -200145, -160063, 102825, 6, -205240, -102943, -205869, -110969, 21278, 102943, -131969, -102975, 87204, 102941, -102964, -104203, 76, 102925, -102943, -145933, 102922, 102930, -179097, -103099, 102943, 28364, -102943, -102943, 102891, 76338, -102943, -205145, 102943, 101268, -102950, -200791, 102396, 95219, -205887, -203916, -199634, -103135, 102936, 22331, -205738, -186829, 99725, 10603, -195304, -108065, 91333, 36, -205578, -163488, 345, 102342, -137061, -104015, 102803, 15253, -189780, -137676, 440, 60285, -205822, -197993, 36734, 102006, -144647, -106058, 92332, 102517 };
		for (int ndx = 0; ndx < 100; ndx++)
		{
			Util.Check("Fixed32.Atan2Fast", Fixed32.Atan2Fast(input0[ndx], input1[ndx]), output0[ndx], input0[ndx], input1[ndx]);
		}
	}

	// Fixed32.Atan2Fastest
	public static void Fixed32_Atan2Fastest()
	{
		int[] input0 = new int[]{ 0, -117, 509, 0, -926882, -485, 0, 2, -72, 0, 687791, 72535, -116732, 0, 0, 54, -2, -34825767, 5, 39697, -1, 0, 15, 43, -742224, 0, 90712, 400536, -1, -5, 153411, 14861, 0, -139180, -4332, -151792, 117961614, 3475954, -186872, -226, 2740, 169, -23801577, -84, 2587470, 110427616, -5338569, -90796945, 128042642, 1587, -116, -917080, 7561535, 1584, -11742879, -19033686, 220713, 9961, -2076, -5621928, 35412, 339, -195, -706, 65144882, 131002, -4893, -13443, -1649912, -10594304, 226615, 11450070, -805839978, -534588764, 18585732, 267730015, -10215760, -3940916, 248569028, 199553001, -31150782, -10201673, 54082708, 747441, -115734, -113876, 71976, 224103570, -155814, -123551, 3113538, 7464690, -99409, -212460153, 187889, 7332309, -417214915, -25187798, 509081588, 967164 };
		int[] input1 = new int[]{ -45766224, -1057226, 67921, 181369, -140557, -605, 49258, 248, -5244, -3619, 2585757, 119225614, -11724, -28272791, 63640164, 363910521, -1162, -421, 83138289, 55889522, -304972925, -157, 313, 446, -5724, -16385049, 11209825, 9500, -83, -486, 36412, 1293, -1596650, -571570597, -5259, -154, 0, 2227, -25891, -937002, 22766, 7225546, -14, 0, 952, 202, 0, -4450860, 321, 1480413, 0, -1035120, 940, 476, -9, -1358, 40499391, 11317, -914, -823676, 98833, 0, -54398802, -43442, 1, 3, -25927, -143, -110733156, -57466581, 12104979, 355188587, -52635011, -14558588, 205101925, 11639315, -243447714, -2726061, 723377525, 14252781, -80238176, -30778220, 290978, 329193, -4572457, -86282725, 19746733, 175871, -359579, -131208486, 1011701, 875167, -222996, -32596971, 7548522, 248571, -186464700, -166118, 689028374, 435492192 };
		int[] output0 = new int[]{ 205886, -205880, 491, 0, -112806, -161605, 0, 528, -204988, 205886, 17028, 39, -109503, 205886, 0, 0, -205775, -102943, 0, 46, -205887, 205886, 3138, 6300, -103448, 205886, 530, 101389, -205098, -205213, 87675, 97256, 205886, -205872, -160749, -103009, 102943, 102901, -111962, -205872, 7846, 1, -102943, -102943, 102919, 102943, -102943, -106152, 102943, 70, -102943, -158397, 102935, 83815, -102943, -102947, 357, 47274, -130127, -112471, 22543, 102943, -205887, -204823, 102943, 102942, -193663, -103640, -204910, -193939, 1226, 2111, -107218, -104727, 5923, 100096, -203138, -142603, 21678, 98270, -181622, -184920, 102591, 75760, -204228, -205801, 238, 102892, -179098, -205826, 82361, 95294, -178395, -112921, 1631, 100722, -130493, -103375, 41696, 145 };
		for (int ndx = 0; ndx < 100; ndx++)
		{
			Util.Check("Fixed32.Atan2Fastest", Fixed32.Atan2Fastest(input0[ndx], input1[ndx]), output0[ndx], input0[ndx], input1[ndx]);
		}
	}

	public static void TestAll()
	{
		Fixed64_Add();
		Fixed32_Add();
		Fixed64_Sub();
		Fixed32_Sub();
		Fixed64_Mul();
		Fixed32_Mul();
		Fixed64_DivPrecise();
		Fixed32_DivPrecise();
		Fixed64_Mod();
		Fixed32_Mod();
		Fixed64_Min();
		Fixed32_Min();
		Fixed64_Max();
		Fixed32_Max();
		Fixed64_Ceil();
		Fixed32_Ceil();
		Fixed64_Floor();
		Fixed32_Floor();
		Fixed64_Round();
		Fixed32_Round();
		Fixed64_Fract();
		Fixed32_Fract();
		Fixed64_CeilToInt();
		Fixed32_CeilToInt();
		Fixed64_FloorToInt();
		Fixed32_FloorToInt();
		Fixed64_RoundToInt();
		Fixed32_RoundToInt();
		Fixed64_Abs();
		Fixed32_Abs();
		Fixed64_Nabs();
		Fixed32_Nabs();
		Fixed64_Rcp();
		Fixed64_RcpFast();
		Fixed64_RcpFastest();
		Fixed32_Rcp();
		Fixed32_RcpFast();
		Fixed32_RcpFastest();
		Fixed64_Div();
		Fixed64_DivFast();
		Fixed64_DivFastest();
		Fixed32_Div();
		Fixed32_DivFast();
		Fixed32_DivFastest();
		Fixed64_SqrtPrecise();
		Fixed64_Sqrt();
		Fixed64_SqrtFast();
		Fixed64_SqrtFastest();
		Fixed32_SqrtPrecise();
		Fixed32_Sqrt();
		Fixed32_SqrtFast();
		Fixed32_SqrtFastest();
		Fixed64_RSqrt();
		Fixed64_RSqrtFast();
		Fixed64_RSqrtFastest();
		Fixed32_RSqrt();
		Fixed32_RSqrtFast();
		Fixed32_RSqrtFastest();
		Fixed64_Exp();
		Fixed64_ExpFast();
		Fixed64_ExpFastest();
		Fixed32_Exp();
		Fixed32_ExpFast();
		Fixed32_ExpFastest();
		Fixed64_Exp2();
		Fixed64_Exp2Fast();
		Fixed64_Exp2Fastest();
		Fixed32_Exp2();
		Fixed32_Exp2Fast();
		Fixed32_Exp2Fastest();
		Fixed64_Log();
		Fixed64_LogFast();
		Fixed64_LogFastest();
		Fixed32_Log();
		Fixed32_LogFast();
		Fixed32_LogFastest();
		Fixed64_Log2();
		Fixed64_Log2Fast();
		Fixed64_Log2Fastest();
		Fixed32_Log2();
		Fixed32_Log2Fast();
		Fixed32_Log2Fastest();
		Fixed64_Pow();
		Fixed64_PowFast();
		Fixed64_PowFastest();
		Fixed32_Pow();
		Fixed32_PowFast();
		Fixed32_PowFastest();
		Fixed64_Sin();
		Fixed64_SinFast();
		Fixed64_SinFastest();
		Fixed32_Sin();
		Fixed32_SinFast();
		Fixed32_SinFastest();
		Fixed64_Cos();
		Fixed64_CosFast();
		Fixed64_CosFastest();
		Fixed32_Cos();
		Fixed32_CosFast();
		Fixed32_CosFastest();
		Fixed64_Tan();
		Fixed64_TanFast();
		Fixed64_TanFastest();
		Fixed32_Tan();
		Fixed32_TanFast();
		Fixed32_TanFastest();
		Fixed64_Asin();
		Fixed64_AsinFast();
		Fixed64_AsinFastest();
		Fixed32_Asin();
		Fixed32_AsinFast();
		Fixed32_AsinFastest();
		Fixed64_Acos();
		Fixed64_AcosFast();
		Fixed64_AcosFastest();
		Fixed32_Acos();
		Fixed32_AcosFast();
		Fixed32_AcosFastest();
		Fixed64_Atan();
		Fixed64_AtanFast();
		Fixed64_AtanFastest();
		Fixed32_Atan();
		Fixed32_AtanFast();
		Fixed32_AtanFastest();
		Fixed64_Atan2();
		Fixed64_Atan2Fast();
		Fixed64_Atan2Fastest();
		Fixed32_Atan2();
		Fixed32_Atan2Fast();
		Fixed32_Atan2Fastest();
	}
}
