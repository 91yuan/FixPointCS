#include "UnitTest.h"
#include "Fixed32.h"
#include "Fixed64.h"

namespace UnitTest
{
	// Fixed64.Add()
	static void Fixed64_Add()
	{
		static const int64_t input0[] = { (int64_t)0xFFFFFFFFFB2A227CLL, (int64_t)0x16FC9B936LL, (int64_t)0xFFFFFFF736BDE8E3LL, (int64_t)0x8BCE86FFDLL, (int64_t)0x9A5BE5B4FLL, (int64_t)0x61EF58EE0LL, (int64_t)0x13B469D46LL, (int64_t)0x92D4AD4LL, (int64_t)0xFFFFFFFA8CEDA9D2LL, (int64_t)0xFFFFFFFF84A89CDCLL, (int64_t)0x9D45117EFLL, (int64_t)0x419FF589CLL, (int64_t)0xFFFFFFF81EEF07C5LL, (int64_t)0x6DD65BE91LL, (int64_t)0x51B03808ELL, (int64_t)0xFFFFFFFE2DF6E059LL, (int64_t)0x396B27833LL, (int64_t)0x8D81E7B55LL, (int64_t)0xFFFFFFF6F929098ALL, (int64_t)0xFFFFFFF93F81561FLL, (int64_t)0xFFFFFFF6806803CALL, (int64_t)0x66D684EA0LL, (int64_t)0xFFFFFFF80A09F33DLL, (int64_t)0x9A67B94B7LL, (int64_t)0xFFFFFFFE5355A2A9LL, (int64_t)0xFFFFFFFB6A0504D3LL, (int64_t)0x5323AEE0ELL, (int64_t)0xFFFFFFF6FCD00EDALL, (int64_t)0xFFFFFFF75A8D6EABLL, (int64_t)0x3D735BF23LL, (int64_t)0x44879C48CLL, (int64_t)0x50648805ELL, (int64_t)0xFFFFFFFE9903B012LL, (int64_t)0xFFFFFFF70BBD7933LL, (int64_t)0x24D277CCC9A4F000LL, (int64_t)0xC15A6A8982B4C00LL, (int64_t)0x2AF898C6D5F13000LL, (int64_t)0xFB3A589E7674B200LL, (int64_t)0x210E8586C21D0C00LL, (int64_t)0xF5683EC06AD07E00LL, (int64_t)0x3DED1135FBDA2400LL, (int64_t)0x3825AAFCF04B5400LL, (int64_t)0x393CCCADF2799800LL, (int64_t)0xF38355D66706AC00LL, (int64_t)0xD865CD1330CB9A00LL, (int64_t)0x2B6F1FDDD6DE4000LL, (int64_t)0xCE096FC41C12E000LL, (int64_t)0xFD09D1987A13A400LL, (int64_t)0xD51780422A2F0000LL, (int64_t)0x3E67A139FCCF4400LL, (int64_t)0xDDF694F23BED2A00LL, (int64_t)0x2B1B52D6D636A400LL, (int64_t)0x1A1E20E4B43C4000LL, (int64_t)0x11AA1E79A3543C00LL, (int64_t)0xD5CE97F52B9D3000LL, (int64_t)0xF05E6E1160BCDC00LL, (int64_t)0x18727134B0E4E400LL, (int64_t)0xFF5F1DED7EBE3C00LL, (int64_t)0x1919A540B2334C00LL, (int64_t)0xFC7401CB78E80400LL, (int64_t)0xAE750AA95CEA000LL, (int64_t)0x154CCD61AA999C00LL, (int64_t)0x137F5600A6FEAC00LL, (int64_t)0xEB5ACF6B56B59E00LL, (int64_t)0x38088AD5F0111400LL, (int64_t)0x69D12DA8D3A2400LL, (int64_t)0xE69FECC94D3FDA00LL, (int64_t)0xCDBBD9971B77B400LL, (int64_t)0x2BA400D03009C200LL, (int64_t)0x4B779EEB3F67D00LL, (int64_t)0x4E69B02C6515F4LL, (int64_t)0x8F96C95E73LL, (int64_t)0x2E2ED6B724ECCALL, (int64_t)0x4AB4E97FFLL, (int64_t)0x1DCEACE02EFDB60LL, (int64_t)0x706B07A1E1LL, (int64_t)0xAB5C11CC28AE8LL, (int64_t)0x687880F6CD03BLL, (int64_t)0x4AD5C077636EFLL, (int64_t)0x15C48D1EBLL, (int64_t)0x45018F63319CDC0LL, (int64_t)0x163A5D802LL, (int64_t)0x2F7DB9765F6LL, (int64_t)0x4822B93641LL, (int64_t)0x22C1328C9LL, (int64_t)0x14DE99D41LL, (int64_t)0x16127DF1CLL, (int64_t)0xF5110424383C0LL, (int64_t)0x693B0D4D1CLL, (int64_t)0x5EA65B888LL, (int64_t)0xC26C9D3AEB6LL, (int64_t)0x8A91D66ECE1DF80LL, (int64_t)0x740338EE85LL, (int64_t)0x1FE30813D8694D0LL, (int64_t)0xF4F4BE6B8955C0LL, (int64_t)0x697A6E43BB18LL, (int64_t)0xD12A85CCCC6FELL, (int64_t)0xCA809D882LL, (int64_t)0x43C183262E89CLL, (int64_t)0xAFF0069526LL };
		static const int64_t input1[] = { (int64_t)0xFFFFFFF71C830693LL, (int64_t)0xFFFFFFF937A17637LL, (int64_t)0x1771F0146LL, (int64_t)0xFFFFFFFA55949F71LL, (int64_t)0xFFFFFFF9ADD99E48LL, (int64_t)0x2A0DF3B79LL, (int64_t)0xFFFFFFF99276A5B0LL, (int64_t)0xFFFFFFF7BA854C44LL, (int64_t)0x77BE85372LL, (int64_t)0x3FD8489BBLL, (int64_t)0x5D69389B7LL, (int64_t)0x189F8A7FFLL, (int64_t)0xFFFFFFF9388B8E2FLL, (int64_t)0xFFFFFFFBA8B22E3CLL, (int64_t)0x7B1240483LL, (int64_t)0xFFFFFFF79A5C3D9CLL, (int64_t)0xFFFFFFFF28AE794BLL, (int64_t)0x78C34D2FBLL, (int64_t)0xFFFFFFF6F1935CA2LL, (int64_t)0x5D66EED0FLL, (int64_t)0x7A375BAE3LL, (int64_t)0x38DC1D3DBLL, (int64_t)0xFFFFFFFF65BFC5FBLL, (int64_t)0xFFFFFFF79042542CLL, (int64_t)0x6992CD54LL, (int64_t)0x43BB9567CLL, (int64_t)0xFFFFFFF6ECBAA0D2LL, (int64_t)0x3E768E6CLL, (int64_t)0xFFFFFFFEAE9FDC2ALL, (int64_t)0xB5B7EAADLL, (int64_t)0x53C2ED84ELL, (int64_t)0xFFFFFFFACE089792LL, (int64_t)0xFFFFFFFB80FBA88CLL, (int64_t)0xFFFFFFF713318E93LL, (int64_t)0xFF652FC17ECA6000LL, (int64_t)0xE524D9744A49B200LL, (int64_t)0xDF49B5903E936C00LL, (int64_t)0x3F639D9CFEC73C00LL, (int64_t)0xCF3F99591E7F3200LL, (int64_t)0x10A1D6C3A143AC00LL, (int64_t)0x276F4E50CEDE9C00LL, (int64_t)0x38BD467BF17A8C00LL, (int64_t)0x1D81A56ABB034C00LL, (int64_t)0xC8A175831142EC00LL, (int64_t)0x319BDB6DE337B800LL, (int64_t)0x17348BAAAE691800LL, (int64_t)0xD0E65989A1CCC00LL, (int64_t)0x8E13F3991C28000LL, (int64_t)0xEC78434D58F08600LL, (int64_t)0xF9292AAD72525600LL, (int64_t)0xE6946A854D28D600LL, (int64_t)0x3665D8F7ECCBB000LL, (int64_t)0x4A2161889442C00LL, (int64_t)0x118F5F56A31EC000LL, (int64_t)0x3112A534E2254C00LL, (int64_t)0xF47409BB68E81400LL, (int64_t)0x33A33573E7466C00LL, (int64_t)0xEB997AD95732F600LL, (int64_t)0x2220B35DC4416800LL, (int64_t)0xE49A83BB49350800LL, (int64_t)0x2A80EE15D501DC00LL, (int64_t)0xE8A043D451408800LL, (int64_t)0xE4A654FC494CAA00LL, (int64_t)0xDE1FD429BC3FC00LL, (int64_t)0xFB7ACB0076F59600LL, (int64_t)0x11C8BA38A3917400LL, (int64_t)0x4CF3314899E6800LL, (int64_t)0xC04D962D009B2C00LL, (int64_t)0x18LL, (int64_t)0x91D84LL, (int64_t)0x70249LL, (int64_t)0x8C1DLL, (int64_t)0x5B3388LL, (int64_t)0x4LL, (int64_t)0x63LL, (int64_t)0x6E6CLL, (int64_t)0x38FCD6BLL, (int64_t)0x20075CLL, (int64_t)0x1514211LL, (int64_t)0x1F0LL, (int64_t)0xAFF8BFLL, (int64_t)0x10A8A07LL, (int64_t)0x2771LL, (int64_t)0x458CD88LL, (int64_t)0xF71994BDLL, (int64_t)0x5LL, (int64_t)0x4D8B5LL, (int64_t)0x5819LL, (int64_t)0xF76FELL, (int64_t)0xF4EC09ELL, (int64_t)0x1E13650LL, (int64_t)0x198CEA89LL, (int64_t)0xC369LL, (int64_t)0x73EE4A1LL, (int64_t)0x1LL, (int64_t)0x13BE8621LL, (int64_t)0x1CALL, (int64_t)0x73CLL, (int64_t)0x4BD1ELL, (int64_t)0x1C0BALL };
		static const int64_t output0[] = { (int64_t)0xFFFFFFF717AD290FLL, (int64_t)0xFFFFFFFAA76B2F6DLL, (int64_t)0xFFFFFFF8ADDCEA29LL, (int64_t)0x3127D0F6ELL, (int64_t)0x35397F997LL, (int64_t)0x8BFD4CA59LL, (int64_t)0xFFFFFFFACDBD42F6LL, (int64_t)0xFFFFFFF7C3B29718LL, (int64_t)0x208D5FD44LL, (int64_t)0x3822D2697LL, (int64_t)0xFAAE4A1A6LL, (int64_t)0x5A3F8009BLL, (int64_t)0xFFFFFFF1577A95F4LL, (int64_t)0x28617ECCDLL, (int64_t)0xCCC278511LL, (int64_t)0xFFFFFFF5C8531DF5LL, (int64_t)0x2BF60F17ELL, (int64_t)0x1064534E50LL, (int64_t)0xFFFFFFEDEABC662CLL, (int64_t)0xFFFFFFFF15F0432ELL, (int64_t)0xFFFFFFFE23DDBEADLL, (int64_t)0x9FB2A227BLL, (int64_t)0xFFFFFFF76FC9B938LL, (int64_t)0x136BDE8E3LL, (int64_t)0xFFFFFFFEBCE86FFDLL, (int64_t)0xFFFFFFFFA5BE5B4FLL, (int64_t)0xFFFFFFFC1EF58EE0LL, (int64_t)0xFFFFFFF73B469D46LL, (int64_t)0xFFFFFFF6092D4AD5LL, (int64_t)0x48CEDA9D0LL, (int64_t)0x984A89CDALL, (int64_t)0xFFFFFFFFD45117F0LL, (int64_t)0xFFFFFFFA19FF589ELL, (int64_t)0xFFFFFFEE1EEF07C6LL, (int64_t)0x2437A78E486F5000LL, (int64_t)0xF13A801CE274FE00LL, (int64_t)0xA424E5714849C00LL, (int64_t)0x3A9DF63B753BEE00LL, (int64_t)0xF04E1EDFE09C3E00LL, (int64_t)0x60A15840C142A00LL, (int64_t)0x655C5F86CAB8C000LL, (int64_t)0x70E2F178E1C5E000LL, (int64_t)0x56BE7218AD7CE400LL, (int64_t)0xBC24CB5978499800LL, (int64_t)0xA01A88114035200LL, (int64_t)0x42A3AB8885475800LL, (int64_t)0xDB17D55CB62FAC00LL, (int64_t)0x5EB10D20BD62400LL, (int64_t)0xC18FC38F831F8600LL, (int64_t)0x3790CBE76F219A00LL, (int64_t)0xC48AFF7789160000LL, (int64_t)0x61812BCEC3025400LL, (int64_t)0x1EC036FD3D806C00LL, (int64_t)0x23397DD04672FC00LL, (int64_t)0x6E13D2A0DC27C00LL, (int64_t)0xE4D277CCC9A4F000LL, (int64_t)0x4C15A6A8982B5000LL, (int64_t)0xEAF898C6D5F13200LL, (int64_t)0x3B3A589E7674B400LL, (int64_t)0xE10E8586C21D0C00LL, (int64_t)0x35683EC06AD07C00LL, (int64_t)0xFDED1135FBDA2400LL, (int64_t)0xF825AAFCF04B5600LL, (int64_t)0xF93CCCADF2799A00LL, (int64_t)0x338355D66706AA00LL, (int64_t)0x1865CD1330CB9800LL, (int64_t)0xEB6F1FDDD6DE4200LL, (int64_t)0x8E096FC41C12E000LL, (int64_t)0x2BA400D03009C218LL, (int64_t)0x4B779EEB3FF9A84LL, (int64_t)0x4E69B02C6C183DLL, (int64_t)0x8F96C9EA90LL, (int64_t)0x2E2ED6B7802052LL, (int64_t)0x4AB4E9803LL, (int64_t)0x1DCEACE02EFDBC3LL, (int64_t)0x706B08104DLL, (int64_t)0xAB5C120525853LL, (int64_t)0x687880F8CD797LL, (int64_t)0x4AD5C08C77900LL, (int64_t)0x15C48D3DBLL, (int64_t)0x45018F633C9C67FLL, (int64_t)0x164B06209LL, (int64_t)0x2F7DB978D67LL, (int64_t)0x48271203C9LL, (int64_t)0x3232CBD86LL, (int64_t)0x14DE99D46LL, (int64_t)0x1612CB7D1LL, (int64_t)0xF51104243DBD9LL, (int64_t)0x693B1CC41ALL, (int64_t)0x5F9B47926LL, (int64_t)0xC26CBB4E506LL, (int64_t)0x8A91D67066ECA09LL, (int64_t)0x740339B1EELL, (int64_t)0x1FE308144C57971LL, (int64_t)0xF4F4BE6B8955C1LL, (int64_t)0x697A82024139LL, (int64_t)0xD12A85CCCC8C8LL, (int64_t)0xCA809DFBELL, (int64_t)0x43C183267A5BALL, (int64_t)0xAFF00855E0LL };
		for (int ndx = 0; ndx < 100; ndx++)
			Util::Check("Fixed64::Add", Fixed64::Add(input0[ndx], input1[ndx]), output0[ndx], input0[ndx], input1[ndx]);
	}

	// Fixed32.Add()
	static void Fixed32_Add()
	{
		static const int32_t input0[] = { (int32_t)0xFFF66A9D, (int32_t)0xFFFD2D86, (int32_t)0x76BF6, (int32_t)0xFFFB69C0, (int32_t)0xFFFE8F7B, (int32_t)0x6EC55, (int32_t)0xBB4, (int32_t)0x97EC5, (int32_t)0x61BD6, (int32_t)0x1114F, (int32_t)0x7255F, (int32_t)0x15A3B, (int32_t)0xFFFC760C, (int32_t)0xFFF82369, (int32_t)0xFFF96A11, (int32_t)0xFFFF8925, (int32_t)0xFFFE5988, (int32_t)0x9A1F1, (int32_t)0xFFFFD885, (int32_t)0x1870F, (int32_t)0x104A2, (int32_t)0xFFF90447, (int32_t)0x280D7, (int32_t)0xFFFB6A0C, (int32_t)0x66C71, (int32_t)0x3D56D, (int32_t)0x9B338, (int32_t)0x7489E, (int32_t)0xFFF70BB8, (int32_t)0xFFFC750C, (int32_t)0xFFF9B7A1, (int32_t)0xFFFF5C60, (int32_t)0xFFF7B917, (int32_t)0xFFFABE16, (int32_t)0x2C8781AA, (int32_t)0x25F3EB4D, (int32_t)0xC4B77AF, (int32_t)0xE2E01355, (int32_t)0xBF4A372, (int32_t)0xEB868492, (int32_t)0x3FC18A7C, (int32_t)0x3A2D6924, (int32_t)0x8F0AA1, (int32_t)0x70CD712, (int32_t)0xE0A40B98, (int32_t)0xE1FEC7C, (int32_t)0xCF2F8AB3, (int32_t)0xD530122, (int32_t)0xD909DF7C, (int32_t)0x268A97B, (int32_t)0x2D8D05CF, (int32_t)0x32151519, (int32_t)0xF805491, (int32_t)0xCBD35BA0, (int32_t)0xE1A10FE4, (int32_t)0xF1CC28C5, (int32_t)0x11FB5983, (int32_t)0xE3E2CABD, (int32_t)0x1907BB9A, (int32_t)0x13711619, (int32_t)0xE5427849, (int32_t)0x3857DF1A, (int32_t)0x16431B0A, (int32_t)0xD4FA6FF6, (int32_t)0x19EDC665, (int32_t)0x102F7299, (int32_t)0x1D5B943F, (int32_t)0xFE59D285, (int32_t)0x1FE3C, (int32_t)0x171925, (int32_t)0x11A0417, (int32_t)0x2648E11, (int32_t)0x6532F, (int32_t)0x30777, (int32_t)0x28E6B, (int32_t)0xA8DEC, (int32_t)0x14153, (int32_t)0x586234, (int32_t)0x220E8D4E, (int32_t)0xFE3819C, (int32_t)0x164B8, (int32_t)0x1642C, (int32_t)0x7D2A4C, (int32_t)0xDC5ED, (int32_t)0xB79D93, (int32_t)0x8FDB6, (int32_t)0x102E0135, (int32_t)0x1B2AD3, (int32_t)0x27412BD, (int32_t)0x20DDB, (int32_t)0x411946F, (int32_t)0x1A10F5A, (int32_t)0x190C4AB, (int32_t)0x636C1E5, (int32_t)0x551B6D, (int32_t)0x22FBA5A9, (int32_t)0x519517A, (int32_t)0x146C2, (int32_t)0x17AF63, (int32_t)0x4196349 };
		static const int32_t input1[] = { (int32_t)0xFFFB2E3D, (int32_t)0xFFFD7BF4, (int32_t)0x79D59, (int32_t)0xFFF8E685, (int32_t)0xFFFDC3B9, (int32_t)0xFFF90B80, (int32_t)0x190D1, (int32_t)0x1ED8A, (int32_t)0x2EDED, (int32_t)0xFFF766D6, (int32_t)0xFFF6506B, (int32_t)0xFFFA3775, (int32_t)0x175FF, (int32_t)0xFFFD9E40, (int32_t)0x35F13, (int32_t)0xAB5D, (int32_t)0xFFFF5703, (int32_t)0xFFFBE456, (int32_t)0x6F052, (int32_t)0x9E00F, (int32_t)0x97CEA, (int32_t)0x76655, (int32_t)0x4ACAD, (int32_t)0x201EA, (int32_t)0xFFFEFD4F, (int32_t)0x4BA0C, (int32_t)0x7391D, (int32_t)0x2C316, (int32_t)0x8730D, (int32_t)0xFFFFA6CC, (int32_t)0xFFFD59AF, (int32_t)0xFFFDC901, (int32_t)0xFFFFA126, (int32_t)0xFFF7B7F7, (int32_t)0x43A16E4, (int32_t)0x2F9FC347, (int32_t)0x37FD44EE, (int32_t)0xD8E66277, (int32_t)0x19C0B1F7, (int32_t)0xE1F05E, (int32_t)0x3F720DA5, (int32_t)0xC28BA78F, (int32_t)0xEECCB52E, (int32_t)0xD6DDE67A, (int32_t)0xEC350275, (int32_t)0x2B6872A9, (int32_t)0xF10C7CA, (int32_t)0xE0E752C1, (int32_t)0xF8A37EC4, (int32_t)0xF3AAE221, (int32_t)0x103810F9, (int32_t)0xFCF5B12D, (int32_t)0x2252E031, (int32_t)0xF1CD9146, (int32_t)0x295EB477, (int32_t)0xFABB58E7, (int32_t)0xD3F891CB, (int32_t)0xE868ACF4, (int32_t)0x9D857B9, (int32_t)0x38838D58, (int32_t)0xC6440C4A, (int32_t)0xC769AB63, (int32_t)0xE3EA4E1B, (int32_t)0xEB949AAD, (int32_t)0x2D1F10AC, (int32_t)0x107498FD, (int32_t)0x30C4583C, (int32_t)0x10D5B82D, (int32_t)0xA5A6, (int32_t)0xDDBA, (int32_t)0xD, (int32_t)0x6, (int32_t)0x2854, (int32_t)0xB29B, (int32_t)0x27, (int32_t)0x702, (int32_t)0x29, (int32_t)0x342, (int32_t)0xB8, (int32_t)0xAA6, (int32_t)0x68, (int32_t)0xE00, (int32_t)0x61AC, (int32_t)0x2, (int32_t)0x2A5, (int32_t)0x2, (int32_t)0x211D, (int32_t)0x540, (int32_t)0x177D, (int32_t)0x228, (int32_t)0xB6CD, (int32_t)0xF7DC, (int32_t)0x453, (int32_t)0xA856, (int32_t)0x3, (int32_t)0xAF, (int32_t)0x72E, (int32_t)0xA, (int32_t)0x177, (int32_t)0xFB70 };
		static const int32_t output0[] = { (int32_t)0xFFF198DA, (int32_t)0xFFFAA97A, (int32_t)0xF094F, (int32_t)0xFFF45045, (int32_t)0xFFFC5334, (int32_t)0xFFFFF7D5, (int32_t)0x19C85, (int32_t)0xB6C4F, (int32_t)0x909C3, (int32_t)0xFFF87825, (int32_t)0xFFFD75CA, (int32_t)0xFFFB91B0, (int32_t)0xFFFDEC0B, (int32_t)0xFFF5C1A9, (int32_t)0xFFFCC924, (int32_t)0x3482, (int32_t)0xFFFDB08B, (int32_t)0x58647, (int32_t)0x6C8D7, (int32_t)0xB671E, (int32_t)0xA818C, (int32_t)0x6A9C, (int32_t)0x72D84, (int32_t)0xFFFD6BF6, (int32_t)0x569C0, (int32_t)0x88F79, (int32_t)0x10EC55, (int32_t)0xA0BB4, (int32_t)0xFFFF7EC5, (int32_t)0xFFFC1BD8, (int32_t)0xFFF71150, (int32_t)0xFFFD2561, (int32_t)0xFFF75A3D, (int32_t)0xFFF2760D, (int32_t)0x30C1988E, (int32_t)0x5593AE94, (int32_t)0x4448BC9D, (int32_t)0xBBC675CC, (int32_t)0x25B55569, (int32_t)0xEC6874F0, (int32_t)0x7F339821, (int32_t)0xFCB910B3, (int32_t)0xEF5BBFCF, (int32_t)0xDDEABD8C, (int32_t)0xCCD90E0D, (int32_t)0x39885F25, (int32_t)0xDE40527D, (int32_t)0xEE3A53E3, (int32_t)0xD1AD5E40, (int32_t)0xF6138B9C, (int32_t)0x3DC516C8, (int32_t)0x2F0AC646, (int32_t)0x31D334C2, (int32_t)0xBDA0ECE6, (int32_t)0xAFFC45B, (int32_t)0xEC8781AC, (int32_t)0xE5F3EB4E, (int32_t)0xCC4B77B1, (int32_t)0x22E01353, (int32_t)0x4BF4A371, (int32_t)0xAB868493, (int32_t)0xFFC18A7D, (int32_t)0xFA2D6925, (int32_t)0xC08F0AA3, (int32_t)0x470CD711, (int32_t)0x20A40B96, (int32_t)0x4E1FEC7B, (int32_t)0xF2F8AB2, (int32_t)0x2A3E2, (int32_t)0x17F6DF, (int32_t)0x11A0424, (int32_t)0x2648E17, (int32_t)0x67B83, (int32_t)0x3BA12, (int32_t)0x28E92, (int32_t)0xA94EE, (int32_t)0x1417C, (int32_t)0x586576, (int32_t)0x220E8E06, (int32_t)0xFE38C42, (int32_t)0x16520, (int32_t)0x1722C, (int32_t)0x7D8BF8, (int32_t)0xDC5EF, (int32_t)0xB7A038, (int32_t)0x8FDB8, (int32_t)0x102E2252, (int32_t)0x1B3013, (int32_t)0x2742A3A, (int32_t)0x21003, (int32_t)0x4124B3C, (int32_t)0x1A20736, (int32_t)0x190C8FE, (int32_t)0x6376A3B, (int32_t)0x551B70, (int32_t)0x22FBA658, (int32_t)0x51958A8, (int32_t)0x146CC, (int32_t)0x17B0DA, (int32_t)0x41A5EB9 };
		for (int ndx = 0; ndx < 100; ndx++)
			Util::Check("Fixed32::Add", Fixed32::Add(input0[ndx], input1[ndx]), output0[ndx], input0[ndx], input1[ndx]);
	}

	// Fixed64.Sub()
	static void Fixed64_Sub()
	{
		static const int64_t input0[] = { (int64_t)0xFFFFFFF8B6C891B6LL, (int64_t)0xFFFFFFFA5D16D0B1LL, (int64_t)0x7F73F449BLL, (int64_t)0xFFFFFFF6F5D1CBD2LL, (int64_t)0x6F5FD88E9LL, (int64_t)0xFFFFFFFD9337A728LL, (int64_t)0xFFFFFFFEF5DD4582LL, (int64_t)0x16FA5B64ELL, (int64_t)0x8CD8F1F55LL, (int64_t)0xFFFFFFFA16438071LL, (int64_t)0xFFFFFFF6F545F332LL, (int64_t)0xFFFFFFF7ABC8CC94LL, (int64_t)0x2C671DB49LL, (int64_t)0xFFFFFFF66FE2EDB1LL, (int64_t)0xFFFFFFFAD204048ALL, (int64_t)0x7F1475E1BLL, (int64_t)0x70C0BDF42LL, (int64_t)0xFFFFFFFEDC479532LL, (int64_t)0xFFFFFFFD8CFBA0F8LL, (int64_t)0x49462AA95LL, (int64_t)0xFFFFFFFA6FEAD089LL, (int64_t)0x3FFBA1DDBLL, (int64_t)0x8EE4F7325LL, (int64_t)0xFFFFFFFE5926CEA1LL, (int64_t)0xFFFFFFF65F125B61LL, (int64_t)0xFFFFFFF9C8296A58LL, (int64_t)0x3A82BA24LL, (int64_t)0x7405BA872LL, (int64_t)0x86EE14874LL, (int64_t)0x71D926D12LL, (int64_t)0x9F41F5B27LL, (int64_t)0xFFFFFFF8AB05AF9ELL, (int64_t)0xFFFFFFF78951922CLL, (int64_t)0xFFFFFFFEBE35E8FALL, (int64_t)0xFB4F913C769F2200LL, (int64_t)0xCA0C2D7614185C00LL, (int64_t)0xC9971BAF132E3800LL, (int64_t)0x3F1BE53CFE37CC00LL, (int64_t)0xE358D39946B1A800LL, (int64_t)0xD918C9F632319400LL, (int64_t)0xD555EA6A2AABD400LL, (int64_t)0x3EC4947AFD892800LL, (int64_t)0xC1C7A614038F4C00LL, (int64_t)0xF0B872B46170E600LL, (int64_t)0x36592F95ECB26000LL, (int64_t)0xD137AD45226F5C00LL, (int64_t)0x2A5CE8B0D4B9D000LL, (int64_t)0x367F9FE2ECFF4000LL, (int64_t)0xD26B97C224D73000LL, (int64_t)0x23353859C66A7000LL, (int64_t)0xE38CB69847196E00LL, (int64_t)0x24687917C8D0F400LL, (int64_t)0xED0D831B5A1B0600LL, (int64_t)0xE6B072A34D60E600LL, (int64_t)0x149311F3A9262400LL, (int64_t)0xCFB5BE9C1F6B7C00LL, (int64_t)0x320889E9E4111400LL, (int64_t)0xEBB076EB5760EE00LL, (int64_t)0x2A393721D4727000LL, (int64_t)0x103A8F782075000LL, (int64_t)0xE835C756506B8E00LL, (int64_t)0x3D094F85FA12A000LL, (int64_t)0xA692DFC94D25C00LL, (int64_t)0xD037C9C9A06F800LL, (int64_t)0xEDFBD5A45BF7AC00LL, (int64_t)0xA062D7D940C5C00LL, (int64_t)0x304C338DE0986800LL, (int64_t)0xD409071C28120E00LL, (int64_t)0x1133285530AA680LL, (int64_t)0x8A5CCDCFEB4CLL, (int64_t)0x225680C8A31D5ELL, (int64_t)0x1B821F2413E9C9LL, (int64_t)0x2AD2E06274A0C60LL, (int64_t)0x7FDD73A32ED050LL, (int64_t)0x1C790FBBBF6DABLL, (int64_t)0x4BA2D60448DF240LL, (int64_t)0x20985321F671EELL, (int64_t)0x3FD67DCF3F3FFC00LL, (int64_t)0xBB908C8C8A78A0LL, (int64_t)0x108B2316BCD26E00LL, (int64_t)0x151540CCAEE7DBLL, (int64_t)0x90C3B2EF96FLL, (int64_t)0x10AB6504C9346LL, (int64_t)0x24704CAF4763DELL, (int64_t)0xE6DAF1229D1498LL, (int64_t)0x11462B1D30020B00LL, (int64_t)0x163788181LL, (int64_t)0x2464BD8888LL, (int64_t)0x58A05CA1EDC5FLL, (int64_t)0xAED4BB63281E68LL, (int64_t)0x2FB917A38A93LL, (int64_t)0x469FB5CB3FCLL, (int64_t)0x19323037B9B6LL, (int64_t)0x217FFC6F5FLL, (int64_t)0x225DD6D540EB0ALL, (int64_t)0x17482F649308LL, (int64_t)0x9EADBE43F02LL, (int64_t)0x138A322EALL, (int64_t)0x441018D8981B440LL, (int64_t)0x4ECA44FD98LL };
		static const int64_t input1[] = { (int64_t)0x12B743C3ELL, (int64_t)0xFFFFFFF9401CEA17LL, (int64_t)0x671AB0AC0LL, (int64_t)0x72FB00DBALL, (int64_t)0xFFFFFFF95666853FLL, (int64_t)0xFFFFFFF9A11C1280LL, (int64_t)0x13EF609FELL, (int64_t)0xFFFFFFFAA1339D52LL, (int64_t)0x3B8882ABBLL, (int64_t)0x1517D86F6LL, (int64_t)0xFFFFFFFFDB375F34LL, (int64_t)0x7AE5F4893LL, (int64_t)0xFFFFFFFD29A50EB7LL, (int64_t)0x1B691BEAFLL, (int64_t)0x45F8BF21CLL, (int64_t)0xFFFFFFF8EE907A6ELL, (int64_t)0x18F95E547LL, (int64_t)0xFFFFFFFA43CC6F71LL, (int64_t)0x5A0E93357LL, (int64_t)0x57DBFA8A6LL, (int64_t)0x5873B1AE7LL, (int64_t)0xFFFFFFFEB70E73DALL, (int64_t)0xFFFFFFFB6EC75D8BLL, (int64_t)0xFFFFFFFF9E1875FCLL, (int64_t)0xFFFFFFF696BF7072LL, (int64_t)0x32DD41E92LL, (int64_t)0x758B4ED02LL, (int64_t)0x1B5819D0FLL, (int64_t)0x300C46DDALL, (int64_t)0xFFFFFFF7AFFCB244LL, (int64_t)0xFFFFFFFA22242549LL, (int64_t)0x84A404394LL, (int64_t)0xFFFFFFF622773A69LL, (int64_t)0xFFFFFFFA083BF251LL, (int64_t)0xCFA746BB1F4E8E00LL, (int64_t)0x11F0EBCAA3E1D800LL, (int64_t)0xC92C80FA12590200LL, (int64_t)0xAE173B195C2E800LL, (int64_t)0x37F2AF2FEFE56000LL, (int64_t)0xAED0A8595DA1400LL, (int64_t)0xDCEE0339B9DC000LL, (int64_t)0x249CE5CAC939CC00LL, (int64_t)0xF5FF1CD16BFE3A00LL, (int64_t)0x320C893BE4191400LL, (int64_t)0x73439C38E687400LL, (int64_t)0x328D1BF0E51A3800LL, (int64_t)0x29FB9812D3F73000LL, (int64_t)0x3884E609F109CC00LL, (int64_t)0xF88472917108E600LL, (int64_t)0x3002E3FEE005C800LL, (int64_t)0x2740010FCE800400LL, (int64_t)0xF60BA1706C174200LL, (int64_t)0x800E4FB9001C800LL, (int64_t)0x1A2C2205B4584400LL, (int64_t)0x53B3A818A767400LL, (int64_t)0xEB99D2A05733A600LL, (int64_t)0xD803A38C30074800LL, (int64_t)0x1DE6A4C3BBCD4800LL, (int64_t)0xD4E2AE1B29C55C00LL, (int64_t)0x22552AA1C4AA5400LL, (int64_t)0x30E3029FE1C60400LL, (int64_t)0xD84C9AE430993600LL, (int64_t)0xF45B667E68B6CC00LL, (int64_t)0xF4C4297769885200LL, (int64_t)0xC2BC9D1005793A00LL, (int64_t)0xEC53021858A60400LL, (int64_t)0xE0EB79B741D6F400LL, (int64_t)0x1653E194ACA7C400LL, (int64_t)0x153A2CLL, (int64_t)0x1ELL, (int64_t)0x15LL, (int64_t)0x406CC6C5LL, (int64_t)0x2DLL, (int64_t)0xCLL, (int64_t)0x543BELL, (int64_t)0x2C4C3D5LL, (int64_t)0x1LL, (int64_t)0x27E02DLL, (int64_t)0x1630C0LL, (int64_t)0x40LL, (int64_t)0x51CB1611LL, (int64_t)0x9DLL, (int64_t)0x7LL, (int64_t)0x13AF1LL, (int64_t)0x1ECDE7LL, (int64_t)0x59D852LL, (int64_t)0xD75E5LL, (int64_t)0x6LL, (int64_t)0x5F6LL, (int64_t)0x6LL, (int64_t)0x3LL, (int64_t)0x1LL, (int64_t)0x3LL, (int64_t)0xCE8LL, (int64_t)0x196LL, (int64_t)0x3463ADLL, (int64_t)0x4LL, (int64_t)0x1CBLL, (int64_t)0xF346LL, (int64_t)0x4596B9LL };
		static const int64_t output0[] = { (int64_t)0xFFFFFFF78B545578LL, (int64_t)0x11CF9E69ALL, (int64_t)0x1859439DBLL, (int64_t)0xFFFFFFEFC621BE18LL, (int64_t)0xD9F9703AALL, (int64_t)0x3F21B94A8LL, (int64_t)0xFFFFFFFDB6E73B84LL, (int64_t)0x6CE7218FCLL, (int64_t)0x51506F49ALL, (int64_t)0xFFFFFFF8C4C5F97BLL, (int64_t)0xFFFFFFF71A0E93FELL, (int64_t)0xFFFFFFEFFD698401LL, (int64_t)0x59CCCCC92LL, (int64_t)0xFFFFFFF4B9512F02LL, (int64_t)0xFFFFFFF67278126ELL, (int64_t)0xF02B6E3ADLL, (int64_t)0x57C75F9FBLL, (int64_t)0x4987B25C1LL, (int64_t)0xFFFFFFF7EC126DA1LL, (int64_t)0xFFFFFFFF16A301EFLL, (int64_t)0xFFFFFFF4E8AFB5A2LL, (int64_t)0x548ABAA01LL, (int64_t)0xD7F88159ALL, (int64_t)0xFFFFFFFEBB0E58A5LL, (int64_t)0xFFFFFFFFC852EAEFLL, (int64_t)0xFFFFFFF69A554BC6LL, (int64_t)0xFFFFFFF8E1CDCD22LL, (int64_t)0x58ADA0B63LL, (int64_t)0x56E1CDA9ALL, (int64_t)0xF6D95BACELL, (int64_t)0xFD1FB35DELL, (int64_t)0xFFFFFFF060C56C0ALL, (int64_t)0x166DA57C3LL, (int64_t)0x4B5F9F6A9LL, (int64_t)0x2BA84A8157509400LL, (int64_t)0xB81B41AB70368400LL, (int64_t)0x6A9AB500D53600LL, (int64_t)0x343A718B6874E400LL, (int64_t)0xAB66246956CC4800LL, (int64_t)0xCE2BBF709C578000LL, (int64_t)0xC7870A368F0E1400LL, (int64_t)0x1A27AEB0344F5C00LL, (int64_t)0xCBC8894297911200LL, (int64_t)0xBEABE9787D57D200LL, (int64_t)0x2F24F5D25E49EC00LL, (int64_t)0x9EAA91543D552400LL, (int64_t)0x61509E00C2A000LL, (int64_t)0xFDFAB9D8FBF57400LL, (int64_t)0xD9E72530B3CE4A00LL, (int64_t)0xF332545AE664A800LL, (int64_t)0xBC4CB58878996A00LL, (int64_t)0x2E5CD7A75CB9B200LL, (int64_t)0xE50C9E1FCA193E00LL, (int64_t)0xCC84509D9908A200LL, (int64_t)0xF57D7721EAFB000LL, (int64_t)0xE41BEBFBC837D600LL, (int64_t)0x5A04E65DB409CC00LL, (int64_t)0xCDC9D2279B93A600LL, (int64_t)0x55568906AAAD1400LL, (int64_t)0xDEAE7E55BD5CFC00LL, (int64_t)0xB752C4B66EA58A00LL, (int64_t)0x64BCB4A1C9796A00LL, (int64_t)0x160DC77E2C1B9000LL, (int64_t)0x183F5325307EA600LL, (int64_t)0x2B3F3894567E7200LL, (int64_t)0x1DB32B653B665800LL, (int64_t)0x4F60B9D69EC17400LL, (int64_t)0xBDB525877B6A4A00LL, (int64_t)0x113328552F56C54LL, (int64_t)0x8A5CCDCFEB2ELL, (int64_t)0x225680C8A31D49LL, (int64_t)0x1B821EE3A72304LL, (int64_t)0x2AD2E06274A0C33LL, (int64_t)0x7FDD73A32ED044LL, (int64_t)0x1C790FBBBA29EDLL, (int64_t)0x4BA2D6041C92E6BLL, (int64_t)0x20985321F671EDLL, (int64_t)0x3FD67DCF3F181BD3LL, (int64_t)0xBB908C8C7447E0LL, (int64_t)0x108B2316BCD26DC0LL, (int64_t)0x1515407AE3D1CALL, (int64_t)0x90C3B2EF8D2LL, (int64_t)0x10AB6504C933FLL, (int64_t)0x24704CAF4628EDLL, (int64_t)0xE6DAF1227E46B1LL, (int64_t)0x11462B1D2FA832AELL, (int64_t)0x1636B0B9CLL, (int64_t)0x2464BD8882LL, (int64_t)0x58A05CA1ED669LL, (int64_t)0xAED4BB63281E62LL, (int64_t)0x2FB917A38A90LL, (int64_t)0x469FB5CB3FBLL, (int64_t)0x19323037B9B3LL, (int64_t)0x217FFC6277LL, (int64_t)0x225DD6D540E974LL, (int64_t)0x17482F302F5BLL, (int64_t)0x9EADBE43EFELL, (int64_t)0x138A3211FLL, (int64_t)0x441018D8980C0FALL, (int64_t)0x4EC9FF66DFLL };
		for (int ndx = 0; ndx < 100; ndx++)
			Util::Check("Fixed64::Sub", Fixed64::Sub(input0[ndx], input1[ndx]), output0[ndx], input0[ndx], input1[ndx]);
	}

	// Fixed32.Sub()
	static void Fixed32_Sub()
	{
		static const int32_t input0[] = { (int32_t)0xFFF89AE4, (int32_t)0x18038, (int32_t)0xFFFBF1A3, (int32_t)0x870E, (int32_t)0xFFFAB0AE, (int32_t)0x1F33B, (int32_t)0xB0E4, (int32_t)0x39F4D, (int32_t)0xFFFD3E1F, (int32_t)0xFFFA65C3, (int32_t)0xFFF9415D, (int32_t)0x8FD5D, (int32_t)0xFFF8D69B, (int32_t)0xFFFB4BE2, (int32_t)0xFFFDCA4B, (int32_t)0xFFF9DF48, (int32_t)0xFFF79C91, (int32_t)0xFFF9E1BD, (int32_t)0x54525, (int32_t)0x37BEF, (int32_t)0xFFFDD91B, (int32_t)0x5B48C, (int32_t)0x7970B, (int32_t)0x11179, (int32_t)0xFFF7E542, (int32_t)0xFFF85343, (int32_t)0x7BB6F, (int32_t)0x620A4, (int32_t)0x6DC4A, (int32_t)0x7ED9E, (int32_t)0x4A78F, (int32_t)0x4ACC2, (int32_t)0xFFF95E90, (int32_t)0x8F82C, (int32_t)0xDA8A1705, (int32_t)0xC20C127C, (int32_t)0xE19C18BA, (int32_t)0x263AB7A, (int32_t)0x35AA19A8, (int32_t)0x1A6DDFCA, (int32_t)0xC363A9, (int32_t)0xFA6854E9, (int32_t)0xC8117720, (int32_t)0x226AA09A, (int32_t)0x10E053CD, (int32_t)0x3E244ACB, (int32_t)0xDE41060E, (int32_t)0xCCD4A489, (int32_t)0x2A4FEAE6, (int32_t)0x2203F634, (int32_t)0xE635B7A7, (int32_t)0x2E8B7197, (int32_t)0xDC467CB6, (int32_t)0xEC28176C, (int32_t)0x13261963, (int32_t)0x1B32FD29, (int32_t)0x16C7DAB7, (int32_t)0xD7F7DB07, (int32_t)0xD0AE0675, (int32_t)0xD40B2055, (int32_t)0xEC4DF41C, (int32_t)0xF854333A, (int32_t)0xCC8B73FD, (int32_t)0xE0D541B5, (int32_t)0xFCDFD13, (int32_t)0xFF0BA6C1, (int32_t)0xEA04F9F3, (int32_t)0x17DDE0E7, (int32_t)0x9D406C, (int32_t)0x1241FC0D, (int32_t)0x27CC19F9, (int32_t)0x865CE, (int32_t)0x1BB92FF8, (int32_t)0x37DA18, (int32_t)0x14E1B, (int32_t)0x9D6D1AE, (int32_t)0x413BC2, (int32_t)0x5BAB176, (int32_t)0x213AE, (int32_t)0x2FCAA4C, (int32_t)0xE60E8, (int32_t)0x4E9B650, (int32_t)0xC143D6, (int32_t)0x14864, (int32_t)0x260F5, (int32_t)0x3FF8FE70, (int32_t)0xFCCE5, (int32_t)0x167DAA4C, (int32_t)0x3FD99, (int32_t)0x24377, (int32_t)0x1A15EF7, (int32_t)0x51A5353, (int32_t)0x32FE358, (int32_t)0x6264E, (int32_t)0x4BCDB0, (int32_t)0xB7EBF, (int32_t)0x6DDE30, (int32_t)0x64D8C6, (int32_t)0x7A952FB, (int32_t)0x3112BE1F };
		static const int32_t input1[] = { (int32_t)0xFFF7264F, (int32_t)0xFFFD7868, (int32_t)0x89EE4, (int32_t)0x13CFD, (int32_t)0xFFFB7F29, (int32_t)0xFFF723FB, (int32_t)0xFFF95D68, (int32_t)0x8B8CD, (int32_t)0x471D1, (int32_t)0xFFF83663, (int32_t)0x86E6B, (int32_t)0xFFF82F96, (int32_t)0x79919, (int32_t)0x5BA35, (int32_t)0x98428, (int32_t)0xFFF78BAC, (int32_t)0x1F53A, (int32_t)0x761C5, (int32_t)0x41BE, (int32_t)0x6784B, (int32_t)0xFFFBFA39, (int32_t)0xFFFCE657, (int32_t)0x3E92D, (int32_t)0x4E029, (int32_t)0xFFFEA1CD, (int32_t)0xFFF85D6B, (int32_t)0x437CC, (int32_t)0x4903F, (int32_t)0x6C303, (int32_t)0xFFFF5080, (int32_t)0xFFFFBE34, (int32_t)0xFFFE949A, (int32_t)0x59ECE, (int32_t)0xFFF9DE6F, (int32_t)0xA1DA754, (int32_t)0x3ADB5413, (int32_t)0x284831EA, (int32_t)0xCA242F0F, (int32_t)0x39947074, (int32_t)0x2736E5F5, (int32_t)0xE8A4E668, (int32_t)0x2BD91418, (int32_t)0xE4171A14, (int32_t)0x369CE6CC, (int32_t)0xCE53EB20, (int32_t)0xF91A6E17, (int32_t)0x30E1A687, (int32_t)0xE2A0EF1, (int32_t)0x32E4E101, (int32_t)0xC9428657, (int32_t)0xD56712D7, (int32_t)0xFCF6ECE, (int32_t)0xDAA3C2C8, (int32_t)0xF7D0455B, (int32_t)0x59CA77C, (int32_t)0xFF5719DB, (int32_t)0xEB4437C4, (int32_t)0xC9A43DB4, (int32_t)0xF1B5A507, (int32_t)0x219EF954, (int32_t)0xEE1FEBB0, (int32_t)0xC86F3071, (int32_t)0xEDDCE0ED, (int32_t)0x273C356A, (int32_t)0xD29CA388, (int32_t)0xD1D4AD0E, (int32_t)0x141F50D9, (int32_t)0x6632525, (int32_t)0x1C84, (int32_t)0x3F, (int32_t)0x5, (int32_t)0x2, (int32_t)0x7, (int32_t)0x94F7, (int32_t)0xC84, (int32_t)0x1DEF, (int32_t)0x8B, (int32_t)0x1096, (int32_t)0x3, (int32_t)0x37B, (int32_t)0x2, (int32_t)0xBD0, (int32_t)0x13F, (int32_t)0x52E, (int32_t)0x1CD, (int32_t)0x3F, (int32_t)0xD88, (int32_t)0x9, (int32_t)0x389E, (int32_t)0x163B, (int32_t)0x8A, (int32_t)0xBC, (int32_t)0x1A, (int32_t)0x12, (int32_t)0x1E6, (int32_t)0xEEB, (int32_t)0xB88C, (int32_t)0x18E1, (int32_t)0x39, (int32_t)0xA085 };
		static const int32_t output0[] = { (int32_t)0x17495, (int32_t)0x407D0, (int32_t)0xFFF352BF, (int32_t)0xFFFF4A11, (int32_t)0xFFFF3185, (int32_t)0xACF40, (int32_t)0x7537C, (int32_t)0xFFFAE680, (int32_t)0xFFF8CC4E, (int32_t)0x22F60, (int32_t)0xFFF0D2F2, (int32_t)0x10CDC7, (int32_t)0xFFF13D82, (int32_t)0xFFF591AD, (int32_t)0xFFF44623, (int32_t)0x2539C, (int32_t)0xFFF5A757, (int32_t)0xFFF27FF8, (int32_t)0x50367, (int32_t)0xFFFD03A4, (int32_t)0x1DEE2, (int32_t)0x8CE35, (int32_t)0x3ADDE, (int32_t)0xFFFC3150, (int32_t)0xFFF94375, (int32_t)0xFFFFF5D8, (int32_t)0x383A3, (int32_t)0x19065, (int32_t)0x1947, (int32_t)0x89D1E, (int32_t)0x4E95B, (int32_t)0x61828, (int32_t)0xFFF3BFC2, (int32_t)0xF19BD, (int32_t)0xD06C6FB1, (int32_t)0x8730BE69, (int32_t)0xB953E6D0, (int32_t)0x383F7C6B, (int32_t)0xFC15A934, (int32_t)0xF336F9D5, (int32_t)0x181E7D41, (int32_t)0xCE8F40D1, (int32_t)0xE3FA5D0C, (int32_t)0xEBCDB9CE, (int32_t)0x428C68AD, (int32_t)0x4509DCB4, (int32_t)0xAD5F5F87, (int32_t)0xBEAA9598, (int32_t)0xF76B09E5, (int32_t)0x58C16FDD, (int32_t)0x10CEA4D0, (int32_t)0x1EBC02C9, (int32_t)0x1A2B9EE, (int32_t)0xF457D211, (int32_t)0xD8971E7, (int32_t)0x1BDBE34E, (int32_t)0x2B83A2F3, (int32_t)0xE539D53, (int32_t)0xDEF8616E, (int32_t)0xB26C2701, (int32_t)0xFE2E086C, (int32_t)0x2FE502C9, (int32_t)0xDEAE9310, (int32_t)0xB9990C4B, (int32_t)0x3D31598B, (int32_t)0x2D36F9B3, (int32_t)0xD5E5A91A, (int32_t)0x117ABBC2, (int32_t)0x9D23E8, (int32_t)0x1241FBCE, (int32_t)0x27CC19F4, (int32_t)0x865CC, (int32_t)0x1BB92FF1, (int32_t)0x374521, (int32_t)0x14197, (int32_t)0x9D6B3BF, (int32_t)0x413B37, (int32_t)0x5BAA0E0, (int32_t)0x213AB, (int32_t)0x2FCA6D1, (int32_t)0xE60E6, (int32_t)0x4E9AA80, (int32_t)0xC14297, (int32_t)0x14336, (int32_t)0x25F28, (int32_t)0x3FF8FE31, (int32_t)0xFBF5D, (int32_t)0x167DAA43, (int32_t)0x3C4FB, (int32_t)0x22D3C, (int32_t)0x1A15E6D, (int32_t)0x51A5297, (int32_t)0x32FE33E, (int32_t)0x6263C, (int32_t)0x4BCBCA, (int32_t)0xB6FD4, (int32_t)0x6D25A4, (int32_t)0x64BFE5, (int32_t)0x7A952C2, (int32_t)0x31121D9A };
		for (int ndx = 0; ndx < 100; ndx++)
			Util::Check("Fixed32::Sub", Fixed32::Sub(input0[ndx], input1[ndx]), output0[ndx], input0[ndx], input1[ndx]);
	}

	// Fixed64.Mul()
	static void Fixed64_Mul()
	{
		static const int64_t input0[] = { (int64_t)0x3AC1B0811A8LL, (int64_t)0xFFFFFCE55D5AA1BBLL, (int64_t)0x3168E83E1FDLL, (int64_t)0x3756F69775ALL, (int64_t)0x1240AE771F8LL, (int64_t)0x1F30DD850ELL, (int64_t)0x328B9E944C1LL, (int64_t)0xFFFFFD32C10C4636LL, (int64_t)0xFFFFFE5C73BD5B29LL, (int64_t)0xFFFFFFEDAC1A1D4CLL, (int64_t)0xFFFFFFDF4327FF2FLL, (int64_t)0xFFFFFF439EDAE0F8LL, (int64_t)0xFFFFFC3FC12ADC10LL, (int64_t)0xFFFFFC5E2E56538DLL, (int64_t)0x1DEBD08536DLL, (int64_t)0x3CD6B26EC2ALL, (int64_t)0x18E6F7CA24CLL, (int64_t)0x2824520A4D4LL, (int64_t)0x1C8694B0420LL, (int64_t)0xFFFFFD473CE66C1FLL, (int64_t)0x204690E71B8LL, (int64_t)0x10F9E0EF8CFLL, (int64_t)0xFFFFFD0380640298LL, (int64_t)0xFFFFFC47E1DF5240LL, (int64_t)0x35166A25FD2LL, (int64_t)0x130D92388B1LL, (int64_t)0x22BD5ECEBA7LL, (int64_t)0x3334584E0D6LL, (int64_t)0xFFFFFF5F05C675AFLL, (int64_t)0x3C63DA5305CLL, (int64_t)0x28A1EA317A4LL, (int64_t)0x10999BB1E83LL, (int64_t)0xFFFFFF540D732F59LL, (int64_t)0xFFFFFCF265B04175LL, (int64_t)0xFFFFC046F44617CELL, (int64_t)0x10B3873D225B0LL, (int64_t)0xFFFF044CB474D75ALL, (int64_t)0xFFFEF1AAEAFB7716LL, (int64_t)0x10B67855A530FLL, (int64_t)0xAC2986019893LL, (int64_t)0xAE7C64CC50B8LL, (int64_t)0xFFFF07D77775FA6FLL, (int64_t)0xDB35171094AALL, (int64_t)0xC634E7FCC529LL, (int64_t)0xBD8804246950LL, (int64_t)0x14AA51BA8118ALL, (int64_t)0xFFFF312F44B60A1FLL, (int64_t)0x320C5E08B658LL, (int64_t)0xFFFFCF0C27B142D9LL, (int64_t)0x12729C5FD1713LL, (int64_t)0x16409BC5CA5D3LL, (int64_t)0x8ACE116D49DCLL, (int64_t)0x4290C6DC0DE1LL, (int64_t)0xFFFF371D408AA6FBLL, (int64_t)0x1421B1193E0F6LL, (int64_t)0xFFFF56025424D645LL, (int64_t)0x1422F1318471ELL, (int64_t)0x155D5B677436BLL, (int64_t)0x154533EEBDCALL, (int64_t)0x17B1C0ADEF078LL, (int64_t)0xFFFF4C7015501821LL, (int64_t)0xFFFFCC15EDFEE36CLL, (int64_t)0x1148C6AE8FCD8LL, (int64_t)0x25978557E46FLL, (int64_t)0x9AE5FC96088CLL, (int64_t)0xFFFFC9B6088FF4ADLL, (int64_t)0xFFFE80F22F43FAA5LL, (int64_t)0x50DD146F6DBLL, (int64_t)0x200642D9FBD87800LL, (int64_t)0x249B954269A4E800LL, (int64_t)0x1A91BF56F9FF600LL, (int64_t)0xCE3528F4EFC7C600LL, (int64_t)0xF0CECADE7AF8F200LL, (int64_t)0xE325FCB30FBEED00LL, (int64_t)0x232C2838E81C4400LL, (int64_t)0x2F6A5942FEC54800LL, (int64_t)0x1B44FCDBEB3C4800LL, (int64_t)0x1598D19DC068D800LL, (int64_t)0x24D02D775EC06000LL, (int64_t)0xF7F20FD50C32DC00LL, (int64_t)0xDF72D9B90D3E5000LL, (int64_t)0xCFE784F7FC49D600LL, (int64_t)0x2CD7962E5B379800LL, (int64_t)0xC5941A8812434200LL, (int64_t)0xDBD9422C594B0800LL, (int64_t)0x190DB20DFFC1F000LL, (int64_t)0xD80D0B8CD3F58C00LL, (int64_t)0xE37B608AF97ED500LL, (int64_t)0xF6C201FAFB3000LL, (int64_t)0x13007190256A7000LL, (int64_t)0x17EA0139B617F800LL, (int64_t)0xD3214DAEFD52F800LL, (int64_t)0xE1CCF01A923FBD00LL, (int64_t)0xF9CFF849CE610C00LL, (int64_t)0x2CF1C8E2CE75C400LL, (int64_t)0xD73BC5EF8780C800LL, (int64_t)0x16317A815E4C9000LL, (int64_t)0xEAAF2D0EB5518E00LL, (int64_t)0xD959F870C6C95C00LL, (int64_t)0x25BF4E3CDCECF000LL };
		static const int64_t input1[] = { (int64_t)0xE94FBC0682LL, (int64_t)0x31AA764F1C5LL, (int64_t)0x269C581EA03LL, (int64_t)0x5A7C7F3D44LL, (int64_t)0x3BDB6FE75EBLL, (int64_t)0xFFFFFC27AD12AE20LL, (int64_t)0xFFFFFF708DCFE632LL, (int64_t)0x97B21A107FLL, (int64_t)0x2C6724ECE5CLL, (int64_t)0xFFFFFEF017ABB8F1LL, (int64_t)0xFFFFFE4AAEA18466LL, (int64_t)0xFFFFFC1AF3285FA6LL, (int64_t)0xFFFFFF5A4BA6D565LL, (int64_t)0xFFFFFDC3B643DF98LL, (int64_t)0xFFFFFFC8970AC922LL, (int64_t)0x5367A2A616LL, (int64_t)0xFFFFFC4EC88FC84ELL, (int64_t)0xFFFFFD3EC76C3D4ELL, (int64_t)0xFFFFFC773157A37FLL, (int64_t)0xFFFFFD6E51ECADADLL, (int64_t)0xFFFFFDA1CE790454LL, (int64_t)0xFFFFFEB47CF918D9LL, (int64_t)0x3C9DCF69F23LL, (int64_t)0x2E6ACA48FBDLL, (int64_t)0xFFFFFC3C08C71789LL, (int64_t)0x3DB31C3E946LL, (int64_t)0x1DB5AF09966LL, (int64_t)0x3DD746463EALL, (int64_t)0x1BBBB45D087LL, (int64_t)0xFFFFFE7E36182ACDLL, (int64_t)0x14B8D7705A7LL, (int64_t)0x2BDA96CE0ABLL, (int64_t)0x3D79167B19FLL, (int64_t)0x3355B7A9A9ALL, (int64_t)0x97417317LL, (int64_t)0x42B07CC6LL, (int64_t)0xFFFFFFFFBA4E556ALL, (int64_t)0xBF3087C7LL, (int64_t)0xFFFFFFFF9C37A046LL, (int64_t)0xFFFFFFFFA78A86FELL, (int64_t)0xFFFFFFFFE54867FALL, (int64_t)0xFFFFFFFF0772908DLL, (int64_t)0x1B79251ALL, (int64_t)0xFFFFFFFF766363EDLL, (int64_t)0xFFFFFFFF41E9D4ADLL, (int64_t)0xFFFFFFFF3088866DLL, (int64_t)0x8442A197LL, (int64_t)0xFFFFFFFF58E42AE5LL, (int64_t)0x1D61C532LL, (int64_t)0xB02839DBLL, (int64_t)0xFFFFFFFFB3E7AECALL, (int64_t)0xF9E9062FLL, (int64_t)0xFFFFFFFF880043F2LL, (int64_t)0x7F72252ALL, (int64_t)0xFF2C196FLL, (int64_t)0xFFFFFFFF45A4D2C9LL, (int64_t)0xDBFAAD53LL, (int64_t)0xFFFFFFFF7B0551D5LL, (int64_t)0x40E53072LL, (int64_t)0xB6CAFBCFLL, (int64_t)0xFFFFFFFFE6818EEALL, (int64_t)0xFFFFFFFF945FA8B6LL, (int64_t)0xFFFFFFFFA820CCD6LL, (int64_t)0xFFFFFFFF77060689LL, (int64_t)0xFFFFFFFF1C61EC71LL, (int64_t)0xFFFFFFFF9FCA3FCALL, (int64_t)0xD3BACF2FLL, (int64_t)0x75263976LL, (int64_t)0xFFFFFFFFFFD638C3LL, (int64_t)0xFFFFFFFFFFC25519LL, (int64_t)0xFFFFFFFFFFF38B7FLL, (int64_t)0x20CE9FLL, (int64_t)0xFFFFFFFFFFE9BC02LL, (int64_t)0xFFFFFFFFFFE1BB20LL, (int64_t)0xF2521LL, (int64_t)0xFFFFFFFFFFBF778ALL, (int64_t)0x3B7D55LL, (int64_t)0xFFFFFFFFFFCBA780LL, (int64_t)0xFFFFFFFFFFF3D881LL, (int64_t)0xFFFFFFFFFFDF0858LL, (int64_t)0xFFFFFFFFFFF7044DLL, (int64_t)0xFFFFFFFFFFD7EEE3LL, (int64_t)0x110CB1LL, (int64_t)0xFFFFFFFFFFECD1BCLL, (int64_t)0xFFFFFFFFFFF4ADE1LL, (int64_t)0xFFFFFFFFFFE83432LL, (int64_t)0xFFFFFFFFFFC32598LL, (int64_t)0xFFFFFFFFFFEBB825LL, (int64_t)0xFFFFFFFFFFD1C23ALL, (int64_t)0x1405D2LL, (int64_t)0xFFFFFFFFFFDB64F8LL, (int64_t)0xFFFFFFFFFFCCC85BLL, (int64_t)0xFFFFFFFFFFCC6BBCLL, (int64_t)0xFFFFFFFFFFF19FF4LL, (int64_t)0x2BFE4FLL, (int64_t)0x37A2A5LL, (int64_t)0xFFFFFFFFFFF06578LL, (int64_t)0x11F5B6LL, (int64_t)0xFFFFFFFFFFDA3231LL, (int64_t)0xFFFFFFFFFFF3E24ELL };
		static const int64_t output0[] = { (int64_t)0x358C9692B4F4FLL, (int64_t)0xFFF65D5BF1A9BE49LL, (int64_t)0x773BF68B79FA9LL, (int64_t)0x138F7C5213783LL, (int64_t)0x4448D853EEDD3LL, (int64_t)0xFFFF881211F766BCLL, (int64_t)0xFFFE3AD76BF456E8LL, (int64_t)0xFFFE56FCDF715629LL, (int64_t)0xFFFB73ADA98E385BLL, (int64_t)0x1377726BEFC5LL, (int64_t)0x37ECC48EE2C4LL, (int64_t)0x2DDAFC8CB2CBALL, (int64_t)0x26D8CFA03AEC3LL, (int64_t)0x81E9C47325FADLL, (int64_t)0xFFFF98611BD92DB1LL, (int64_t)0x13D23CE309066LL, (int64_t)0xFFFA40E02C51A911LL, (int64_t)0xFFF916B1AF44C768LL, (int64_t)0xFFF9B2DBBE350C9FLL, (int64_t)0x6FE067DD6723FLL, (int64_t)0xFFFB392B67685F24LL, (int64_t)0xFFFEA0439D6FADAELL, (int64_t)0xFFF4AFAD1C65E7E5LL, (int64_t)0xFFF535D695008C11LL, (int64_t)0xFFF38196A4591F37LL, (int64_t)0x497906EDAFEA2LL, (int64_t)0x4081B62342824LL, (int64_t)0xC5E880F1FB946LL, (int64_t)0xFFFEE8F93BBF0C16LL, (int64_t)0xFFFA4FE3392540D4LL, (int64_t)0x349FCDE01FD94LL, (int64_t)0x2D7F9BCD506B9LL, (int64_t)0xFFFD6B5DFB432869LL, (int64_t)0xFFF63448D2140479LL, (int64_t)0xFFFFDA598F7383F1LL, (int64_t)0x459CC6E9D3F4LL, (int64_t)0x4486020C4864LL, (int64_t)0xFFFF361B45FCAAC7LL, (int64_t)0xFFFF97C5AA902F9CLL, (int64_t)0xFFFFC482B9943C28LL, (int64_t)0xFFFFEDCA3B393EFBLL, (int64_t)0xF0F05EA1F6D2LL, (int64_t)0x1786554B963DLL, (int64_t)0xFFFF95746EC56929LL, (int64_t)0xFFFF7344A32952EALL, (int64_t)0xFFFEF40A2EDD57CFLL, (int64_t)0xFFFF95268B12513ELL, (int64_t)0xFFFFDF547DB0D496LL, (int64_t)0xFFFFFA61AE64E9A8LL, (int64_t)0xCB1B1959BD3ALL, (int64_t)0xFFFF962B4A38A76ELL, (int64_t)0x8780C7DB798CLL, (int64_t)0xFFFFE0CC3473AA66LL, (int64_t)0xFFFF9BFDF0E1CBB5LL, (int64_t)0x141107329A0F3LL, (int64_t)0x7BBEDA0F6FEFLL, (int64_t)0x114D9C170AFB6LL, (int64_t)0xFFFF4E6F12A5A3DALL, (int64_t)0x56457E99690LL, (int64_t)0x10EB288C21D34LL, (int64_t)0x11E1BE12A52ELL, (int64_t)0x15D35985456BLL, (int64_t)0xFFFFA1132A1458C8LL, (int64_t)0xFFFFEBE2CC26C206LL, (int64_t)0xFFFF76466B3F799BLL, (int64_t)0x146722DD2B9FLL, (int64_t)0xFFFEC33016E8DFA8LL, (int64_t)0x25011D4E751LL, (int64_t)0xFFFAC612CBA1499ELL, (int64_t)0xFFF72E7D15AB0A9FLL, (int64_t)0xFFFFEB51399C773ELL, (int64_t)0xFFF99E74F897820CLL, (int64_t)0x15243849BEBAELL, (int64_t)0x3694F8AA77AC3LL, (int64_t)0x214B045D70289LL, (int64_t)0xFFF40C2354CF9273LL, (int64_t)0x65640040E8DC6LL, (int64_t)0xFFFB957E177DE1AFLL, (int64_t)0xFFFE408FE433D154LL, (int64_t)0x10988C13D870FLL, (int64_t)0x1246A5970E9ADLL, (int64_t)0x7870A4C320C9ELL, (int64_t)0x2FC8A152D1104LL, (int64_t)0x46090EFCB2595LL, (int64_t)0x19942F196F1CDLL, (int64_t)0xFFFDABD2FB87A480LL, (int64_t)0x97F0669DBB4BDLL, (int64_t)0x2425DA2D26001LL, (int64_t)0xFFFFD36D98906087LL, (int64_t)0x17C7777D7E54ALL, (int64_t)0xFFFC949C65D46992LL, (int64_t)0x8FA1E49FBDE42LL, (int64_t)0x615A9B575B9B1LL, (int64_t)0x58F2B91B65D7LL, (int64_t)0x7B9428206B49ELL, (int64_t)0xFFF723F1133E43CCLL, (int64_t)0xFFFEA5B44470920FLL, (int64_t)0xFFFE812C7CA32666LL, (int64_t)0x5B5114C011285LL, (int64_t)0xFFFE36A76A44598CLL };
		for (int ndx = 0; ndx < 100; ndx++)
			Util::Check("Fixed64::Mul", Fixed64::Mul(input0[ndx], input1[ndx]), output0[ndx], input0[ndx], input1[ndx]);
	}

	// Fixed32.Mul()
	static void Fixed32_Mul()
	{
		static const int32_t input0[] = { (int32_t)0xAC075, (int32_t)0x3D85419, (int32_t)0xFE0E5AD8, (int32_t)0xFDA2D9FD, (int32_t)0x17F2392, (int32_t)0xFD13BAAA, (int32_t)0x16798B6, (int32_t)0x35759B4, (int32_t)0xFCD53BA2, (int32_t)0xFD527667, (int32_t)0xFE7DCEAF, (int32_t)0xFF46E759, (int32_t)0xFE104185, (int32_t)0xFFA0412E, (int32_t)0x18047E4, (int32_t)0xFC80B573, (int32_t)0x27C086E, (int32_t)0x2EB7CD, (int32_t)0x1E8CB01, (int32_t)0xFEF770F7, (int32_t)0xFE52ED5A, (int32_t)0x2950B2B, (int32_t)0x152E17F, (int32_t)0x38FDB9, (int32_t)0x269958F, (int32_t)0xFE67771B, (int32_t)0x11FA1F7, (int32_t)0x36F9A0B, (int32_t)0xFF7AD84A, (int32_t)0x17E2AC8, (int32_t)0xFD658A, (int32_t)0xFE91B1AC, (int32_t)0x30A1C42, (int32_t)0x3E76A72, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0xA670D644, (int32_t)0x80000000, (int32_t)0xDE1E5E72, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x3E658823, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0xD00B9CAC, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x754AC4B5, (int32_t)0x421F377B, (int32_t)0x80000000, (int32_t)0xC4CC3388, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x58E7D994, (int32_t)0x80000000, (int32_t)0xE05084ED, (int32_t)0x8F5837AF, (int32_t)0x80000000, (int32_t)0x51CAE6C0, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000 };
		static const int32_t input1[] = { (int32_t)0x1E6348F, (int32_t)0xFF869939, (int32_t)0x3764602, (int32_t)0xFF794DF8, (int32_t)0x1442FA9, (int32_t)0xFE578781, (int32_t)0x1154DB7, (int32_t)0xFCF01AA2, (int32_t)0xFE0D4EEE, (int32_t)0x3D3F377, (int32_t)0xFECBB72C, (int32_t)0x2728A0F, (int32_t)0x2CA3AA8, (int32_t)0x134B5B3, (int32_t)0x18C5F0B, (int32_t)0x23693C2, (int32_t)0xFCECE51D, (int32_t)0x2CB306D, (int32_t)0x3114083, (int32_t)0x2AFB757, (int32_t)0xFD0C3281, (int32_t)0x15DB549, (int32_t)0xFE9D729A, (int32_t)0x1BD5D1D, (int32_t)0xFF21446E, (int32_t)0xFF2FAC78, (int32_t)0xFFDC18B3, (int32_t)0x1DFFEAA, (int32_t)0xFFF4816B, (int32_t)0xFF3F10D9, (int32_t)0x3D10DB, (int32_t)0x3D41D03, (int32_t)0x24CB15, (int32_t)0xFE10D713, (int32_t)0xE402, (int32_t)0xFFFFE405, (int32_t)0x591F, (int32_t)0x7131, (int32_t)0xFE1E, (int32_t)0xFFFFDF3B, (int32_t)0xFFFF3AC6, (int32_t)0xE3AE, (int32_t)0xFFFF30A3, (int32_t)0x4959, (int32_t)0x1480, (int32_t)0xFFFFC946, (int32_t)0xEA18, (int32_t)0xFFFFFC35, (int32_t)0xFFFFFF2C, (int32_t)0xB030, (int32_t)0xA346, (int32_t)0x85DA, (int32_t)0x21B5, (int32_t)0xFFFFF248, (int32_t)0xFFFFBFE8, (int32_t)0x4813, (int32_t)0xFFFF45C5, (int32_t)0xC70B, (int32_t)0xFFFFAEC5, (int32_t)0x30A5, (int32_t)0x4D44, (int32_t)0xA92C, (int32_t)0x2091, (int32_t)0x772A, (int32_t)0xFFFF70A7, (int32_t)0xA757, (int32_t)0x66BB, (int32_t)0xAAF8, (int32_t)0x19, (int32_t)0xFFFFFFCF, (int32_t)0xFFFFFFFA, (int32_t)0x1A, (int32_t)0x30, (int32_t)0x3B, (int32_t)0x40, (int32_t)0xA, (int32_t)0x5, (int32_t)0xFFFFFFF9, (int32_t)0x15, (int32_t)0x15, (int32_t)0xFFFFFFDA, (int32_t)0x18, (int32_t)0xFFFFFFE4, (int32_t)0xFFFFFFEB, (int32_t)0xFFFFFFF7, (int32_t)0x26, (int32_t)0x1A, (int32_t)0x2, (int32_t)0xFFFFFFC4, (int32_t)0x31, (int32_t)0xD, (int32_t)0x1F, (int32_t)0xFFFFFFFF, (int32_t)0xFFFFFFD8, (int32_t)0xFFFFFFFE, (int32_t)0xFFFFFFF0, (int32_t)0xFFFFFFDA, (int32_t)0x13, (int32_t)0x6, (int32_t)0xE };
		static const int32_t output0[] = { (int32_t)0x146B9337, (int32_t)0x2D351183, (int32_t)0x45265083, (int32_t)0x3E66BCE9, (int32_t)0xE530593E, (int32_t)0xD8B30A26, (int32_t)0x858566EA, (int32_t)0xC4D64523, (int32_t)0x2B62C9A2, (int32_t)0xBFCED39D, (int32_t)0xD1113323, (int32_t)0x3AFDE57F, (int32_t)0x98E52675, (int32_t)0x8C8A767B, (int32_t)0x52FDDFE0, (int32_t)0x428C6DFC, (int32_t)0x5C6F48FF, (int32_t)0x82842FE9, (int32_t)0xDB51AAF1, (int32_t)0x394AAEB0, (int32_t)0xF2C66C5D, (int32_t)0x87045704, (int32_t)0x2AA90129, (int32_t)0x6325C535, (int32_t)0xE6ABCD87, (int32_t)0x4C74877A, (int32_t)0xD7A8F991, (int32_t)0x713C3D88, (int32_t)0x5FA8BDD, (int32_t)0xDFFAE5D6, (int32_t)0x3C71E100, (int32_t)0x8592A345, (int32_t)0x6FD53D84, (int32_t)0x72E967B2, (int32_t)0x8DFF0000, (int32_t)0xDFD8000, (int32_t)0xD3708000, (int32_t)0xD866AA2D, (int32_t)0x80F10000, (int32_t)0x45646D3, (int32_t)0x629D0000, (int32_t)0x8E290000, (int32_t)0xCD753C09, (int32_t)0xDB538000, (int32_t)0xF5C00000, (int32_t)0x1B5D0000, (int32_t)0xD4261E4B, (int32_t)0x1E58000, (int32_t)0x6A0000, (int32_t)0x50B96541, (int32_t)0x2A2BF4DC, (int32_t)0xBD130000, (int32_t)0xF8347704, (int32_t)0x6DC0000, (int32_t)0x200C0000, (int32_t)0xDBF68000, (int32_t)0x5D1D8000, (int32_t)0x9C7A8000, (int32_t)0x289D8000, (int32_t)0xE7AD8000, (int32_t)0xD95E0000, (int32_t)0xAB6A0000, (int32_t)0xB4F5684, (int32_t)0xC46B0000, (int32_t)0x11BE09C1, (int32_t)0xB65C434E, (int32_t)0xCCA28000, (int32_t)0x369FF9CB, (int32_t)0xFFF38000, (int32_t)0x188000, (int32_t)0x30000, (int32_t)0xFFF30000, (int32_t)0xFFE80000, (int32_t)0xFFE28000, (int32_t)0xFFE00000, (int32_t)0xFFFB0000, (int32_t)0xFFFD8000, (int32_t)0x38000, (int32_t)0xFFF58000, (int32_t)0xFFF58000, (int32_t)0x130000, (int32_t)0xFFF40000, (int32_t)0xE0000, (int32_t)0xA8000, (int32_t)0x48000, (int32_t)0xFFED0000, (int32_t)0xFFF30000, (int32_t)0xFFFF0000, (int32_t)0x1E0000, (int32_t)0xFFE78000, (int32_t)0xFFF98000, (int32_t)0xFFF08000, (int32_t)0x8000, (int32_t)0x140000, (int32_t)0x10000, (int32_t)0x80000, (int32_t)0x130000, (int32_t)0xFFF68000, (int32_t)0xFFFD0000, (int32_t)0xFFF90000 };
		for (int ndx = 0; ndx < 100; ndx++)
			Util::Check("Fixed32::Mul", Fixed32::Mul(input0[ndx], input1[ndx]), output0[ndx], input0[ndx], input1[ndx]);
	}

	// Fixed64.DivPrecise()
	static void Fixed64_DivPrecise()
	{
		static const int64_t input0[] = { (int64_t)0xFFFFFC7C28E76A09LL, (int64_t)0x3A6682F0ABCLL, (int64_t)0x394E4341D99LL, (int64_t)0xFFFFFD8B7C02FA47LL, (int64_t)0x2D959202C22LL, (int64_t)0x18C5259EEE8LL, (int64_t)0x3233FA49DD6LL, (int64_t)0xFFFFFCA9C2C5DA44LL, (int64_t)0x1A2B7EF2CD5LL, (int64_t)0xFFFFFDC0B6969AD2LL, (int64_t)0xFFFFFE45C3787C3CLL, (int64_t)0x23FFD7F916FLL, (int64_t)0x11214A1CA74LL, (int64_t)0x124424F4878LL, (int64_t)0x99E994E7E3LL, (int64_t)0x17A9969D125LL, (int64_t)0xFFFFFCFEB191402ELL, (int64_t)0xFFFFFF9695FBEC1ELL, (int64_t)0x2C47715BEF8LL, (int64_t)0xAE491A7D8CLL, (int64_t)0x13B6FA5F9E6LL, (int64_t)0x32274964174LL, (int64_t)0x160AC0E2E51LL, (int64_t)0x272F8B29075LL, (int64_t)0x2682C3B87DLL, (int64_t)0xE0C82FBD41906000LL, (int64_t)0x20BFDCC6C17FB800LL, (int64_t)0x2559B7C2CAB37000LL, (int64_t)0x3B7B711AF6F6E400LL, (int64_t)0x3A05DE42F40BBC00LL, (int64_t)0xD30D969A261B2C00LL, (int64_t)0xE53B24EB4A764A00LL, (int64_t)0xD28E0C63251C1800LL, (int64_t)0x154F7097AA9EE000LL, (int64_t)0xD3F11BB227E23800LL, (int64_t)0xFDDADB587BB5B600LL, (int64_t)0xDCB69DC2396D3C00LL, (int64_t)0xCF9156B99F22C00LL, (int64_t)0xCBCBEF701797E000LL, (int64_t)0x2B402C68D6805800LL, (int64_t)0xF0E9695A61D2D200LL, (int64_t)0x32F02796E5E05000LL, (int64_t)0xA4F6A3C949ED400LL, (int64_t)0xC441DE930883BE00LL, (int64_t)0xEAFBBF8455F78000LL, (int64_t)0x3A890B24F5121800LL, (int64_t)0xC1EF58F803DEB200LL, (int64_t)0x3CB1F85AF963F000LL, (int64_t)0xCFA5ED8A1F4BDC00LL, (int64_t)0x18F05B43B1E0B800LL, (int64_t)0x3583FFB5EB080000LL, (int64_t)0x2D0823385A10400LL, (int64_t)0x27661132CECC2400LL, (int64_t)0xE395339A472A6800LL, (int64_t)0x2B29A328D6534800LL, (int64_t)0xDED8D6C53DB1AE00LL, (int64_t)0x240DE46BC81BC800LL, (int64_t)0x15B3CA38AB679400LL, (int64_t)0xE28B15D745162C00LL, (int64_t)0x36AF6486ED5EC800LL, (int64_t)0xC7B710140F6E2000LL, (int64_t)0xF832A95570655200LL, (int64_t)0x373DA292EE7B4400LL, (int64_t)0x3B4CA1E4F6994400LL, (int64_t)0x6547FFA8CA90000LL, (int64_t)0xCE0050D61C00A200LL, (int64_t)0xD495C1CC292B8400LL, (int64_t)0x3650B3E7ECA16800LL, (int64_t)0x1D93C5F6BB278C00LL, (int64_t)0xDC11B52C38236A00LL, (int64_t)0xE37A248C46F44A00LL, (int64_t)0x3C7EBA2AF8FD7400LL, (int64_t)0xFD1A29677A345200LL, (int64_t)0x8DCF49091B9E800LL, (int64_t)0xF158F07062B1E000LL, (int64_t)0x3E781D5879BLL, (int64_t)0x3E71B1FAFE4LL, (int64_t)0x3E7FD4A6415LL, (int64_t)0x3E7C46FA197LL, (int64_t)0x3E7F0D8AA7FLL, (int64_t)0x3E7F20A8B15LL, (int64_t)0x3E70B6CB198LL, (int64_t)0x3E73D123944LL, (int64_t)0x3E7E4788653LL, (int64_t)0x3E77788F1D6LL, (int64_t)0x3E7A8DCC6D9LL, (int64_t)0x3E71FF37A42LL, (int64_t)0x3E7CBC9243BLL, (int64_t)0x3E73E36805ALL, (int64_t)0x3E7EE72ED49LL, (int64_t)0x3E7B133031FLL, (int64_t)0x3E792E7676FLL, (int64_t)0x3E7EFA7651DLL, (int64_t)0x3E72D9BA5D0LL, (int64_t)0x3E77710CCECLL, (int64_t)0x3E78B17AF0DLL, (int64_t)0x3E7601432E0LL, (int64_t)0x3E715A3EB1ALL, (int64_t)0x3E79C68E685LL, (int64_t)0x3E761E244B6LL };
		static const int64_t input1[] = { (int64_t)0xFFD982F0BDBDF5FELL, (int64_t)0xFFFFFFA8B84B497BLL, (int64_t)0x13F5C1BF1C9689LL, (int64_t)0x46CF36ADA606LL, (int64_t)0xFFFA47C08D7F9AA3LL, (int64_t)0xFFFFF697A9FCA158LL, (int64_t)0x77A824CCDC01E80LL, (int64_t)0x680EAF7AC5D3F00LL, (int64_t)0xFFFFFFFCC3460184LL, (int64_t)0xFFFAC5CC511C9802LL, (int64_t)0x96964A9814LL, (int64_t)0x3E3D75BF804A3ALL, (int64_t)0xFFFFFFF7F62E6D6FLL, (int64_t)0xFFFFB6D241A61683LL, (int64_t)0x3E39CE711B2FFCLL, (int64_t)0x6D143DBEE5FDA40LL, (int64_t)0xFFF846CBB72E659ELL, (int64_t)0xFEB2F96A00DD2970LL, (int64_t)0x1AA373CF2AEC9D0LL, (int64_t)0x4020217F0B43FLL, (int64_t)0xFE9A9D07FB7B2E90LL, (int64_t)0xFFFFFFF791117961LL, (int64_t)0x25945CD56654A60LL, (int64_t)0x5544F44D9A0AELL, (int64_t)0xFF1B97D77326DA90LL, (int64_t)0xC1AB3CDE0354C400LL, (int64_t)0xC5AB43430B50B800LL, (int64_t)0xF6843DCAECD0A800LL, (int64_t)0xCDA834E81B426E00LL, (int64_t)0xED01675959D4B800LL, (int64_t)0xE6CE4DDBCD74DE00LL, (int64_t)0xD7ED45412FC20A00LL, (int64_t)0xC4106DFB081CB200LL, (int64_t)0xEB5430C1D67C0400LL, (int64_t)0xD71C14BCAE208000LL, (int64_t)0xE7973B9E4F05EE00LL, (int64_t)0xC6B7A2670D686400LL, (int64_t)0xFB38B6B5F634C800LL, (int64_t)0xC69AA06A8D2E7E00LL, (int64_t)0xDDB275013B468000LL, (int64_t)0xFCD16789F9648800LL, (int64_t)0xE591F073CAFD6600LL, (int64_t)0xDBC272CFB7687800LL, (int64_t)0xD44EE88828890400LL, (int64_t)0xCFEB5AB79FC66800LL, (int64_t)0xEAC042CCD554BE00LL, (int64_t)0xC1F045ED03DE9000LL, (int64_t)0xEE1C7C00DC09C000LL, (int64_t)0xFF24C2FBFE08DC00LL, (int64_t)0xCDF33CE61BD83000LL, (int64_t)0x17B2951EAF8E6F00LL, (int64_t)0x253539AC4A85E400LL, (int64_t)0x2A0A13A5542AA600LL, (int64_t)0x37E79C0D6FD78200LL, (int64_t)0x1B7EAD503AF9C60LL, (int64_t)0x3FBAF6F0FF763400LL, (int64_t)0x178EC7422F46F800LL, (int64_t)0x375F7ACEEEC7CC00LL, (int64_t)0x3FB4F801FF6A3C00LL, (int64_t)0x323F677E648CE400LL, (int64_t)0x5660CC20B081B80LL, (int64_t)0x243A3CA7C890EA00LL, (int64_t)0x3245D42DE499B600LL, (int64_t)0x35BF5F2D6B893E00LL, (int64_t)0x7AFA95A0F98FD00LL, (int64_t)0x359049686B2B4200LL, (int64_t)0x1BDDBD4AB7E07B00LL, (int64_t)0x29F32BCA53FCEC00LL, (int64_t)0xB42EE2716BBDD00LL, (int64_t)0x19D6ECF733D4ED00LL, (int64_t)0x20B812DF41902E00LL, (int64_t)0x29F31F2A53FCD200LL, (int64_t)0x1E1C21DD3C5AF800LL, (int64_t)0x3124A88AE2588800LL, (int64_t)0x8EB324C920ECB80LL, (int64_t)0xFFFFFC182882AC13LL, (int64_t)0xFFFFFC18AECF3AD4LL, (int64_t)0xFFFFFC18B2D765CELL, (int64_t)0xFFFFFC18D5A1CABCLL, (int64_t)0xFFFFFC18202E6A9DLL, (int64_t)0xFFFFFC184902282FLL, (int64_t)0xFFFFFC18E39BA0C4LL, (int64_t)0xFFFFFC181C6A5397LL, (int64_t)0xFFFFFC18440E58FDLL, (int64_t)0xFFFFFC187AF5DC47LL, (int64_t)0xFFFFFC181C33D421LL, (int64_t)0xFFFFFC189F0F470ELL, (int64_t)0xFFFFFC18E6F1B65CLL, (int64_t)0xFFFFFC18F204CA78LL, (int64_t)0xFFFFFC18290CED1DLL, (int64_t)0xFFFFFC18F5D47E90LL, (int64_t)0xFFFFFC18AC2946A6LL, (int64_t)0xFFFFFC181B61359DLL, (int64_t)0xFFFFFC18A08B7522LL, (int64_t)0xFFFFFC188A1E2172LL, (int64_t)0xFFFFFC1849B254A1LL, (int64_t)0xFFFFFC185C522F11LL, (int64_t)0xFFFFFC189669D132LL, (int64_t)0xFFFFFC18C16734AELL, (int64_t)0xFFFFFC1849D74F43LL };
		static const int64_t output0[] = { (int64_t)0x176123LL, (int64_t)0xFFFFFFF54B4DF15DLL, (int64_t)0x2DEFBCLL, (int64_t)0xFFFFFFFFF71FB432LL, (int64_t)0xFFFFFFFFFF807C3DLL, (int64_t)0xFFFFFFFFD5DF3C23LL, (int64_t)0x6B68LL, (int64_t)0xFFFFFFFFFFFF7CA7LL, (int64_t)0xFFFFFF7EA7965A3FLL, (int64_t)0x6E0D9FLL, (int64_t)0xFFFFFFFD103137D4LL, (int64_t)0x9411BLL, (int64_t)0xFFFFFFDDE744D010LL, (int64_t)0xFFFFFFFFFC019821LL, (int64_t)0x27934LL, (int64_t)0x3788LL, (int64_t)0x639B44LL, (int64_t)0x5108LL, (int64_t)0x1A987LL, (int64_t)0x2B7C71LL, (int64_t)0xFFFFFFFFFFFF1E0DLL, (int64_t)0xFFFFFFA0D8DC6E78LL, (int64_t)0x9627LL, (int64_t)0x75A536LL, (int64_t)0xFFFFFFFFFFFFD4D7LL, (int64_t)0x80372B0ELL, (int64_t)0xFFFFFFFF70455A30LL, (int64_t)0xFFFFFFFC0FBEB890LL, (int64_t)0xFFFFFFFED1869A2FLL, (int64_t)0xFFFFFFFCF1FDE56ELL, (int64_t)0x1C8B5CAAELL, (int64_t)0xAB023459LL, (int64_t)0xC21B585FLL, (int64_t)0xFFFFFFFEF81588A4LL, (int64_t)0x113D537FFLL, (int64_t)0x167F51D7LL, (int64_t)0x9DB2C6F9LL, (int64_t)0xFFFFFFFD48FD2F5ALL, (int64_t)0xE8D6F631LL, (int64_t)0xFFFFFFFEBD3931FDLL, (int64_t)0x4BDE1B847LL, (int64_t)0xFFFFFFFE129D2F9BLL, (int64_t)0xFFFFFFFFB72B599CLL, (int64_t)0x15E0BCB7FLL, (int64_t)0x6FE68BDDLL, (int64_t)0xFFFFFFFD3EC9A3B5LL, (int64_t)0x10003D16FLL, (int64_t)0xFFFFFFFC9B6905A5LL, (int64_t)0x38759D48A0LL, (int64_t)0xFFFFFFFF8070A746LL, (int64_t)0x2421E2C45LL, (int64_t)0x135D48D4LL, (int64_t)0xEFEB6B38LL, (int64_t)0xFFFFFFFF7DDF1A1FLL, (int64_t)0x191E1699D2LL, (int64_t)0xFFFFFFFF7AD3B47BLL, (int64_t)0x187CC85C0LL, (int64_t)0x64557F5BLL, (int64_t)0xFFFFFFFF89A191ECLL, (int64_t)0x1169B9791LL, (int64_t)0xFFFFFFF59300928BLL, (int64_t)0xFFFFFFFFC8DDE471LL, (int64_t)0x1194C5130LL, (int64_t)0x11A7179D3LL, (int64_t)0xD2D53F54LL, (int64_t)0xFFFFFFFF1109A8B3LL, (int64_t)0xFFFFFFFE71280AD7LL, (int64_t)0x14B75B7FDLL, (int64_t)0x2A05CC722LL, (int64_t)0xFFFFFFFE9C05D510LL, (int64_t)0xFFFFFFFF20D4DFF8LL, (int64_t)0x1712C7CDALL, (int64_t)0xFFFFFFFFE75CC029LL, (int64_t)0x2E2B97B4LL, (int64_t)0xFFFFFFFE5B6AFBC6LL, (int64_t)0xFFFFFFFF0015EE68LL, (int64_t)0xFFFFFFFF000DD9BELL, (int64_t)0xFFFFFFFEFFD2E0F2LL, (int64_t)0xFFFFFFFEFFD88691LL, (int64_t)0xFFFFFFFEFFFBA3F0LL, (int64_t)0xFFFFFFFEFFF0E106LL, (int64_t)0xFFFFFFFF000458F9LL, (int64_t)0xFFFFFFFF002AA1D7LL, (int64_t)0xFFFFFFFEFFF59F54LL, (int64_t)0xFFFFFFFF00037578LL, (int64_t)0xFFFFFFFF000F16CDLL, (int64_t)0xFFFFFFFF0010A5C9LL, (int64_t)0xFFFFFFFEFFD2342FLL, (int64_t)0xFFFFFFFEFFF3A41BLL, (int64_t)0xFFFFFFFEFFF9FBB2LL, (int64_t)0xFFFFFFFEFFD5330CLL, (int64_t)0xFFFFFFFEFFEFD82FLL, (int64_t)0xFFFFFFFEFFFD2CD3LL, (int64_t)0xFFFFFFFF000CC4D7LL, (int64_t)0xFFFFFFFEFFFFB269LL, (int64_t)0xFFFFFFFF000B10B0LL, (int64_t)0xFFFFFFFF00114FD7LL, (int64_t)0xFFFFFFFF001580BELL, (int64_t)0xFFFFFFFEFFE7F73BLL, (int64_t)0xFFFFFFFF001594A6LL };
		for (int ndx = 0; ndx < 100; ndx++)
			Util::Check("Fixed64::DivPrecise", Fixed64::DivPrecise(input0[ndx], input1[ndx]), output0[ndx], input0[ndx], input1[ndx]);
	}

	// Fixed32.DivPrecise()
	static void Fixed32_DivPrecise()
	{
		static const int32_t input0[] = { (int32_t)0x36AC875, (int32_t)0x1B6A1C7, (int32_t)0xFE609F23, (int32_t)0xFE758652, (int32_t)0xC00CDC, (int32_t)0xFD1FB666, (int32_t)0xFC42D6F2, (int32_t)0xFF0CE1A5, (int32_t)0xFF19F066, (int32_t)0xFCDE1995, (int32_t)0x100A55A, (int32_t)0x1E673F6, (int32_t)0xFCAA1E60, (int32_t)0xFC3C583B, (int32_t)0x1F83EBB, (int32_t)0x616CA9, (int32_t)0xFDEF9CD9, (int32_t)0xFC93C383, (int32_t)0x1BEAA93, (int32_t)0xFC6B36C8, (int32_t)0xFE8B05E4, (int32_t)0xFFCFF039, (int32_t)0x2FB1133, (int32_t)0xFEBD04FC, (int32_t)0xFF6ABF5E, (int32_t)0xFCF7EEC4, (int32_t)0x9EB29DB, (int32_t)0x1834E916, (int32_t)0xD9F904F5, (int32_t)0xF2F33349, (int32_t)0xFB0FE322, (int32_t)0x2B3C73FA, (int32_t)0x3A16275B, (int32_t)0x304E44E0, (int32_t)0xF0AA123A, (int32_t)0x1325F61E, (int32_t)0xE7A63248, (int32_t)0xDD2D3ACE, (int32_t)0x1B7C61C4, (int32_t)0x32C5E9C9, (int32_t)0x1C9F97C5, (int32_t)0x17DA2442, (int32_t)0xF3F3FBC, (int32_t)0xCA671FCE, (int32_t)0x20D92CDF, (int32_t)0x1D747502, (int32_t)0x1324FB56, (int32_t)0x363D782C, (int32_t)0xEAF1C6D2, (int32_t)0xD62B2D2B, (int32_t)0xE1990C2, (int32_t)0x11521AF0, (int32_t)0x2594CCEC, (int32_t)0x2E9B8B8C, (int32_t)0xD7404677, (int32_t)0x29D2F36C, (int32_t)0x13ADB1AE, (int32_t)0xED432246, (int32_t)0xC3CDD7CB, (int32_t)0xCAD9ABE4, (int32_t)0x1963CA9D, (int32_t)0x34B64BAA, (int32_t)0x29CE8462, (int32_t)0x1FCF5427, (int32_t)0xF59AF20E, (int32_t)0xC5672E9B, (int32_t)0xDC033A97, (int32_t)0x3E9E724A, (int32_t)0x2AA03DC, (int32_t)0xE2C95227, (int32_t)0x10735AD, (int32_t)0x2A8B41C6, (int32_t)0x817B0C1, (int32_t)0xD8AAA43, (int32_t)0xCA940B7, (int32_t)0x3E756FD, (int32_t)0x3E7C877, (int32_t)0x3E77A34, (int32_t)0x3E7C981, (int32_t)0x3E7FACB, (int32_t)0x3E7C71C, (int32_t)0x3E71274, (int32_t)0x3E73014, (int32_t)0x3E743E4, (int32_t)0x3E750FA, (int32_t)0x3E7E2D3, (int32_t)0x3E77CE8, (int32_t)0x3E7C19F, (int32_t)0x3E76A49, (int32_t)0x3E78B35, (int32_t)0x3E7EEF7, (int32_t)0x3E70B74, (int32_t)0x3E72FE7, (int32_t)0x3E73AD3, (int32_t)0x3E717BB, (int32_t)0x3E73A7A, (int32_t)0x3E7FDF7, (int32_t)0x3E7EE9F, (int32_t)0x3E72755, (int32_t)0x3E74CF4 };
		static const int32_t input1[] = { (int32_t)0xFFF7E0FB, (int32_t)0xFF943E19, (int32_t)0x3E63DEA, (int32_t)0x44ECF, (int32_t)0xFD642F21, (int32_t)0xFFF8DF5E, (int32_t)0x19624073, (int32_t)0x1BC98, (int32_t)0xFFAE2273, (int32_t)0xDD4E67B4, (int32_t)0x3D432732, (int32_t)0xB01C63F, (int32_t)0xFED86DB2, (int32_t)0xFFFC2DE8, (int32_t)0x2B1999, (int32_t)0x11D97000, (int32_t)0xFFFEFF6D, (int32_t)0xFC0DA195, (int32_t)0x29951A0B, (int32_t)0x7C5F7, (int32_t)0xFFEE3C10, (int32_t)0xFFF4304C, (int32_t)0x13011E01, (int32_t)0x19D244F, (int32_t)0xE4D0BEB3, (int32_t)0xD40CC39F, (int32_t)0xF0D60C10, (int32_t)0xFB4313EC, (int32_t)0xC823D175, (int32_t)0xC83F7855, (int32_t)0xFD878FD7, (int32_t)0xE6DF639B, (int32_t)0xC5D17BD3, (int32_t)0xCF476432, (int32_t)0xCC692EE8, (int32_t)0xE7FE4BA9, (int32_t)0xCDCC30FE, (int32_t)0xF6A77106, (int32_t)0xC393C77A, (int32_t)0xDE6E3AA6, (int32_t)0xCA17F60A, (int32_t)0xF758CB80, (int32_t)0xED5DD32C, (int32_t)0xF08219EA, (int32_t)0xEF3F3880, (int32_t)0xE3C1007E, (int32_t)0xF16D3140, (int32_t)0xFFE20A0E, (int32_t)0xC3C502D5, (int32_t)0xDF36873C, (int32_t)0x37616ED2, (int32_t)0x3C34AA54, (int32_t)0xA9CA232, (int32_t)0x2639AAD2, (int32_t)0x2754960C, (int32_t)0x229F925E, (int32_t)0x30F40202, (int32_t)0x377E1158, (int32_t)0x28ED4A38, (int32_t)0x2132B01A, (int32_t)0x14DE82C9, (int32_t)0x3414FD58, (int32_t)0xE83B644, (int32_t)0x3A74143, (int32_t)0x177FB567, (int32_t)0x3E2772FC, (int32_t)0x372A9FF2, (int32_t)0x34C08564, (int32_t)0x3E26F18D, (int32_t)0x31BC5584, (int32_t)0xFBCD070, (int32_t)0x27189C5, (int32_t)0x3D762949, (int32_t)0x15B4A13F, (int32_t)0x2C8BA177, (int32_t)0xFC185A9D, (int32_t)0xFC18FDEC, (int32_t)0xFC18686D, (int32_t)0xFC182BDD, (int32_t)0xFC18A5A1, (int32_t)0xFC182C41, (int32_t)0xFC180506, (int32_t)0xFC182C60, (int32_t)0xFC181948, (int32_t)0xFC18B9AC, (int32_t)0xFC183DFA, (int32_t)0xFC18B665, (int32_t)0xFC18EB8A, (int32_t)0xFC185717, (int32_t)0xFC184252, (int32_t)0xFC18BEFB, (int32_t)0xFC185FC1, (int32_t)0xFC1809D6, (int32_t)0xFC18425E, (int32_t)0xFC1884D5, (int32_t)0xFC18844C, (int32_t)0xFC18E4F6, (int32_t)0xFC189748, (int32_t)0xFC18929A, (int32_t)0xFC182807 };
		static const int32_t output0[] = { (int32_t)0xFF94489C, (int32_t)0xFFFBEDF1, (int32_t)0xFFFF957A, (int32_t)0xFFA46DBC, (int32_t)0xFFFFB662, (int32_t)0x674D81, (int32_t)0xFFFFDA4B, (int32_t)0xFF7402C0, (int32_t)0x2CF6B, (int32_t)0x171D, (int32_t)0x430, (int32_t)0x2C31, (int32_t)0x2E390, (int32_t)0xFC3892, (int32_t)0xBB30D, (int32_t)0x575, (int32_t)0x20F346B, (int32_t)0xDE03, (int32_t)0xABD, (int32_t)0xFF8A0F43, (int32_t)0x14FE9D, (int32_t)0x411B1, (int32_t)0x2826, (int32_t)0xFFFF37DF, (int32_t)0x57D, (int32_t)0x11A8, (int32_t)0xFFFF588E, (int32_t)0xFFFAE414, (int32_t)0xAE46, (int32_t)0x3BEC, (int32_t)0x1FFB0, (int32_t)0xFFFE4782, (int32_t)0xFFFF006C, (int32_t)0xFFFF022F, (int32_t)0x4C19, (int32_t)0xFFFF33CF, (int32_t)0x7C2C, (int32_t)0x3B9DD, (int32_t)0xFFFF8B8D, (int32_t)0xFFFE7CCF, (int32_t)0xFFFF7812, (int32_t)0xFFFD3E59, (int32_t)0xFFFF2E87, (int32_t)0x375AF, (int32_t)0xFFFE0A0E, (int32_t)0xFFFEF50C, (int32_t)0xFFFEAFB5, (int32_t)0xFE308B55, (int32_t)0x597E, (int32_t)0x1469E, (int32_t)0x412D, (int32_t)0x49A6, (int32_t)0x38A9B, (int32_t)0x13823, (int32_t)0xFFFEF6C5, (int32_t)0x1353D, (int32_t)0x66E8, (int32_t)0xFFFFA98F, (int32_t)0xFFFE8779, (int32_t)0xFFFE6626, (int32_t)0x13774, (int32_t)0x10318, (int32_t)0x2E15E, (int32_t)0x8B502, (int32_t)0xFFFF8EC3, (int32_t)0xFFFF0EA7, (int32_t)0xFFFF5901, (int32_t)0x12FE2, (int32_t)0xAF9, (int32_t)0xFFFF69A2, (int32_t)0x10B9, (int32_t)0x116938, (int32_t)0x21B5, (int32_t)0x9FB6, (int32_t)0x48C3, (int32_t)0xFFFF0015, (int32_t)0xFFFEFFCE, (int32_t)0xFFFF0008, (int32_t)0xFFFF0003, (int32_t)0xFFFEFFD7, (int32_t)0xFFFF0004, (int32_t)0xFFFF003C, (int32_t)0xFFFF002A, (int32_t)0xFFFF002A, (int32_t)0xFFFEFFFE, (int32_t)0xFFFEFFF8, (int32_t)0xFFFEFFF3, (int32_t)0xFFFEFFD4, (int32_t)0xFFFF0011, (int32_t)0xFFFF000D, (int32_t)0xFFFEFFD4, (int32_t)0xFFFF0027, (int32_t)0xFFFF0033, (int32_t)0xFFFF0022, (int32_t)0xFFFF001A, (int32_t)0xFFFF0011, (int32_t)0xFFFEFFC6, (int32_t)0xFFFEFFDE, (int32_t)0xFFFF0012, (int32_t)0xFFFF0024 };
		for (int ndx = 0; ndx < 100; ndx++)
			Util::Check("Fixed32::DivPrecise", Fixed32::DivPrecise(input0[ndx], input1[ndx]), output0[ndx], input0[ndx], input1[ndx]);
	}

	// Fixed64.Mod()
	static void Fixed64_Mod()
	{
		static const int64_t input0[] = { (int64_t)0xFFFFFDAA4FAA48C5LL, (int64_t)0x2BE1881A52CLL, (int64_t)0x1CD1502594ALL, (int64_t)0xFFFFFE04E115639ALL, (int64_t)0xFFFFFFBF2F26BDCFLL, (int64_t)0xFFFFFECF7E669F4FLL, (int64_t)0x2BDE7857BEBLL, (int64_t)0xFFFFFE9F6DA9316FLL, (int64_t)0xFFFFFFE50A1AD63BLL, (int64_t)0xFFFFFEB33ABDC397LL, (int64_t)0x21B4FF575C6LL, (int64_t)0xFFFFFFD7FF8DA5A0LL, (int64_t)0xFFFFFEE64527D73DLL, (int64_t)0x33861A9B480LL, (int64_t)0xFFFFFFEA5ECA74C5LL, (int64_t)0x32B51109A46LL, (int64_t)0x14289161355LL, (int64_t)0x2C6303CDD9CLL, (int64_t)0xFFFFFD30E6902272LL, (int64_t)0x23BBC783F47LL, (int64_t)0x123DC09B417LL, (int64_t)0x3A19C19C273LL, (int64_t)0x36A39AC0DDLL, (int64_t)0xFFFFFFE9B71E3364LL, (int64_t)0x2A572DDB33ALL, (int64_t)0x283EC80AD57LL, (int64_t)0xFFFFFE0D14E7E4CBLL, (int64_t)0xFFFFFE313CB936B3LL, (int64_t)0x11AF600C325LL, (int64_t)0xFFFFFDA373640597LL, (int64_t)0xFFFFFDF0B3908652LL, (int64_t)0xFFFFFE9F74E6E44FLL, (int64_t)0xFFFFFDFB5DE425E7LL, (int64_t)0xFFFFFF476E37B05FLL, (int64_t)0x2DA44680B84LL, (int64_t)0xFFFFFE928A155BF6LL, (int64_t)0x13F29A4C12ELL, (int64_t)0x12E689B48ECLL, (int64_t)0x15246D71494LL, (int64_t)0x24A63410DA4LL, (int64_t)0xFFFFFD6D33A226ABLL, (int64_t)0xFFFFFE8E80D92E2ELL, (int64_t)0xFFFFFF043B5FD499LL, (int64_t)0x208A92C6D81LL, (int64_t)0x1A2E8FAEE4LL, (int64_t)0x137A4D26BBFLL, (int64_t)0xFFFFFCBA180F3745LL, (int64_t)0xFFFFFF62E0BFFCB6LL, (int64_t)0xFFFFFDC2EE8922D6LL, (int64_t)0x2F5D1F2A65BLL, (int64_t)0xFAB7D3F4756FA800LL, (int64_t)0x3244AC6EE4895800LL, (int64_t)0xE4FFF4E249FFEA00LL, (int64_t)0x1E868407BD0D0800LL, (int64_t)0x35B735FDEB6E6C00LL, (int64_t)0x1ED64CE4BDAC9800LL, (int64_t)0x2A20028DD4400400LL, (int64_t)0xC70F3E780E1E7C00LL, (int64_t)0x219BE853C337D000LL, (int64_t)0x1FFB8DA83FF7000LL, (int64_t)0x2EB72B3BDD6E5800LL, (int64_t)0xCFB191211F632200LL, (int64_t)0x1CAF9102B95F2400LL, (int64_t)0xEBE6B05157CD6000LL, (int64_t)0x3C70B3A878E1800LL, (int64_t)0xEB0814A956102A00LL, (int64_t)0x1C21CCF8B8439800LL, (int64_t)0x6EF0AF88DDE1400LL, (int64_t)0x163C6BC6AC78D800LL, (int64_t)0x6C964980D92C00LL, (int64_t)0x2B8A7F7DD7150000LL, (int64_t)0x255FC0DCCABF8000LL, (int64_t)0xB1CFDAF9639FC00LL, (int64_t)0x2C231681D8462C00LL, (int64_t)0x2E2C3D2BDC587C00LL, (int64_t)0x3E787107AA5LL, (int64_t)0x3E7C2298E3FLL, (int64_t)0x3E74024D11CLL, (int64_t)0x3E70799C2D8LL, (int64_t)0x3E7F5E473EBLL, (int64_t)0x3E7AAB0262FLL, (int64_t)0x3E74E4F5D7ELL, (int64_t)0x3E771B9BCC0LL, (int64_t)0x3E7E0B48DB7LL, (int64_t)0x3E745A0CB2ALL, (int64_t)0x3E7D5166CB9LL, (int64_t)0x3E7F9E73AF9LL, (int64_t)0x3E7738F0D62LL, (int64_t)0x3E7218BA56ALL, (int64_t)0x3E725686652LL, (int64_t)0x3E76AF8DAA6LL, (int64_t)0x3E7745957EALL, (int64_t)0x3E701D8C0A8LL, (int64_t)0x3E7BCAA620DLL, (int64_t)0x3E7162C2066LL, (int64_t)0x3E7A4E7A639LL, (int64_t)0x3E784B9E96BLL, (int64_t)0x3E760754480LL, (int64_t)0x3E76B51A218LL, (int64_t)0x3E70AE39D9CLL };
		static const int64_t input1[] = { (int64_t)0x400F0A538LL, (int64_t)0x1129C4A18LL, (int64_t)0x18DC025F1LL, (int64_t)0x4B4578E35LL, (int64_t)0x691352485LL, (int64_t)0x37881C8BCLL, (int64_t)0x3F8F09D72LL, (int64_t)0x176198A3ALL, (int64_t)0x9A932F456LL, (int64_t)0x16B29732ELL, (int64_t)0x976E48181LL, (int64_t)0x1C7116DEELL, (int64_t)0x3CDC79B03LL, (int64_t)0x2B6DB4D12LL, (int64_t)0x873D61500LL, (int64_t)0x8125273A4LL, (int64_t)0x933612094LL, (int64_t)0x3EBD3CAC2LL, (int64_t)0x21E8C1AC6LL, (int64_t)0x95C31D65FLL, (int64_t)0x5F1575424LL, (int64_t)0x1D93C1C6FLL, (int64_t)0x11ED5A930LL, (int64_t)0x1C8E3AA09LL, (int64_t)0x3C332AAECLL, (int64_t)0xFFE9F1034F0F90F5LL, (int64_t)0xFFFFF72CD53BDE8DLL, (int64_t)0x4182B95DABLL, (int64_t)0xB87913ED35F5LL, (int64_t)0xFFFFFFFC2842EAD4LL, (int64_t)0xFFFFFBCE17DB50EBLL, (int64_t)0x2B3032A5AB9C4A00LL, (int64_t)0x124D861651C02B00LL, (int64_t)0xFFFFFFF87A7C0828LL, (int64_t)0xC5D08DCB18992A00LL, (int64_t)0x19ED64EBBC8LL, (int64_t)0x3C42453329FLL, (int64_t)0xFFFF30599B4D6FB4LL, (int64_t)0xFF3B7120E2A13600LL, (int64_t)0xB0B74968A32C500LL, (int64_t)0xBE25CBCBF4CA9LL, (int64_t)0xFFFFFFFED0B3C790LL, (int64_t)0xFFFFFFDBDE77E42ELL, (int64_t)0x21422A3045326LL, (int64_t)0x4E53C550B2F63LL, (int64_t)0xFFFFFF549739009BLL, (int64_t)0xFFFFFD6668041D10LL, (int64_t)0xD412D0582D0B680LL, (int64_t)0xFE406A58FC86LL, (int64_t)0xFEFC58F20E6F72E0LL, (int64_t)0x12E6D068A5CDA000LL, (int64_t)0x344B1687E8962C00LL, (int64_t)0x2D2C6510DA58CC00LL, (int64_t)0xD47B7C69A8F7000LL, (int64_t)0x10D6159EA1AC2C00LL, (int64_t)0xEF4B85B15E970C00LL, (int64_t)0xF93ABDE872757C00LL, (int64_t)0x1584E52BAB09CC00LL, (int64_t)0x1BC330AEB7866000LL, (int64_t)0xD917F4A9B230000LL, (int64_t)0xF8B0FB077161F600LL, (int64_t)0x1894418CB1288400LL, (int64_t)0xD9C4D8433389B000LL, (int64_t)0xD6B468B82D68D000LL, (int64_t)0xE0939ABA41273600LL, (int64_t)0xFAFAC77B75F58E00LL, (int64_t)0xE33C81AA46790400LL, (int64_t)0x215E8161C2BD0400LL, (int64_t)0xE2C651A4458CA400LL, (int64_t)0xC67840140CF08000LL, (int64_t)0x3CF2876879E5000LL, (int64_t)0xE45B979148B73000LL, (int64_t)0x2A2DF896D45BF000LL, (int64_t)0xC4FE45FA09FC8C00LL, (int64_t)0xE3030D3C46061A00LL, (int64_t)0xFFFFFC186F640459LL, (int64_t)0xFFFFFC18F7FD810ALL, (int64_t)0xFFFFFC18AF52A7EALL, (int64_t)0xFFFFFC1834AA5325LL, (int64_t)0xFFFFFC18AB45D696LL, (int64_t)0xFFFFFC18A2E98E52LL, (int64_t)0xFFFFFC18EBC5C41ELL, (int64_t)0xFFFFFC182FA3C1D3LL, (int64_t)0xFFFFFC18AB76AAECLL, (int64_t)0xFFFFFC18E5644F68LL, (int64_t)0xFFFFFC18639282DDLL, (int64_t)0xFFFFFC18CDAF554CLL, (int64_t)0xFFFFFC185C8FF881LL, (int64_t)0xFFFFFC183E5E128FLL, (int64_t)0xFFFFFC180F8D279BLL, (int64_t)0xFFFFFC18DCED6770LL, (int64_t)0xFFFFFC18C09139A8LL, (int64_t)0xFFFFFC18AD2ADD32LL, (int64_t)0xFFFFFC181837F9BBLL, (int64_t)0xFFFFFC1893EF3746LL, (int64_t)0xFFFFFC1883F1AC04LL, (int64_t)0xFFFFFC182D160A0FLL, (int64_t)0xFFFFFC185ECEA2A7LL, (int64_t)0xFFFFFC18DFDBC30ALL, (int64_t)0xFFFFFC185E085A7FLL };
		static const int64_t output0[] = { (int64_t)0xFFFFFFFEDBBA725DLL, (int64_t)0x8D3C5BDCLL, (int64_t)0x12ED67AA2LL, (int64_t)0xFFFFFFFC41ADD3C1LL, (int64_t)0xFFFFFFFA4A05067CLL, (int64_t)0xFFFFFFFD7281D733LL, (int64_t)0x2C2193D8BLL, (int64_t)0xFFFFFFFF9BB45209LL, (int64_t)0xFFFFFFF85C80BEE7LL, (int64_t)0xFFFFFFFF2EA10BA3LL, (int64_t)0x94DF9218ELL, (int64_t)0xFFFFFFFF1B0D1814LL, (int64_t)0xFFFFFFFFC0DAA61BLL, (int64_t)0x1F4197C32LL, (int64_t)0xFFFFFFFB46769EC5LL, (int64_t)0x428DB6E36LL, (int64_t)0x82CE9F19LL, (int64_t)0x737E8272LL, (int64_t)0xFFFFFFFF5A1796A4LL, (int64_t)0xC4982AA4LL, (int64_t)0xAA529933LL, (int64_t)0x1A03A00C9LL, (int64_t)0xDB8B07DDLL, (int64_t)0xFFFFFFFF21CA2BD0LL, (int64_t)0x333D854ALL, (int64_t)0x283EC80AD57LL, (int64_t)0xFFFFFE0D14E7E4CBLL, (int64_t)0xFFFFFFFBCFCAC660LL, (int64_t)0x11AF600C325LL, (int64_t)0xFFFFFFFEC25A0193LL, (int64_t)0xFFFFFDF0B3908652LL, (int64_t)0xFFFFFE9F74E6E44FLL, (int64_t)0xFFFFFDFB5DE425E7LL, (int64_t)0xFFFFFFFBF296EC9FLL, (int64_t)0x2DA44680B84LL, (int64_t)0xFFFFFE928A155BF6LL, (int64_t)0x13F29A4C12ELL, (int64_t)0x12E689B48ECLL, (int64_t)0x15246D71494LL, (int64_t)0x24A63410DA4LL, (int64_t)0xFFFFFD6D33A226ABLL, (int64_t)0xFFFFFFFEF671BE3ELL, (int64_t)0xFFFFFFDD04907B85LL, (int64_t)0x208A92C6D81LL, (int64_t)0x1A2E8FAEE4LL, (int64_t)0x8C3C0B6C5ALL, (int64_t)0xFFFFFF53B00B1A35LL, (int64_t)0xFFFFFF62E0BFFCB6LL, (int64_t)0xFFFFFDC2EE8922D6LL, (int64_t)0x2F5D1F2A65BLL, (int64_t)0xFAB7D3F4756FA800LL, (int64_t)0x3244AC6EE4895800LL, (int64_t)0xE4FFF4E249FFEA00LL, (int64_t)0x3F7147A87EE2800LL, (int64_t)0x334F5220669E800LL, (int64_t)0xE21D2961C43A400LL, (int64_t)0x18076008300EC00LL, (int64_t)0xF21908CF64321400LL, (int64_t)0x5D8B7A50BB17000LL, (int64_t)0x1FFB8DA83FF7000LL, (int64_t)0x2DD0D6885BA1C00LL, (int64_t)0xE845D2ADD08BA600LL, (int64_t)0x1CAF9102B95F2400LL, (int64_t)0xEBE6B05157CD6000LL, (int64_t)0x3C70B3A878E1800LL, (int64_t)0xFF1CF6BB7E39F200LL, (int64_t)0x1C21CCF8B8439800LL, (int64_t)0x6EF0AF88DDE1400LL, (int64_t)0x163C6BC6AC78D800LL, (int64_t)0x6C964980D92C00LL, (int64_t)0x1A3C26603479000LL, (int64_t)0x9BB586E1376B000LL, (int64_t)0xB1CFDAF9639FC00LL, (int64_t)0x2C231681D8462C00LL, (int64_t)0x112F4A68225E9600LL, (int64_t)0x3E787107AA5LL, (int64_t)0xBA270F49LL, (int64_t)0x3E74024D11CLL, (int64_t)0x3E70799C2D8LL, (int64_t)0xA12A4A81LL, (int64_t)0x4D99B481LL, (int64_t)0x3A15219CLL, (int64_t)0x3E771B9BCC0LL, (int64_t)0x8C2B38A3LL, (int64_t)0x2B051A92LL, (int64_t)0x38A8EF96LL, (int64_t)0xC7969045LL, (int64_t)0x3E7738F0D62LL, (int64_t)0x3E7218BA56ALL, (int64_t)0x3E725686652LL, (int64_t)0x47E64216LL, (int64_t)0x34EA9192LL, (int64_t)0x3E701D8C0A8LL, (int64_t)0x3E7BCAA620DLL, (int64_t)0x3E7162C2066LL, (int64_t)0x28D9523DLL, (int64_t)0x3E784B9E96BLL, (int64_t)0x3E760754480LL, (int64_t)0x4B2D6522LL, (int64_t)0x3E70AE39D9CLL };
		for (int ndx = 0; ndx < 100; ndx++)
			Util::Check("Fixed64::Mod", Fixed64::Mod(input0[ndx], input1[ndx]), output0[ndx], input0[ndx], input1[ndx]);
	}

	// Fixed32.Mod()
	static void Fixed32_Mod()
	{
		static const int32_t input0[] = { (int32_t)0xFCAE8ADA, (int32_t)0xFE41A9C0, (int32_t)0xFCD11B2F, (int32_t)0x388CC48, (int32_t)0x102BDEC, (int32_t)0xFC2A444F, (int32_t)0xFF135081, (int32_t)0x296B1DF, (int32_t)0x3CE4F02, (int32_t)0xFF2F462C, (int32_t)0x10EECAA, (int32_t)0x3D581CA, (int32_t)0x12BEDBC, (int32_t)0x5D942F, (int32_t)0x330B8DB, (int32_t)0x1FAB83D, (int32_t)0xFD5C8DD7, (int32_t)0xFD0A5CB0, (int32_t)0xFC4E32A9, (int32_t)0x46283D, (int32_t)0xFDD2A1F7, (int32_t)0x2781EC4, (int32_t)0xFE0DAC53, (int32_t)0x25371E3, (int32_t)0x3833775, (int32_t)0xFE9CA21A, (int32_t)0x1956721, (int32_t)0xCD1F00, (int32_t)0xB4F2DE, (int32_t)0xFF4EBCC7, (int32_t)0xFE1E6C16, (int32_t)0xFC4BFD6E, (int32_t)0xFE65A94B, (int32_t)0xFC1D94D4, (int32_t)0xFDE9FD98, (int32_t)0x27478FE, (int32_t)0x3348709, (int32_t)0x29C873D, (int32_t)0xFF726CB4, (int32_t)0x135475E, (int32_t)0xFDEBAAD4, (int32_t)0x25A52A6, (int32_t)0xFFE8BF23, (int32_t)0xFE5E30A6, (int32_t)0x2832342, (int32_t)0x215CC77, (int32_t)0xFE71897A, (int32_t)0xFF60A9B4, (int32_t)0x36096A3, (int32_t)0xFE7B615D, (int32_t)0xEC2BD471, (int32_t)0xCE0256F5, (int32_t)0xFE2AC54F, (int32_t)0xD675AB42, (int32_t)0x337089E6, (int32_t)0xC2C21683, (int32_t)0xE424B316, (int32_t)0x15CB4989, (int32_t)0xE473CEFF, (int32_t)0x71260A6, (int32_t)0xCC161D38, (int32_t)0xD1651E9E, (int32_t)0x2683D67E, (int32_t)0xD986F786, (int32_t)0xF79BB579, (int32_t)0xF2B3E142, (int32_t)0xF7CBBD0A, (int32_t)0xC30A15, (int32_t)0xD8C77498, (int32_t)0xEE4553E, (int32_t)0xF7A66644, (int32_t)0xD9DC9178, (int32_t)0x1E7BBB5F, (int32_t)0xE5B5D60A, (int32_t)0x2160F72B, (int32_t)0x3E7E21A, (int32_t)0x3E70665, (int32_t)0x3E7074A, (int32_t)0x3E716FA, (int32_t)0x3E7A29B, (int32_t)0x3E7249E, (int32_t)0x3E75F0D, (int32_t)0x3E730E9, (int32_t)0x3E76A29, (int32_t)0x3E7D39C, (int32_t)0x3E79459, (int32_t)0x3E75473, (int32_t)0x3E704BF, (int32_t)0x3E74C58, (int32_t)0x3E73AE5, (int32_t)0x3E726D5, (int32_t)0x3E7F3AF, (int32_t)0x3E7607E, (int32_t)0x3E7BDBC, (int32_t)0x3E7BECD, (int32_t)0x3E776B3, (int32_t)0x3E72313, (int32_t)0x3E7145A, (int32_t)0x3E7FAC1, (int32_t)0x3E7DC44 };
		static const int32_t input1[] = { (int32_t)0x27DB2, (int32_t)0x190FE, (int32_t)0x2F5F0, (int32_t)0x9EEDD, (int32_t)0x39D15, (int32_t)0x5820F, (int32_t)0x28575, (int32_t)0x18C1F, (int32_t)0x17364, (int32_t)0x1CD3F, (int32_t)0x138A1, (int32_t)0x9B16B, (int32_t)0x74502, (int32_t)0x5058D, (int32_t)0x13E73, (int32_t)0x1B223, (int32_t)0x25185, (int32_t)0x47ADE, (int32_t)0x24B76, (int32_t)0x20343, (int32_t)0x1667F, (int32_t)0x3F60C, (int32_t)0x5FB24, (int32_t)0x9EE94, (int32_t)0x4AA04, (int32_t)0xF02870E2, (int32_t)0xFFFB0D2C, (int32_t)0x1607801F, (int32_t)0x78AE46, (int32_t)0xF681830D, (int32_t)0xF6F033DD, (int32_t)0x39D40F, (int32_t)0x63CDBD, (int32_t)0xFFE7CF3D, (int32_t)0xFFF628CB, (int32_t)0x17339, (int32_t)0x91B5AB2, (int32_t)0xFEB115F3, (int32_t)0xFA54B7C1, (int32_t)0x3DDA4F73, (int32_t)0x1CDCF, (int32_t)0xFCCA19C9, (int32_t)0xEFC0EA9E, (int32_t)0x5DB2EA, (int32_t)0xF387C, (int32_t)0xFFE9DF74, (int32_t)0xFF53308F, (int32_t)0x8A084, (int32_t)0x3B1CFB5, (int32_t)0xFFFE0744, (int32_t)0xC9A26E67, (int32_t)0xF8951DA3, (int32_t)0x39EAC580, (int32_t)0x136BC059, (int32_t)0x3E47C6F4, (int32_t)0xE99FC71C, (int32_t)0x38AB33C0, (int32_t)0xD78D2DB7, (int32_t)0xF644D676, (int32_t)0xFAA8A5E7, (int32_t)0x1834BDC2, (int32_t)0x375A3EBE, (int32_t)0xE6421D78, (int32_t)0xF69596D7, (int32_t)0xDB66E2B6, (int32_t)0x20C230F3, (int32_t)0xD07C9302, (int32_t)0xE83C14AF, (int32_t)0xD8F4E840, (int32_t)0x3376A6B1, (int32_t)0x3663155A, (int32_t)0x32037D25, (int32_t)0x14637FEE, (int32_t)0xC446F0C4, (int32_t)0x3135C91E, (int32_t)0xFC18B1AD, (int32_t)0xFC181CC0, (int32_t)0xFC1874F3, (int32_t)0xFC189B82, (int32_t)0xFC182A05, (int32_t)0xFC18D0C3, (int32_t)0xFC18379D, (int32_t)0xFC1814B9, (int32_t)0xFC183B95, (int32_t)0xFC18E58C, (int32_t)0xFC18B326, (int32_t)0xFC1815F4, (int32_t)0xFC18E7E0, (int32_t)0xFC183613, (int32_t)0xFC18AF4E, (int32_t)0xFC18AEA4, (int32_t)0xFC184236, (int32_t)0xFC181DA6, (int32_t)0xFC186672, (int32_t)0xFC185D8D, (int32_t)0xFC1892F0, (int32_t)0xFC18E3C6, (int32_t)0xFC18FBE0, (int32_t)0xFC1808FC, (int32_t)0xFC183FE9 };
		static const int32_t output0[] = { (int32_t)0xFFFFF8F4, (int32_t)0xFFFE8388, (int32_t)0xFFFF4BFF, (int32_t)0xE3B9, (int32_t)0x22D19, (int32_t)0xFFFEB2BD, (int32_t)0xFFFDCC02, (int32_t)0x6E0B, (int32_t)0xDBE6, (int32_t)0xFFFE7979, (int32_t)0x109AD, (int32_t)0x28293, (int32_t)0x1E06A, (int32_t)0x33045, (int32_t)0xB22B, (int32_t)0x15B7F, (int32_t)0xFFFF3806, (int32_t)0xFFFF793E, (int32_t)0xFFFFA491, (int32_t)0x1B957, (int32_t)0xFFFFFB69, (int32_t)0x24D50, (int32_t)0xFFFE18FF, (int32_t)0x975C7, (int32_t)0x3B475, (int32_t)0xFE9CA21A, (int32_t)0x4920D, (int32_t)0xCD1F00, (int32_t)0x3C4498, (int32_t)0xFF4EBCC7, (int32_t)0xFE1E6C16, (int32_t)0xFFE93E5E, (int32_t)0xFFF4E03F, (int32_t)0xFFFD640F, (int32_t)0xFFFD62C6, (int32_t)0x9595, (int32_t)0x3348709, (int32_t)0x14D9D30, (int32_t)0xFF726CB4, (int32_t)0x135475E, (int32_t)0xFFFFD45D, (int32_t)0x25A52A6, (int32_t)0xFFE8BF23, (int32_t)0xFFD4FC4E, (int32_t)0x3DEEA, (int32_t)0x2BF57, (int32_t)0xFFCB285C, (int32_t)0xFFFBF2FC, (int32_t)0x36096A3, (int32_t)0xFFFFCA09, (int32_t)0xEC2BD471, (int32_t)0xFA83A523, (int32_t)0xFE2AC54F, (int32_t)0xFD4D2BF4, (int32_t)0x337089E6, (int32_t)0xEF82884B, (int32_t)0xE424B316, (int32_t)0x15CB4989, (int32_t)0xF7EA2213, (int32_t)0x1BB068D, (int32_t)0xFC7F98BC, (int32_t)0xD1651E9E, (int32_t)0xCC5F3F6, (int32_t)0xFF309C2A, (int32_t)0xF79BB579, (int32_t)0xF2B3E142, (int32_t)0xF7CBBD0A, (int32_t)0xC30A15, (int32_t)0xFFD28C58, (int32_t)0xEE4553E, (int32_t)0xF7A66644, (int32_t)0xD9DC9178, (int32_t)0xA183B71, (int32_t)0xE5B5D60A, (int32_t)0x2160F72B, (int32_t)0x93C7, (int32_t)0x3E70665, (int32_t)0x3E7074A, (int32_t)0x3E716FA, (int32_t)0x3E7A29B, (int32_t)0x3E7249E, (int32_t)0x3E75F0D, (int32_t)0x3E730E9, (int32_t)0x3E76A29, (int32_t)0xB928, (int32_t)0x477F, (int32_t)0x3E75473, (int32_t)0x3E704BF, (int32_t)0x3E74C58, (int32_t)0x3E73AE5, (int32_t)0x3E726D5, (int32_t)0x35E5, (int32_t)0x3E7607E, (int32_t)0x242E, (int32_t)0x1C5A, (int32_t)0x9A3, (int32_t)0x6D9, (int32_t)0x103A, (int32_t)0x3BD, (int32_t)0x1C2D };
		for (int ndx = 0; ndx < 100; ndx++)
			Util::Check("Fixed32::Mod", Fixed32::Mod(input0[ndx], input1[ndx]), output0[ndx], input0[ndx], input1[ndx]);
	}

	// Fixed64.Min()
	static void Fixed64_Min()
	{
		static const int64_t input0[] = { (int64_t)0x1718741FDD7CELL, (int64_t)0xAC9C59E88D3LL, (int64_t)0x146A95F2AC812LL, (int64_t)0xFFFF5A7105979AA3LL, (int64_t)0xFFFFC21C31A9B779LL, (int64_t)0xC0596E76BFF2LL, (int64_t)0x15C0588E47D4BLL, (int64_t)0xFFFE9FA10408DD82LL, (int64_t)0xFFFF2C8C1AED4AD9LL, (int64_t)0xFFFF7A95667AD76BLL, (int64_t)0xFFFF40DABCA586F6LL, (int64_t)0x10057ACF6F56FLL, (int64_t)0xE9370FF0E82ELL, (int64_t)0x3D944A5F9268LL, (int64_t)0x6EFCDF638B39LL, (int64_t)0xE7D2A7F6D065LL, (int64_t)0xFFFFBA561E98A8EDLL, (int64_t)0xFFFF3DADB95B651CLL, (int64_t)0xFFFF119E921EABFELL, (int64_t)0x14FD232350264LL, (int64_t)0xFFFF32E208FD2585LL, (int64_t)0x1176CCDC95C19LL, (int64_t)0x44DB8D2C92F7LL, (int64_t)0xFFFFC6225ADDEC05LL, (int64_t)0xFFFFC75F2347157FLL, (int64_t)0xADABFCCCBC98LL, (int64_t)0xFFFF3EE2D0BD8306LL, (int64_t)0xFFFFF01EDDA28BFELL, (int64_t)0xFFFF86D9F0AF58F4LL, (int64_t)0xFFFFCCBCB34CFA3ALL, (int64_t)0xFFFF12448B81644ALL, (int64_t)0x1224F1472F15ELL, (int64_t)0x3D249240B589LL, (int64_t)0x6F16FFF5B6EELL, (int64_t)0x11B7F50C74A3ELL, (int64_t)0x8561D5DBB783LL, (int64_t)0x11CDF75DF067FLL, (int64_t)0x66536C6191E6LL, (int64_t)0xFFFF88122FCE7865LL, (int64_t)0xFFFF9063BE775488LL, (int64_t)0xFFFF8E843B0ECB49LL, (int64_t)0x11D60FCE9A102LL, (int64_t)0x11D139722F767LL, (int64_t)0xFFFFE0679211D110LL, (int64_t)0xFFFEA82AD5A7EE16LL, (int64_t)0xFFFFF7F326A8BE27LL, (int64_t)0x159FB89A3A4B7LL, (int64_t)0xFFFF67F361545DA7LL, (int64_t)0x165A2AAE26A85LL, (int64_t)0x107F151BF9BA2LL, (int64_t)0xDEB315B33D662C00LL, (int64_t)0x24AD41B9C95A8400LL, (int64_t)0xB72823596E50400LL, (int64_t)0x3E439AF7FC873400LL, (int64_t)0x33EFA2E1E7DF4400LL, (int64_t)0xDE1FED633C3FDC00LL, (int64_t)0x3A23B684F4476C00LL, (int64_t)0x3DE39567FBC72C00LL, (int64_t)0xFADFC06E75BF8000LL, (int64_t)0xD203DC842407B800LL, (int64_t)0xCFB03FD31F608000LL, (int64_t)0x26071599CC0E2C00LL, (int64_t)0xD025EDAA204BDC00LL, (int64_t)0x361CA7B8EC395000LL, (int64_t)0x35A31016EB462000LL, (int64_t)0x5E1E2118BC3C400LL, (int64_t)0x38D176F2F1A2EC00LL, (int64_t)0xD935BB6B326B7800LL, (int64_t)0xF01970776032E000LL, (int64_t)0x25FE013BCBFC0400LL, (int64_t)0xEAAC5A925558B600LL, (int64_t)0x1A73B2EEB4E76400LL, (int64_t)0xC375D48106EBA800LL, (int64_t)0x3BF48CBDF7E91800LL, (int64_t)0xDCF6A5FD39ED4C00LL, (int64_t)0x7A2BC028F457800LL, (int64_t)0xC13584FB026B0A00LL, (int64_t)0xE0DDC44C41BB8800LL, (int64_t)0x3CABA7ACF9575000LL, (int64_t)0x17D42832AFA85000LL, (int64_t)0xDAFF48E935FE9200LL, (int64_t)0x361F2258EC3E4400LL, (int64_t)0x26B9D68CCD73AC00LL, (int64_t)0x184E0B43B09C1800LL, (int64_t)0x19576619B2AECC00LL, (int64_t)0x3F1781C2FE2F0400LL, (int64_t)0xEDD31CDD5BA63A00LL, (int64_t)0x48A0BDC89141800LL, (int64_t)0xCF8768099F0EC00LL, (int64_t)0xD787C8FF2F0F9200LL, (int64_t)0xF0F59B1061EB3600LL, (int64_t)0xC88E6612111CCC00LL, (int64_t)0xCAA7D0AA154FA200LL, (int64_t)0x3E889CCCFD113800LL, (int64_t)0xFFF48569FFE9000LL, (int64_t)0x3956FA85F2ADF400LL, (int64_t)0xDF86421B3F0C8400LL, (int64_t)0x2C801071D9002000LL, (int64_t)0x1D4EECF3BA9DD800LL, (int64_t)0xE8AD5583515AAC00LL };
		static const int64_t input1[] = { (int64_t)0xFFFE8540909D4642LL, (int64_t)0x11876830F69ADLL, (int64_t)0xFAF8630E81B0LL, (int64_t)0xFFFE94C4A32868CALL, (int64_t)0xA159D800A6BLL, (int64_t)0xFFFED37A74347BB5LL, (int64_t)0x14C8E3871F5DCLL, (int64_t)0xFFFFF9E7044CDC0FLL, (int64_t)0x119B1E2508523LL, (int64_t)0x9B1034DCFAE0LL, (int64_t)0xFFFFFAD69DB93CEELL, (int64_t)0xFFFFE546AB41F14ELL, (int64_t)0x9F671359848ELL, (int64_t)0xE66F67A0509ELL, (int64_t)0xFFFEE1B0DAF97322LL, (int64_t)0xFFFFA52BA8329598LL, (int64_t)0xFFFF3C931AB63FE7LL, (int64_t)0xFFFEF3800FFB3141LL, (int64_t)0xA8B4F9984829LL, (int64_t)0x1703B0987D3B6LL, (int64_t)0x151933217C9E6LL, (int64_t)0xDAA2B2371705LL, (int64_t)0x13C3B898CECB7LL, (int64_t)0x107DAD3A75775LL, (int64_t)0x3AADF726371BLL, (int64_t)0xFFFF9C210C138483LL, (int64_t)0x180F936A664B2LL, (int64_t)0xFFFEDDD3FB1AC1E8LL, (int64_t)0xFFFF97578535FDF0LL, (int64_t)0x1560BFC9E5758LL, (int64_t)0xDA50732917E0LL, (int64_t)0x15D8F6F69255ELL, (int64_t)0x111C32C02178LL, (int64_t)0x5889EEFBD51LL, (int64_t)0xFFFFC0DC22AFB3F9LL, (int64_t)0xFFFF806E0871FA9DLL, (int64_t)0xFFFEA0B6B1646FAELL, (int64_t)0x21BFEF184CBFLL, (int64_t)0xFFFEDE616275AC83LL, (int64_t)0xC164DC92CE89LL, (int64_t)0xBF739D69C1A7LL, (int64_t)0xFFFF9C5871922A71LL, (int64_t)0xD3418A110CC3LL, (int64_t)0x73A1FAF17D84LL, (int64_t)0x11C2D20BE179ALL, (int64_t)0x12FDD8FCCD9FBLL, (int64_t)0xFFFEF759E9901C74LL, (int64_t)0xFFFEB0042F82A6C9LL, (int64_t)0xFFFF7816B7185DEELL, (int64_t)0x899F2D75587ELL, (int64_t)0x38F793BFF1EF2800LL, (int64_t)0x3B6E17F1F6DC3000LL, (int64_t)0x18DA628FB1B4C400LL, (int64_t)0x3BD76A1877AEC00LL, (int64_t)0xEBDFEC1E57BFD800LL, (int64_t)0x43F62C4887EC400LL, (int64_t)0x21376D38C26EDC00LL, (int64_t)0xF7DF5779EFBEC00LL, (int64_t)0x214CF4FAC299E800LL, (int64_t)0xEC4CE6DF5899CE00LL, (int64_t)0xDCEA686839D4D000LL, (int64_t)0x1945F238B28BE400LL, (int64_t)0xC137EDBB026FDC00LL, (int64_t)0x230B983BC6173000LL, (int64_t)0x3704939AEE092800LL, (int64_t)0xD9911D7A33223C00LL, (int64_t)0x3F4D3F0CFE9A8000LL, (int64_t)0xF7D7E2666FAFC400LL, (int64_t)0xDCC5419F398A8400LL, (int64_t)0x368B8E53ED171C00LL, (int64_t)0xD80EC534301D8A00LL, (int64_t)0xF4476B16688ED600LL, (int64_t)0xC3D44EA987A8800LL, (int64_t)0xD891A77831235000LL, (int64_t)0xF508662B6A10CC00LL, (int64_t)0xE21DF480443BE800LL, (int64_t)0xFCBE2449F97C400LL, (int64_t)0xC4ED37B409DA7000LL, (int64_t)0xEBF5446757EA8800LL, (int64_t)0xE39FAB77473F5600LL, (int64_t)0xE81C79E75038F400LL, (int64_t)0xD4B57489296AE800LL, (int64_t)0x38ED758871DB000LL, (int64_t)0x13FE5229A7FCA400LL, (int64_t)0x1EDC9472BDB92800LL, (int64_t)0xDF9130F73F226200LL, (int64_t)0xDD44BFC93A898000LL, (int64_t)0xE2FC5FEB45F8C000LL, (int64_t)0xEC6E1F2558DC3E00LL, (int64_t)0xD51803552A300800LL, (int64_t)0xDDE0148A3BC02800LL, (int64_t)0x1E552765BCAA5000LL, (int64_t)0x233D16E1C67A2C00LL, (int64_t)0xE0AB8FA141572000LL, (int64_t)0x3A9D6096F53AC000LL, (int64_t)0x17AFA8D7AF5F5000LL, (int64_t)0xC75678570EACF000LL, (int64_t)0xE79C386E4F387000LL, (int64_t)0xC78409320F081200LL, (int64_t)0xF66E2ADC6CDC5600LL };
		static const int64_t output0[] = { (int64_t)0xFFFE8540909D4642LL, (int64_t)0xAC9C59E88D3LL, (int64_t)0xFAF8630E81B0LL, (int64_t)0xFFFE94C4A32868CALL, (int64_t)0xFFFFC21C31A9B779LL, (int64_t)0xFFFED37A74347BB5LL, (int64_t)0x14C8E3871F5DCLL, (int64_t)0xFFFE9FA10408DD82LL, (int64_t)0xFFFF2C8C1AED4AD9LL, (int64_t)0xFFFF7A95667AD76BLL, (int64_t)0xFFFF40DABCA586F6LL, (int64_t)0xFFFFE546AB41F14ELL, (int64_t)0x9F671359848ELL, (int64_t)0x3D944A5F9268LL, (int64_t)0xFFFEE1B0DAF97322LL, (int64_t)0xFFFFA52BA8329598LL, (int64_t)0xFFFF3C931AB63FE7LL, (int64_t)0xFFFEF3800FFB3141LL, (int64_t)0xFFFF119E921EABFELL, (int64_t)0x14FD232350264LL, (int64_t)0xFFFF32E208FD2585LL, (int64_t)0xDAA2B2371705LL, (int64_t)0x44DB8D2C92F7LL, (int64_t)0xFFFFC6225ADDEC05LL, (int64_t)0xFFFFC75F2347157FLL, (int64_t)0xFFFF9C210C138483LL, (int64_t)0xFFFF3EE2D0BD8306LL, (int64_t)0xFFFEDDD3FB1AC1E8LL, (int64_t)0xFFFF86D9F0AF58F4LL, (int64_t)0xFFFFCCBCB34CFA3ALL, (int64_t)0xFFFF12448B81644ALL, (int64_t)0x1224F1472F15ELL, (int64_t)0x111C32C02178LL, (int64_t)0x5889EEFBD51LL, (int64_t)0xFFFFC0DC22AFB3F9LL, (int64_t)0xFFFF806E0871FA9DLL, (int64_t)0xFFFEA0B6B1646FAELL, (int64_t)0x21BFEF184CBFLL, (int64_t)0xFFFEDE616275AC83LL, (int64_t)0xFFFF9063BE775488LL, (int64_t)0xFFFF8E843B0ECB49LL, (int64_t)0xFFFF9C5871922A71LL, (int64_t)0xD3418A110CC3LL, (int64_t)0xFFFFE0679211D110LL, (int64_t)0xFFFEA82AD5A7EE16LL, (int64_t)0xFFFFF7F326A8BE27LL, (int64_t)0xFFFEF759E9901C74LL, (int64_t)0xFFFEB0042F82A6C9LL, (int64_t)0xFFFF7816B7185DEELL, (int64_t)0x899F2D75587ELL, (int64_t)0xDEB315B33D662C00LL, (int64_t)0x24AD41B9C95A8400LL, (int64_t)0xB72823596E50400LL, (int64_t)0x3BD76A1877AEC00LL, (int64_t)0xEBDFEC1E57BFD800LL, (int64_t)0xDE1FED633C3FDC00LL, (int64_t)0x21376D38C26EDC00LL, (int64_t)0xF7DF5779EFBEC00LL, (int64_t)0xFADFC06E75BF8000LL, (int64_t)0xD203DC842407B800LL, (int64_t)0xCFB03FD31F608000LL, (int64_t)0x1945F238B28BE400LL, (int64_t)0xC137EDBB026FDC00LL, (int64_t)0x230B983BC6173000LL, (int64_t)0x35A31016EB462000LL, (int64_t)0xD9911D7A33223C00LL, (int64_t)0x38D176F2F1A2EC00LL, (int64_t)0xD935BB6B326B7800LL, (int64_t)0xDCC5419F398A8400LL, (int64_t)0x25FE013BCBFC0400LL, (int64_t)0xD80EC534301D8A00LL, (int64_t)0xF4476B16688ED600LL, (int64_t)0xC375D48106EBA800LL, (int64_t)0xD891A77831235000LL, (int64_t)0xDCF6A5FD39ED4C00LL, (int64_t)0xE21DF480443BE800LL, (int64_t)0xC13584FB026B0A00LL, (int64_t)0xC4ED37B409DA7000LL, (int64_t)0xEBF5446757EA8800LL, (int64_t)0xE39FAB77473F5600LL, (int64_t)0xDAFF48E935FE9200LL, (int64_t)0xD4B57489296AE800LL, (int64_t)0x38ED758871DB000LL, (int64_t)0x13FE5229A7FCA400LL, (int64_t)0x19576619B2AECC00LL, (int64_t)0xDF9130F73F226200LL, (int64_t)0xDD44BFC93A898000LL, (int64_t)0xE2FC5FEB45F8C000LL, (int64_t)0xEC6E1F2558DC3E00LL, (int64_t)0xD51803552A300800LL, (int64_t)0xDDE0148A3BC02800LL, (int64_t)0xC88E6612111CCC00LL, (int64_t)0xCAA7D0AA154FA200LL, (int64_t)0xE0AB8FA141572000LL, (int64_t)0xFFF48569FFE9000LL, (int64_t)0x17AFA8D7AF5F5000LL, (int64_t)0xC75678570EACF000LL, (int64_t)0xE79C386E4F387000LL, (int64_t)0xC78409320F081200LL, (int64_t)0xE8AD5583515AAC00LL };
		for (int ndx = 0; ndx < 100; ndx++)
			Util::Check("Fixed64::Min", Fixed64::Min(input0[ndx], input1[ndx]), output0[ndx], input0[ndx], input1[ndx]);
	}

	// Fixed32.Min()
	static void Fixed32_Min()
	{
		static const int32_t input0[] = { (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x6001AF58, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x1C9D302E, (int32_t)0x99678005, (int32_t)0x1BBE9EA, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0xF1D22932, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x8D681C03, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0xD9B369AD, (int32_t)0x68018AF3, (int32_t)0x834CD4FD, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x2A002E5, (int32_t)0x1E63D46E, (int32_t)0x80000000, (int32_t)0x1497F4B0, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x9AD3DB7, (int32_t)0xE040F041, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x22B4D802, (int32_t)0xCCCADED1, (int32_t)0xD17873DA, (int32_t)0x18B8CFE3, (int32_t)0xEF2E1E90, (int32_t)0xC90CEBD1, (int32_t)0x3043030E, (int32_t)0xF96A9CA6, (int32_t)0x8FDA1DA, (int32_t)0xDAD1742D, (int32_t)0x15AF4CAA, (int32_t)0x338700B9, (int32_t)0x2104D513, (int32_t)0x37024A11, (int32_t)0x17F7CB07, (int32_t)0x82B4D9E, (int32_t)0x34888B1D, (int32_t)0x36C89A0C, (int32_t)0xD5FC23C7, (int32_t)0xEE4FDC12, (int32_t)0x7816178, (int32_t)0xD1887F10, (int32_t)0x329C4B25, (int32_t)0xC83A45DF, (int32_t)0x1F98D506, (int32_t)0x64D38FA, (int32_t)0x2A380E44, (int32_t)0x3D5F0A5C, (int32_t)0x37C00AB, (int32_t)0x3A51C481, (int32_t)0x24A8C883, (int32_t)0x251E9359, (int32_t)0xF50BEFA8, (int32_t)0xD2A80F4A, (int32_t)0xF460C2C2, (int32_t)0x322248A8, (int32_t)0xDA0212FE, (int32_t)0xF65DC2BD, (int32_t)0x3C5DBB99, (int32_t)0xD253438D, (int32_t)0x10679C54, (int32_t)0xB57D88B, (int32_t)0xC45AE61A, (int32_t)0xE093D834, (int32_t)0xF62DC6FD, (int32_t)0x30A27D04, (int32_t)0xDBE8401B, (int32_t)0x17B149D0, (int32_t)0xD4830453, (int32_t)0x1E5B49B5 };
		static const int32_t input1[] = { (int32_t)0xC078E7F, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x9EBDA094, (int32_t)0xDC2F4EC2, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x3126CAA9, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0xA6A6016A, (int32_t)0x80000000, (int32_t)0x4ADC0DB2, (int32_t)0x80000000, (int32_t)0x922CB750, (int32_t)0x80000000, (int32_t)0x16F18E32, (int32_t)0x13B35E0A, (int32_t)0xD4CA3136, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x310E5B6A, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x82BF57FC, (int32_t)0x80000000, (int32_t)0x8329170E, (int32_t)0x80000000, (int32_t)0x41165D4, (int32_t)0x80000000, (int32_t)0x5174D9C8, (int32_t)0xE3E5C6A5, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x59BB0E1E, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0xDF5FBB5A, (int32_t)0x80000000, (int32_t)0xB4E3ECBF, (int32_t)0x7C600AD8, (int32_t)0x3838B513, (int32_t)0x3DEF66E, (int32_t)0xCEED88C, (int32_t)0xC561D002, (int32_t)0xCCDF4AB4, (int32_t)0x112C58F3, (int32_t)0xDA2E93AB, (int32_t)0xC93E2DFC, (int32_t)0x391FFADC, (int32_t)0x28E0E594, (int32_t)0xDED4DD8C, (int32_t)0x32E3F8B1, (int32_t)0x35EE9BF9, (int32_t)0xEABDD58, (int32_t)0xF628ABA9, (int32_t)0x3090B950, (int32_t)0xFE7B1113, (int32_t)0xE5CC5CA, (int32_t)0x2A18750, (int32_t)0x25D5825E, (int32_t)0xEE293AA2, (int32_t)0xFE2AC862, (int32_t)0x3A6ADE72, (int32_t)0xC3A8E03B, (int32_t)0x1DE83FBC, (int32_t)0x3C2988EC, (int32_t)0xCD2D98F7, (int32_t)0x120872F2, (int32_t)0x120C7EE1, (int32_t)0x2EF65801, (int32_t)0xEA64F8E1, (int32_t)0xD286C475, (int32_t)0x28DC060A, (int32_t)0x2520B6F5, (int32_t)0xC2190F6F, (int32_t)0xE0C9D216, (int32_t)0xD82FBACE, (int32_t)0xEFAA1FA7, (int32_t)0xC5C8C497, (int32_t)0x233469CD, (int32_t)0x17F3B4FE, (int32_t)0xD0C3E503, (int32_t)0xFD3DC7E0, (int32_t)0xD37CD606, (int32_t)0x337E6600, (int32_t)0x1D83A3A2, (int32_t)0x15693C91, (int32_t)0xF5AF08C1, (int32_t)0x2A6B2C8A, (int32_t)0x59D0DAB };
		static const int32_t output0[] = { (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x1BBE9EA, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0xA6A6016A, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x8D681C03, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x310E5B6A, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x2A002E5, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0xE3E5C6A5, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0xDF5FBB5A, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x22B4D802, (int32_t)0xCCCADED1, (int32_t)0xD17873DA, (int32_t)0xC561D002, (int32_t)0xCCDF4AB4, (int32_t)0xC90CEBD1, (int32_t)0xDA2E93AB, (int32_t)0xC93E2DFC, (int32_t)0x8FDA1DA, (int32_t)0xDAD1742D, (int32_t)0xDED4DD8C, (int32_t)0x32E3F8B1, (int32_t)0x2104D513, (int32_t)0xEABDD58, (int32_t)0xF628ABA9, (int32_t)0x82B4D9E, (int32_t)0xFE7B1113, (int32_t)0xE5CC5CA, (int32_t)0xD5FC23C7, (int32_t)0xEE4FDC12, (int32_t)0xEE293AA2, (int32_t)0xD1887F10, (int32_t)0x329C4B25, (int32_t)0xC3A8E03B, (int32_t)0x1DE83FBC, (int32_t)0x64D38FA, (int32_t)0xCD2D98F7, (int32_t)0x120872F2, (int32_t)0x37C00AB, (int32_t)0x2EF65801, (int32_t)0xEA64F8E1, (int32_t)0xD286C475, (int32_t)0xF50BEFA8, (int32_t)0xD2A80F4A, (int32_t)0xC2190F6F, (int32_t)0xE0C9D216, (int32_t)0xD82FBACE, (int32_t)0xEFAA1FA7, (int32_t)0xC5C8C497, (int32_t)0xD253438D, (int32_t)0x10679C54, (int32_t)0xD0C3E503, (int32_t)0xC45AE61A, (int32_t)0xD37CD606, (int32_t)0xF62DC6FD, (int32_t)0x1D83A3A2, (int32_t)0xDBE8401B, (int32_t)0xF5AF08C1, (int32_t)0xD4830453, (int32_t)0x59D0DAB };
		for (int ndx = 0; ndx < 100; ndx++)
			Util::Check("Fixed32::Min", Fixed32::Min(input0[ndx], input1[ndx]), output0[ndx], input0[ndx], input1[ndx]);
	}

	// Fixed64.Max()
	static void Fixed64_Max()
	{
		static const int64_t input0[] = { (int64_t)0xFFFFFFFFC89DAFCALL, (int64_t)0x362DE93ELL, (int64_t)0xFFFFFFFF543F0A01LL, (int64_t)0xFFFFFFFFBAB607CELL, (int64_t)0xFFFFFFFFC0C83C52LL, (int64_t)0xFFFFFFFFE837B2CALL, (int64_t)0x25D05FEELL, (int64_t)0x2517E14ALL, (int64_t)0xFFFFFFFF9DE64112LL, (int64_t)0xFFFFFFFF42D70719LL, (int64_t)0xFFAFFF6LL, (int64_t)0x209882DELL, (int64_t)0xFFFFFFFFDCC6BC66LL, (int64_t)0xFFFFFFFF28A68B6DLL, (int64_t)0xFFFFFFFFF9EFB2D2LL, (int64_t)0xFFFFFFFF3138645DLL, (int64_t)0xFFFFFFFF281FCA9DLL, (int64_t)0xFFFFFFFF43379411LL, (int64_t)0x324B37AALL, (int64_t)0xFFFFFFFF557B664DLL, (int64_t)0x6183FA0ELL, (int64_t)0xFFFFFFFF3B43C5B1LL, (int64_t)0x225004D2LL, (int64_t)0x7DB4760ALL, (int64_t)0xFFFFFFFF37873581LL, (int64_t)0xFFFFFFFF7595567DLL, (int64_t)0xFFFFFFFF03B40209LL, (int64_t)0x9BB821B7LL, (int64_t)0xFFFFFFFF40A9E8E5LL, (int64_t)0xFFFFFFFF01927069LL, (int64_t)0xFFFFFFFF9B01316ELL, (int64_t)0x5DFA40D6LL, (int64_t)0x9E75199FLL, (int64_t)0xFFFFFFFF31BDC4D9LL, (int64_t)0x51822CB1B3C4LL, (int64_t)0xCD49E53D4753LL, (int64_t)0xFFFED3F3CEB7D4A8LL, (int64_t)0x60BC994F9C39LL, (int64_t)0xAA1E0AA4667CLL, (int64_t)0xFFFE95060E5294CDLL, (int64_t)0xFFFFF402AE9AFBC6LL, (int64_t)0xFFFEB3263FED620DLL, (int64_t)0xFFFEA1D1E66259E4LL, (int64_t)0x770AD0B15555LL, (int64_t)0x15273A8FCE4LL, (int64_t)0x17AE66E7EFF0CLL, (int64_t)0x1758190F92F0LL, (int64_t)0x548417AA26C8LL, (int64_t)0xFFFEE6C9C6675B54LL, (int64_t)0xFFFF737AF58CA1B6LL, (int64_t)0xFFFF8B7B9F0CBF38LL, (int64_t)0xD0669029E68DLL, (int64_t)0x11B1B2E1598F6LL, (int64_t)0xFFFEEAB1B5D3FAA4LL, (int64_t)0xFFFF37CF1DFBEFDFLL, (int64_t)0xFFFF14D5A0F7E56CLL, (int64_t)0x91C50652CD4ALL, (int64_t)0x2FC9A966E3D3LL, (int64_t)0xFFFF145197945FE4LL, (int64_t)0xFFFF49B419B7CEA9LL, (int64_t)0xFFFED46885E81992LL, (int64_t)0x142557E6EF56BLL, (int64_t)0xFFFEFE77745B14AFLL, (int64_t)0xCA12FEDFD2E6LL, (int64_t)0xFFFEBD37DF817C30LL, (int64_t)0xFFFFAEE0A5543F02LL, (int64_t)0xFFFF99E0F90C5282LL, (int64_t)0xFFFF9718574CBFF1LL, (int64_t)0x281F6D44D03EDC00LL, (int64_t)0xDE8EA3F03D1D4800LL, (int64_t)0x10A0F788A141F000LL, (int64_t)0xE946A8B2528D5200LL, (int64_t)0x3968DA62F2D1B400LL, (int64_t)0xC9CDC5B9139B8C00LL, (int64_t)0x3B8DBFF1F71B8000LL, (int64_t)0xFB6E8EEF76DD1E00LL, (int64_t)0x3CC2590CF984B400LL, (int64_t)0xE66B8ABF4CD71600LL, (int64_t)0x12692BABA4D25800LL, (int64_t)0x36AB5409ED56A800LL, (int64_t)0x132854ADA650A800LL, (int64_t)0xE3A225D847444C00LL, (int64_t)0xE436BA1B486D7400LL, (int64_t)0xC5ACF3970B59E800LL, (int64_t)0x26EF922BCDDF2400LL, (int64_t)0xC34D0CC8069A1A00LL, (int64_t)0xF4979FA0692F4000LL, (int64_t)0x214CD317C299A800LL, (int64_t)0xE3411C3046823800LL, (int64_t)0xF1D728F663AE5200LL, (int64_t)0x299E127ED33C2400LL, (int64_t)0xD1567B9A22ACF800LL, (int64_t)0xD2BA3609A574800LL, (int64_t)0xEEFECBB45DFD9800LL, (int64_t)0x2EF71B02DDEE3800LL, (int64_t)0xDC9BE909B937C00LL, (int64_t)0x301BDB76E037B800LL, (int64_t)0x373151A9EE62A400LL, (int64_t)0x291309B6D2261400LL, (int64_t)0x27E937A0CFD27000LL };
		static const int64_t input1[] = { (int64_t)0xFFFFFFFFF33BB03ELL, (int64_t)0x7365FA42LL, (int64_t)0xF5DC07CFLL, (int64_t)0xFFFFFFFFE8BA105ELL, (int64_t)0xFFFFFFFFD3BA9F86LL, (int64_t)0x202C8AEELL, (int64_t)0x5D56E866LL, (int64_t)0x3BA709EALL, (int64_t)0xFFFFFFFF20C23D89LL, (int64_t)0xD44C0B3FLL, (int64_t)0xFFFFFFFF7CD6A741LL, (int64_t)0xFFFFFFFF3F36511DLL, (int64_t)0x6648D7A2LL, (int64_t)0xFFFFFFFFCC509412LL, (int64_t)0x5403A542LL, (int64_t)0x9CC133A7LL, (int64_t)0x4DEEC3EELL, (int64_t)0x126D5E36LL, (int64_t)0xA470EB57LL, (int64_t)0x54314BDELL, (int64_t)0xB4F03C9FLL, (int64_t)0xFFFFFFFF8D59EA1ALL, (int64_t)0xFFFFFFFF13DDE46DLL, (int64_t)0xFFFFFFFFD68A93F6LL, (int64_t)0xFFFFFFFF832ED24ELL, (int64_t)0xFFFFFFFF4B32E5D5LL, (int64_t)0xFFFFFFFFE483B0C2LL, (int64_t)0x8A183E37LL, (int64_t)0xFFFFFFFFE46DF866LL, (int64_t)0xFFFFFFFF9C53D0AALL, (int64_t)0xA7D5D5ABLL, (int64_t)0xB200BF1FLL, (int64_t)0x8223693FLL, (int64_t)0xFFFFFFFFAB08F78ELL, (int64_t)0xE640473DA5C0LL, (int64_t)0x139882ACD8E50LL, (int64_t)0x949C7EB93579LL, (int64_t)0xFFFE8F8DDA685A5CLL, (int64_t)0xF8A0173CF780LL, (int64_t)0xDF44BEC77AC9LL, (int64_t)0xFFFF05D509C9A3EBLL, (int64_t)0xDA50D2935CE1LL, (int64_t)0xFFFF289D6C72347BLL, (int64_t)0xFFFFA745A3FA32CCLL, (int64_t)0x1460AC05BC255LL, (int64_t)0xFFFF4D44E325C8CALL, (int64_t)0x5B6670E1EF0CLL, (int64_t)0x1082B59EB8A96LL, (int64_t)0x654D77876FDALL, (int64_t)0xFFFEDBD35799ADE7LL, (int64_t)0x1630DC53776DBLL, (int64_t)0xFFFEA91218FE9FE5LL, (int64_t)0x17B21358BAD02LL, (int64_t)0x554192A3CD43LL, (int64_t)0xFFFEBFEB70C01997LL, (int64_t)0xFFFFB60C8BB9CE5ALL, (int64_t)0xFFFEB4E4DEEA7A0ALL, (int64_t)0x2ACA2550F0D4LL, (int64_t)0xFFFFC5CB01BB3C56LL, (int64_t)0xFFFFD9C9F0EC97D4LL, (int64_t)0x1473D886A7B3BLL, (int64_t)0x384D302C065ALL, (int64_t)0x13B4ECB924D5DLL, (int64_t)0xFFFF5E5EE78286FELL, (int64_t)0x3332F12FD925LL, (int64_t)0xFFFECBD1CE54BDE4LL, (int64_t)0x5A657572AC8ALL, (int64_t)0xFFFEF99FC1C2D300LL, (int64_t)0x13E7FC58A7CFF800LL, (int64_t)0xF9F6720D73ECE400LL, (int64_t)0xC328A36E06514600LL, (int64_t)0xF20A4C8064149800LL, (int64_t)0xFF8059417F00B200LL, (int64_t)0x10E56059A1CAC000LL, (int64_t)0xCE67A63A1CCF4C00LL, (int64_t)0x345014AEE8A02800LL, (int64_t)0x126A26EDA4D44C00LL, (int64_t)0x10204CE5A0409800LL, (int64_t)0xF71FEC356E3FD800LL, (int64_t)0x2354DDEEC6A9BC00LL, (int64_t)0x34998E80E9331C00LL, (int64_t)0xFFCB4B017F969600LL, (int64_t)0x2694FA08CD29F400LL, (int64_t)0x11FB4ECBA3F69C00LL, (int64_t)0xE502BAD24A057600LL, (int64_t)0x2DFC0410DBF80800LL, (int64_t)0xFE9534A67D2A6A00LL, (int64_t)0x51664378A2CC800LL, (int64_t)0x18EA5A09B1D4B400LL, (int64_t)0x2D82AC09DB055800LL, (int64_t)0x31C20B80E3841800LL, (int64_t)0xF648444E6C908800LL, (int64_t)0xF4F0917169E12200LL, (int64_t)0xFF4A7BEE7E94F800LL, (int64_t)0x1C1B0551B8360C00LL, (int64_t)0xA6A0EAE94D41C00LL, (int64_t)0xDAD6AAB635AD5400LL, (int64_t)0xEDC401615B880200LL, (int64_t)0xB52B37896A56800LL, (int64_t)0xC59107630B220E00LL };
		static const int64_t output0[] = { (int64_t)0xFFFFFFFFF33BB03ELL, (int64_t)0x7365FA42LL, (int64_t)0xF5DC07CFLL, (int64_t)0xFFFFFFFFE8BA105ELL, (int64_t)0xFFFFFFFFD3BA9F86LL, (int64_t)0x202C8AEELL, (int64_t)0x5D56E866LL, (int64_t)0x3BA709EALL, (int64_t)0xFFFFFFFF9DE64112LL, (int64_t)0xD44C0B3FLL, (int64_t)0xFFAFFF6LL, (int64_t)0x209882DELL, (int64_t)0x6648D7A2LL, (int64_t)0xFFFFFFFFCC509412LL, (int64_t)0x5403A542LL, (int64_t)0x9CC133A7LL, (int64_t)0x4DEEC3EELL, (int64_t)0x126D5E36LL, (int64_t)0xA470EB57LL, (int64_t)0x54314BDELL, (int64_t)0xB4F03C9FLL, (int64_t)0xFFFFFFFF8D59EA1ALL, (int64_t)0x225004D2LL, (int64_t)0x7DB4760ALL, (int64_t)0xFFFFFFFF832ED24ELL, (int64_t)0xFFFFFFFF7595567DLL, (int64_t)0xFFFFFFFFE483B0C2LL, (int64_t)0x9BB821B7LL, (int64_t)0xFFFFFFFFE46DF866LL, (int64_t)0xFFFFFFFF9C53D0AALL, (int64_t)0xA7D5D5ABLL, (int64_t)0xB200BF1FLL, (int64_t)0x9E75199FLL, (int64_t)0xFFFFFFFFAB08F78ELL, (int64_t)0xE640473DA5C0LL, (int64_t)0x139882ACD8E50LL, (int64_t)0x949C7EB93579LL, (int64_t)0x60BC994F9C39LL, (int64_t)0xF8A0173CF780LL, (int64_t)0xDF44BEC77AC9LL, (int64_t)0xFFFFF402AE9AFBC6LL, (int64_t)0xDA50D2935CE1LL, (int64_t)0xFFFF289D6C72347BLL, (int64_t)0x770AD0B15555LL, (int64_t)0x1460AC05BC255LL, (int64_t)0x17AE66E7EFF0CLL, (int64_t)0x5B6670E1EF0CLL, (int64_t)0x1082B59EB8A96LL, (int64_t)0x654D77876FDALL, (int64_t)0xFFFF737AF58CA1B6LL, (int64_t)0x1630DC53776DBLL, (int64_t)0xD0669029E68DLL, (int64_t)0x17B21358BAD02LL, (int64_t)0x554192A3CD43LL, (int64_t)0xFFFF37CF1DFBEFDFLL, (int64_t)0xFFFFB60C8BB9CE5ALL, (int64_t)0x91C50652CD4ALL, (int64_t)0x2FC9A966E3D3LL, (int64_t)0xFFFFC5CB01BB3C56LL, (int64_t)0xFFFFD9C9F0EC97D4LL, (int64_t)0x1473D886A7B3BLL, (int64_t)0x142557E6EF56BLL, (int64_t)0x13B4ECB924D5DLL, (int64_t)0xCA12FEDFD2E6LL, (int64_t)0x3332F12FD925LL, (int64_t)0xFFFFAEE0A5543F02LL, (int64_t)0x5A657572AC8ALL, (int64_t)0xFFFF9718574CBFF1LL, (int64_t)0x281F6D44D03EDC00LL, (int64_t)0xF9F6720D73ECE400LL, (int64_t)0x10A0F788A141F000LL, (int64_t)0xF20A4C8064149800LL, (int64_t)0x3968DA62F2D1B400LL, (int64_t)0x10E56059A1CAC000LL, (int64_t)0x3B8DBFF1F71B8000LL, (int64_t)0x345014AEE8A02800LL, (int64_t)0x3CC2590CF984B400LL, (int64_t)0x10204CE5A0409800LL, (int64_t)0x12692BABA4D25800LL, (int64_t)0x36AB5409ED56A800LL, (int64_t)0x34998E80E9331C00LL, (int64_t)0xFFCB4B017F969600LL, (int64_t)0x2694FA08CD29F400LL, (int64_t)0x11FB4ECBA3F69C00LL, (int64_t)0x26EF922BCDDF2400LL, (int64_t)0x2DFC0410DBF80800LL, (int64_t)0xFE9534A67D2A6A00LL, (int64_t)0x214CD317C299A800LL, (int64_t)0x18EA5A09B1D4B400LL, (int64_t)0x2D82AC09DB055800LL, (int64_t)0x31C20B80E3841800LL, (int64_t)0xF648444E6C908800LL, (int64_t)0xD2BA3609A574800LL, (int64_t)0xFF4A7BEE7E94F800LL, (int64_t)0x2EF71B02DDEE3800LL, (int64_t)0xDC9BE909B937C00LL, (int64_t)0x301BDB76E037B800LL, (int64_t)0x373151A9EE62A400LL, (int64_t)0x291309B6D2261400LL, (int64_t)0x27E937A0CFD27000LL };
		for (int ndx = 0; ndx < 100; ndx++)
			Util::Check("Fixed64::Max", Fixed64::Max(input0[ndx], input1[ndx]), output0[ndx], input0[ndx], input1[ndx]);
	}

	// Fixed32.Max()
	static void Fixed32_Max()
	{
		static const int32_t input0[] = { (int32_t)0xFFFFF563, (int32_t)0xA9FF, (int32_t)0xFFFF8B0E, (int32_t)0xFFFF64C8, (int32_t)0xFFFF81E7, (int32_t)0xC8B1, (int32_t)0x18B2, (int32_t)0xFFFF5829, (int32_t)0xD395, (int32_t)0x11E, (int32_t)0xFFFF3B8B, (int32_t)0x4C83, (int32_t)0xEADC, (int32_t)0xFFFF1925, (int32_t)0xFFFF72F4, (int32_t)0xFFFF3582, (int32_t)0x21A7, (int32_t)0xFFFF73F0, (int32_t)0xFFFFA31D, (int32_t)0xFFFF0880, (int32_t)0xFFFFE271, (int32_t)0xFFFF8FF3, (int32_t)0xFFFF3BFC, (int32_t)0x9995, (int32_t)0x20D1, (int32_t)0x3381, (int32_t)0xF466, (int32_t)0xFFFF00D8, (int32_t)0xD329, (int32_t)0xFF6, (int32_t)0x65E5, (int32_t)0xFFFF9299, (int32_t)0xFFFF1337, (int32_t)0xFFFFC63C, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x78D283E1, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x582D0BD1, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0xC24D912, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0xE52BF4B9, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x95C5E1B9, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0xF25A5F88, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0xA98498C3, (int32_t)0x80000000, (int32_t)0x638439BB, (int32_t)0x80000000, (int32_t)0xC017D8F7, (int32_t)0xDBE124B, (int32_t)0x7AD6631, (int32_t)0xFB03D7C9, (int32_t)0x93DACD0, (int32_t)0xD09CE0CE, (int32_t)0xCB84EF2, (int32_t)0xE7B62A43, (int32_t)0x7104DA9, (int32_t)0x9737C0D, (int32_t)0xEC1134FB, (int32_t)0x14FB4997, (int32_t)0xDB9EDD5F, (int32_t)0xD723464E, (int32_t)0x398A3E33, (int32_t)0xCC1B0356, (int32_t)0xF05EBA2E, (int32_t)0xE6A518A1, (int32_t)0xE9D01A8E, (int32_t)0xFD958DD6, (int32_t)0xCDDA5224, (int32_t)0x3AAE2EEA, (int32_t)0xEBDF6D92, (int32_t)0xEB3CEC2, (int32_t)0xC85863D3, (int32_t)0xC4CF87EB, (int32_t)0x16DF2B40, (int32_t)0x366AAD75, (int32_t)0xF41DE20C, (int32_t)0xD10DBA86, (int32_t)0xE09DA796, (int32_t)0xE136DFC7 };
		static const int32_t input1[] = { (int32_t)0xFFFF97F2, (int32_t)0xFFFF2867, (int32_t)0xFFFF7420, (int32_t)0x358C, (int32_t)0xFFFFC608, (int32_t)0xFFFFCB5A, (int32_t)0xFFFF9F3E, (int32_t)0xFFFFA22D, (int32_t)0x40C3, (int32_t)0xFFFF628C, (int32_t)0x7A7F, (int32_t)0xFFFF7A85, (int32_t)0xFFFFEE45, (int32_t)0xFFFFBA9E, (int32_t)0xFFFF8A37, (int32_t)0x3AEA, (int32_t)0xFFFF0801, (int32_t)0xF76B, (int32_t)0xFFFF13F4, (int32_t)0x24CB, (int32_t)0x33D3, (int32_t)0xFFFF6570, (int32_t)0x6E04, (int32_t)0xFFFFF179, (int32_t)0x43F5, (int32_t)0x4E64, (int32_t)0xD44A, (int32_t)0x17DA, (int32_t)0xFFFF8500, (int32_t)0xFFFFC3A0, (int32_t)0x9B38, (int32_t)0xA8F2, (int32_t)0x394C, (int32_t)0x24A1, (int32_t)0x579B7E17, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0xED047630, (int32_t)0x21F4A38F, (int32_t)0x80000000, (int32_t)0xBA6618A5, (int32_t)0x80000000, (int32_t)0xDF769E9, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x408C7989, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x78135CBA, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0xD03F5287, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0xB9DE58A2, (int32_t)0x1BA445B7, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0xE252DBF, (int32_t)0xE36323C6, (int32_t)0xE6887B69, (int32_t)0xDA905C3A, (int32_t)0xF382C284, (int32_t)0xF3E69CB2, (int32_t)0x1F1E8AE, (int32_t)0xF9F67DE8, (int32_t)0x6002990, (int32_t)0xFCD8333A, (int32_t)0xCC9C08A4, (int32_t)0xDA975294, (int32_t)0x239D4426, (int32_t)0xE9A5D557, (int32_t)0x31F27960, (int32_t)0xE109D58F, (int32_t)0x3EED82BD, (int32_t)0x3CAAEACF, (int32_t)0xC423BF02, (int32_t)0xDDE247C0, (int32_t)0x2991BC9F, (int32_t)0xDBAF9629, (int32_t)0xD10C55D1, (int32_t)0xC569AA0C, (int32_t)0xE1DEA4BB, (int32_t)0x38F9976E, (int32_t)0xF2AB73F7, (int32_t)0x46E24E6, (int32_t)0xF9BDB58D, (int32_t)0x164DA17C, (int32_t)0x33984836, (int32_t)0xF6029325 };
		static const int32_t output0[] = { (int32_t)0xFFFFF563, (int32_t)0xA9FF, (int32_t)0xFFFF8B0E, (int32_t)0x358C, (int32_t)0xFFFFC608, (int32_t)0xC8B1, (int32_t)0x18B2, (int32_t)0xFFFFA22D, (int32_t)0xD395, (int32_t)0x11E, (int32_t)0x7A7F, (int32_t)0x4C83, (int32_t)0xEADC, (int32_t)0xFFFFBA9E, (int32_t)0xFFFF8A37, (int32_t)0x3AEA, (int32_t)0x21A7, (int32_t)0xF76B, (int32_t)0xFFFFA31D, (int32_t)0x24CB, (int32_t)0x33D3, (int32_t)0xFFFF8FF3, (int32_t)0x6E04, (int32_t)0x9995, (int32_t)0x43F5, (int32_t)0x4E64, (int32_t)0xF466, (int32_t)0x17DA, (int32_t)0xD329, (int32_t)0xFF6, (int32_t)0x9B38, (int32_t)0xA8F2, (int32_t)0x394C, (int32_t)0x24A1, (int32_t)0x579B7E17, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0xED047630, (int32_t)0x78D283E1, (int32_t)0x80000000, (int32_t)0xBA6618A5, (int32_t)0x80000000, (int32_t)0xDF769E9, (int32_t)0x582D0BD1, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0xC24D912, (int32_t)0x80000000, (int32_t)0x408C7989, (int32_t)0xE52BF4B9, (int32_t)0x80000000, (int32_t)0x78135CBA, (int32_t)0x95C5E1B9, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0xF25A5F88, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0xB9DE58A2, (int32_t)0x1BA445B7, (int32_t)0x80000000, (int32_t)0x638439BB, (int32_t)0x80000000, (int32_t)0xE252DBF, (int32_t)0xDBE124B, (int32_t)0x7AD6631, (int32_t)0xFB03D7C9, (int32_t)0x93DACD0, (int32_t)0xF3E69CB2, (int32_t)0xCB84EF2, (int32_t)0xF9F67DE8, (int32_t)0x7104DA9, (int32_t)0x9737C0D, (int32_t)0xEC1134FB, (int32_t)0x14FB4997, (int32_t)0x239D4426, (int32_t)0xE9A5D557, (int32_t)0x398A3E33, (int32_t)0xE109D58F, (int32_t)0x3EED82BD, (int32_t)0x3CAAEACF, (int32_t)0xE9D01A8E, (int32_t)0xFD958DD6, (int32_t)0x2991BC9F, (int32_t)0x3AAE2EEA, (int32_t)0xEBDF6D92, (int32_t)0xEB3CEC2, (int32_t)0xE1DEA4BB, (int32_t)0x38F9976E, (int32_t)0x16DF2B40, (int32_t)0x366AAD75, (int32_t)0xF9BDB58D, (int32_t)0x164DA17C, (int32_t)0x33984836, (int32_t)0xF6029325 };
		for (int ndx = 0; ndx < 100; ndx++)
			Util::Check("Fixed32::Max", Fixed32::Max(input0[ndx], input1[ndx]), output0[ndx], input0[ndx], input1[ndx]);
	}

	// Fixed64.Ceil()
	static void Fixed64_Ceil()
	{
		static const int64_t input0[] = { (int64_t)0xFFFFFFFFA35751E2LL, (int64_t)0xFFFFFFFF2B6954D1LL, (int64_t)0xFFFFFFFF1B586F61LL, (int64_t)0xE0EEE663LL, (int64_t)0xC26B2B93LL, (int64_t)0x7BE787EALL, (int64_t)0x62610346LL, (int64_t)0xF1E075EFLL, (int64_t)0x92CCBFC7LL, (int64_t)0xBF667297LL, (int64_t)0xDE559113LL, (int64_t)0x44087BA6LL, (int64_t)0xB848991FLL, (int64_t)0xFFFFFFFF45206BF9LL, (int64_t)0xAC5A2A6FLL, (int64_t)0x7ACA39EELL, (int64_t)0xFFFFFFFF4B743A25LL, (int64_t)0xFFFFFFFFD75556CALL, (int64_t)0xDDF4AADFLL, (int64_t)0xFFFFFFFFDDCBDCEELL, (int64_t)0xFFFFFFFF33A7EE11LL, (int64_t)0xFFFFFFFF0AED7F59LL, (int64_t)0xFFFFFFFFDE948C9ALL, (int64_t)0xFFFFFFFFC9D65E5ELL, (int64_t)0xFFFFFFFF495B37D5LL, (int64_t)0xFFFFFFFF847B4576LL, (int64_t)0xE2C6DDFBLL, (int64_t)0xFFFFFFFFEA24AC52LL, (int64_t)0xFFFFFFFF04ECA2EDLL, (int64_t)0xF60F0F1FLL, (int64_t)0xFFFFFFFF00E3216DLL, (int64_t)0xBECA204FLL, (int64_t)0x24FFAC0ALL, (int64_t)0x5A65D5FALL, (int64_t)0x12FAF7C2F1D9FLL, (int64_t)0x9721C76C4883LL, (int64_t)0xFFFF4DD8D9A933F2LL, (int64_t)0x16041E989E743LL, (int64_t)0xFFFFA0FDBE92CDBCLL, (int64_t)0xFFFF3C647CB7B589LL, (int64_t)0xFFFF558BEA8E8358LL, (int64_t)0xFFFEA8310D56A223LL, (int64_t)0xFFFFD665EEC7728CLL, (int64_t)0x1604A4F2B1454LL, (int64_t)0xFFFF55B9E17DB834LL, (int64_t)0x3E5815DCBCLL, (int64_t)0xFFFF07D7A5B6CC70LL, (int64_t)0xFFFEDE9ECFAAC07ELL, (int64_t)0xFFFECE224DC68105LL, (int64_t)0x79E6A4A1220DLL, (int64_t)0xFFFFA7E80B00FD91LL, (int64_t)0xFFFE9139CD0840B4LL, (int64_t)0xBC135CE7CF66LL, (int64_t)0xFFFFE879C2C6D9B4LL, (int64_t)0xFFFF7434997405AALL, (int64_t)0xFFFF61F078E09621LL, (int64_t)0x753C2E005038LL, (int64_t)0x7C5F1734A5FELL, (int64_t)0xE749B83B3B53LL, (int64_t)0x5E822E8243C4LL, (int64_t)0xE9A7774C9C0ELL, (int64_t)0xFFFF30D7122F7F6FLL, (int64_t)0x1698F8BDBC05FLL, (int64_t)0xEF2AF1AD2A15LL, (int64_t)0x122B31FBAFBA6LL, (int64_t)0xFFFEA98224F172C5LL, (int64_t)0xFFFEA8BAD1C9C836LL, (int64_t)0xFFFF08A22303ED05LL, (int64_t)0xDF869CE33F0D3A00LL, (int64_t)0xD2539BA924A73800LL, (int64_t)0xFBE2D4FD77C5AA00LL, (int64_t)0xD9264EC1324C9E00LL, (int64_t)0xC5664B090ACC9600LL, (int64_t)0x178989F4AF131400LL, (int64_t)0xD3604D3D26C09A00LL, (int64_t)0xC53E59FF0A7CB400LL, (int64_t)0x98C480893189000LL, (int64_t)0xFDED032C7BDA0600LL, (int64_t)0xCE5B65B41CB6CC00LL, (int64_t)0x124C970EA4993000LL, (int64_t)0xC9C74D9A138E9C00LL, (int64_t)0x281B2DC2D0365C00LL, (int64_t)0xECA61E41594C3C00LL, (int64_t)0xED4243405A848600LL, (int64_t)0xBF2AD6A97E55C00LL, (int64_t)0x3C506880F8A0D000LL, (int64_t)0xD0E2114F21C42400LL, (int64_t)0xCD1A9A071A353400LL, (int64_t)0xED80DDDE5B01BC00LL, (int64_t)0xBA70978974E1400LL, (int64_t)0xC58DBCE50B1B7A00LL, (int64_t)0xE6F353D9CDE6C00LL, (int64_t)0xD3D1D42427A3A800LL, (int64_t)0x20F31121C1E62400LL, (int64_t)0xF9AB76477356EC00LL, (int64_t)0xC60394410C072800LL, (int64_t)0xCC6EACC418DD5A00LL, (int64_t)0x11FFABA3A3FF5800LL, (int64_t)0xCA174BAF142E9800LL, (int64_t)0xDC3755B2386EAC00LL };
		static const int64_t output0[] = { (int64_t)0x0LL, (int64_t)0x0LL, (int64_t)0x0LL, (int64_t)0x100000000LL, (int64_t)0x100000000LL, (int64_t)0x100000000LL, (int64_t)0x100000000LL, (int64_t)0x100000000LL, (int64_t)0x100000000LL, (int64_t)0x100000000LL, (int64_t)0x100000000LL, (int64_t)0x100000000LL, (int64_t)0x100000000LL, (int64_t)0x0LL, (int64_t)0x100000000LL, (int64_t)0x100000000LL, (int64_t)0x0LL, (int64_t)0x0LL, (int64_t)0x100000000LL, (int64_t)0x0LL, (int64_t)0x0LL, (int64_t)0x0LL, (int64_t)0x0LL, (int64_t)0x0LL, (int64_t)0x0LL, (int64_t)0x0LL, (int64_t)0x100000000LL, (int64_t)0x0LL, (int64_t)0x0LL, (int64_t)0x100000000LL, (int64_t)0x0LL, (int64_t)0x100000000LL, (int64_t)0x100000000LL, (int64_t)0x100000000LL, (int64_t)0x12FB000000000LL, (int64_t)0x972200000000LL, (int64_t)0xFFFF4DD900000000LL, (int64_t)0x1604200000000LL, (int64_t)0xFFFFA0FE00000000LL, (int64_t)0xFFFF3C6500000000LL, (int64_t)0xFFFF558C00000000LL, (int64_t)0xFFFEA83200000000LL, (int64_t)0xFFFFD66600000000LL, (int64_t)0x1604B00000000LL, (int64_t)0xFFFF55BA00000000LL, (int64_t)0x3F00000000LL, (int64_t)0xFFFF07D800000000LL, (int64_t)0xFFFEDE9F00000000LL, (int64_t)0xFFFECE2300000000LL, (int64_t)0x79E700000000LL, (int64_t)0xFFFFA7E900000000LL, (int64_t)0xFFFE913A00000000LL, (int64_t)0xBC1400000000LL, (int64_t)0xFFFFE87A00000000LL, (int64_t)0xFFFF743500000000LL, (int64_t)0xFFFF61F100000000LL, (int64_t)0x753D00000000LL, (int64_t)0x7C6000000000LL, (int64_t)0xE74A00000000LL, (int64_t)0x5E8300000000LL, (int64_t)0xE9A800000000LL, (int64_t)0xFFFF30D800000000LL, (int64_t)0x1699000000000LL, (int64_t)0xEF2B00000000LL, (int64_t)0x122B400000000LL, (int64_t)0xFFFEA98300000000LL, (int64_t)0xFFFEA8BB00000000LL, (int64_t)0xFFFF08A300000000LL, (int64_t)0xDF869CE400000000LL, (int64_t)0xD2539BAA00000000LL, (int64_t)0xFBE2D4FE00000000LL, (int64_t)0xD9264EC200000000LL, (int64_t)0xC5664B0A00000000LL, (int64_t)0x178989F500000000LL, (int64_t)0xD3604D3E00000000LL, (int64_t)0xC53E5A0000000000LL, (int64_t)0x98C480900000000LL, (int64_t)0xFDED032D00000000LL, (int64_t)0xCE5B65B500000000LL, (int64_t)0x124C970F00000000LL, (int64_t)0xC9C74D9B00000000LL, (int64_t)0x281B2DC300000000LL, (int64_t)0xECA61E4200000000LL, (int64_t)0xED42434100000000LL, (int64_t)0xBF2AD6B00000000LL, (int64_t)0x3C50688100000000LL, (int64_t)0xD0E2115000000000LL, (int64_t)0xCD1A9A0800000000LL, (int64_t)0xED80DDDF00000000LL, (int64_t)0xBA7097900000000LL, (int64_t)0xC58DBCE600000000LL, (int64_t)0xE6F353E00000000LL, (int64_t)0xD3D1D42500000000LL, (int64_t)0x20F3112200000000LL, (int64_t)0xF9AB764800000000LL, (int64_t)0xC603944200000000LL, (int64_t)0xCC6EACC500000000LL, (int64_t)0x11FFABA400000000LL, (int64_t)0xCA174BB000000000LL, (int64_t)0xDC3755B300000000LL };
		for (int ndx = 0; ndx < 100; ndx++)
			Util::Check("Fixed64::Ceil", Fixed64::Ceil(input0[ndx]), output0[ndx], input0[ndx]);
	}

	// Fixed32.Ceil()
	static void Fixed32_Ceil()
	{
		static const int32_t input0[] = { (int32_t)0xFFFFE121, (int32_t)0xFF7B, (int32_t)0xC43F, (int32_t)0xEE3D, (int32_t)0xFFFF6059, (int32_t)0xFFFF61AC, (int32_t)0xFA08, (int32_t)0xFFFF1D1C, (int32_t)0xFFFFA315, (int32_t)0xFFFF8F69, (int32_t)0x7238, (int32_t)0xFFFF5521, (int32_t)0x1814, (int32_t)0xFFFF4E62, (int32_t)0x16D2, (int32_t)0xF8B3, (int32_t)0xC5A3, (int32_t)0x37EA, (int32_t)0xFFFF6CF3, (int32_t)0xCD41, (int32_t)0xDC03, (int32_t)0xEA9E, (int32_t)0xA7DF, (int32_t)0x4F7E, (int32_t)0xFFFF3318, (int32_t)0xB5CE, (int32_t)0xFFFF1552, (int32_t)0xFFFF91CD, (int32_t)0xFFFF7779, (int32_t)0xFFFF3573, (int32_t)0xE33E, (int32_t)0xDE32, (int32_t)0xFFFFCF57, (int32_t)0xC890, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0xA4FCE778, (int32_t)0x80000000, (int32_t)0xB3E4F421, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0xE47F70ED, (int32_t)0x80000000, (int32_t)0xF68EE518, (int32_t)0xC79CBAE1, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0xF183919F, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x8013FA59, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x79552341, (int32_t)0x3993C085, (int32_t)0xFBCC314E, (int32_t)0xC721BBD0, (int32_t)0x524A64, (int32_t)0xF8CE7EBE, (int32_t)0x27B4D8F0, (int32_t)0x35821819, (int32_t)0x2D65A662, (int32_t)0xD6520398, (int32_t)0x205132AD, (int32_t)0x24C6B68B, (int32_t)0xDC8050C1, (int32_t)0x2509890E, (int32_t)0xC51AFB0F, (int32_t)0xC934D4B4, (int32_t)0x225F9A1E, (int32_t)0x38C21C36, (int32_t)0xFA5BB1F8, (int32_t)0xC9AF80, (int32_t)0xDD0ED799, (int32_t)0xCED8531, (int32_t)0x1C642AEF, (int32_t)0x34017A90, (int32_t)0x19DAE77B, (int32_t)0x24D1AB1, (int32_t)0x2A89C205, (int32_t)0xE07198D0, (int32_t)0xE3BF78C7, (int32_t)0xE0324B5D, (int32_t)0x8ED4B86, (int32_t)0x1E9C0FD6, (int32_t)0xCA174CAB };
		static const int32_t output0[] = { (int32_t)0x0, (int32_t)0x10000, (int32_t)0x10000, (int32_t)0x10000, (int32_t)0x0, (int32_t)0x0, (int32_t)0x10000, (int32_t)0x0, (int32_t)0x0, (int32_t)0x0, (int32_t)0x10000, (int32_t)0x0, (int32_t)0x10000, (int32_t)0x0, (int32_t)0x10000, (int32_t)0x10000, (int32_t)0x10000, (int32_t)0x10000, (int32_t)0x0, (int32_t)0x10000, (int32_t)0x10000, (int32_t)0x10000, (int32_t)0x10000, (int32_t)0x10000, (int32_t)0x0, (int32_t)0x10000, (int32_t)0x0, (int32_t)0x0, (int32_t)0x0, (int32_t)0x0, (int32_t)0x10000, (int32_t)0x10000, (int32_t)0x0, (int32_t)0x10000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0xA4FD0000, (int32_t)0x80000000, (int32_t)0xB3E50000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0xE4800000, (int32_t)0x80000000, (int32_t)0xF68F0000, (int32_t)0xC79D0000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0xF1840000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80140000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x79560000, (int32_t)0x39940000, (int32_t)0xFBCD0000, (int32_t)0xC7220000, (int32_t)0x530000, (int32_t)0xF8CF0000, (int32_t)0x27B50000, (int32_t)0x35830000, (int32_t)0x2D660000, (int32_t)0xD6530000, (int32_t)0x20520000, (int32_t)0x24C70000, (int32_t)0xDC810000, (int32_t)0x250A0000, (int32_t)0xC51B0000, (int32_t)0xC9350000, (int32_t)0x22600000, (int32_t)0x38C30000, (int32_t)0xFA5C0000, (int32_t)0xCA0000, (int32_t)0xDD0F0000, (int32_t)0xCEE0000, (int32_t)0x1C650000, (int32_t)0x34020000, (int32_t)0x19DB0000, (int32_t)0x24E0000, (int32_t)0x2A8A0000, (int32_t)0xE0720000, (int32_t)0xE3C00000, (int32_t)0xE0330000, (int32_t)0x8EE0000, (int32_t)0x1E9D0000, (int32_t)0xCA180000 };
		for (int ndx = 0; ndx < 100; ndx++)
			Util::Check("Fixed32::Ceil", Fixed32::Ceil(input0[ndx]), output0[ndx], input0[ndx]);
	}

	// Fixed64.Floor()
	static void Fixed64_Floor()
	{
		static const int64_t input0[] = { (int64_t)0xFFFFFFFF3B4C5A81LL, (int64_t)0xFFFFFFFFD224209ALL, (int64_t)0xFFFFFFFF1A96FC25LL, (int64_t)0x7DC8CF9ALL, (int64_t)0xFFFFFFFFD172F6FELL, (int64_t)0x51214982LL, (int64_t)0xFFFFFFFF1695F219LL, (int64_t)0x3C384FCELL, (int64_t)0xFFFFFFFF85131F2ELL, (int64_t)0xFFFFFFFFDF4391B6LL, (int64_t)0xFFFFFFFF9D399622LL, (int64_t)0xFFFFFFFFD6573586LL, (int64_t)0xFFFFFFFFE1A68B8ALL, (int64_t)0x49250696LL, (int64_t)0x16639EBALL, (int64_t)0xFFFFFFFF37ED47C5LL, (int64_t)0x436818DALL, (int64_t)0xFFFFFFFF1C24FC11LL, (int64_t)0xFFFFFFFF8A98BA2ELL, (int64_t)0xC2BB79BBLL, (int64_t)0xFFFFFFFF90DF82D2LL, (int64_t)0x118E7F2ELL, (int64_t)0xFFFFFFFF1BCE2565LL, (int64_t)0xFFFFFFFF74BE5659LL, (int64_t)0x1F2ADAF2LL, (int64_t)0xFFFFFFFFB51B514ELL, (int64_t)0xF814BECBLL, (int64_t)0x3912F2DELL, (int64_t)0x1D0D0086LL, (int64_t)0x470A7D4ELL, (int64_t)0x34CD6C1ALL, (int64_t)0x3592E042LL, (int64_t)0xFFFFFFFF06D48B5DLL, (int64_t)0x6ABDA786LL, (int64_t)0xFFFECCD9CB44F6F4LL, (int64_t)0xFFFFA16852CA5411LL, (int64_t)0x17D368AD471ADLL, (int64_t)0xFFFF78426A6F1BC5LL, (int64_t)0xFFFF9234760C0729LL, (int64_t)0xFFFF5801566A6443LL, (int64_t)0xFFFFBB1A1D30B5F5LL, (int64_t)0x12F8B90E76A57LL, (int64_t)0x16CECC9708519LL, (int64_t)0xFFFEFA3B3B3D4BB7LL, (int64_t)0xFFFFBD61615BB183LL, (int64_t)0xFFFFF65C348A5779LL, (int64_t)0xFFFF457DD5316EBCLL, (int64_t)0x1250F7C3EFADFLL, (int64_t)0xFFFF5AD80CA5C471LL, (int64_t)0xFFFEEA0EE78ADC5ELL, (int64_t)0x73556FB9C16ALL, (int64_t)0xFFFF12F109D84F23LL, (int64_t)0xFFFF63010A63CEC3LL, (int64_t)0x11850360C6760LL, (int64_t)0xE728286FB810LL, (int64_t)0x3FB152C87EA2LL, (int64_t)0xFFFF8F98F27064F2LL, (int64_t)0xFD0FB3FB545FLL, (int64_t)0xFFFF09BFC571F9C0LL, (int64_t)0xFFFEA49F3D32047FLL, (int64_t)0x87E0C3290581LL, (int64_t)0xFFFFCB6002B17700LL, (int64_t)0xFFFEA8EF75D99C1FLL, (int64_t)0x5EA7EBFE1C0FLL, (int64_t)0x1041A87222475LL, (int64_t)0x9E28C1431B11LL, (int64_t)0xFFFFB602C0E5C246LL, (int64_t)0xB5711CEAF822LL, (int64_t)0x49C078589381000LL, (int64_t)0xD51866C62A30CE00LL, (int64_t)0xCF8615EC1F0C2C00LL, (int64_t)0xE717656A4E2ECA00LL, (int64_t)0x190662A4B20CC400LL, (int64_t)0x3E2C64B4FC58C800LL, (int64_t)0xFBF8A8FD77F15200LL, (int64_t)0xF27C452764F88A00LL, (int64_t)0x8998FFE91332000LL, (int64_t)0x31D6E894E3ADD000LL, (int64_t)0x2819D02ED033A000LL, (int64_t)0xC95F098D12BE1400LL, (int64_t)0xCBD58FBA17AB2000LL, (int64_t)0xCE0156A71C02AE00LL, (int64_t)0xE953E26052A7C400LL, (int64_t)0xF4CCF9436999F200LL, (int64_t)0x3EDD2CC3FDBA5800LL, (int64_t)0xF40A4EAE68149E00LL, (int64_t)0xE71D9B154E3B3600LL, (int64_t)0xD3C7F16F278FE400LL, (int64_t)0x34CFFDEBE99FFC00LL, (int64_t)0x33DC34B867B8800LL, (int64_t)0xC2EB021B05D60400LL, (int64_t)0xD4FF129229FE2400LL, (int64_t)0xD21B23A224364800LL, (int64_t)0xE6ECF2F34DD9E600LL, (int64_t)0xE36A7289C6D5000LL, (int64_t)0x3D5575A2FAAAEC00LL, (int64_t)0x29F0C7BAD3E19000LL, (int64_t)0xEC47E755588FCE00LL, (int64_t)0xEA7F175D54FE2E00LL, (int64_t)0x1B2C17EFB6583000LL };
		static const int64_t output0[] = { (int64_t)0xFFFFFFFF00000000LL, (int64_t)0xFFFFFFFF00000000LL, (int64_t)0xFFFFFFFF00000000LL, (int64_t)0x0LL, (int64_t)0xFFFFFFFF00000000LL, (int64_t)0x0LL, (int64_t)0xFFFFFFFF00000000LL, (int64_t)0x0LL, (int64_t)0xFFFFFFFF00000000LL, (int64_t)0xFFFFFFFF00000000LL, (int64_t)0xFFFFFFFF00000000LL, (int64_t)0xFFFFFFFF00000000LL, (int64_t)0xFFFFFFFF00000000LL, (int64_t)0x0LL, (int64_t)0x0LL, (int64_t)0xFFFFFFFF00000000LL, (int64_t)0x0LL, (int64_t)0xFFFFFFFF00000000LL, (int64_t)0xFFFFFFFF00000000LL, (int64_t)0x0LL, (int64_t)0xFFFFFFFF00000000LL, (int64_t)0x0LL, (int64_t)0xFFFFFFFF00000000LL, (int64_t)0xFFFFFFFF00000000LL, (int64_t)0x0LL, (int64_t)0xFFFFFFFF00000000LL, (int64_t)0x0LL, (int64_t)0x0LL, (int64_t)0x0LL, (int64_t)0x0LL, (int64_t)0x0LL, (int64_t)0x0LL, (int64_t)0xFFFFFFFF00000000LL, (int64_t)0x0LL, (int64_t)0xFFFECCD900000000LL, (int64_t)0xFFFFA16800000000LL, (int64_t)0x17D3600000000LL, (int64_t)0xFFFF784200000000LL, (int64_t)0xFFFF923400000000LL, (int64_t)0xFFFF580100000000LL, (int64_t)0xFFFFBB1A00000000LL, (int64_t)0x12F8B00000000LL, (int64_t)0x16CEC00000000LL, (int64_t)0xFFFEFA3B00000000LL, (int64_t)0xFFFFBD6100000000LL, (int64_t)0xFFFFF65C00000000LL, (int64_t)0xFFFF457D00000000LL, (int64_t)0x1250F00000000LL, (int64_t)0xFFFF5AD800000000LL, (int64_t)0xFFFEEA0E00000000LL, (int64_t)0x735500000000LL, (int64_t)0xFFFF12F100000000LL, (int64_t)0xFFFF630100000000LL, (int64_t)0x1185000000000LL, (int64_t)0xE72800000000LL, (int64_t)0x3FB100000000LL, (int64_t)0xFFFF8F9800000000LL, (int64_t)0xFD0F00000000LL, (int64_t)0xFFFF09BF00000000LL, (int64_t)0xFFFEA49F00000000LL, (int64_t)0x87E000000000LL, (int64_t)0xFFFFCB6000000000LL, (int64_t)0xFFFEA8EF00000000LL, (int64_t)0x5EA700000000LL, (int64_t)0x1041A00000000LL, (int64_t)0x9E2800000000LL, (int64_t)0xFFFFB60200000000LL, (int64_t)0xB57100000000LL, (int64_t)0x49C078500000000LL, (int64_t)0xD51866C600000000LL, (int64_t)0xCF8615EC00000000LL, (int64_t)0xE717656A00000000LL, (int64_t)0x190662A400000000LL, (int64_t)0x3E2C64B400000000LL, (int64_t)0xFBF8A8FD00000000LL, (int64_t)0xF27C452700000000LL, (int64_t)0x8998FFE00000000LL, (int64_t)0x31D6E89400000000LL, (int64_t)0x2819D02E00000000LL, (int64_t)0xC95F098D00000000LL, (int64_t)0xCBD58FBA00000000LL, (int64_t)0xCE0156A700000000LL, (int64_t)0xE953E26000000000LL, (int64_t)0xF4CCF94300000000LL, (int64_t)0x3EDD2CC300000000LL, (int64_t)0xF40A4EAE00000000LL, (int64_t)0xE71D9B1500000000LL, (int64_t)0xD3C7F16F00000000LL, (int64_t)0x34CFFDEB00000000LL, (int64_t)0x33DC34B00000000LL, (int64_t)0xC2EB021B00000000LL, (int64_t)0xD4FF129200000000LL, (int64_t)0xD21B23A200000000LL, (int64_t)0xE6ECF2F300000000LL, (int64_t)0xE36A72800000000LL, (int64_t)0x3D5575A200000000LL, (int64_t)0x29F0C7BA00000000LL, (int64_t)0xEC47E75500000000LL, (int64_t)0xEA7F175D00000000LL, (int64_t)0x1B2C17EF00000000LL };
		for (int ndx = 0; ndx < 100; ndx++)
			Util::Check("Fixed64::Floor", Fixed64::Floor(input0[ndx]), output0[ndx], input0[ndx]);
	}

	// Fixed32.Floor()
	static void Fixed32_Floor()
	{
		static const int32_t input0[] = { (int32_t)0xFFFF2A2D, (int32_t)0xEDC, (int32_t)0xFFFFADA0, (int32_t)0xFFFF3F62, (int32_t)0xFFFF0BC1, (int32_t)0xFFFFAF39, (int32_t)0x8A, (int32_t)0xFFFFA06B, (int32_t)0xFFFFC7D3, (int32_t)0xFFFFCD8D, (int32_t)0xFFFF0758, (int32_t)0xFFFFEEFB, (int32_t)0xFFFF0572, (int32_t)0xFFFF3922, (int32_t)0xED01, (int32_t)0x2107, (int32_t)0xFFFF3834, (int32_t)0x4BF7, (int32_t)0x4293, (int32_t)0xFFFFDA4D, (int32_t)0xFFFFCB31, (int32_t)0xFFFF8063, (int32_t)0xA3A8, (int32_t)0xFFFF057A, (int32_t)0xFFFF48B6, (int32_t)0xEA1C, (int32_t)0xFFFF53F2, (int32_t)0xFFFFC866, (int32_t)0xFFFFBFD7, (int32_t)0xFFFFFA8D, (int32_t)0x222D, (int32_t)0xFFFF7147, (int32_t)0x1D5F, (int32_t)0xFFFF33B7, (int32_t)0x80000000, (int32_t)0x318E4176, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0xA9B60CA5, (int32_t)0x7453CE7D, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x8B2CEF5, (int32_t)0x8946B13, (int32_t)0x2BC8A07A, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x83F0F566, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0xCF746CB6, (int32_t)0xF321D591, (int32_t)0x25A846E5, (int32_t)0x34916E9E, (int32_t)0xE121123E, (int32_t)0x3D95DC14, (int32_t)0x2AB95BD, (int32_t)0xF3C92F94, (int32_t)0xFE455017, (int32_t)0xE77D63F8, (int32_t)0xFFF667C5, (int32_t)0xB00F8C8, (int32_t)0x26E44A0B, (int32_t)0xD12991C4, (int32_t)0xC66CD671, (int32_t)0xEA00E26B, (int32_t)0xF5A9B25, (int32_t)0xF1989041, (int32_t)0xAEBD07, (int32_t)0x136BF492, (int32_t)0x248DB2B1, (int32_t)0xD461BD5F, (int32_t)0x2D51B39D, (int32_t)0xF88FF7D5, (int32_t)0xDBD05FEA, (int32_t)0xE9739ABA, (int32_t)0xFC3D5442, (int32_t)0x25DE6AF8, (int32_t)0xC6DDE816, (int32_t)0x2E8213F4, (int32_t)0x16952DBB, (int32_t)0x1BE39E48 };
		static const int32_t output0[] = { (int32_t)0xFFFF0000, (int32_t)0x0, (int32_t)0xFFFF0000, (int32_t)0xFFFF0000, (int32_t)0xFFFF0000, (int32_t)0xFFFF0000, (int32_t)0x0, (int32_t)0xFFFF0000, (int32_t)0xFFFF0000, (int32_t)0xFFFF0000, (int32_t)0xFFFF0000, (int32_t)0xFFFF0000, (int32_t)0xFFFF0000, (int32_t)0xFFFF0000, (int32_t)0x0, (int32_t)0x0, (int32_t)0xFFFF0000, (int32_t)0x0, (int32_t)0x0, (int32_t)0xFFFF0000, (int32_t)0xFFFF0000, (int32_t)0xFFFF0000, (int32_t)0x0, (int32_t)0xFFFF0000, (int32_t)0xFFFF0000, (int32_t)0x0, (int32_t)0xFFFF0000, (int32_t)0xFFFF0000, (int32_t)0xFFFF0000, (int32_t)0xFFFF0000, (int32_t)0x0, (int32_t)0xFFFF0000, (int32_t)0x0, (int32_t)0xFFFF0000, (int32_t)0x80000000, (int32_t)0x318E0000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0xA9B60000, (int32_t)0x74530000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x8B20000, (int32_t)0x8940000, (int32_t)0x2BC80000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x83F00000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0xCF740000, (int32_t)0xF3210000, (int32_t)0x25A80000, (int32_t)0x34910000, (int32_t)0xE1210000, (int32_t)0x3D950000, (int32_t)0x2AB0000, (int32_t)0xF3C90000, (int32_t)0xFE450000, (int32_t)0xE77D0000, (int32_t)0xFFF60000, (int32_t)0xB000000, (int32_t)0x26E40000, (int32_t)0xD1290000, (int32_t)0xC66C0000, (int32_t)0xEA000000, (int32_t)0xF5A0000, (int32_t)0xF1980000, (int32_t)0xAE0000, (int32_t)0x136B0000, (int32_t)0x248D0000, (int32_t)0xD4610000, (int32_t)0x2D510000, (int32_t)0xF88F0000, (int32_t)0xDBD00000, (int32_t)0xE9730000, (int32_t)0xFC3D0000, (int32_t)0x25DE0000, (int32_t)0xC6DD0000, (int32_t)0x2E820000, (int32_t)0x16950000, (int32_t)0x1BE30000 };
		for (int ndx = 0; ndx < 100; ndx++)
			Util::Check("Fixed32::Floor", Fixed32::Floor(input0[ndx]), output0[ndx], input0[ndx]);
	}

	// Fixed64.Round()
	static void Fixed64_Round()
	{
		static const int64_t input0[] = { (int64_t)0x4B169B86LL, (int64_t)0xFFFFFFFF7CD06125LL, (int64_t)0xD1790D3FLL, (int64_t)0xE22B0EC3LL, (int64_t)0xFFFFFFFF813250F2LL, (int64_t)0xEADCA657LL, (int64_t)0xD7476BBBLL, (int64_t)0x78343E32LL, (int64_t)0xFFFFFFFFC5011B9ELL, (int64_t)0xD25B57E7LL, (int64_t)0xFFFFFFFFB0B3E5CELL, (int64_t)0xFFFFFFFFCD3DB232LL, (int64_t)0xA84C961FLL, (int64_t)0xFFFFFFFFCAA85876LL, (int64_t)0xFFFFFFFF86138E32LL, (int64_t)0xFFFFFFFF16A0E669LL, (int64_t)0xFFFFFFFF1E718E49LL, (int64_t)0x3890613ELL, (int64_t)0xFFFFFFFF8FDAE7AALL, (int64_t)0xFFFFFFFFE4FC6486LL, (int64_t)0xFFFFFFFF93560496LL, (int64_t)0xFFFFFFFF83EB41BALL, (int64_t)0xFFFFFFFF3F83B94DLL, (int64_t)0xEC4ABD5BLL, (int64_t)0x174087CALL, (int64_t)0xFFFFFFFFB4613C46LL, (int64_t)0x63043AD6LL, (int64_t)0xDEB5DE0FLL, (int64_t)0x5621F4ELL, (int64_t)0x7334AB12LL, (int64_t)0xFFFFFFFFB3AD1DFALL, (int64_t)0x3F0CF086LL, (int64_t)0x43A0D8EELL, (int64_t)0x904B25EFLL, (int64_t)0x157360F640AACLL, (int64_t)0x2EECE7B60019LL, (int64_t)0xFFFF291EE25246FELL, (int64_t)0xFFFECE1C576B6EF9LL, (int64_t)0xFFFEB49AFF2C3976LL, (int64_t)0x7DF7949F56AFLL, (int64_t)0xFFFFE63851ADBC31LL, (int64_t)0xD35FCD55D4FFLL, (int64_t)0xFFFF49EF977DD4A0LL, (int64_t)0x124C03A284840LL, (int64_t)0xF5660DC8B10CLL, (int64_t)0xFFFFDB6EE6C4069ELL, (int64_t)0x586CD9909C19LL, (int64_t)0xFB28316A8710LL, (int64_t)0xFFFEA9CA81048955LL, (int64_t)0xFFFFC6850F2EE3CBLL, (int64_t)0xB8AE022C8D9CLL, (int64_t)0xFFFFD39A1AA298F5LL, (int64_t)0x405B891196F7LL, (int64_t)0xFFFF2C6DE4BF571CLL, (int64_t)0xFFFFC967A4D8BF90LL, (int64_t)0xFFFFA94885E74751LL, (int64_t)0xFFFED6E9179CB213LL, (int64_t)0x15DB3CAA6F4A7LL, (int64_t)0xFFFFAF001C349641LL, (int64_t)0x13886882A574DLL, (int64_t)0xFFFF48A89B09CE92LL, (int64_t)0x17B4918CC7CD2LL, (int64_t)0xFFFF2893DE6404E8LL, (int64_t)0x7CD093398BE1LL, (int64_t)0x2ED099252661LL, (int64_t)0xAD6B62034A96LL, (int64_t)0xD1FAF503F935LL, (int64_t)0xFFFE9E0131CF8743LL, (int64_t)0xFA6EC43674DD8800LL, (int64_t)0x19D4B1C9B3A96400LL, (int64_t)0x28DCEB26D1B9D800LL, (int64_t)0x39BA50D2F374A000LL, (int64_t)0x46FCA2188DF9400LL, (int64_t)0xF53485A9EA69000LL, (int64_t)0x3D7863CFFAF0C800LL, (int64_t)0x233D3AA8467A800LL, (int64_t)0x3ECF22C2FD9E4400LL, (int64_t)0xDFEA119B3FD42400LL, (int64_t)0xD2DDEB6C25BBD800LL, (int64_t)0xCBCDDAE1179BB600LL, (int64_t)0x1E9B7CC4BD36F800LL, (int64_t)0x2F9AC4E9DF358800LL, (int64_t)0x2FBEC056DF7D8000LL, (int64_t)0xCAC36D2C1586DA00LL, (int64_t)0x3E8B235DFD164800LL, (int64_t)0x343177B8E862F000LL, (int64_t)0xC537E2170A6FC400LL, (int64_t)0xF39221A167244400LL, (int64_t)0xED04AC585A095800LL, (int64_t)0x6707B738CE0F800LL, (int64_t)0xF85D07CC70BA1000LL, (int64_t)0xE37FBA7A46FF7400LL, (int64_t)0x1B277100B64EE000LL, (int64_t)0xD68009032D001200LL, (int64_t)0xF2AD56AF655AAE00LL, (int64_t)0xFDA251E67B44A400LL, (int64_t)0x5ED25C18BDA4C00LL, (int64_t)0xDB891889B712400LL, (int64_t)0xE84B4E3C50969C00LL, (int64_t)0xCBCB069917960C00LL };
		static const int64_t output0[] = { (int64_t)0x0LL, (int64_t)0xFFFFFFFF00000000LL, (int64_t)0x100000000LL, (int64_t)0x100000000LL, (int64_t)0x0LL, (int64_t)0x100000000LL, (int64_t)0x100000000LL, (int64_t)0x0LL, (int64_t)0x0LL, (int64_t)0x100000000LL, (int64_t)0x0LL, (int64_t)0x0LL, (int64_t)0x100000000LL, (int64_t)0x0LL, (int64_t)0x0LL, (int64_t)0xFFFFFFFF00000000LL, (int64_t)0xFFFFFFFF00000000LL, (int64_t)0x0LL, (int64_t)0x0LL, (int64_t)0x0LL, (int64_t)0x0LL, (int64_t)0x0LL, (int64_t)0xFFFFFFFF00000000LL, (int64_t)0x100000000LL, (int64_t)0x0LL, (int64_t)0x0LL, (int64_t)0x0LL, (int64_t)0x100000000LL, (int64_t)0x0LL, (int64_t)0x0LL, (int64_t)0x0LL, (int64_t)0x0LL, (int64_t)0x0LL, (int64_t)0x100000000LL, (int64_t)0x1573600000000LL, (int64_t)0x2EED00000000LL, (int64_t)0xFFFF291F00000000LL, (int64_t)0xFFFECE1C00000000LL, (int64_t)0xFFFEB49B00000000LL, (int64_t)0x7DF800000000LL, (int64_t)0xFFFFE63800000000LL, (int64_t)0xD36000000000LL, (int64_t)0xFFFF49F000000000LL, (int64_t)0x124C000000000LL, (int64_t)0xF56600000000LL, (int64_t)0xFFFFDB6F00000000LL, (int64_t)0x586D00000000LL, (int64_t)0xFB2800000000LL, (int64_t)0xFFFEA9CB00000000LL, (int64_t)0xFFFFC68500000000LL, (int64_t)0xB8AE00000000LL, (int64_t)0xFFFFD39A00000000LL, (int64_t)0x405C00000000LL, (int64_t)0xFFFF2C6E00000000LL, (int64_t)0xFFFFC96800000000LL, (int64_t)0xFFFFA94900000000LL, (int64_t)0xFFFED6E900000000LL, (int64_t)0x15DB400000000LL, (int64_t)0xFFFFAF0000000000LL, (int64_t)0x1388700000000LL, (int64_t)0xFFFF48A900000000LL, (int64_t)0x17B4900000000LL, (int64_t)0xFFFF289400000000LL, (int64_t)0x7CD100000000LL, (int64_t)0x2ED100000000LL, (int64_t)0xAD6B00000000LL, (int64_t)0xD1FB00000000LL, (int64_t)0xFFFE9E0100000000LL, (int64_t)0xFA6EC43600000000LL, (int64_t)0x19D4B1CA00000000LL, (int64_t)0x28DCEB2700000000LL, (int64_t)0x39BA50D300000000LL, (int64_t)0x46FCA2200000000LL, (int64_t)0xF53485B00000000LL, (int64_t)0x3D7863D000000000LL, (int64_t)0x233D3AB00000000LL, (int64_t)0x3ECF22C300000000LL, (int64_t)0xDFEA119B00000000LL, (int64_t)0xD2DDEB6C00000000LL, (int64_t)0xCBCDDAE100000000LL, (int64_t)0x1E9B7CC500000000LL, (int64_t)0x2F9AC4EA00000000LL, (int64_t)0x2FBEC05700000000LL, (int64_t)0xCAC36D2C00000000LL, (int64_t)0x3E8B235E00000000LL, (int64_t)0x343177B900000000LL, (int64_t)0xC537E21700000000LL, (int64_t)0xF39221A100000000LL, (int64_t)0xED04AC5800000000LL, (int64_t)0x6707B7400000000LL, (int64_t)0xF85D07CC00000000LL, (int64_t)0xE37FBA7A00000000LL, (int64_t)0x1B27710100000000LL, (int64_t)0xD680090300000000LL, (int64_t)0xF2AD56AF00000000LL, (int64_t)0xFDA251E600000000LL, (int64_t)0x5ED25C200000000LL, (int64_t)0xDB8918900000000LL, (int64_t)0xE84B4E3C00000000LL, (int64_t)0xCBCB069900000000LL };
		for (int ndx = 0; ndx < 100; ndx++)
			Util::Check("Fixed64::Round", Fixed64::Round(input0[ndx]), output0[ndx], input0[ndx]);
	}

	// Fixed32.Round()
	static void Fixed32_Round()
	{
		static const int32_t input0[] = { (int32_t)0x5E6C, (int32_t)0x21F1, (int32_t)0xFFFFBADF, (int32_t)0xFFFFB869, (int32_t)0x36E0, (int32_t)0x921E, (int32_t)0xD128, (int32_t)0xECE0, (int32_t)0xFFFF7F77, (int32_t)0xD369, (int32_t)0xFFFFCBEF, (int32_t)0xBDA4, (int32_t)0x99B6, (int32_t)0xFFFF9BB4, (int32_t)0xFFFF5264, (int32_t)0xFFFFC96E, (int32_t)0xFFFF3997, (int32_t)0xFFFF47C5, (int32_t)0x579F, (int32_t)0x4DE8, (int32_t)0x5CC7, (int32_t)0xFFFFBB55, (int32_t)0x63EE, (int32_t)0xCFF9, (int32_t)0xFFFF85DF, (int32_t)0x1574, (int32_t)0xFFFF7A4C, (int32_t)0xFFFFB7C0, (int32_t)0xFFFF7298, (int32_t)0xFFFFFF59, (int32_t)0xF11A, (int32_t)0xFFFFC45B, (int32_t)0xDE7B, (int32_t)0xFFFF1C4C, (int32_t)0xB7F7FEAF, (int32_t)0x80000000, (int32_t)0x56B0209, (int32_t)0xA07EF0F, (int32_t)0xEDF51BE8, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0xD02EB479, (int32_t)0x80000000, (int32_t)0x36A4DCF2, (int32_t)0xEE1ECA6C, (int32_t)0xB8280F72, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x99AFE107, (int32_t)0xB6A9DA64, (int32_t)0x80000000, (int32_t)0x7F0EF518, (int32_t)0xBA68DF34, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0xDFCB99BB, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x245AE0C4, (int32_t)0x26C5F339, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x32B9FCBC, (int32_t)0x3E79C1E1, (int32_t)0x317816A1, (int32_t)0xCC0E820, (int32_t)0x14E5DCE1, (int32_t)0xFBE48BFB, (int32_t)0x1392A4AD, (int32_t)0xD320AD3, (int32_t)0xDB20A3D9, (int32_t)0xE0D14CD5, (int32_t)0x208980FF, (int32_t)0x1883BA8B, (int32_t)0xC84B1EC0, (int32_t)0x2A5835AE, (int32_t)0xEC088082, (int32_t)0xDC53F0F3, (int32_t)0xD0996318, (int32_t)0x84AA2B4, (int32_t)0xF945F877, (int32_t)0xE2CD8BE6, (int32_t)0x1279B974, (int32_t)0xCB6CCE10, (int32_t)0xE69E3FF8, (int32_t)0xC62A0283, (int32_t)0xF5025F8E, (int32_t)0xF4B03ED8, (int32_t)0x140E9608, (int32_t)0xF98D2D90, (int32_t)0xEB6DB063, (int32_t)0xF3ACD1F7, (int32_t)0xFF96C750, (int32_t)0xD18FA54E };
		static const int32_t output0[] = { (int32_t)0x0, (int32_t)0x0, (int32_t)0x0, (int32_t)0x0, (int32_t)0x0, (int32_t)0x10000, (int32_t)0x10000, (int32_t)0x10000, (int32_t)0xFFFF0000, (int32_t)0x10000, (int32_t)0x0, (int32_t)0x10000, (int32_t)0x10000, (int32_t)0x0, (int32_t)0xFFFF0000, (int32_t)0x0, (int32_t)0xFFFF0000, (int32_t)0xFFFF0000, (int32_t)0x0, (int32_t)0x0, (int32_t)0x0, (int32_t)0x0, (int32_t)0x0, (int32_t)0x10000, (int32_t)0x0, (int32_t)0x0, (int32_t)0xFFFF0000, (int32_t)0x0, (int32_t)0xFFFF0000, (int32_t)0x0, (int32_t)0x10000, (int32_t)0x0, (int32_t)0x10000, (int32_t)0xFFFF0000, (int32_t)0xB7F80000, (int32_t)0x80000000, (int32_t)0x56B0000, (int32_t)0xA080000, (int32_t)0xEDF50000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0xD02F0000, (int32_t)0x80000000, (int32_t)0x36A50000, (int32_t)0xEE1F0000, (int32_t)0xB8280000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x99B00000, (int32_t)0xB6AA0000, (int32_t)0x80000000, (int32_t)0x7F0F0000, (int32_t)0xBA690000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0xDFCC0000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x245B0000, (int32_t)0x26C60000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x32BA0000, (int32_t)0x3E7A0000, (int32_t)0x31780000, (int32_t)0xCC10000, (int32_t)0x14E60000, (int32_t)0xFBE50000, (int32_t)0x13930000, (int32_t)0xD320000, (int32_t)0xDB210000, (int32_t)0xE0D10000, (int32_t)0x208A0000, (int32_t)0x18840000, (int32_t)0xC84B0000, (int32_t)0x2A580000, (int32_t)0xEC090000, (int32_t)0xDC540000, (int32_t)0xD0990000, (int32_t)0x84B0000, (int32_t)0xF9460000, (int32_t)0xE2CE0000, (int32_t)0x127A0000, (int32_t)0xCB6D0000, (int32_t)0xE69E0000, (int32_t)0xC62A0000, (int32_t)0xF5020000, (int32_t)0xF4B00000, (int32_t)0x140F0000, (int32_t)0xF98D0000, (int32_t)0xEB6E0000, (int32_t)0xF3AD0000, (int32_t)0xFF970000, (int32_t)0xD1900000 };
		for (int ndx = 0; ndx < 100; ndx++)
			Util::Check("Fixed32::Round", Fixed32::Round(input0[ndx]), output0[ndx], input0[ndx]);
	}

	// Fixed64.Fract()
	static void Fixed64_Fract()
	{
		static const int64_t input0[] = { (int64_t)0x44A669D6LL, (int64_t)0x76DD38CELL, (int64_t)0x602B59ALL, (int64_t)0xFFFFFFFF0DB5FAEDLL, (int64_t)0xFFFFFFFF3B67A85DLL, (int64_t)0x89EF1AC7LL, (int64_t)0x7C58B94ALL, (int64_t)0xFFFFFFFFEFB03326LL, (int64_t)0xFFFFFFFF04FA4B31LL, (int64_t)0x9D9C822BLL, (int64_t)0xFFFFFFFF369560E5LL, (int64_t)0x3ABDE6E2LL, (int64_t)0x68BEEF4ALL, (int64_t)0xFFFFFFFFD07A836ALL, (int64_t)0xFFFFFFFF003F8055LL, (int64_t)0x6E72844ALL, (int64_t)0xFFFFFFFF69471011LL, (int64_t)0x8F8BC4ALL, (int64_t)0x3DB8EF26LL, (int64_t)0xFFFFFFFFC123E36ELL, (int64_t)0x227CA7FELL, (int64_t)0x53F3245ALL, (int64_t)0xFFFFFFFF33842915LL, (int64_t)0x9D34BAB7LL, (int64_t)0x5F6E07AALL, (int64_t)0xAD38507FLL, (int64_t)0xFFFFFFFF5EFA224DLL, (int64_t)0xFFFFFFFF80D6782ALL, (int64_t)0x9F57D7C7LL, (int64_t)0xFFFFFFFF6815DC79LL, (int64_t)0xFFFFFFFF871169C6LL, (int64_t)0x9DCF4787LL, (int64_t)0x84EA1613LL, (int64_t)0x3BE76ECALL, (int64_t)0xFFFEA63F94D6A0C0LL, (int64_t)0xFFFF7D3F305A6B3FLL, (int64_t)0xFFFF72A7814D668FLL, (int64_t)0xFFFF71361654EEADLL, (int64_t)0xFFFECBA14AD85003LL, (int64_t)0xFFFF92D7BB10A770LL, (int64_t)0xFB7EA8570EBDLL, (int64_t)0x1767554F3482ALL, (int64_t)0xFFFF46332360B027LL, (int64_t)0x106E5024F398ALL, (int64_t)0x17911E8B68BE3LL, (int64_t)0x9212DCFD9C65LL, (int64_t)0xFFFF85CB106D3657LL, (int64_t)0xFFFE7ECE0B6F925DLL, (int64_t)0xFFFFBA94D25D976ALL, (int64_t)0x15883899F1AC7LL, (int64_t)0xFFFF38001FB060C1LL, (int64_t)0xFB6072C1B180LL, (int64_t)0xDD37FF9855B0LL, (int64_t)0xFFFED6C86497BCD1LL, (int64_t)0x368FC894F2DFLL, (int64_t)0x16F478BE626CFLL, (int64_t)0x66C3C59FFDC7LL, (int64_t)0x9FEB4CF25916LL, (int64_t)0xFFFF834E898D9BDELL, (int64_t)0xFFFF5254FD71C36ALL, (int64_t)0x418C0BA5AB58LL, (int64_t)0xFFFFF925A0A2738CLL, (int64_t)0x7A98D26B43F1LL, (int64_t)0xEF660F70548CLL, (int64_t)0x2265FE1AE88CLL, (int64_t)0xFFFF627D4673D3BBLL, (int64_t)0x11572547E7FA4LL, (int64_t)0xFFFEBDCC5473D8D9LL, (int64_t)0xECC480C459890200LL, (int64_t)0x157C0F89AAF82000LL, (int64_t)0xF2C518CA658A3200LL, (int64_t)0x31B6C23DE36D8400LL, (int64_t)0xF4C4283769885000LL, (int64_t)0xE1509F6442A13E00LL, (int64_t)0x71484798E290800LL, (int64_t)0xB453E52968A7C00LL, (int64_t)0xF36DCFFD66DBA000LL, (int64_t)0xE1CE715B439CE200LL, (int64_t)0x2985B8D7D30B7000LL, (int64_t)0x3FECBBABFFD97800LL, (int64_t)0xFF53CD707EA79A00LL, (int64_t)0xD6DAC9E02DB59400LL, (int64_t)0x2B953F47D72A8000LL, (int64_t)0x2F6400FBDEC80000LL, (int64_t)0x3ACA0D92F5941C00LL, (int64_t)0xF894D9217129B200LL, (int64_t)0xC3353BB5066A7800LL, (int64_t)0x11ECB710A3D97000LL, (int64_t)0xC60960650C12C000LL, (int64_t)0xCB2D4EB7165A9E00LL, (int64_t)0x19BD8C9CB37B1800LL, (int64_t)0xEA4098F9D481400LL, (int64_t)0x3D0904F5FA120800LL, (int64_t)0x29EE30E3D3DC6000LL, (int64_t)0x23605E46C6C0BC00LL, (int64_t)0xEA53E41954A7C800LL, (int64_t)0xE943D4D55287AA00LL, (int64_t)0xFA55DD6B74ABBA00LL, (int64_t)0xE56FD2D04ADFA600LL, (int64_t)0x1795EF7EAF2BE000LL };
		static const int64_t output0[] = { (int64_t)0x44A669D6LL, (int64_t)0x76DD38CELL, (int64_t)0x602B59ALL, (int64_t)0xDB5FAEDLL, (int64_t)0x3B67A85DLL, (int64_t)0x89EF1AC7LL, (int64_t)0x7C58B94ALL, (int64_t)0xEFB03326LL, (int64_t)0x4FA4B31LL, (int64_t)0x9D9C822BLL, (int64_t)0x369560E5LL, (int64_t)0x3ABDE6E2LL, (int64_t)0x68BEEF4ALL, (int64_t)0xD07A836ALL, (int64_t)0x3F8055LL, (int64_t)0x6E72844ALL, (int64_t)0x69471011LL, (int64_t)0x8F8BC4ALL, (int64_t)0x3DB8EF26LL, (int64_t)0xC123E36ELL, (int64_t)0x227CA7FELL, (int64_t)0x53F3245ALL, (int64_t)0x33842915LL, (int64_t)0x9D34BAB7LL, (int64_t)0x5F6E07AALL, (int64_t)0xAD38507FLL, (int64_t)0x5EFA224DLL, (int64_t)0x80D6782ALL, (int64_t)0x9F57D7C7LL, (int64_t)0x6815DC79LL, (int64_t)0x871169C6LL, (int64_t)0x9DCF4787LL, (int64_t)0x84EA1613LL, (int64_t)0x3BE76ECALL, (int64_t)0x94D6A0C0LL, (int64_t)0x305A6B3FLL, (int64_t)0x814D668FLL, (int64_t)0x1654EEADLL, (int64_t)0x4AD85003LL, (int64_t)0xBB10A770LL, (int64_t)0xA8570EBDLL, (int64_t)0x54F3482ALL, (int64_t)0x2360B027LL, (int64_t)0x24F398ALL, (int64_t)0xE8B68BE3LL, (int64_t)0xDCFD9C65LL, (int64_t)0x106D3657LL, (int64_t)0xB6F925DLL, (int64_t)0xD25D976ALL, (int64_t)0x899F1AC7LL, (int64_t)0x1FB060C1LL, (int64_t)0x72C1B180LL, (int64_t)0xFF9855B0LL, (int64_t)0x6497BCD1LL, (int64_t)0xC894F2DFLL, (int64_t)0x8BE626CFLL, (int64_t)0xC59FFDC7LL, (int64_t)0x4CF25916LL, (int64_t)0x898D9BDELL, (int64_t)0xFD71C36ALL, (int64_t)0xBA5AB58LL, (int64_t)0xA0A2738CLL, (int64_t)0xD26B43F1LL, (int64_t)0xF70548CLL, (int64_t)0xFE1AE88CLL, (int64_t)0x4673D3BBLL, (int64_t)0x547E7FA4LL, (int64_t)0x5473D8D9LL, (int64_t)0x59890200LL, (int64_t)0xAAF82000LL, (int64_t)0x658A3200LL, (int64_t)0xE36D8400LL, (int64_t)0x69885000LL, (int64_t)0x42A13E00LL, (int64_t)0x8E290800LL, (int64_t)0x968A7C00LL, (int64_t)0x66DBA000LL, (int64_t)0x439CE200LL, (int64_t)0xD30B7000LL, (int64_t)0xFFD97800LL, (int64_t)0x7EA79A00LL, (int64_t)0x2DB59400LL, (int64_t)0xD72A8000LL, (int64_t)0xDEC80000LL, (int64_t)0xF5941C00LL, (int64_t)0x7129B200LL, (int64_t)0x66A7800LL, (int64_t)0xA3D97000LL, (int64_t)0xC12C000LL, (int64_t)0x165A9E00LL, (int64_t)0xB37B1800LL, (int64_t)0x9D481400LL, (int64_t)0xFA120800LL, (int64_t)0xD3DC6000LL, (int64_t)0xC6C0BC00LL, (int64_t)0x54A7C800LL, (int64_t)0x5287AA00LL, (int64_t)0x74ABBA00LL, (int64_t)0x4ADFA600LL, (int64_t)0xAF2BE000LL };
		for (int ndx = 0; ndx < 100; ndx++)
			Util::Check("Fixed64::Fract", Fixed64::Fract(input0[ndx]), output0[ndx], input0[ndx]);
	}

	// Fixed32.Fract()
	static void Fixed32_Fract()
	{
		static const int32_t input0[] = { (int32_t)0xA9E7, (int32_t)0xFFFF8312, (int32_t)0x507C, (int32_t)0x7C91, (int32_t)0x16B3, (int32_t)0xFFFFB613, (int32_t)0xFFFFD1AE, (int32_t)0xBB7, (int32_t)0x20E5, (int32_t)0xF6AC, (int32_t)0x22FC, (int32_t)0xFFFFBC20, (int32_t)0xC2B7, (int32_t)0xFFFFAE96, (int32_t)0x90E0, (int32_t)0xFFFFCF8A, (int32_t)0x4D2D, (int32_t)0x92C8, (int32_t)0xB1BC, (int32_t)0xFFFF3438, (int32_t)0xFFFF8BF2, (int32_t)0xFFFF6E21, (int32_t)0xFFFF14B2, (int32_t)0xFFFF865D, (int32_t)0xEEFA, (int32_t)0x9084, (int32_t)0xD2B6, (int32_t)0x2B57, (int32_t)0xFFFFF7C2, (int32_t)0xFFFF7303, (int32_t)0xFFFF8806, (int32_t)0xE45F, (int32_t)0xF17A, (int32_t)0xFFFF47C0, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x10ADB1A5, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x510014B7, (int32_t)0x80000000, (int32_t)0x1B2FE2D, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0xED63B02, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x6A236AAF, (int32_t)0x80000000, (int32_t)0x9B3E04ED, (int32_t)0x80000000, (int32_t)0x1BE3901E, (int32_t)0x54D94059, (int32_t)0x80000000, (int32_t)0xBA6BC4BC, (int32_t)0x5B357F57, (int32_t)0x80000000, (int32_t)0xADCB5C84, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0xD44BBB5B, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x82B3F72D, (int32_t)0x80000000, (int32_t)0x5F8923E6, (int32_t)0xAE95BC16, (int32_t)0x80000000, (int32_t)0xD6325784, (int32_t)0x5A8A1A5, (int32_t)0x3126E84C, (int32_t)0x6DA60F1, (int32_t)0xFAFAF10C, (int32_t)0xDF29A7D6, (int32_t)0xC8E46CF0, (int32_t)0x22B505B5, (int32_t)0xD1D4D00E, (int32_t)0x3CCE5C50, (int32_t)0x1F28E4B7, (int32_t)0x1108C8E3, (int32_t)0xC62ACB8D, (int32_t)0xE349F977, (int32_t)0x51FCEF6, (int32_t)0xCE725716, (int32_t)0x5B80D47, (int32_t)0x1D6FAA83, (int32_t)0xEB312342, (int32_t)0x23FCB8B2, (int32_t)0x1D56247C, (int32_t)0x68154B9, (int32_t)0xC2F7800E, (int32_t)0xD0338011, (int32_t)0xE90B23C4, (int32_t)0x82B57DF, (int32_t)0xD46E7C41, (int32_t)0xDA941E45, (int32_t)0xFB498F42, (int32_t)0x1E3AC37B, (int32_t)0xECB44FED, (int32_t)0x32C73E85 };
		static const int32_t output0[] = { (int32_t)0xA9E7, (int32_t)0x8312, (int32_t)0x507C, (int32_t)0x7C91, (int32_t)0x16B3, (int32_t)0xB613, (int32_t)0xD1AE, (int32_t)0xBB7, (int32_t)0x20E5, (int32_t)0xF6AC, (int32_t)0x22FC, (int32_t)0xBC20, (int32_t)0xC2B7, (int32_t)0xAE96, (int32_t)0x90E0, (int32_t)0xCF8A, (int32_t)0x4D2D, (int32_t)0x92C8, (int32_t)0xB1BC, (int32_t)0x3438, (int32_t)0x8BF2, (int32_t)0x6E21, (int32_t)0x14B2, (int32_t)0x865D, (int32_t)0xEEFA, (int32_t)0x9084, (int32_t)0xD2B6, (int32_t)0x2B57, (int32_t)0xF7C2, (int32_t)0x7303, (int32_t)0x8806, (int32_t)0xE45F, (int32_t)0xF17A, (int32_t)0x47C0, (int32_t)0x0, (int32_t)0x0, (int32_t)0xB1A5, (int32_t)0x0, (int32_t)0x0, (int32_t)0x14B7, (int32_t)0x0, (int32_t)0xFE2D, (int32_t)0x0, (int32_t)0x0, (int32_t)0x3B02, (int32_t)0x0, (int32_t)0x0, (int32_t)0x6AAF, (int32_t)0x0, (int32_t)0x4ED, (int32_t)0x0, (int32_t)0x901E, (int32_t)0x4059, (int32_t)0x0, (int32_t)0xC4BC, (int32_t)0x7F57, (int32_t)0x0, (int32_t)0x5C84, (int32_t)0x0, (int32_t)0x0, (int32_t)0xBB5B, (int32_t)0x0, (int32_t)0x0, (int32_t)0xF72D, (int32_t)0x0, (int32_t)0x23E6, (int32_t)0xBC16, (int32_t)0x0, (int32_t)0x5784, (int32_t)0xA1A5, (int32_t)0xE84C, (int32_t)0x60F1, (int32_t)0xF10C, (int32_t)0xA7D6, (int32_t)0x6CF0, (int32_t)0x5B5, (int32_t)0xD00E, (int32_t)0x5C50, (int32_t)0xE4B7, (int32_t)0xC8E3, (int32_t)0xCB8D, (int32_t)0xF977, (int32_t)0xCEF6, (int32_t)0x5716, (int32_t)0xD47, (int32_t)0xAA83, (int32_t)0x2342, (int32_t)0xB8B2, (int32_t)0x247C, (int32_t)0x54B9, (int32_t)0x800E, (int32_t)0x8011, (int32_t)0x23C4, (int32_t)0x57DF, (int32_t)0x7C41, (int32_t)0x1E45, (int32_t)0x8F42, (int32_t)0xC37B, (int32_t)0x4FED, (int32_t)0x3E85 };
		for (int ndx = 0; ndx < 100; ndx++)
			Util::Check("Fixed32::Fract", Fixed32::Fract(input0[ndx]), output0[ndx], input0[ndx]);
	}

	// Fixed64.CeilToInt()
	static void Fixed64_CeilToInt()
	{
		static const int64_t input0[] = { (int64_t)0xE0321803LL, (int64_t)0xFCE11C9BLL, (int64_t)0xFFFFFFFFECC5B13ALL, (int64_t)0x361ADELL, (int64_t)0xFFFFFFFFF95C06EELL, (int64_t)0xFFFFFFFF40B8C89DLL, (int64_t)0xFFFFFFFF265B37B9LL, (int64_t)0xFFFFFFFFBAF49DEELL, (int64_t)0xFFFFFFFF3DF5E3A5LL, (int64_t)0x47927C9ALL, (int64_t)0xFFFFFFFFF473136ALL, (int64_t)0xFFFFFFFF7B262A0DLL, (int64_t)0x4D7C9CA6LL, (int64_t)0xFFFFFFFF49740DA1LL, (int64_t)0x6D840592LL, (int64_t)0xFFFFFFFF5633C23DLL, (int64_t)0xFFFFFFFF91D64B3ALL, (int64_t)0xDA2D7A57LL, (int64_t)0x9702714BLL, (int64_t)0xF8E8A3E7LL, (int64_t)0xFFFFFFFF91D7AE3ALL, (int64_t)0x3AB1ED56LL, (int64_t)0xFFFFFFFF059F602DLL, (int64_t)0x3EC40B26LL, (int64_t)0xAC48662LL, (int64_t)0x83CDA0F3LL, (int64_t)0xFFFFFFFF773CF4B9LL, (int64_t)0xCB3E64AFLL, (int64_t)0xFFFFFFFF2AECAE55LL, (int64_t)0xB9413AABLL, (int64_t)0xFFFFFFFF9DADD9D2LL, (int64_t)0xFFFFFFFFCE683246LL, (int64_t)0x40683192LL, (int64_t)0xB18698C7LL, (int64_t)0x987FAE3CA33FLL, (int64_t)0xFFFEA3C73512C94FLL, (int64_t)0xF4B9D98B8033LL, (int64_t)0xFFFE985415F4C369LL, (int64_t)0x624ED46F885DLL, (int64_t)0xFFFFC025E7F15D8CLL, (int64_t)0x79231E576C06LL, (int64_t)0x170F9E833D3B3LL, (int64_t)0x7D1AAAD455F5LL, (int64_t)0xFFFEBF386051F2B1LL, (int64_t)0xFFFEB2B4481F0829LL, (int64_t)0xDCD283257565LL, (int64_t)0xFFFFECA6109AB58DLL, (int64_t)0xFFFF03CDC87C805CLL, (int64_t)0x11160F8D4D101LL, (int64_t)0x17FCB9F1BC4D7LL, (int64_t)0x14A516E333E62LL, (int64_t)0x1CF2D40EFAA5LL, (int64_t)0x158B5900362ABLL, (int64_t)0xFFFF950C8EB6445ALL, (int64_t)0x57635CE44D86LL, (int64_t)0xFFFF75E8B11EAC92LL, (int64_t)0x17948AE284B51LL, (int64_t)0x1098344094A46LL, (int64_t)0x176846F319548LL, (int64_t)0xB360685BFF00LL, (int64_t)0x1337092312021LL, (int64_t)0xFFFF0466DB832B0ELL, (int64_t)0xFFFF55261BF9068DLL, (int64_t)0xFFFF43DE2A54FFFDLL, (int64_t)0xFFFF7C9C7EE47379LL, (int64_t)0xFFFEB36C59CA0299LL, (int64_t)0x59A21F45DB84LL, (int64_t)0xEDFA43A87AB4LL, (int64_t)0xF960C08572C18200LL, (int64_t)0x146E7CFFA8DCF800LL, (int64_t)0xED7463675AE8C600LL, (int64_t)0xDF634A8F3EC69400LL, (int64_t)0xE670093C4CE01200LL, (int64_t)0xF036C132606D8200LL, (int64_t)0xEA614C6454C29800LL, (int64_t)0xE801EFC85003E000LL, (int64_t)0x3A2D3B8BF45A7800LL, (int64_t)0x35F652B4EBECA400LL, (int64_t)0x64C72EA8C98E400LL, (int64_t)0x1E832C0EBD065800LL, (int64_t)0xE41F0F56483E1E00LL, (int64_t)0xC7211CD30E423A00LL, (int64_t)0xC60542B10C0A8600LL, (int64_t)0xCBD99FE417B34000LL, (int64_t)0x3831C334F0638800LL, (int64_t)0x22AD45C8C55A8C00LL, (int64_t)0xFB1FE568763FCA00LL, (int64_t)0xE19FE572433FCA00LL, (int64_t)0xDE10533A3C20A600LL, (int64_t)0xEF9C38375F387000LL, (int64_t)0xC922154912442A00LL, (int64_t)0x3C9823A2F9304800LL, (int64_t)0xC7B5E3200F6BC600LL, (int64_t)0x32B7BBDAE56F7800LL, (int64_t)0x32AE6278655CC00LL, (int64_t)0xFD11A7D37A235000LL, (int64_t)0x1871FFDFB0E40000LL, (int64_t)0xF352158B66A42C00LL, (int64_t)0x20F85CA3C1F0B800LL, (int64_t)0x3FE1D795FFC3B000LL };
		static const int32_t output0[] = { (int32_t)0x1, (int32_t)0x1, (int32_t)0x0, (int32_t)0x1, (int32_t)0x0, (int32_t)0x0, (int32_t)0x0, (int32_t)0x0, (int32_t)0x0, (int32_t)0x1, (int32_t)0x0, (int32_t)0x0, (int32_t)0x1, (int32_t)0x0, (int32_t)0x1, (int32_t)0x0, (int32_t)0x0, (int32_t)0x1, (int32_t)0x1, (int32_t)0x1, (int32_t)0x0, (int32_t)0x1, (int32_t)0x0, (int32_t)0x1, (int32_t)0x1, (int32_t)0x1, (int32_t)0x0, (int32_t)0x1, (int32_t)0x0, (int32_t)0x1, (int32_t)0x0, (int32_t)0x0, (int32_t)0x1, (int32_t)0x1, (int32_t)0x9880, (int32_t)0xFFFEA3C8, (int32_t)0xF4BA, (int32_t)0xFFFE9855, (int32_t)0x624F, (int32_t)0xFFFFC026, (int32_t)0x7924, (int32_t)0x170FA, (int32_t)0x7D1B, (int32_t)0xFFFEBF39, (int32_t)0xFFFEB2B5, (int32_t)0xDCD3, (int32_t)0xFFFFECA7, (int32_t)0xFFFF03CE, (int32_t)0x11161, (int32_t)0x17FCC, (int32_t)0x14A52, (int32_t)0x1CF3, (int32_t)0x158B6, (int32_t)0xFFFF950D, (int32_t)0x5764, (int32_t)0xFFFF75E9, (int32_t)0x17949, (int32_t)0x10984, (int32_t)0x17685, (int32_t)0xB361, (int32_t)0x13371, (int32_t)0xFFFF0467, (int32_t)0xFFFF5527, (int32_t)0xFFFF43DF, (int32_t)0xFFFF7C9D, (int32_t)0xFFFEB36D, (int32_t)0x59A3, (int32_t)0xEDFB, (int32_t)0xF960C086, (int32_t)0x146E7D00, (int32_t)0xED746368, (int32_t)0xDF634A90, (int32_t)0xE670093D, (int32_t)0xF036C133, (int32_t)0xEA614C65, (int32_t)0xE801EFC9, (int32_t)0x3A2D3B8C, (int32_t)0x35F652B5, (int32_t)0x64C72EB, (int32_t)0x1E832C0F, (int32_t)0xE41F0F57, (int32_t)0xC7211CD4, (int32_t)0xC60542B2, (int32_t)0xCBD99FE5, (int32_t)0x3831C335, (int32_t)0x22AD45C9, (int32_t)0xFB1FE569, (int32_t)0xE19FE573, (int32_t)0xDE10533B, (int32_t)0xEF9C3838, (int32_t)0xC922154A, (int32_t)0x3C9823A3, (int32_t)0xC7B5E321, (int32_t)0x32B7BBDB, (int32_t)0x32AE628, (int32_t)0xFD11A7D4, (int32_t)0x1871FFE0, (int32_t)0xF352158C, (int32_t)0x20F85CA4, (int32_t)0x3FE1D796 };
		for (int ndx = 0; ndx < 100; ndx++)
			Util::Check("Fixed64::CeilToInt", Fixed64::CeilToInt(input0[ndx]), output0[ndx], input0[ndx]);
	}

	// Fixed32.CeilToInt()
	static void Fixed32_CeilToInt()
	{
		static const int32_t input0[] = { (int32_t)0xFFFF55FA, (int32_t)0x575B, (int32_t)0x7535, (int32_t)0xFFFF6170, (int32_t)0x45B4, (int32_t)0x5AED, (int32_t)0xFFFF7939, (int32_t)0x210D, (int32_t)0xFFFF1064, (int32_t)0xFFFF993E, (int32_t)0xFFFFBCCC, (int32_t)0xFFFF1F69, (int32_t)0xFFFF94D0, (int32_t)0xFFFF7B65, (int32_t)0xFFFFE513, (int32_t)0xACF7, (int32_t)0xFFFF4308, (int32_t)0xFFFF60A2, (int32_t)0xFFFFA3EE, (int32_t)0x1F2F, (int32_t)0x398B, (int32_t)0xFFFFB43F, (int32_t)0x23B4, (int32_t)0xFFFF2713, (int32_t)0x2D31, (int32_t)0xFFFFC371, (int32_t)0xFFFF5EB6, (int32_t)0xFFFFCEE2, (int32_t)0xB42F, (int32_t)0xB53E, (int32_t)0x3E3F, (int32_t)0x1B6C, (int32_t)0xFFFF53F8, (int32_t)0x19AA, (int32_t)0x370B3888, (int32_t)0x572BC629, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0xDDF70801, (int32_t)0x80000000, (int32_t)0x1AAE8EBD, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0xD80596D4, (int32_t)0x80000000, (int32_t)0x87D482DF, (int32_t)0x1C176A7, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0xA779C23E, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x773AB77D, (int32_t)0x4FB6C3E2, (int32_t)0x80000000, (int32_t)0xFA3A07D0, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x15D4846C, (int32_t)0x2AFC52C0, (int32_t)0x16A1B28, (int32_t)0xE31888DC, (int32_t)0x1DBBE467, (int32_t)0xC784E4BC, (int32_t)0xC36CC491, (int32_t)0x1B86536E, (int32_t)0xCF888DC9, (int32_t)0x112C3DB2, (int32_t)0xC95B1F37, (int32_t)0xA046ED4, (int32_t)0x197812BB, (int32_t)0xEED0BD60, (int32_t)0x3A451BAE, (int32_t)0xD51ECD0A, (int32_t)0xFFEECE, (int32_t)0xCF464C0C, (int32_t)0xFC84777F, (int32_t)0x3BD17C56, (int32_t)0xD4EB96A0, (int32_t)0x2095D5E4, (int32_t)0x15E8D36, (int32_t)0x164AE575, (int32_t)0xE099F772, (int32_t)0xD9DB8F16, (int32_t)0x2268A8D6, (int32_t)0x19C9444B, (int32_t)0xD7A4F487, (int32_t)0xC6BDD4E8, (int32_t)0xE1017CC5, (int32_t)0xD811BFFA };
		static const int32_t output0[] = { (int32_t)0x0, (int32_t)0x1, (int32_t)0x1, (int32_t)0x0, (int32_t)0x1, (int32_t)0x1, (int32_t)0x0, (int32_t)0x1, (int32_t)0x0, (int32_t)0x0, (int32_t)0x0, (int32_t)0x0, (int32_t)0x0, (int32_t)0x0, (int32_t)0x0, (int32_t)0x1, (int32_t)0x0, (int32_t)0x0, (int32_t)0x0, (int32_t)0x1, (int32_t)0x1, (int32_t)0x0, (int32_t)0x1, (int32_t)0x0, (int32_t)0x1, (int32_t)0x0, (int32_t)0x0, (int32_t)0x0, (int32_t)0x1, (int32_t)0x1, (int32_t)0x1, (int32_t)0x1, (int32_t)0x0, (int32_t)0x1, (int32_t)0x370C, (int32_t)0x572C, (int32_t)0xFFFF8000, (int32_t)0xFFFF8000, (int32_t)0xFFFFDDF8, (int32_t)0xFFFF8000, (int32_t)0x1AAF, (int32_t)0xFFFF8000, (int32_t)0xFFFF8000, (int32_t)0xFFFF8000, (int32_t)0xFFFF8000, (int32_t)0xFFFF8000, (int32_t)0xFFFF8000, (int32_t)0xFFFF8000, (int32_t)0xFFFFD806, (int32_t)0xFFFF8000, (int32_t)0xFFFF87D5, (int32_t)0x1C2, (int32_t)0xFFFF8000, (int32_t)0xFFFF8000, (int32_t)0xFFFFA77A, (int32_t)0xFFFF8000, (int32_t)0xFFFF8000, (int32_t)0x773B, (int32_t)0x4FB7, (int32_t)0xFFFF8000, (int32_t)0xFFFFFA3B, (int32_t)0xFFFF8000, (int32_t)0xFFFF8000, (int32_t)0xFFFF8000, (int32_t)0xFFFF8000, (int32_t)0xFFFF8000, (int32_t)0xFFFF8000, (int32_t)0xFFFF8000, (int32_t)0x15D5, (int32_t)0x2AFD, (int32_t)0x16B, (int32_t)0xFFFFE319, (int32_t)0x1DBC, (int32_t)0xFFFFC785, (int32_t)0xFFFFC36D, (int32_t)0x1B87, (int32_t)0xFFFFCF89, (int32_t)0x112D, (int32_t)0xFFFFC95C, (int32_t)0xA05, (int32_t)0x1979, (int32_t)0xFFFFEED1, (int32_t)0x3A46, (int32_t)0xFFFFD51F, (int32_t)0x100, (int32_t)0xFFFFCF47, (int32_t)0xFFFFFC85, (int32_t)0x3BD2, (int32_t)0xFFFFD4EC, (int32_t)0x2096, (int32_t)0x15F, (int32_t)0x164B, (int32_t)0xFFFFE09A, (int32_t)0xFFFFD9DC, (int32_t)0x2269, (int32_t)0x19CA, (int32_t)0xFFFFD7A5, (int32_t)0xFFFFC6BE, (int32_t)0xFFFFE102, (int32_t)0xFFFFD812 };
		for (int ndx = 0; ndx < 100; ndx++)
			Util::Check("Fixed32::CeilToInt", Fixed32::CeilToInt(input0[ndx]), output0[ndx], input0[ndx]);
	}

	// Fixed64.FloorToInt()
	static void Fixed64_FloorToInt()
	{
		static const int64_t input0[] = { (int64_t)0xFFFFFFFF39AF4A31LL, (int64_t)0xE26B470BLL, (int64_t)0xFFFFFFFF4C20968DLL, (int64_t)0x39DB7BC6LL, (int64_t)0xFFFFFFFF5A0BCB65LL, (int64_t)0xFFFFFFFF24DCB39DLL, (int64_t)0x8A36FDD7LL, (int64_t)0xFFFFFFFF0B47271DLL, (int64_t)0xFFFFFFFF56FED4A9LL, (int64_t)0x57E2C51ALL, (int64_t)0x639943DALL, (int64_t)0xFFFFFFFFEEF5B1FALL, (int64_t)0x28B6E146LL, (int64_t)0xFFFFFFFF0C2C0BC1LL, (int64_t)0x1C635726LL, (int64_t)0xFFFFFFFF40F47061LL, (int64_t)0xC142F97BLL, (int64_t)0x1862F78ALL, (int64_t)0x57251CBALL, (int64_t)0x1DE49CEELL, (int64_t)0xFFFFFFFFAF4CC682LL, (int64_t)0xDC2AA7FBLL, (int64_t)0x2777129ALL, (int64_t)0xD4FABA1FLL, (int64_t)0xFFFFFFFFA677162ALL, (int64_t)0xAC7CD6CBLL, (int64_t)0xFFFFFFFF09FA45A9LL, (int64_t)0xF81554ALL, (int64_t)0xFFFFFFFF9470EF92LL, (int64_t)0xFFFFFFFFA68E0112LL, (int64_t)0xF857BA2LL, (int64_t)0xFFFFFFFF232AE385LL, (int64_t)0xFFFFFFFFC0AB03BALL, (int64_t)0xC5257CF3LL, (int64_t)0xFFFFE51EF5E04B7ELL, (int64_t)0xC8966D0E4A6CLL, (int64_t)0xFFFF22F3D21E4928LL, (int64_t)0xFFFF84BE45B9A73DLL, (int64_t)0x17E223F35E704LL, (int64_t)0xFFFFCDDAD37F1276LL, (int64_t)0xFFFF8A54660D8E69LL, (int64_t)0xFFFFD989114831D3LL, (int64_t)0xE85B822AEBF7LL, (int64_t)0xFFFFF99584D09C6BLL, (int64_t)0xFFFEA848C8D700D2LL, (int64_t)0xFFFE9BBBF23350B8LL, (int64_t)0xFFFEC3501404CDE1LL, (int64_t)0xFFFF2DC90756C353LL, (int64_t)0x72817FF435C3LL, (int64_t)0x6EE6CE89960DLL, (int64_t)0xFD1E1D69F57CLL, (int64_t)0x6B1A4B7DC2F4LL, (int64_t)0xFFFFA42CA2FDE19ALL, (int64_t)0x9BD69E0ED8EDLL, (int64_t)0x10E0BCFD14557LL, (int64_t)0xFFFF08128201B5E5LL, (int64_t)0xFFFF96A4E085A08ALL, (int64_t)0xFFFF2F2E2577B71DLL, (int64_t)0xFFFF5A47118CEB4FLL, (int64_t)0xFFFF823441FA80A9LL, (int64_t)0xFFFEA265C106C28CLL, (int64_t)0xFFFF349D705015FBLL, (int64_t)0xB5549E805CE9LL, (int64_t)0x10D3A28DCDC34LL, (int64_t)0xFFFEE7CB583B97D7LL, (int64_t)0x62506BBFFE60LL, (int64_t)0xFFFEC002B422F546LL, (int64_t)0x97EDB9B4CF1BLL, (int64_t)0x77266A78EE4CC00LL, (int64_t)0x263B94D0CC772800LL, (int64_t)0x3474845BE8E90800LL, (int64_t)0x48281A189050400LL, (int64_t)0x77CE3B28EF9C800LL, (int64_t)0xDE0085473C010C00LL, (int64_t)0xDAC09AA635813400LL, (int64_t)0x322083E8E4410800LL, (int64_t)0xD0F8E2D221F1C600LL, (int64_t)0xCAEADF4E15D5BE00LL, (int64_t)0x2D8F2999DB1E5400LL, (int64_t)0xE3FCA4D247F94A00LL, (int64_t)0x1F02088EBE041000LL, (int64_t)0x24EF9CE8C9DF3800LL, (int64_t)0x311D9C06E23B3800LL, (int64_t)0x12F0AF25A5E16000LL, (int64_t)0x2AFA578055F400LL, (int64_t)0x32552844E4AA5000LL, (int64_t)0x17D62B28AFAC5800LL, (int64_t)0x16A26B65AD44D800LL, (int64_t)0xC50AD0E40A15A200LL, (int64_t)0xE43773BB486EE800LL, (int64_t)0xF22033DC64406800LL, (int64_t)0x3DFF20A0FBFE4000LL, (int64_t)0xC6F523560DEA4600LL, (int64_t)0x13381D09A6703C00LL, (int64_t)0xF110266A62204C00LL, (int64_t)0xCE0B22721C164400LL, (int64_t)0x1BFD1FD4B7FA4000LL, (int64_t)0x39F59246F3EB2400LL, (int64_t)0xECDB92FA59B72600LL, (int64_t)0xF793ECD86F27DA00LL };
		static const int32_t output0[] = { (int32_t)0xFFFFFFFF, (int32_t)0x0, (int32_t)0xFFFFFFFF, (int32_t)0x0, (int32_t)0xFFFFFFFF, (int32_t)0xFFFFFFFF, (int32_t)0x0, (int32_t)0xFFFFFFFF, (int32_t)0xFFFFFFFF, (int32_t)0x0, (int32_t)0x0, (int32_t)0xFFFFFFFF, (int32_t)0x0, (int32_t)0xFFFFFFFF, (int32_t)0x0, (int32_t)0xFFFFFFFF, (int32_t)0x0, (int32_t)0x0, (int32_t)0x0, (int32_t)0x0, (int32_t)0xFFFFFFFF, (int32_t)0x0, (int32_t)0x0, (int32_t)0x0, (int32_t)0xFFFFFFFF, (int32_t)0x0, (int32_t)0xFFFFFFFF, (int32_t)0x0, (int32_t)0xFFFFFFFF, (int32_t)0xFFFFFFFF, (int32_t)0x0, (int32_t)0xFFFFFFFF, (int32_t)0xFFFFFFFF, (int32_t)0x0, (int32_t)0xFFFFE51E, (int32_t)0xC896, (int32_t)0xFFFF22F3, (int32_t)0xFFFF84BE, (int32_t)0x17E22, (int32_t)0xFFFFCDDA, (int32_t)0xFFFF8A54, (int32_t)0xFFFFD989, (int32_t)0xE85B, (int32_t)0xFFFFF995, (int32_t)0xFFFEA848, (int32_t)0xFFFE9BBB, (int32_t)0xFFFEC350, (int32_t)0xFFFF2DC9, (int32_t)0x7281, (int32_t)0x6EE6, (int32_t)0xFD1E, (int32_t)0x6B1A, (int32_t)0xFFFFA42C, (int32_t)0x9BD6, (int32_t)0x10E0B, (int32_t)0xFFFF0812, (int32_t)0xFFFF96A4, (int32_t)0xFFFF2F2E, (int32_t)0xFFFF5A47, (int32_t)0xFFFF8234, (int32_t)0xFFFEA265, (int32_t)0xFFFF349D, (int32_t)0xB554, (int32_t)0x10D3A, (int32_t)0xFFFEE7CB, (int32_t)0x6250, (int32_t)0xFFFEC002, (int32_t)0x97ED, (int32_t)0x77266A7, (int32_t)0x263B94D0, (int32_t)0x3474845B, (int32_t)0x48281A1, (int32_t)0x77CE3B2, (int32_t)0xDE008547, (int32_t)0xDAC09AA6, (int32_t)0x322083E8, (int32_t)0xD0F8E2D2, (int32_t)0xCAEADF4E, (int32_t)0x2D8F2999, (int32_t)0xE3FCA4D2, (int32_t)0x1F02088E, (int32_t)0x24EF9CE8, (int32_t)0x311D9C06, (int32_t)0x12F0AF25, (int32_t)0x2AFA57, (int32_t)0x32552844, (int32_t)0x17D62B28, (int32_t)0x16A26B65, (int32_t)0xC50AD0E4, (int32_t)0xE43773BB, (int32_t)0xF22033DC, (int32_t)0x3DFF20A0, (int32_t)0xC6F52356, (int32_t)0x13381D09, (int32_t)0xF110266A, (int32_t)0xCE0B2272, (int32_t)0x1BFD1FD4, (int32_t)0x39F59246, (int32_t)0xECDB92FA, (int32_t)0xF793ECD8 };
		for (int ndx = 0; ndx < 100; ndx++)
			Util::Check("Fixed64::FloorToInt", Fixed64::FloorToInt(input0[ndx]), output0[ndx], input0[ndx]);
	}

	// Fixed32.FloorToInt()
	static void Fixed32_FloorToInt()
	{
		static const int32_t input0[] = { (int32_t)0xE839, (int32_t)0xFFFFCCE4, (int32_t)0x5872, (int32_t)0xB21C, (int32_t)0x76DC, (int32_t)0xFFFF93D9, (int32_t)0xFFFF283E, (int32_t)0xFFFF4BD1, (int32_t)0xFFFFFB1F, (int32_t)0xE878, (int32_t)0xFFFF19A2, (int32_t)0xFFFF8F49, (int32_t)0xFFFFC0EA, (int32_t)0xFFFF0372, (int32_t)0x3186, (int32_t)0xFFFF8724, (int32_t)0xFFFFB640, (int32_t)0xFFFF2B14, (int32_t)0xFFFFAFC5, (int32_t)0xFFFF7F09, (int32_t)0xE115, (int32_t)0xFFFFD3C2, (int32_t)0x4F66, (int32_t)0xFFFF8CEC, (int32_t)0xFFFFD06E, (int32_t)0xD9D5, (int32_t)0xFFFFF636, (int32_t)0xD113, (int32_t)0xB3C1, (int32_t)0xFFFF32D6, (int32_t)0xFFFF588E, (int32_t)0xFFFF5C0E, (int32_t)0x783D, (int32_t)0xFFFFD7ED, (int32_t)0x80000000, (int32_t)0x849F8EEC, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x1DCE38E5, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x5409D298, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x6919D94A, (int32_t)0x558D8168, (int32_t)0x80000000, (int32_t)0xFBC49FC3, (int32_t)0x1F3CDE6D, (int32_t)0x80000000, (int32_t)0xAFEDFC1A, (int32_t)0xD1BDBCE5, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0xAAFC73FE, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x2329F536, (int32_t)0x80000000, (int32_t)0x16EE44EA, (int32_t)0xE0988019, (int32_t)0xD2F5EF86, (int32_t)0xE8F95691, (int32_t)0xD58B37FB, (int32_t)0xD0BC4483, (int32_t)0xF77C54C6, (int32_t)0xF3634A36, (int32_t)0xDD158FA8, (int32_t)0x8ECC1BC, (int32_t)0xC56BC4ED, (int32_t)0xE5CD5AE7, (int32_t)0xE8B0909C, (int32_t)0xF774AF8B, (int32_t)0x2D6E5E36, (int32_t)0x1DA93706, (int32_t)0xEC3A23DF, (int32_t)0x4EB22FC, (int32_t)0x8FEF8D2, (int32_t)0x10F5E372, (int32_t)0x36ACBCD5, (int32_t)0x24CFFAAC, (int32_t)0xC69E8A0, (int32_t)0x1BF17421, (int32_t)0xC2AB405, (int32_t)0xCDF8021C, (int32_t)0xF3CC500D, (int32_t)0x127B490B, (int32_t)0xDEDE7924, (int32_t)0x25C86DD4, (int32_t)0xE6F22019, (int32_t)0xEE6A38D1 };
		static const int32_t output0[] = { (int32_t)0x0, (int32_t)0xFFFFFFFF, (int32_t)0x0, (int32_t)0x0, (int32_t)0x0, (int32_t)0xFFFFFFFF, (int32_t)0xFFFFFFFF, (int32_t)0xFFFFFFFF, (int32_t)0xFFFFFFFF, (int32_t)0x0, (int32_t)0xFFFFFFFF, (int32_t)0xFFFFFFFF, (int32_t)0xFFFFFFFF, (int32_t)0xFFFFFFFF, (int32_t)0x0, (int32_t)0xFFFFFFFF, (int32_t)0xFFFFFFFF, (int32_t)0xFFFFFFFF, (int32_t)0xFFFFFFFF, (int32_t)0xFFFFFFFF, (int32_t)0x0, (int32_t)0xFFFFFFFF, (int32_t)0x0, (int32_t)0xFFFFFFFF, (int32_t)0xFFFFFFFF, (int32_t)0x0, (int32_t)0xFFFFFFFF, (int32_t)0x0, (int32_t)0x0, (int32_t)0xFFFFFFFF, (int32_t)0xFFFFFFFF, (int32_t)0xFFFFFFFF, (int32_t)0x0, (int32_t)0xFFFFFFFF, (int32_t)0xFFFF8000, (int32_t)0xFFFF849F, (int32_t)0xFFFF8000, (int32_t)0xFFFF8000, (int32_t)0xFFFF8000, (int32_t)0xFFFF8000, (int32_t)0xFFFF8000, (int32_t)0x1DCE, (int32_t)0xFFFF8000, (int32_t)0xFFFF8000, (int32_t)0xFFFF8000, (int32_t)0xFFFF8000, (int32_t)0x5409, (int32_t)0xFFFF8000, (int32_t)0xFFFF8000, (int32_t)0xFFFF8000, (int32_t)0xFFFF8000, (int32_t)0x6919, (int32_t)0x558D, (int32_t)0xFFFF8000, (int32_t)0xFFFFFBC4, (int32_t)0x1F3C, (int32_t)0xFFFF8000, (int32_t)0xFFFFAFED, (int32_t)0xFFFFD1BD, (int32_t)0xFFFF8000, (int32_t)0xFFFF8000, (int32_t)0xFFFF8000, (int32_t)0xFFFF8000, (int32_t)0xFFFFAAFC, (int32_t)0xFFFF8000, (int32_t)0xFFFF8000, (int32_t)0x2329, (int32_t)0xFFFF8000, (int32_t)0x16EE, (int32_t)0xFFFFE098, (int32_t)0xFFFFD2F5, (int32_t)0xFFFFE8F9, (int32_t)0xFFFFD58B, (int32_t)0xFFFFD0BC, (int32_t)0xFFFFF77C, (int32_t)0xFFFFF363, (int32_t)0xFFFFDD15, (int32_t)0x8EC, (int32_t)0xFFFFC56B, (int32_t)0xFFFFE5CD, (int32_t)0xFFFFE8B0, (int32_t)0xFFFFF774, (int32_t)0x2D6E, (int32_t)0x1DA9, (int32_t)0xFFFFEC3A, (int32_t)0x4EB, (int32_t)0x8FE, (int32_t)0x10F5, (int32_t)0x36AC, (int32_t)0x24CF, (int32_t)0xC69, (int32_t)0x1BF1, (int32_t)0xC2A, (int32_t)0xFFFFCDF8, (int32_t)0xFFFFF3CC, (int32_t)0x127B, (int32_t)0xFFFFDEDE, (int32_t)0x25C8, (int32_t)0xFFFFE6F2, (int32_t)0xFFFFEE6A };
		for (int ndx = 0; ndx < 100; ndx++)
			Util::Check("Fixed32::FloorToInt", Fixed32::FloorToInt(input0[ndx]), output0[ndx], input0[ndx]);
	}

	// Fixed64.RoundToInt()
	static void Fixed64_RoundToInt()
	{
		static const int64_t input0[] = { (int64_t)0x222C924ELL, (int64_t)0x4E17097ELL, (int64_t)0xFFFFFFFFBCA9A75ALL, (int64_t)0x98F7A167LL, (int64_t)0xF144E143LL, (int64_t)0xFFFFFFFFDE07F716LL, (int64_t)0xFFFFFFFFEEB42476LL, (int64_t)0xFFFFFFFFF5204CDALL, (int64_t)0x5674506ELL, (int64_t)0xFFFFFFFF2FACD6D9LL, (int64_t)0xFFFFFFFFA022955ALL, (int64_t)0xFFFFFFFF59CA2889LL, (int64_t)0xFFFFFFFFB5D75806LL, (int64_t)0xFFFFFFFF4A79A281LL, (int64_t)0xFFFFFFFFFA445032LL, (int64_t)0xFFFFFFFFBFCFD9D6LL, (int64_t)0xFFFFFFFFA170B846LL, (int64_t)0x2169CA36LL, (int64_t)0xFFFFFFFF17607B41LL, (int64_t)0xFFFFFFFF7C3E0D7DLL, (int64_t)0xFFFFFFFF9997F176LL, (int64_t)0xD333F81FLL, (int64_t)0xFFFFFFFF0E494FA9LL, (int64_t)0xC87928F7LL, (int64_t)0x50BA5DDELL, (int64_t)0xFFFFFFFFDC11ED8ELL, (int64_t)0x733A8A2ALL, (int64_t)0xFFFFFFFF1E4CD77DLL, (int64_t)0x73BFD1D6LL, (int64_t)0x94042EE7LL, (int64_t)0xFFFFFFFF52134449LL, (int64_t)0xFFFFFFFFDD34874ALL, (int64_t)0xFFFFFFFF87EA8692LL, (int64_t)0x5C06306ELL, (int64_t)0xB294A08FEF69LL, (int64_t)0x8131C3BF2B23LL, (int64_t)0xFFFEABF9526F8733LL, (int64_t)0xFFFEA5414761B843LL, (int64_t)0xCB83942060C7LL, (int64_t)0x141C5F4870CCBLL, (int64_t)0xFFFEB1C988E80654LL, (int64_t)0xFFFEC0DFD06D3500LL, (int64_t)0x16A398D8048B3LL, (int64_t)0x104F6333BCCACLL, (int64_t)0xFFFFEC56A25C4CEELL, (int64_t)0xFFFFC2C2523E9DC5LL, (int64_t)0xFFFF951580A0876BLL, (int64_t)0xFFFFD89ECA2EB2FELL, (int64_t)0x5E01BBFC3C43LL, (int64_t)0xFFFE90D7FED05070LL, (int64_t)0xFFFF7A76DA28E32ELL, (int64_t)0x896CD2308C99LL, (int64_t)0xC2F03A4A7D20LL, (int64_t)0xFFFEA980A18F86C2LL, (int64_t)0xFFFEAA4DDAF4495CLL, (int64_t)0x7880164361C0LL, (int64_t)0x615B49B0EC76LL, (int64_t)0xFFFFEDFA7ED82535LL, (int64_t)0xFFFEE79A7B2C4175LL, (int64_t)0x2058DF1FD671LL, (int64_t)0xA2F7B451D42FLL, (int64_t)0xFFFFB75F9FD46700LL, (int64_t)0xC569D7B37813LL, (int64_t)0x128B059296920LL, (int64_t)0x1522275429104LL, (int64_t)0x129707E346FA1LL, (int64_t)0x1403DDC847E3BLL, (int64_t)0x890CC50853D9LL, (int64_t)0xF55C324D6AB86400LL, (int64_t)0x296645D0D2CC8C00LL, (int64_t)0xE7A9B0C14F536200LL, (int64_t)0xE12BB83442577000LL, (int64_t)0x270273D7CE04E800LL, (int64_t)0xD11FF8B7223FF000LL, (int64_t)0xD5D169802BA2D400LL, (int64_t)0xDAAF16C1355E2E00LL, (int64_t)0x39742EB0F2E85C00LL, (int64_t)0xD8D0CCCA31A19A00LL, (int64_t)0xF556F4E76AADEA00LL, (int64_t)0xDE3738F93C6E7200LL, (int64_t)0xC888DD431111BA00LL, (int64_t)0xE34257254684AE00LL, (int64_t)0xF82C47D070589000LL, (int64_t)0x19179ADEB22F3400LL, (int64_t)0xFAE1F0BF75C3E200LL, (int64_t)0xFE00CA7C7C019400LL, (int64_t)0x175CD2CDAEB9A400LL, (int64_t)0xDA1804EB34300A00LL, (int64_t)0xEFD4FA89DFAA000LL, (int64_t)0xC9840FC713082000LL, (int64_t)0xC5375FC60A6EC000LL, (int64_t)0xB3E261B967C4C00LL, (int64_t)0x352124FAEA424800LL, (int64_t)0xDC0B41C838168400LL, (int64_t)0xDA04CADE34099600LL, (int64_t)0x152446A0AA488C00LL, (int64_t)0xEB5EC6DB56BD8E00LL, (int64_t)0xCABCC6F515798E00LL, (int64_t)0x335B227BE6B64400LL, (int64_t)0xC0BD1D29817A400LL };
		static const int32_t output0[] = { (int32_t)0x0, (int32_t)0x0, (int32_t)0x0, (int32_t)0x1, (int32_t)0x1, (int32_t)0x0, (int32_t)0x0, (int32_t)0x0, (int32_t)0x0, (int32_t)0xFFFFFFFF, (int32_t)0x0, (int32_t)0xFFFFFFFF, (int32_t)0x0, (int32_t)0xFFFFFFFF, (int32_t)0x0, (int32_t)0x0, (int32_t)0x0, (int32_t)0x0, (int32_t)0xFFFFFFFF, (int32_t)0xFFFFFFFF, (int32_t)0x0, (int32_t)0x1, (int32_t)0xFFFFFFFF, (int32_t)0x1, (int32_t)0x0, (int32_t)0x0, (int32_t)0x0, (int32_t)0xFFFFFFFF, (int32_t)0x0, (int32_t)0x1, (int32_t)0xFFFFFFFF, (int32_t)0x0, (int32_t)0x0, (int32_t)0x0, (int32_t)0xB295, (int32_t)0x8132, (int32_t)0xFFFEABF9, (int32_t)0xFFFEA541, (int32_t)0xCB84, (int32_t)0x141C6, (int32_t)0xFFFEB1CA, (int32_t)0xFFFEC0E0, (int32_t)0x16A3A, (int32_t)0x104F6, (int32_t)0xFFFFEC57, (int32_t)0xFFFFC2C2, (int32_t)0xFFFF9516, (int32_t)0xFFFFD89F, (int32_t)0x5E02, (int32_t)0xFFFE90D8, (int32_t)0xFFFF7A77, (int32_t)0x896D, (int32_t)0xC2F0, (int32_t)0xFFFEA981, (int32_t)0xFFFEAA4E, (int32_t)0x7880, (int32_t)0x615B, (int32_t)0xFFFFEDFA, (int32_t)0xFFFEE79A, (int32_t)0x2059, (int32_t)0xA2F8, (int32_t)0xFFFFB760, (int32_t)0xC56A, (int32_t)0x128B0, (int32_t)0x15222, (int32_t)0x12970, (int32_t)0x1403E, (int32_t)0x890D, (int32_t)0xF55C324D, (int32_t)0x296645D1, (int32_t)0xE7A9B0C1, (int32_t)0xE12BB834, (int32_t)0x270273D8, (int32_t)0xD11FF8B7, (int32_t)0xD5D16980, (int32_t)0xDAAF16C1, (int32_t)0x39742EB1, (int32_t)0xD8D0CCCA, (int32_t)0xF556F4E7, (int32_t)0xDE3738F9, (int32_t)0xC888DD43, (int32_t)0xE3425725, (int32_t)0xF82C47D0, (int32_t)0x19179ADF, (int32_t)0xFAE1F0BF, (int32_t)0xFE00CA7C, (int32_t)0x175CD2CE, (int32_t)0xDA1804EB, (int32_t)0xEFD4FA9, (int32_t)0xC9840FC7, (int32_t)0xC5375FC6, (int32_t)0xB3E261C, (int32_t)0x352124FB, (int32_t)0xDC0B41C8, (int32_t)0xDA04CADE, (int32_t)0x152446A1, (int32_t)0xEB5EC6DB, (int32_t)0xCABCC6F5, (int32_t)0x335B227C, (int32_t)0xC0BD1D3 };
		for (int ndx = 0; ndx < 100; ndx++)
			Util::Check("Fixed64::RoundToInt", Fixed64::RoundToInt(input0[ndx]), output0[ndx], input0[ndx]);
	}

	// Fixed32.RoundToInt()
	static void Fixed32_RoundToInt()
	{
		static const int32_t input0[] = { (int32_t)0x5FD, (int32_t)0x601D, (int32_t)0xFFFF10C1, (int32_t)0x9802, (int32_t)0x70BA, (int32_t)0xFFFF23CE, (int32_t)0xBE06, (int32_t)0x3B41, (int32_t)0xC844, (int32_t)0xB554, (int32_t)0x6927, (int32_t)0xFFFFDC8B, (int32_t)0xFFFF1ED5, (int32_t)0xCF60, (int32_t)0xFFFFF310, (int32_t)0xFFFFDDC5, (int32_t)0xEFB6, (int32_t)0xFFFF1D03, (int32_t)0xFFFFD6E9, (int32_t)0xFFFFE597, (int32_t)0xFFFF657B, (int32_t)0x697F, (int32_t)0xFFFF1DDC, (int32_t)0xFFFFAF61, (int32_t)0x90BB, (int32_t)0x71AE, (int32_t)0xFFFFB02B, (int32_t)0x2BDC, (int32_t)0xDC6C, (int32_t)0x2B4, (int32_t)0xBD41, (int32_t)0xBADD, (int32_t)0xFFFF95D7, (int32_t)0xA52C, (int32_t)0x80000000, (int32_t)0xA16E9EE2, (int32_t)0x80000000, (int32_t)0x6EE74174, (int32_t)0x80000000, (int32_t)0xAA22858B, (int32_t)0x587B79BC, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x99A01305, (int32_t)0x55F19A4D, (int32_t)0x15939285, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0xDB211C98, (int32_t)0xAEADB298, (int32_t)0x80000000, (int32_t)0x65190D42, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0xA6D53DCA, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0xD72054F1, (int32_t)0xCC4256A3, (int32_t)0xD85EC609, (int32_t)0xE9C1EBDC, (int32_t)0xCA5791DA, (int32_t)0xC3CB89AA, (int32_t)0x2AE66268, (int32_t)0xD0D23437, (int32_t)0xF25911E1, (int32_t)0xE5CED047, (int32_t)0x3C9E0A99, (int32_t)0xD61A27F1, (int32_t)0xD8E28F3C, (int32_t)0xEAC18628, (int32_t)0x2BAFCFF1, (int32_t)0xD4876711, (int32_t)0x277667AC, (int32_t)0xB320CEC, (int32_t)0xD9B4B86A, (int32_t)0x2B8021F9, (int32_t)0xF69E01F9, (int32_t)0x3598308A, (int32_t)0x1FF12F0A, (int32_t)0x6BA477B, (int32_t)0x1059DD5F, (int32_t)0x3D25D3D8, (int32_t)0x1505BE6C, (int32_t)0xE9F4D711, (int32_t)0xF0D7540C, (int32_t)0x36A2C158, (int32_t)0x23A3542A, (int32_t)0x3A787CD };
		static const int32_t output0[] = { (int32_t)0x0, (int32_t)0x0, (int32_t)0xFFFFFFFF, (int32_t)0x1, (int32_t)0x0, (int32_t)0xFFFFFFFF, (int32_t)0x1, (int32_t)0x0, (int32_t)0x1, (int32_t)0x1, (int32_t)0x0, (int32_t)0x0, (int32_t)0xFFFFFFFF, (int32_t)0x1, (int32_t)0x0, (int32_t)0x0, (int32_t)0x1, (int32_t)0xFFFFFFFF, (int32_t)0x0, (int32_t)0x0, (int32_t)0xFFFFFFFF, (int32_t)0x0, (int32_t)0xFFFFFFFF, (int32_t)0x0, (int32_t)0x1, (int32_t)0x0, (int32_t)0x0, (int32_t)0x0, (int32_t)0x1, (int32_t)0x0, (int32_t)0x1, (int32_t)0x1, (int32_t)0x0, (int32_t)0x1, (int32_t)0xFFFF8000, (int32_t)0xFFFFA16F, (int32_t)0xFFFF8000, (int32_t)0x6EE7, (int32_t)0xFFFF8000, (int32_t)0xFFFFAA23, (int32_t)0x587B, (int32_t)0xFFFF8000, (int32_t)0xFFFF8000, (int32_t)0xFFFF8000, (int32_t)0xFFFF99A0, (int32_t)0x55F2, (int32_t)0x1594, (int32_t)0xFFFF8000, (int32_t)0xFFFF8000, (int32_t)0xFFFF8000, (int32_t)0xFFFF8000, (int32_t)0xFFFF8000, (int32_t)0xFFFF8000, (int32_t)0xFFFFDB21, (int32_t)0xFFFFAEAE, (int32_t)0xFFFF8000, (int32_t)0x6519, (int32_t)0xFFFF8000, (int32_t)0xFFFF8000, (int32_t)0xFFFF8000, (int32_t)0xFFFF8000, (int32_t)0xFFFF8000, (int32_t)0xFFFF8000, (int32_t)0xFFFFA6D5, (int32_t)0xFFFF8000, (int32_t)0xFFFF8000, (int32_t)0xFFFF8000, (int32_t)0xFFFF8000, (int32_t)0xFFFFD720, (int32_t)0xFFFFCC42, (int32_t)0xFFFFD85F, (int32_t)0xFFFFE9C2, (int32_t)0xFFFFCA58, (int32_t)0xFFFFC3CC, (int32_t)0x2AE6, (int32_t)0xFFFFD0D2, (int32_t)0xFFFFF259, (int32_t)0xFFFFE5CF, (int32_t)0x3C9E, (int32_t)0xFFFFD61A, (int32_t)0xFFFFD8E3, (int32_t)0xFFFFEAC2, (int32_t)0x2BB0, (int32_t)0xFFFFD487, (int32_t)0x2776, (int32_t)0xB32, (int32_t)0xFFFFD9B5, (int32_t)0x2B80, (int32_t)0xFFFFF69E, (int32_t)0x3598, (int32_t)0x1FF1, (int32_t)0x6BA, (int32_t)0x105A, (int32_t)0x3D26, (int32_t)0x1506, (int32_t)0xFFFFE9F5, (int32_t)0xFFFFF0D7, (int32_t)0x36A3, (int32_t)0x23A3, (int32_t)0x3A8 };
		for (int ndx = 0; ndx < 100; ndx++)
			Util::Check("Fixed32::RoundToInt", Fixed32::RoundToInt(input0[ndx]), output0[ndx], input0[ndx]);
	}

	// Fixed64.Abs()
	static void Fixed64_Abs()
	{
		static const int64_t input0[] = { (int64_t)0xFFFFFFFFF19F1AF6LL, (int64_t)0xFFFFFFFF947BCF3ALL, (int64_t)0xA8A2E087LL, (int64_t)0x4C142DEELL, (int64_t)0x28D40302LL, (int64_t)0xFFFFFFFFBDD33D5ELL, (int64_t)0xFFFFFFFF671AC481LL, (int64_t)0x44DC96A6LL, (int64_t)0x3C3C97AELL, (int64_t)0xFFFFFFFF876BB39ALL, (int64_t)0xFFFFFFFFD31A0236LL, (int64_t)0xFFFFFFFFAB0626DELL, (int64_t)0x6EE7AFDELL, (int64_t)0xAEDE690BLL, (int64_t)0x9B823BD3LL, (int64_t)0xFFFFFFFFC89D2596LL, (int64_t)0xFFFFFFFFE36A42F2LL, (int64_t)0xCB70592LL, (int64_t)0x27B6A2B2LL, (int64_t)0xFFFFFFFFCB4B237ELL, (int64_t)0x47775ED6LL, (int64_t)0xFFFFFFFF98B3558ELL, (int64_t)0x9F30168FLL, (int64_t)0xFFFFFFFF86209196LL, (int64_t)0xFFFFFFFFB1449E5ELL, (int64_t)0x4691FA32LL, (int64_t)0x65A039EELL, (int64_t)0xFFFFFFFF34C6F801LL, (int64_t)0xFFFFFFFFBB172CF2LL, (int64_t)0x3C62D62LL, (int64_t)0x7FEB80AALL, (int64_t)0xFFFFFFFFEED9421ELL, (int64_t)0x8ADF06ELL, (int64_t)0xFFFFFFFFE3DA0B32LL, (int64_t)0x9CD73E3FF3EELL, (int64_t)0x13BF164243322LL, (int64_t)0x3A4A5749909LL, (int64_t)0xFFFF0FEE481B641DLL, (int64_t)0x3EFFED74B8BFLL, (int64_t)0xFFFFCF35BC45782CLL, (int64_t)0xFFFFA701C3CAF944LL, (int64_t)0x33D2702E3A64LL, (int64_t)0xFFFF26F79A6CCE30LL, (int64_t)0xFFFEF818B01B5A72LL, (int64_t)0x4FFD4A8C7BFLL, (int64_t)0xFFFFBDFF4E91A0BFLL, (int64_t)0x10675AE9029ABLL, (int64_t)0xDF985E9F3270LL, (int64_t)0xFFFF014DC8FAA9DCLL, (int64_t)0xFFFF4E32C548E326LL, (int64_t)0x12BB2DE3EFC25LL, (int64_t)0x116B37D9769A7LL, (int64_t)0xFFFF8A3F5317EFBFLL, (int64_t)0xFFFFA350DA2F9762LL, (int64_t)0x12FE18149CE83LL, (int64_t)0xFFFF010EC218E05ELL, (int64_t)0xFFFFEFAAAAA64596LL, (int64_t)0x34A815B66C90LL, (int64_t)0xFFFF6598F670F272LL, (int64_t)0x1593E02B2073CLL, (int64_t)0x8694D71CC5E9LL, (int64_t)0xFFFEC62B1DEB6997LL, (int64_t)0xFFFF4B98DA6BECF2LL, (int64_t)0xFFFECF87AFF2E3D0LL, (int64_t)0xB71FDB67FA3LL, (int64_t)0x15C494D1C4A52LL, (int64_t)0xF7B7DA0F882FLL, (int64_t)0xFFFF4D8DB1669BDCLL, (int64_t)0xD2053910240A7200LL, (int64_t)0x331CF387E639E800LL, (int64_t)0x318E7B5FE31CF800LL, (int64_t)0xE02FCC46405F9800LL, (int64_t)0x38DB5B14F1B6B800LL, (int64_t)0xD1EC105723D82000LL, (int64_t)0xC1676D1302CEDA00LL, (int64_t)0xC96044F612C08A00LL, (int64_t)0xC9BBD9551377B200LL, (int64_t)0x1308F091A611E000LL, (int64_t)0x20B67467C16CE800LL, (int64_t)0x37218243EE430400LL, (int64_t)0x26A42308CD484800LL, (int64_t)0x34C5CB5EE98B9800LL, (int64_t)0x36EC791BEDD8F400LL, (int64_t)0xCBE7563517CEAC00LL, (int64_t)0xFD745049FAE8C00LL, (int64_t)0x32514D83E4A29C00LL, (int64_t)0xCF0137DB1E027000LL, (int64_t)0xD15AF0D022B5E200LL, (int64_t)0x72CD2B48E59A400LL, (int64_t)0x3776FD886EEE000LL, (int64_t)0xF670AD426CE15A00LL, (int64_t)0x37F83A48EFF07400LL, (int64_t)0x31F6E091E3EDC000LL, (int64_t)0x11C1E41BA383C800LL, (int64_t)0x21F4D779C3E9B000LL, (int64_t)0xE4D668AC49ACD200LL, (int64_t)0xE60C38524C187000LL, (int64_t)0xCE53617B1CA6C400LL, (int64_t)0x12E30856A5C61000LL, (int64_t)0x7C17FF78F830000LL };
		static const int64_t output0[] = { (int64_t)0xE60E50ALL, (int64_t)0x6B8430C6LL, (int64_t)0xA8A2E087LL, (int64_t)0x4C142DEELL, (int64_t)0x28D40302LL, (int64_t)0x422CC2A2LL, (int64_t)0x98E53B7FLL, (int64_t)0x44DC96A6LL, (int64_t)0x3C3C97AELL, (int64_t)0x78944C66LL, (int64_t)0x2CE5FDCALL, (int64_t)0x54F9D922LL, (int64_t)0x6EE7AFDELL, (int64_t)0xAEDE690BLL, (int64_t)0x9B823BD3LL, (int64_t)0x3762DA6ALL, (int64_t)0x1C95BD0ELL, (int64_t)0xCB70592LL, (int64_t)0x27B6A2B2LL, (int64_t)0x34B4DC82LL, (int64_t)0x47775ED6LL, (int64_t)0x674CAA72LL, (int64_t)0x9F30168FLL, (int64_t)0x79DF6E6ALL, (int64_t)0x4EBB61A2LL, (int64_t)0x4691FA32LL, (int64_t)0x65A039EELL, (int64_t)0xCB3907FFLL, (int64_t)0x44E8D30ELL, (int64_t)0x3C62D62LL, (int64_t)0x7FEB80AALL, (int64_t)0x1126BDE2LL, (int64_t)0x8ADF06ELL, (int64_t)0x1C25F4CELL, (int64_t)0x9CD73E3FF3EELL, (int64_t)0x13BF164243322LL, (int64_t)0x3A4A5749909LL, (int64_t)0xF011B7E49BE3LL, (int64_t)0x3EFFED74B8BFLL, (int64_t)0x30CA43BA87D4LL, (int64_t)0x58FE3C3506BCLL, (int64_t)0x33D2702E3A64LL, (int64_t)0xD908659331D0LL, (int64_t)0x107E74FE4A58ELL, (int64_t)0x4FFD4A8C7BFLL, (int64_t)0x4200B16E5F41LL, (int64_t)0x10675AE9029ABLL, (int64_t)0xDF985E9F3270LL, (int64_t)0xFEB237055624LL, (int64_t)0xB1CD3AB71CDALL, (int64_t)0x12BB2DE3EFC25LL, (int64_t)0x116B37D9769A7LL, (int64_t)0x75C0ACE81041LL, (int64_t)0x5CAF25D0689ELL, (int64_t)0x12FE18149CE83LL, (int64_t)0xFEF13DE71FA2LL, (int64_t)0x10555559BA6ALL, (int64_t)0x34A815B66C90LL, (int64_t)0x9A67098F0D8ELL, (int64_t)0x1593E02B2073CLL, (int64_t)0x8694D71CC5E9LL, (int64_t)0x139D4E2149669LL, (int64_t)0xB4672594130ELL, (int64_t)0x13078500D1C30LL, (int64_t)0xB71FDB67FA3LL, (int64_t)0x15C494D1C4A52LL, (int64_t)0xF7B7DA0F882FLL, (int64_t)0xB2724E996424LL, (int64_t)0x2DFAC6EFDBF58E00LL, (int64_t)0x331CF387E639E800LL, (int64_t)0x318E7B5FE31CF800LL, (int64_t)0x1FD033B9BFA06800LL, (int64_t)0x38DB5B14F1B6B800LL, (int64_t)0x2E13EFA8DC27E000LL, (int64_t)0x3E9892ECFD312600LL, (int64_t)0x369FBB09ED3F7600LL, (int64_t)0x364426AAEC884E00LL, (int64_t)0x1308F091A611E000LL, (int64_t)0x20B67467C16CE800LL, (int64_t)0x37218243EE430400LL, (int64_t)0x26A42308CD484800LL, (int64_t)0x34C5CB5EE98B9800LL, (int64_t)0x36EC791BEDD8F400LL, (int64_t)0x3418A9CAE8315400LL, (int64_t)0xFD745049FAE8C00LL, (int64_t)0x32514D83E4A29C00LL, (int64_t)0x30FEC824E1FD9000LL, (int64_t)0x2EA50F2FDD4A1E00LL, (int64_t)0x72CD2B48E59A400LL, (int64_t)0x3776FD886EEE000LL, (int64_t)0x98F52BD931EA600LL, (int64_t)0x37F83A48EFF07400LL, (int64_t)0x31F6E091E3EDC000LL, (int64_t)0x11C1E41BA383C800LL, (int64_t)0x21F4D779C3E9B000LL, (int64_t)0x1B299753B6532E00LL, (int64_t)0x19F3C7ADB3E79000LL, (int64_t)0x31AC9E84E3593C00LL, (int64_t)0x12E30856A5C61000LL, (int64_t)0x7C17FF78F830000LL };
		for (int ndx = 0; ndx < 100; ndx++)
			Util::Check("Fixed64::Abs", Fixed64::Abs(input0[ndx]), output0[ndx], input0[ndx]);
	}

	// Fixed32.Abs()
	static void Fixed32_Abs()
	{
		static const int32_t input0[] = { (int32_t)0x3266, (int32_t)0x20F3, (int32_t)0x4A74, (int32_t)0xFFFF8CA2, (int32_t)0xFFFFC540, (int32_t)0x43A9, (int32_t)0xD338, (int32_t)0xFFFF6B25, (int32_t)0xFFFFBDA5, (int32_t)0xA1A5, (int32_t)0xFFFF31FD, (int32_t)0xA927, (int32_t)0x9FA8, (int32_t)0xFFFFBE4A, (int32_t)0xFFFF47B2, (int32_t)0x851B, (int32_t)0xFFFF56A2, (int32_t)0xFFFF5A29, (int32_t)0xFFFFF91A, (int32_t)0x3E3A, (int32_t)0xA83B, (int32_t)0x5CEC, (int32_t)0x6E5A, (int32_t)0x3A37, (int32_t)0xFFFFF2B2, (int32_t)0xE659, (int32_t)0xFFFFB8E4, (int32_t)0xFFFF9C66, (int32_t)0xFFFFBFDD, (int32_t)0x7244, (int32_t)0x8D50, (int32_t)0xEDA1, (int32_t)0xFFFF0098, (int32_t)0xFFFF63D4, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x78A4BC9B, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0xC8E2C40C, (int32_t)0x4A2A1F28, (int32_t)0x80000000, (int32_t)0xE9A60CD, (int32_t)0xFEFCB7E6, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x61F7A147, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0xCD7F0CFE, (int32_t)0x80000000, (int32_t)0x53A7B983, (int32_t)0x80000000, (int32_t)0x7303F996, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x5B4B624C, (int32_t)0xC50A7715, (int32_t)0x33852E7A, (int32_t)0xFF1E342B, (int32_t)0x1E45244, (int32_t)0xFBF2A7AB, (int32_t)0xFF598A98, (int32_t)0x120BA945, (int32_t)0x35D6C8A4, (int32_t)0x35494A33, (int32_t)0x3CD32EE3, (int32_t)0xD7957165, (int32_t)0x3085969B, (int32_t)0x29882622, (int32_t)0x2BD46CC2, (int32_t)0x2743F208, (int32_t)0xEF4956E1, (int32_t)0xD6315BE, (int32_t)0x13D1D889, (int32_t)0xEB5B6BEE, (int32_t)0x3CD19F1B, (int32_t)0xFB426CA4, (int32_t)0xF5296FA1, (int32_t)0xF1C0D4CF, (int32_t)0xDE19807E, (int32_t)0x2D481CA8, (int32_t)0xE2DDA3FE, (int32_t)0x1C3B3C9D, (int32_t)0xEFCE555A, (int32_t)0xC966600F, (int32_t)0xCF19B8C7, (int32_t)0x19AE0914, (int32_t)0xE5E1B7A9 };
		static const int32_t output0[] = { (int32_t)0x3266, (int32_t)0x20F3, (int32_t)0x4A74, (int32_t)0x735E, (int32_t)0x3AC0, (int32_t)0x43A9, (int32_t)0xD338, (int32_t)0x94DB, (int32_t)0x425B, (int32_t)0xA1A5, (int32_t)0xCE03, (int32_t)0xA927, (int32_t)0x9FA8, (int32_t)0x41B6, (int32_t)0xB84E, (int32_t)0x851B, (int32_t)0xA95E, (int32_t)0xA5D7, (int32_t)0x6E6, (int32_t)0x3E3A, (int32_t)0xA83B, (int32_t)0x5CEC, (int32_t)0x6E5A, (int32_t)0x3A37, (int32_t)0xD4E, (int32_t)0xE659, (int32_t)0x471C, (int32_t)0x639A, (int32_t)0x4023, (int32_t)0x7244, (int32_t)0x8D50, (int32_t)0xEDA1, (int32_t)0xFF68, (int32_t)0x9C2C, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x78A4BC9B, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x371D3BF4, (int32_t)0x4A2A1F28, (int32_t)0x80000000, (int32_t)0xE9A60CD, (int32_t)0x103481A, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x61F7A147, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x3280F302, (int32_t)0x80000000, (int32_t)0x53A7B983, (int32_t)0x80000000, (int32_t)0x7303F996, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x5B4B624C, (int32_t)0x3AF588EB, (int32_t)0x33852E7A, (int32_t)0xE1CBD5, (int32_t)0x1E45244, (int32_t)0x40D5855, (int32_t)0xA67568, (int32_t)0x120BA945, (int32_t)0x35D6C8A4, (int32_t)0x35494A33, (int32_t)0x3CD32EE3, (int32_t)0x286A8E9B, (int32_t)0x3085969B, (int32_t)0x29882622, (int32_t)0x2BD46CC2, (int32_t)0x2743F208, (int32_t)0x10B6A91F, (int32_t)0xD6315BE, (int32_t)0x13D1D889, (int32_t)0x14A49412, (int32_t)0x3CD19F1B, (int32_t)0x4BD935C, (int32_t)0xAD6905F, (int32_t)0xE3F2B31, (int32_t)0x21E67F82, (int32_t)0x2D481CA8, (int32_t)0x1D225C02, (int32_t)0x1C3B3C9D, (int32_t)0x1031AAA6, (int32_t)0x36999FF1, (int32_t)0x30E64739, (int32_t)0x19AE0914, (int32_t)0x1A1E4857 };
		for (int ndx = 0; ndx < 100; ndx++)
			Util::Check("Fixed32::Abs", Fixed32::Abs(input0[ndx]), output0[ndx], input0[ndx]);
	}

	// Fixed64.Nabs()
	static void Fixed64_Nabs()
	{
		static const int64_t input0[] = { (int64_t)0x880A692FLL, (int64_t)0x463C03ELL, (int64_t)0xFFFFFFFFF5681F76LL, (int64_t)0x314159D6LL, (int64_t)0x63EB74ALL, (int64_t)0x3526718ELL, (int64_t)0x4E3E31BELL, (int64_t)0xFFFFFFFF42CE0555LL, (int64_t)0xFFFFFFFFC5227F66LL, (int64_t)0x9F6EFC9FLL, (int64_t)0xFFFFFFFF0054C2E1LL, (int64_t)0xBF4CB3F7LL, (int64_t)0xB1E73DC3LL, (int64_t)0xD7D9D1EBLL, (int64_t)0x38C649B6LL, (int64_t)0xFFFFFFFFDB74865ALL, (int64_t)0x99C33A3FLL, (int64_t)0xFFFFFFFFEE21E25ELL, (int64_t)0xFFFFFFFF15D4104DLL, (int64_t)0xFFFFFFFFC50E17D2LL, (int64_t)0x96ECD0F7LL, (int64_t)0xB549D907LL, (int64_t)0xFFFFFFFF4ECAF905LL, (int64_t)0x3F841DCELL, (int64_t)0x71166B2LL, (int64_t)0xFFFFFFFF8412CEB6LL, (int64_t)0x5270D66ELL, (int64_t)0xFFFFFFFF64540EB5LL, (int64_t)0x8C7937E7LL, (int64_t)0xFFFFFFFF88F54FB2LL, (int64_t)0xB1C1A25BLL, (int64_t)0x98BE45B7LL, (int64_t)0xFFFFFFFF8C94973ELL, (int64_t)0xC6CEE6EFLL, (int64_t)0xFFFED1F278FEF925LL, (int64_t)0xFFFF702AC78CE516LL, (int64_t)0xFFFF950E08D1EBDDLL, (int64_t)0xFFFF1DDFDD0E0080LL, (int64_t)0x11715AE5313EBLL, (int64_t)0xFFFE79FB7B31ECB7LL, (int64_t)0xFFFE7AF4A57CB42ALL, (int64_t)0xFFFF1C11E15A0164LL, (int64_t)0x4667A9FBEF0FLL, (int64_t)0x766A31DB3594LL, (int64_t)0xFFFFBD5811F58BF1LL, (int64_t)0xBC508C22CCALL, (int64_t)0xFFFFA8412E1E1BC3LL, (int64_t)0x151A3E4FC5907LL, (int64_t)0x7E2C392F5718LL, (int64_t)0xFFFF5D72DFF801A6LL, (int64_t)0x3929572D4E12LL, (int64_t)0x54A2E53D6D85LL, (int64_t)0xFFFEB43BC8E6FD38LL, (int64_t)0xFFFF700E1954BD5DLL, (int64_t)0xEB11198816LL, (int64_t)0x1419513F67EEALL, (int64_t)0xFFFF8E783EFDFD31LL, (int64_t)0x1158B090616D6LL, (int64_t)0xFFFEB9BF6A614F3FLL, (int64_t)0xFFFF40003FC461C1LL, (int64_t)0x159EE5BD35A9CLL, (int64_t)0xFFFFDE4CE3B6DEDALL, (int64_t)0xFFFF8F9725F517EFLL, (int64_t)0xFFFED53272EAC025LL, (int64_t)0x16AAAA3DBCA95LL, (int64_t)0xFFFF177000BA6521LL, (int64_t)0x4D642ED5EB08LL, (int64_t)0x166BA037CFCB4LL, (int64_t)0x2773782ACEE6F000LL, (int64_t)0xE5C25C5A4B84B800LL, (int64_t)0xC862BCB110C57A00LL, (int64_t)0xB7D32FC96FA6400LL, (int64_t)0xDCECF899B9DA000LL, (int64_t)0xC55B8AB80AB71600LL, (int64_t)0xF10139DA62027400LL, (int64_t)0xB1349A596269400LL, (int64_t)0xE1C976FF4392EE00LL, (int64_t)0x4C10C580982000LL, (int64_t)0xDACCC88B35999000LL, (int64_t)0x3FD6B1DBFFAD6400LL, (int64_t)0x2F6502A0DECA0400LL, (int64_t)0x1D4A8D6DBA951C00LL, (int64_t)0x468F21D88D1E400LL, (int64_t)0xFDC032F27B806600LL, (int64_t)0x18DFCD22B1BF9C00LL, (int64_t)0xDE9281203D250200LL, (int64_t)0x1C8ADCBAB915B800LL, (int64_t)0x3ABAA2AEF5754400LL, (int64_t)0xF18D3651631A6C00LL, (int64_t)0xD9D2D84633A5B000LL, (int64_t)0x3B090444F6120800LL, (int64_t)0x101647B8202C800LL, (int64_t)0xD0679ECA20CF3E00LL, (int64_t)0xD2EAEE89A5D5C00LL, (int64_t)0xC76C12930ED82600LL, (int64_t)0x5C7C3578B8F8800LL, (int64_t)0x2D12B73CDA257000LL, (int64_t)0xFC7DB35578FB6600LL, (int64_t)0x17FB56EAAFF6AC00LL, (int64_t)0xDB2E9F9E365D4000LL };
		static const int64_t output0[] = { (int64_t)0xFFFFFFFF77F596D1LL, (int64_t)0xFFFFFFFFFB9C3FC2LL, (int64_t)0xFFFFFFFFF5681F76LL, (int64_t)0xFFFFFFFFCEBEA62ALL, (int64_t)0xFFFFFFFFF9C148B6LL, (int64_t)0xFFFFFFFFCAD98E72LL, (int64_t)0xFFFFFFFFB1C1CE42LL, (int64_t)0xFFFFFFFF42CE0555LL, (int64_t)0xFFFFFFFFC5227F66LL, (int64_t)0xFFFFFFFF60910361LL, (int64_t)0xFFFFFFFF0054C2E1LL, (int64_t)0xFFFFFFFF40B34C09LL, (int64_t)0xFFFFFFFF4E18C23DLL, (int64_t)0xFFFFFFFF28262E15LL, (int64_t)0xFFFFFFFFC739B64ALL, (int64_t)0xFFFFFFFFDB74865ALL, (int64_t)0xFFFFFFFF663CC5C1LL, (int64_t)0xFFFFFFFFEE21E25ELL, (int64_t)0xFFFFFFFF15D4104DLL, (int64_t)0xFFFFFFFFC50E17D2LL, (int64_t)0xFFFFFFFF69132F09LL, (int64_t)0xFFFFFFFF4AB626F9LL, (int64_t)0xFFFFFFFF4ECAF905LL, (int64_t)0xFFFFFFFFC07BE232LL, (int64_t)0xFFFFFFFFF8EE994ELL, (int64_t)0xFFFFFFFF8412CEB6LL, (int64_t)0xFFFFFFFFAD8F2992LL, (int64_t)0xFFFFFFFF64540EB5LL, (int64_t)0xFFFFFFFF7386C819LL, (int64_t)0xFFFFFFFF88F54FB2LL, (int64_t)0xFFFFFFFF4E3E5DA5LL, (int64_t)0xFFFFFFFF6741BA49LL, (int64_t)0xFFFFFFFF8C94973ELL, (int64_t)0xFFFFFFFF39311911LL, (int64_t)0xFFFED1F278FEF925LL, (int64_t)0xFFFF702AC78CE516LL, (int64_t)0xFFFF950E08D1EBDDLL, (int64_t)0xFFFF1DDFDD0E0080LL, (int64_t)0xFFFEE8EA51ACEC15LL, (int64_t)0xFFFE79FB7B31ECB7LL, (int64_t)0xFFFE7AF4A57CB42ALL, (int64_t)0xFFFF1C11E15A0164LL, (int64_t)0xFFFFB998560410F1LL, (int64_t)0xFFFF8995CE24CA6CLL, (int64_t)0xFFFFBD5811F58BF1LL, (int64_t)0xFFFFF43AF73DD336LL, (int64_t)0xFFFFA8412E1E1BC3LL, (int64_t)0xFFFEAE5C1B03A6F9LL, (int64_t)0xFFFF81D3C6D0A8E8LL, (int64_t)0xFFFF5D72DFF801A6LL, (int64_t)0xFFFFC6D6A8D2B1EELL, (int64_t)0xFFFFAB5D1AC2927BLL, (int64_t)0xFFFEB43BC8E6FD38LL, (int64_t)0xFFFF700E1954BD5DLL, (int64_t)0xFFFFFF14EEE677EALL, (int64_t)0xFFFEBE6AEC098116LL, (int64_t)0xFFFF8E783EFDFD31LL, (int64_t)0xFFFEEA74F6F9E92ALL, (int64_t)0xFFFEB9BF6A614F3FLL, (int64_t)0xFFFF40003FC461C1LL, (int64_t)0xFFFEA611A42CA564LL, (int64_t)0xFFFFDE4CE3B6DEDALL, (int64_t)0xFFFF8F9725F517EFLL, (int64_t)0xFFFED53272EAC025LL, (int64_t)0xFFFE95555C24356BLL, (int64_t)0xFFFF177000BA6521LL, (int64_t)0xFFFFB29BD12A14F8LL, (int64_t)0xFFFE9945FC83034CLL, (int64_t)0xD88C87D531191000LL, (int64_t)0xE5C25C5A4B84B800LL, (int64_t)0xC862BCB110C57A00LL, (int64_t)0xF482CD0369059C00LL, (int64_t)0xF231307664626000LL, (int64_t)0xC55B8AB80AB71600LL, (int64_t)0xF10139DA62027400LL, (int64_t)0xF4ECB65A69D96C00LL, (int64_t)0xE1C976FF4392EE00LL, (int64_t)0xFFB3EF3A7F67E000LL, (int64_t)0xDACCC88B35999000LL, (int64_t)0xC0294E2400529C00LL, (int64_t)0xD09AFD5F2135FC00LL, (int64_t)0xE2B57292456AE400LL, (int64_t)0xFB970DE2772E1C00LL, (int64_t)0xFDC032F27B806600LL, (int64_t)0xE72032DD4E406400LL, (int64_t)0xDE9281203D250200LL, (int64_t)0xE375234546EA4800LL, (int64_t)0xC5455D510A8ABC00LL, (int64_t)0xF18D3651631A6C00LL, (int64_t)0xD9D2D84633A5B000LL, (int64_t)0xC4F6FBBB09EDF800LL, (int64_t)0xFEFE9B847DFD3800LL, (int64_t)0xD0679ECA20CF3E00LL, (int64_t)0xF2D1511765A2A400LL, (int64_t)0xC76C12930ED82600LL, (int64_t)0xFA383CA874707800LL, (int64_t)0xD2ED48C325DA9000LL, (int64_t)0xFC7DB35578FB6600LL, (int64_t)0xE804A91550095400LL, (int64_t)0xDB2E9F9E365D4000LL };
		for (int ndx = 0; ndx < 100; ndx++)
			Util::Check("Fixed64::Nabs", Fixed64::Nabs(input0[ndx]), output0[ndx], input0[ndx]);
	}

	// Fixed32.Nabs()
	static void Fixed32_Nabs()
	{
		static const int32_t input0[] = { (int32_t)0xD4FE, (int32_t)0xFFFFDB67, (int32_t)0xFFFF3F79, (int32_t)0xFFFFBBA7, (int32_t)0xFFFF73EE, (int32_t)0xF781, (int32_t)0xFFFF003D, (int32_t)0xFFFF1125, (int32_t)0xDDA5, (int32_t)0xD44C, (int32_t)0x4B9A, (int32_t)0xB468, (int32_t)0x4AB0, (int32_t)0xFFFF2AD6, (int32_t)0xFFFFC498, (int32_t)0xFFFF6D8C, (int32_t)0xD846, (int32_t)0xBF54, (int32_t)0xFFFFD8AE, (int32_t)0x7363, (int32_t)0xFFFFF56C, (int32_t)0x47CD, (int32_t)0x24E3, (int32_t)0x3682, (int32_t)0xFFFFAAE6, (int32_t)0x1D85, (int32_t)0xFFFFEC57, (int32_t)0xFFFF0281, (int32_t)0xF7BD, (int32_t)0xACE5, (int32_t)0x7802, (int32_t)0x952F, (int32_t)0xA142, (int32_t)0xFE78, (int32_t)0x80000000, (int32_t)0xD27ED9EA, (int32_t)0x51EDE82B, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0xEA7E8BF0, (int32_t)0x2A4075DE, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x5FE567D0, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0xDACC022, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x110A7A74, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x744D4E35, (int32_t)0xC01E39B4, (int32_t)0x389A903A, (int32_t)0xDF67BEF, (int32_t)0x209259BC, (int32_t)0xF102BCC, (int32_t)0x1B2C0574, (int32_t)0xFE556C3E, (int32_t)0x25190FCF, (int32_t)0xEA20B16, (int32_t)0xCCBEE2D8, (int32_t)0xC6B474AA, (int32_t)0xDCCA74DA, (int32_t)0x190C2B98, (int32_t)0xF5634056, (int32_t)0x2497693C, (int32_t)0xD1E63EED, (int32_t)0xDB8349D1, (int32_t)0x20C2DB94, (int32_t)0x1EF98F1E, (int32_t)0x2D2E3860, (int32_t)0xE1CA4BDF, (int32_t)0x274AD517, (int32_t)0xAEAAB55, (int32_t)0xCB2ECD4D, (int32_t)0xD14EDFC9, (int32_t)0xB2ACE7B, (int32_t)0xD834B9BC, (int32_t)0xDF1471E8, (int32_t)0x11E800E9, (int32_t)0x372186A5, (int32_t)0xE5675531, (int32_t)0x195141DA };
		static const int32_t output0[] = { (int32_t)0xFFFF2B02, (int32_t)0xFFFFDB67, (int32_t)0xFFFF3F79, (int32_t)0xFFFFBBA7, (int32_t)0xFFFF73EE, (int32_t)0xFFFF087F, (int32_t)0xFFFF003D, (int32_t)0xFFFF1125, (int32_t)0xFFFF225B, (int32_t)0xFFFF2BB4, (int32_t)0xFFFFB466, (int32_t)0xFFFF4B98, (int32_t)0xFFFFB550, (int32_t)0xFFFF2AD6, (int32_t)0xFFFFC498, (int32_t)0xFFFF6D8C, (int32_t)0xFFFF27BA, (int32_t)0xFFFF40AC, (int32_t)0xFFFFD8AE, (int32_t)0xFFFF8C9D, (int32_t)0xFFFFF56C, (int32_t)0xFFFFB833, (int32_t)0xFFFFDB1D, (int32_t)0xFFFFC97E, (int32_t)0xFFFFAAE6, (int32_t)0xFFFFE27B, (int32_t)0xFFFFEC57, (int32_t)0xFFFF0281, (int32_t)0xFFFF0843, (int32_t)0xFFFF531B, (int32_t)0xFFFF87FE, (int32_t)0xFFFF6AD1, (int32_t)0xFFFF5EBE, (int32_t)0xFFFF0188, (int32_t)0x80000000, (int32_t)0xD27ED9EA, (int32_t)0xAE1217D5, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0xEA7E8BF0, (int32_t)0xD5BF8A22, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0xA01A9830, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0xF2533FDE, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0xEEF5858C, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x8BB2B1CB, (int32_t)0xC01E39B4, (int32_t)0xC7656FC6, (int32_t)0xF2098411, (int32_t)0xDF6DA644, (int32_t)0xF0EFD434, (int32_t)0xE4D3FA8C, (int32_t)0xFE556C3E, (int32_t)0xDAE6F031, (int32_t)0xF15DF4EA, (int32_t)0xCCBEE2D8, (int32_t)0xC6B474AA, (int32_t)0xDCCA74DA, (int32_t)0xE6F3D468, (int32_t)0xF5634056, (int32_t)0xDB6896C4, (int32_t)0xD1E63EED, (int32_t)0xDB8349D1, (int32_t)0xDF3D246C, (int32_t)0xE10670E2, (int32_t)0xD2D1C7A0, (int32_t)0xE1CA4BDF, (int32_t)0xD8B52AE9, (int32_t)0xF51554AB, (int32_t)0xCB2ECD4D, (int32_t)0xD14EDFC9, (int32_t)0xF4D53185, (int32_t)0xD834B9BC, (int32_t)0xDF1471E8, (int32_t)0xEE17FF17, (int32_t)0xC8DE795B, (int32_t)0xE5675531, (int32_t)0xE6AEBE26 };
		for (int ndx = 0; ndx < 100; ndx++)
			Util::Check("Fixed32::Nabs", Fixed32::Nabs(input0[ndx]), output0[ndx], input0[ndx]);
	}

	// Fixed64.Rcp()
	static void Fixed64_Rcp()
	{
		static const int64_t input0[] = { (int64_t)0xFFFFFFFFFFFFFFEBLL, (int64_t)0xFFFFFFFFFFFFDAEBLL, (int64_t)0x6LL, (int64_t)0x23CA9LL, (int64_t)0xFFFFFFFFFFFFA136LL, (int64_t)0xFFC6FAC43BE74846LL, (int64_t)0x529019LL, (int64_t)0x1DDD61LL, (int64_t)0xFFFFFFFFD4453EA4LL, (int64_t)0xFA6D52047F319F80LL, (int64_t)0x20363919374LL, (int64_t)0x79B6369A7B7ELL, (int64_t)0xFFFFFFFFE3686CB0LL, (int64_t)0xFFFBC3070715193ELL, (int64_t)0x141FF069529F4300LL, (int64_t)0x5ALL, (int64_t)0xFFFFFFFFFFFFDFF7LL, (int64_t)0xFEACCFF8DD1B9010LL, (int64_t)0x5F6F72329959FCLL, (int64_t)0x4F306D6LL, (int64_t)0xFFFFFFFFFFFFFF79LL, (int64_t)0xFFFFFFFFFFFFF531LL, (int64_t)0xE8BDE9LL, (int64_t)0x1047LL, (int64_t)0xFFFFFFFFFFB9FB0ALL, (int64_t)0xFFFFFFFEBA7CF1D9LL, (int64_t)0x540E98CD8DLL, (int64_t)0x3LL, (int64_t)0xFFFFFFFEA5836C42LL, (int64_t)0xFFFFFFFFFFFF7319LL, (int64_t)0x274LL, (int64_t)0x53814A45A01LL, (int64_t)0xFFFBD742E1D2E87ELL, (int64_t)0xFFFFFFFFFFC0AE54LL, (int64_t)0x2DBLL, (int64_t)0x3C893253LL, (int64_t)0xFFFFFFFFFF713A5CLL, (int64_t)0xFFFFFFFF42F967BDLL, (int64_t)0x113014864E487C0LL, (int64_t)0x2D0A2DLL, (int64_t)0xFFFFFFFFFE95A4B0LL, (int64_t)0xFFFFFFFFFDDA15ACLL, (int64_t)0xACE659LL, (int64_t)0xECFDDLL, (int64_t)0xFFFFFFFFFFFFFDF8LL, (int64_t)0xFFF5BABDBC467A59LL, (int64_t)0x5F9CEAB4E0LL, (int64_t)0x13B35BLL, (int64_t)0xFFFFFFBC6F2E88A5LL, (int64_t)0xFFFFFFFFFFFFFFDBLL, (int64_t)0x4LL, (int64_t)0x26843D3D5D14LL, (int64_t)0xFFFFFFFFFFFFFFF8LL, (int64_t)0xFFC7E41CC01E425CLL, (int64_t)0x12154C0F7ALL, (int64_t)0x7FA6815C406904LL, (int64_t)0xFFF5CD86C3A1BABCLL, (int64_t)0xFFE66AB55CE21F29LL, (int64_t)0x20B6EEB3DA5B840LL, (int64_t)0x12A336345E7BLL, (int64_t)0xFFFFFFFFFFFF5258LL, (int64_t)0xFFFFFFFFFFE9ADDFLL, (int64_t)0x58430283FDF8ALL, (int64_t)0x4F73LL, (int64_t)0xFFFDBAF54C3E5C5ELL, (int64_t)0xE74FEC4DD371B800LL, (int64_t)0x750E0BD93E50A40LL, (int64_t)0x73LL, (int64_t)0xFFFFFE84712BD8E2LL, (int64_t)0xFFFFFFFFAAE4FF06LL, (int64_t)0x285E24B9AC42LL, (int64_t)0xAD8B57A77C7LL, (int64_t)0xFFFFFFFFFFFFFFFFLL, (int64_t)0xFFFFFFFDE18EE345LL, (int64_t)0x3LL, (int64_t)0xFD15BE5CC1FLL, (int64_t)0xFFFBFFADC966DC53LL, (int64_t)0xFFFFFFFFFFFFFFF1LL, (int64_t)0x8LL, (int64_t)0x1B451DC34LL, (int64_t)0xFF261D14392BBF68LL, (int64_t)0xFFFFFFFFFFFBBBB9LL, (int64_t)0x380F346LL, (int64_t)0x9380A24LL, (int64_t)0xFFFFFFFFFFFFDE0ALL, (int64_t)0xFFFFFFFFFBEB8A6ALL, (int64_t)0x98DF538997LL, (int64_t)0x4BE7B5456AC3C80LL, (int64_t)0xFFFF1FE6C0CED1A6LL, (int64_t)0xFFFFFFFFFFFE911CLL, (int64_t)0x17BF05ED266LL, (int64_t)0x1652A37FELL, (int64_t)0xFFFFFFE8E34C9B42LL, (int64_t)0xFFFFFFFFFFFFF13FLL, (int64_t)0x42LL, (int64_t)0x10LL, (int64_t)0xFFFFFFE713F66BEALL, (int64_t)0xFFFFFFFFFFFFFDD3LL, (int64_t)0x1A1A99E47LL, (int64_t)0x544LL };
		static const int64_t output0[] = { (int64_t)0xF3CF3CF400000000LL, (int64_t)0xFFF918ACD1600000LL, (int64_t)0x2AAAAAAB00000000LL, (int64_t)0x7270FBC20000LL, (int64_t)0xFFFD4C9CBA600000LL, (int64_t)0xFFFFFFFFFFFFFB82LL, (int64_t)0x319C54E9000LL, (int64_t)0x8926CFAC000LL, (int64_t)0xFFFFFFFA25552080LL, (int64_t)0xFFFFFFFFFFFFFFD2LL, (int64_t)0x7F2889LL, (int64_t)0x21A73LL, (int64_t)0xFFFFFFF70BE5CD80LL, (int64_t)0xFFFFFFFFFFFFC398LL, (int64_t)0xCLL, (int64_t)0x2D82D8270000000LL, (int64_t)0xFFF8023F5C600000LL, (int64_t)0xFFFFFFFFFFFFFF3ELL, (int64_t)0x2AELL, (int64_t)0x33B9680A00LL, (int64_t)0xFE1A8C5478000000LL, (int64_t)0xFFE850AD32800000LL, (int64_t)0x1199516D000LL, (int64_t)0xFBA35BAC00000LL, (int64_t)0xFFFFFC5807CF7000LL, (int64_t)0xFFFFFFFF36AAFBB8LL, (int64_t)0x30BA947LL, (int64_t)0x5555555600000000LL, (int64_t)0xFFFFFFFF42DB09BCLL, (int64_t)0xFFFE2EE22F500000LL, (int64_t)0x685B4FE2000000LL, (int64_t)0x310D09LL, (int64_t)0xFFFFFFFFFFFFC272LL, (int64_t)0xFFFFFBF4FCC0C000LL, (int64_t)0x59A70C34000000LL, (int64_t)0x43A98CA80LL, (int64_t)0xFFFFFE34F97C7800LL, (int64_t)0xFFFFFFFEA54BC250LL, (int64_t)0xEELL, (int64_t)0x5AF11FC6000LL, (int64_t)0xFFFFFF4B23B89800LL, (int64_t)0xFFFFFF88D3461000LL, (int64_t)0x17B0A54C000LL, (int64_t)0x114887E48000LL, (int64_t)0xFF81F81F2A000000LL, (int64_t)0xFFFFFFFFFFFFE713LL, (int64_t)0x2AD6E1BLL, (int64_t)0xCFE99104000LL, (int64_t)0xFFFFFFFFFC360A55LL, (int64_t)0xF914C1BD40000000LL, (int64_t)0x4000000000000000LL, (int64_t)0x6A580LL, (int64_t)0xE000000000000000LL, (int64_t)0xFFFFFFFFFFFFFB6FLL, (int64_t)0xE282399LL, (int64_t)0x201LL, (int64_t)0xFFFFFFFFFFFFE6E5LL, (int64_t)0xFFFFFFFFFFFFF5FELL, (int64_t)0x7DLL, (int64_t)0xDBC57LL, (int64_t)0xFFFE869C5B200000LL, (int64_t)0xFFFFF487E8184000LL, (int64_t)0x2E68LL, (int64_t)0x338E10AE00000LL, (int64_t)0xFFFFFFFFFFFF8F35LL, (int64_t)0xFFFFFFFFFFFFFFF5LL, (int64_t)0x22LL, (int64_t)0x239E0D590000000LL, (int64_t)0xFFFFFFFFFF535602LL, (int64_t)0xFFFFFFFCFDF1A010LL, (int64_t)0x65779LL, (int64_t)0x179A1FLL, (int64_t)0x0LL, (int64_t)0xFFFFFFFF872EF0EALL, (int64_t)0x5555555600000000LL, (int64_t)0x102F2DLL, (int64_t)0xFFFFFFFFFFFFC005LL, (int64_t)0xEEEEEEEE80000000LL, (int64_t)0x2000000000000000LL, (int64_t)0x9633A714LL, (int64_t)0xFFFFFFFFFFFFFED3LL, (int64_t)0xFFFFC400265E0000LL, (int64_t)0x4910BBC400LL, (int64_t)0x1BC4DED480LL, (int64_t)0xFFF87640E6A00000LL, (int64_t)0xFFFFFFC140EFC100LL, (int64_t)0x1ACB28ELL, (int64_t)0x35LL, (int64_t)0xFFFFFFFFFFFEDB8ELL, (int64_t)0xFFFF4D5FE3180000LL, (int64_t)0xAC7DA9LL, (int64_t)0xB77D4DB8LL, (int64_t)0xFFFFFFFFF4EC6E36LL, (int64_t)0xFFEEA60EC6000000LL, (int64_t)0x3E0F83BC0000000LL, (int64_t)0x1000000000000000LL, (int64_t)0xFFFFFFFFF5BA5B95LL, (int64_t)0xFF8A5752CA000000LL, (int64_t)0x9CE94E9CLL, (int64_t)0x309E0189000000LL };
		for (int ndx = 0; ndx < 100; ndx++)
			Util::Check("Fixed64::Rcp", Fixed64::Rcp(input0[ndx]), output0[ndx], input0[ndx]);
	}

	// Fixed64.RcpFast()
	static void Fixed64_RcpFast()
	{
		static const int64_t input0[] = { (int64_t)0xFFA627274B84F9C8LL, (int64_t)0xFFFFFFFF2C4248BDLL, (int64_t)0x35265A90FBBLL, (int64_t)0xCBLL, (int64_t)0xFFFFFFFFFFC469B1LL, (int64_t)0xFFFFFFFFFFE7850CLL, (int64_t)0x1F3A70CB8925LL, (int64_t)0x107FAC996LL, (int64_t)0xFFEFF41328FDD4F0LL, (int64_t)0xFFB6D5873BB84ED8LL, (int64_t)0x1FLL, (int64_t)0xA6223C5A54ACLL, (int64_t)0xFFFCCEA148D8A30ELL, (int64_t)0xFFFFFFFFFECCE366LL, (int64_t)0x57973F42F58D5LL, (int64_t)0xA2CD9332CBA5B80LL, (int64_t)0xFE6847BD0F2E3750LL, (int64_t)0xFFFFFFFFFF66D0EALL, (int64_t)0x2LL, (int64_t)0x8E6A3FLL, (int64_t)0xFFFFFFFFFFD6A867LL, (int64_t)0xFFFFFFFFFFFFFFFFLL, (int64_t)0x210378LL, (int64_t)0x108D66CLL, (int64_t)0xFFF1AA052E8C187CLL, (int64_t)0xFFFFFFFFFFFFE311LL, (int64_t)0x78LL, (int64_t)0x559845A309D24LL, (int64_t)0xFFFFFFFFF7D48510LL, (int64_t)0xF2371151E45DCE80LL, (int64_t)0xA2LL, (int64_t)0x1D6B00CC226LL, (int64_t)0xFFFFFFFD979C0F7BLL, (int64_t)0xFF9EA2F9F5F64700LL, (int64_t)0x136CCCCAE64LL, (int64_t)0x1076E0ALL, (int64_t)0xFFFFFFADCBCF6042LL, (int64_t)0xFFFFFFFFFFFB9635LL, (int64_t)0x27LL, (int64_t)0x58CA018D17B0BCLL, (int64_t)0xFFFFF7A375B55BE1LL, (int64_t)0xFFFFFFFFFFFFFF6CLL, (int64_t)0x4BLL, (int64_t)0xC406472B6A9DB8LL, (int64_t)0xFFFFFFFFFFFFF480LL, (int64_t)0xFF6DA2AB7B989BB0LL, (int64_t)0x1BF74AA25823LL, (int64_t)0x1344LL, (int64_t)0xFFFFFFFFFF537F93LL, (int64_t)0xFFFFFFFFFFFFFE5FLL, (int64_t)0x28CLL, (int64_t)0x29A6LL, (int64_t)0xFFFFFFFFFFFFFF12LL, (int64_t)0xFFFFFFFFFFFFFD12LL, (int64_t)0x8274EE311AA2FLL, (int64_t)0x3A431268845AF0LL, (int64_t)0xFFFFFFFFFFFFF997LL, (int64_t)0xFFFFFFFFFFFCC9FCLL, (int64_t)0x38B54LL, (int64_t)0x20FLL, (int64_t)0xFFFFFFFFFFFFCBD7LL, (int64_t)0xFE8A67C6428FAF60LL, (int64_t)0x20LL, (int64_t)0x4A802081648C6CLL, (int64_t)0xFFFF8CB8E1CA9A47LL, (int64_t)0xFFFFFFFFFBA9838DLL, (int64_t)0x44FFLL, (int64_t)0x219486E51CFB6E0LL, (int64_t)0xFFFFC0C26DD91E50LL, (int64_t)0xFFFFFFFFFAAE12F5LL, (int64_t)0x1FB00ALL, (int64_t)0x5C6297E5EALL, (int64_t)0xFFFFFFFFFFFC21E3LL, (int64_t)0xFFFFFFFFFFFFFE51LL, (int64_t)0x442109F1CDELL, (int64_t)0x4763LL, (int64_t)0xFEB22A9D08BCC7B0LL, (int64_t)0xFFFFFFFFF538AE54LL, (int64_t)0x1707LL, (int64_t)0x644C04762240DC0LL, (int64_t)0xFFFFFFFFBDC8FDBFLL, (int64_t)0xFE70E50B77FC28C0LL, (int64_t)0x7F06C46LL, (int64_t)0x50215LL, (int64_t)0xFFFA972969A1D698LL, (int64_t)0xFF0653812BEBF0C8LL, (int64_t)0x1F9F83B51LL, (int64_t)0xD22D6DLL, (int64_t)0xFFFFFFFFFFFFFFF5LL, (int64_t)0xFFFEAA972B5312B5LL, (int64_t)0x2912LL, (int64_t)0x1999C0LL, (int64_t)0xFFFFFFFFFFFFFFFFLL, (int64_t)0xFB312A4CEF62CD80LL, (int64_t)0x1B3BF077B72LL, (int64_t)0x16EB16EE991F3LL, (int64_t)0xFFFFFFFFFFFFFFFCLL, (int64_t)0xFFFFFFFFFFFFBEFCLL, (int64_t)0x1B3LL, (int64_t)0xA9ACEE22C69BLL };
		static const int64_t output0[] = { (int64_t)0xFFFFFFFFFFFFFD26LL, (int64_t)0xFFFFFFFECA7E1F98LL, (int64_t)0x4D1085LL, (int64_t)0x142D593A8000000LL, (int64_t)0xFFFFFBB42838E000LL, (int64_t)0xFFFFF58AEB180000LL, (int64_t)0x83296LL, (int64_t)0xF8439E40LL, (int64_t)0xFFFFFFFFFFFFF00BLL, (int64_t)0xFFFFFFFFFFFFFC80LL, (int64_t)0x8420C24C0000000LL, (int64_t)0x18A7ALL, (int64_t)0xFFFFFFFFFFFFAFD2LL, (int64_t)0xFFFFFF2A9B83C400LL, (int64_t)0x2EC3LL, (int64_t)0x19LL, (int64_t)0xFFFFFFFFFFFFFF5FLL, (int64_t)0xFFFFFE542DC4E000LL, (int64_t)0x8000000000000000LL, (int64_t)0x1CC2CBE3800LL, (int64_t)0xFFFFF9CEC9872000LL, (int64_t)0x0LL, (int64_t)0x7C125156000LL, (int64_t)0xF775BD9400LL, (int64_t)0xFFFFFFFFFFFFEE24LL, (int64_t)0xFFF726ED83000000LL, (int64_t)0x22222E590000000LL, (int64_t)0x2FDALL, (int64_t)0xFFFFFFE0AA3BEB00LL, (int64_t)0xFFFFFFFFFFFFFFEDLL, (int64_t)0x1948ADD68000000LL, (int64_t)0x8B3C68LL, (int64_t)0xFFFFFFFF95ADC626LL, (int64_t)0xFFFFFFFFFFFFFD5ELL, (int64_t)0xD2DC44LL, (int64_t)0xF8C8404800LL, (int64_t)0xFFFFFFFFFCE2C2FDLL, (int64_t)0xFFFFC5FE33390000LL, (int64_t)0x690656720000000LL, (int64_t)0x2E2LL, (int64_t)0xFFFFFFFFFFE16213LL, (int64_t)0xFE453185A8000000LL, (int64_t)0x369CDDFB0000000LL, (int64_t)0x14ELL, (int64_t)0xFFE9BD2C03000000LL, (int64_t)0xFFFFFFFFFFFFFE40LL, (int64_t)0x9276DLL, (int64_t)0xD49AC63000000LL, (int64_t)0xFFFFFE8414D53000LL, (int64_t)0xFF62D748C8000000LL, (int64_t)0x6483E8E2000000LL, (int64_t)0x6258EEBE00000LL, (int64_t)0xFEECA2EFD0000000LL, (int64_t)0xFFA89E44F8000000LL, (int64_t)0x1F65LL, (int64_t)0x464LL, (int64_t)0xFFD81054B8000000LL, (int64_t)0xFFFFB0465D1E0000LL, (int64_t)0x483AEDD40000LL, (int64_t)0x7C5BA5C8000000LL, (int64_t)0xFFFB179333400000LL, (int64_t)0xFFFFFFFFFFFFFF50LL, (int64_t)0x800000000000000LL, (int64_t)0x36FLL, (int64_t)0xFFFFFFFFFFFDC77DLL, (int64_t)0xFFFFFFC4FBF4BF00LL, (int64_t)0x3B5DB02D00000LL, (int64_t)0x79LL, (int64_t)0xFFFFFFFFFFFBF3B6LL, (int64_t)0xFFFFFFCFE12A6100LL, (int64_t)0x8142B74C000LL, (int64_t)0x2C5622ALL, (int64_t)0xFFFFBDCF619E0000LL, (int64_t)0xFF67F1F84C000000LL, (int64_t)0x3C1F24LL, (int64_t)0x39609E2000000LL, (int64_t)0xFFFFFFFFFFFFFF3BLL, (int64_t)0xFFFFFFE83FBE5180LL, (int64_t)0xB1E07B0C00000LL, (int64_t)0x28LL, (int64_t)0xFFFFFFFC223E03F0LL, (int64_t)0xFFFFFFFFFFFFFF5BLL, (int64_t)0x203EB9D500LL, (int64_t)0x331DDCA50000LL, (int64_t)0xFFFFFFFFFFFFD0ACLL, (int64_t)0xFFFFFFFFFFFFFEF9LL, (int64_t)0x81863B70LL, (int64_t)0x137CF46A800LL, (int64_t)0xE8BA1E9B80000000LL, (int64_t)0xFFFFFFFFFFFF400ALL, (int64_t)0x63BB43A000000LL, (int64_t)0x9FFEA348000LL, (int64_t)0x0LL, (int64_t)0xFFFFFFFFFFFFFFCALL, (int64_t)0x966624LL, (int64_t)0xB2B9LL, (int64_t)0xC000000000000000LL, (int64_t)0xFFFC0FFD17400000LL, (int64_t)0x96A82C58000000LL, (int64_t)0x1823ELL };
		for (int ndx = 0; ndx < 100; ndx++)
			Util::Check("Fixed64::RcpFast", Fixed64::RcpFast(input0[ndx]), output0[ndx], input0[ndx]);
	}

	// Fixed64.RcpFastest()
	static void Fixed64_RcpFastest()
	{
		static const int64_t input0[] = { (int64_t)0xFFFFFDE0F5103121LL, (int64_t)0xFFFCAB334EE3FFEFLL, (int64_t)0x137F3B6ALL, (int64_t)0x81B32F034766F80LL, (int64_t)0xFFFCB4892D810D3ELL, (int64_t)0xFFFFFFFE3C1452B0LL, (int64_t)0x2B13275958E03A0LL, (int64_t)0x234ED8AAD605CA00LL, (int64_t)0xFFFFFFFFD3EBA189LL, (int64_t)0xFFFFFFE2C30056C1LL, (int64_t)0xB2B6725989C2480LL, (int64_t)0x26153D381040LL, (int64_t)0xFFFFFFFFFFFFFFDDLL, (int64_t)0xFFFFFFFFFFDBD075LL, (int64_t)0x1FD9425A188LL, (int64_t)0x85D67LL, (int64_t)0xFFFFFFFFD0F15861LL, (int64_t)0xFFFE6315FE014435LL, (int64_t)0xDLL, (int64_t)0x1D8CB76215006ELL, (int64_t)0xFF7388EABE8D92B8LL, (int64_t)0xFFEAFD51C4E8FDEALL, (int64_t)0x2CFE72EEE24ACELL, (int64_t)0xBDADE0C34351D00LL, (int64_t)0xFFFFFFFFFFFFDED8LL, (int64_t)0xFFFFFFFFFFFFFFFFLL, (int64_t)0x4A319A0968LL, (int64_t)0x337BBCLL, (int64_t)0xFFFFFFFFC0992339LL, (int64_t)0xFF41BF72354184F8LL, (int64_t)0xF8FLL, (int64_t)0x52270940423LL, (int64_t)0xFFFFFFFFFFF9A94ELL, (int64_t)0xFFFFFFFFF750577ELL, (int64_t)0x2F482LL, (int64_t)0x4F81F11E1ADLL, (int64_t)0xFFFFFFFFEB87A861LL, (int64_t)0xFFFFFFFFC151B913LL, (int64_t)0x61480FACLL, (int64_t)0x31078LL, (int64_t)0xE8D09B620787E600LL, (int64_t)0xFFFFFFFC6ADE7235LL, (int64_t)0x131292BA176CE30LL, (int64_t)0x1A236729LL, (int64_t)0xFFF85BC4D0CCD140LL, (int64_t)0xFFFFFFFFBAF9CD1ALL, (int64_t)0xB799LL, (int64_t)0x233CA4111C2LL, (int64_t)0xFFFFFFFFFFFD95A9LL, (int64_t)0xFFFFFFFFFFCBE852LL, (int64_t)0x7CAE0LL, (int64_t)0xB60ELL, (int64_t)0xFFFFFFFFFFFFFB48LL, (int64_t)0xFFFFFFFFFFFC512DLL, (int64_t)0x4D4F1FB2A8E250LL, (int64_t)0x676299C4E0999LL, (int64_t)0xFB42F756C9C2B3C0LL, (int64_t)0xFFFFFFFF96BE645BLL, (int64_t)0x3E955390FF98LL, (int64_t)0x2A9703168C778LL, (int64_t)0xFE7A2BA22FE63CF0LL, (int64_t)0xFFFFFFF29CFAC4E3LL, (int64_t)0x8E908298LL, (int64_t)0xED4033C13LL, (int64_t)0xFFFFFFFFFE1EF0C3LL, (int64_t)0xFFFFFFFFFFFDD31BLL, (int64_t)0x6020F8BLL, (int64_t)0x10701B4F655LL, (int64_t)0xFFFFFFFFFFFFFFF4LL, (int64_t)0xE65CFF04A9493100LL, (int64_t)0x1A271FED35C6ACLL, (int64_t)0x300C32CCAA5CE400LL, (int64_t)0xFFFFFFFFFFFBC167LL, (int64_t)0xFFFEE05D3263F143LL, (int64_t)0x519191601A7330LL, (int64_t)0x27354ELL, (int64_t)0xFB97F4210EA0C200LL, (int64_t)0xFFFFFFFFFE4753A0LL, (int64_t)0x18DLL, (int64_t)0x1EBED0A96742LL, (int64_t)0xFFFF918B8DD194EBLL, (int64_t)0xF793E52451AA4D80LL, (int64_t)0x15LL, (int64_t)0x137LL, (int64_t)0xFFFFFFE795CEF15BLL, (int64_t)0xFA87BBC353172F40LL, (int64_t)0x1166D5741LL, (int64_t)0x1LL, (int64_t)0xFFFFFFF8CF275A6DLL, (int64_t)0xFFFFFFFFE2BB0173LL, (int64_t)0x431E12D184C6LL, (int64_t)0xC72561554171D80LL, (int64_t)0xFFFFBFE67C0CDCCFLL, (int64_t)0xFFFFF6DD09134701LL, (int64_t)0x80CA3CLL, (int64_t)0x1BB6067LL, (int64_t)0xFFFFFFFFFFFFFFFALL, (int64_t)0xFFFFFFFFFFEB6B93LL, (int64_t)0xDLL, (int64_t)0x38342AF15LL };
		static const int64_t output0[] = { (int64_t)0xFFFFFFFFFF87457ELL, (int64_t)0xFFFFFFFFFFFFB31FLL, (int64_t)0xD20EE3600LL, (int64_t)0x1FLL, (int64_t)0xFFFFFFFFFFFFB245LL, (int64_t)0xFFFFFFFF6EF4E020LL, (int64_t)0x5FLL, (int64_t)0x7LL, (int64_t)0xFFFFFFFA31C45960LL, (int64_t)0xFFFFFFFFF73EBE83LL, (int64_t)0x16LL, (int64_t)0x6B8E1LL, (int64_t)0xF8AED8F2C0000000LL, (int64_t)0xFFFFF8EC6B23E000LL, (int64_t)0x80984DLL, (int64_t)0x1E9D58DF0000LL, (int64_t)0xFFFFFFFA8F768300LL, (int64_t)0xFFFFFFFFFFFF613ALL, (int64_t)0x13B30E4400000000LL, (int64_t)0x8A9LL, (int64_t)0xFFFFFFFFFFFFFE2DLL, (int64_t)0xFFFFFFFFFFFFF3D1LL, (int64_t)0x5B0LL, (int64_t)0x15LL, (int64_t)0xFFF846D401A00000LL, (int64_t)0x0LL, (int64_t)0x3736FF1LL, (int64_t)0x4F961F12000LL, (int64_t)0xFFFFFFFBF687E680LL, (int64_t)0xFFFFFFFFFFFFFEA7LL, (int64_t)0x1072A8A2800000LL, (int64_t)0x31D78DLL, (int64_t)0xFFFFD799FDBA0000LL, (int64_t)0xFFFFFFE2843E4100LL, (int64_t)0x569F5CE40000LL, (int64_t)0x338191LL, (int64_t)0xFFFFFFF37F7AFA80LL, (int64_t)0xFFFFFFFBEAC90CA0LL, (int64_t)0x2A1B932C0LL, (int64_t)0x538D39DC0000LL, (int64_t)0xFFFFFFFFFFFFFFF4LL, (int64_t)0xFFFFFFFFB8896662LL, (int64_t)0xD6LL, (int64_t)0x9CC36A9C0LL, (int64_t)0xFFFFFFFFFFFFDE82LL, (int64_t)0xFFFFFFFC4A2B0600LL, (int64_t)0x164DF8C300000LL, (int64_t)0x744887LL, (int64_t)0xFFFF960559D80000LL, (int64_t)0xFFFFFB15784DA000LL, (int64_t)0x20D7236B0000LL, (int64_t)0x167E2A3800000LL, (int64_t)0xFFC9BEDAE1000000LL, (int64_t)0xFFFFBA8001FC0000LL, (int64_t)0x34FLL, (int64_t)0x27A1LL, (int64_t)0xFFFFFFFFFFFFFFC9LL, (int64_t)0xFFFFFFFD91211AB0LL, (int64_t)0x416D4LL, (int64_t)0x6022LL, (int64_t)0xFFFFFFFFFFFFFF57LL, (int64_t)0xFFFFFFFFECDE8A74LL, (int64_t)0x1CBD7A528LL, (int64_t)0x1142CDA6LL, (int64_t)0xFFFFFF77CEF02000LL, (int64_t)0xFFFF8A462A4E0000LL, (int64_t)0x2A9C1D0700LL, (int64_t)0xF93DF5LL, (int64_t)0xEAAAAAAA80000000LL, (int64_t)0xFFFFFFFFFFFFFFF6LL, (int64_t)0x9CALL, (int64_t)0x5LL, (int64_t)0xFFFFC3AA052D0000LL, (int64_t)0xFFFFFFFFFFFF1C17LL, (int64_t)0x323LL, (int64_t)0x6873CF38000LL, (int64_t)0xFFFFFFFFFFFFFFC5LL, (int64_t)0xFFFFFF6B3C0B0800LL, (int64_t)0xA51B9F60000000LL, (int64_t)0x852BFLL, (int64_t)0xFFFFFFFFFFFDAE7CLL, (int64_t)0xFFFFFFFFFFFFFFE1LL, (int64_t)0xC2F96A100000000LL, (int64_t)0xD2B45720000000LL, (int64_t)0xFFFFFFFFF5837924LL, (int64_t)0xFFFFFFFFFFFFFFD1LL, (int64_t)0xEB7809C0LL, (int64_t)0x0LL, (int64_t)0xFFFFFFFFDC65ACAFLL, (int64_t)0xFFFFFFF74127EB00LL, (int64_t)0x3D0C7LL, (int64_t)0x14LL, (int64_t)0xFFFFFFFFFFFC0192LL, (int64_t)0xFFFFFFFFFFE3F97FLL, (int64_t)0x1FCE5150800LL, (int64_t)0x93DAC31C00LL, (int64_t)0xD555555500000000LL, (int64_t)0xFFFFF39096790000LL, (int64_t)0x13B30E4400000000LL, (int64_t)0x48E4BD76LL };
		for (int ndx = 0; ndx < 100; ndx++)
			Util::Check("Fixed64::RcpFastest", Fixed64::RcpFastest(input0[ndx]), output0[ndx], input0[ndx]);
	}

	// Fixed32.Rcp()
	static void Fixed32_Rcp()
	{
		static const int32_t input0[] = { (int32_t)0xFFFFFFFA, (int32_t)0xFFFA37B8, (int32_t)0x5DD42, (int32_t)0x33D, (int32_t)0xFFFF4B54, (int32_t)0xFFFFFBD3, (int32_t)0x1BC02F52, (int32_t)0x1325, (int32_t)0xFFFFE144, (int32_t)0xFFFEA818, (int32_t)0x5B8B26D, (int32_t)0x191FE, (int32_t)0xFFFFF5F3, (int32_t)0xFFFFFFFE, (int32_t)0x4, (int32_t)0x1CC1CA9B, (int32_t)0xFFFF369C, (int32_t)0xFFFFF306, (int32_t)0x32AF783D, (int32_t)0x4F69, (int32_t)0xFF816B25, (int32_t)0xFFFFDE6D, (int32_t)0xA, (int32_t)0x48D08, (int32_t)0xFFFFFF1C, (int32_t)0xF93AEDB1, (int32_t)0x138, (int32_t)0x4C78A, (int32_t)0xFFFFE4C1, (int32_t)0xFFFF8E99, (int32_t)0x341, (int32_t)0x65CD7, (int32_t)0xFFFFF8F6, (int32_t)0xFFFB5513, (int32_t)0x14BBFB, (int32_t)0x28, (int32_t)0xFFFFF78C, (int32_t)0xFF5AC932, (int32_t)0xA641C, (int32_t)0x216, (int32_t)0xD1496D34, (int32_t)0xFFFFFFE5, (int32_t)0x55E56, (int32_t)0x3, (int32_t)0xFFFC0886, (int32_t)0xFFFFFF89, (int32_t)0x5EB3E, (int32_t)0x41B010, (int32_t)0xFFF0474D, (int32_t)0xFFFFE1CE, (int32_t)0x7B01301, (int32_t)0x178DEB, (int32_t)0xFFFFF8BC, (int32_t)0xFFFA7A57, (int32_t)0xE3CDB4, (int32_t)0xBF14A, (int32_t)0xFFFEED1A, (int32_t)0xFFFFFFFE, (int32_t)0x7, (int32_t)0x6AC0B, (int32_t)0xFFFFFFFA, (int32_t)0xFFFFF464, (int32_t)0x2CF909E4, (int32_t)0x1158B0CF, (int32_t)0xFFFFFF2D, (int32_t)0xFFFFFE34, (int32_t)0x72, (int32_t)0x89DAB9, (int32_t)0xFFFFF765, (int32_t)0xF8A9C78B, (int32_t)0x6CDBD, (int32_t)0x4E03D1, (int32_t)0xFFB00E22, (int32_t)0xFFCF6A42, (int32_t)0x6CCC, (int32_t)0x94EEB, (int32_t)0xFE6FB67E, (int32_t)0xFFFFFFFB, (int32_t)0x2, (int32_t)0x3, (int32_t)0xFFFFFDB7, (int32_t)0xFFFECF2F, (int32_t)0x1374DDF4, (int32_t)0x39BEF8C6, (int32_t)0xFFFC4FF1, (int32_t)0xFFF7267F, (int32_t)0x1C0, (int32_t)0x519B13, (int32_t)0xFEB04ADB, (int32_t)0xFFFFFFFD, (int32_t)0x9836F, (int32_t)0x68F, (int32_t)0xFFD28C0D, (int32_t)0xFFFFFFFD, (int32_t)0x9C, (int32_t)0x80B9A, (int32_t)0xFFFFFFDA, (int32_t)0xFFEC315D, (int32_t)0x11C33DA, (int32_t)0x469 };
		static const int32_t output0[] = { (int32_t)0xD5555555, (int32_t)0xFFFFD3BA, (int32_t)0x2BA7, (int32_t)0x4F0DE5, (int32_t)0xFFFE9543, (int32_t)0xFFC2B1B1, (int32_t)0x9, (int32_t)0xD5F39, (int32_t)0xFFF7ABAA, (int32_t)0xFFFF416F, (int32_t)0x2C, (int32_t)0xA307, (int32_t)0xFFE68783, (int32_t)0x80000000, (int32_t)0x40000000, (int32_t)0x8, (int32_t)0xFFFEBA95, (int32_t)0xFFEC45AA, (int32_t)0x5, (int32_t)0x33948, (int32_t)0xFFFFFDFA, (int32_t)0xFFF86006, (int32_t)0x19999999, (int32_t)0x3840, (int32_t)0xFEE08FB8, (int32_t)0xFFFFFFDA, (int32_t)0xD20D21, (int32_t)0x3590, (int32_t)0xFFF69AAA, (int32_t)0xFFFDBE17, (int32_t)0x4EACB7, (int32_t)0x283C, (int32_t)0xFFDBA1AB, (int32_t)0xFFFFC927, (int32_t)0xC58, (int32_t)0x6666666, (int32_t)0xFFE1B720, (int32_t)0xFFFFFE73, (int32_t)0x18A2, (int32_t)0x7ABA01, (int32_t)0xFFFFFFFA, (int32_t)0xF684BDA1, (int32_t)0x2FAF, (int32_t)0x55555556, (int32_t)0xFFFFBF76, (int32_t)0xFDD946FD, (int32_t)0x2B40, (int32_t)0x3E5, (int32_t)0xFFFFEFB7, (int32_t)0xFFF78598, (int32_t)0x21, (int32_t)0xADE, (int32_t)0xFFDCC3FD, (int32_t)0xFFFFD1A4, (int32_t)0x11F, (int32_t)0x156F, (int32_t)0xFFFF1199, (int32_t)0x80000000, (int32_t)0x24924925, (int32_t)0x265E, (int32_t)0xD5555555, (int32_t)0xFFE9F2E8, (int32_t)0x5, (int32_t)0xE, (int32_t)0xFEC96720, (int32_t)0xFF7187CA, (int32_t)0x23EE08F, (int32_t)0x1DB, (int32_t)0xFFE24060, (int32_t)0xFFFFFFDD, (int32_t)0x25A0, (int32_t)0x348, (int32_t)0xFFFFFCCC, (int32_t)0xFFFFFABB, (int32_t)0x25A5E, (int32_t)0x1B80, (int32_t)0xFFFFFF5C, (int32_t)0xCCCCCCCD, (int32_t)0x80000000, (int32_t)0x55555556, (int32_t)0xFF8FF8FF, (int32_t)0xFFFF28FF, (int32_t)0xD, (int32_t)0x4, (int32_t)0xFFFFBA94, (int32_t)0xFFFFE312, (int32_t)0x924924, (int32_t)0x323, (int32_t)0xFFFFFF3C, (int32_t)0xAAAAAAAA, (int32_t)0x1AE8, (int32_t)0x270862, (int32_t)0xFFFFFA5E, (int32_t)0xAAAAAAAA, (int32_t)0x1A41A42, (int32_t)0x1FD1, (int32_t)0xF9435E50, (int32_t)0xFFFFF313, (int32_t)0xE6, (int32_t)0x3A0C3E };
		for (int ndx = 0; ndx < 100; ndx++)
			Util::Check("Fixed32::Rcp", Fixed32::Rcp(input0[ndx]), output0[ndx], input0[ndx]);
	}

	// Fixed32.RcpFast()
	static void Fixed32_RcpFast()
	{
		static const int32_t input0[] = { (int32_t)0xFFFFFFFE, (int32_t)0xFD408902, (int32_t)0xF43, (int32_t)0x892415, (int32_t)0xFEE3F02A, (int32_t)0xFFFFFFCE, (int32_t)0x12DB442F, (int32_t)0x99256, (int32_t)0xFFFFFFE7, (int32_t)0xFFFFFFD0, (int32_t)0x1E8D0D7, (int32_t)0x5D81, (int32_t)0xFFFFFFFE, (int32_t)0xFFFFFFFD, (int32_t)0x5D5, (int32_t)0x16F83, (int32_t)0xFFFFD9CE, (int32_t)0xCE2812F6, (int32_t)0x968, (int32_t)0x5F741, (int32_t)0xFFFFFFFE, (int32_t)0xFFFFA674, (int32_t)0x1A47E5E3, (int32_t)0x4F5, (int32_t)0xFFFFFE76, (int32_t)0xFFFFFDED, (int32_t)0x3, (int32_t)0x335504, (int32_t)0xFFFF60C9, (int32_t)0xFC9E83EE, (int32_t)0x7B22, (int32_t)0x28, (int32_t)0xFFFFFEAE, (int32_t)0xFFDEB5BE, (int32_t)0x3, (int32_t)0x3546, (int32_t)0xFFFFFFD9, (int32_t)0xFFFFFFB8, (int32_t)0x68, (int32_t)0x256C, (int32_t)0xFFE1F6C0, (int32_t)0xFFF44A42, (int32_t)0x647D3, (int32_t)0xDB7A4, (int32_t)0xFFFFFF8C, (int32_t)0xFFFFFFCC, (int32_t)0x5D7, (int32_t)0x17F1E4, (int32_t)0xFFDDD3A9, (int32_t)0xFFE4CAD4, (int32_t)0x6B, (int32_t)0x31, (int32_t)0xFFFFFBCB, (int32_t)0xFFFFFFA1, (int32_t)0x44B, (int32_t)0x17DFA, (int32_t)0xF94EE632, (int32_t)0xFFFFFFFA, (int32_t)0xB1D3, (int32_t)0x111E4, (int32_t)0xFFFFFFE3, (int32_t)0xFFFFFF44, (int32_t)0x1E, (int32_t)0x1EB, (int32_t)0xFFE68F4D, (int32_t)0xFFE7CFEE, (int32_t)0x8D, (int32_t)0x451, (int32_t)0xFFFFFFFE, (int32_t)0xF8FE1313, (int32_t)0x1266, (int32_t)0x10D, (int32_t)0xFF0ACFDB, (int32_t)0xEFE94629, (int32_t)0xCB63A08, (int32_t)0xB39, (int32_t)0xFC6F792B, (int32_t)0xFFFFFC2C, (int32_t)0x15, (int32_t)0xF, (int32_t)0xE9455B44, (int32_t)0xFFFFF6D4, (int32_t)0x3, (int32_t)0x17684D8, (int32_t)0xFFEFF2D1, (int32_t)0xFFFFFB0C, (int32_t)0x2664EE6, (int32_t)0x7, (int32_t)0xFFFFF081, (int32_t)0xFFFF62A5, (int32_t)0x1FD8A, (int32_t)0xC, (int32_t)0xFFE5DB79, (int32_t)0xFFE7ADE1, (int32_t)0x28B, (int32_t)0x51C4, (int32_t)0xFFFF3D38, (int32_t)0xFFFFF977, (int32_t)0x22823DCE, (int32_t)0x133F3 };
		static const int32_t output0[] = { (int32_t)0x80000000, (int32_t)0xFFFFFFA2, (int32_t)0x10C622, (int32_t)0x1DD, (int32_t)0xFFFFFF19, (int32_t)0xFAE14A5B, (int32_t)0xD, (int32_t)0x1ABE, (int32_t)0xF5C294B7, (int32_t)0xFAAAAAAA, (int32_t)0x86, (int32_t)0x2BCE4, (int32_t)0x80000000, (int32_t)0xAAAAAAAA, (int32_t)0x2BE550, (int32_t)0xB253, (int32_t)0xFFF94C34, (int32_t)0xFFFFFFFA, (int32_t)0x1B3735, (int32_t)0x2AE9, (int32_t)0x80000000, (int32_t)0xFFFD2421, (int32_t)0x9, (int32_t)0x33A4BD, (int32_t)0xFF59AA76, (int32_t)0xFF849427, (int32_t)0x55555556, (int32_t)0x4FC, (int32_t)0xFFFE6461, (int32_t)0xFFFFFFB4, (int32_t)0x2143C, (int32_t)0x6666494, (int32_t)0xFF3E1AF4, (int32_t)0xFFFFF84F, (int32_t)0x55555556, (int32_t)0x4CE2B, (int32_t)0xF96F9A98, (int32_t)0xFC71C862, (int32_t)0x27625B2, (int32_t)0x6D741, (int32_t)0xFFFFF77A, (int32_t)0xFFFFEA23, (int32_t)0x28C2, (int32_t)0x12A9, (int32_t)0xFDCB074F, (int32_t)0xFB13B49A, (int32_t)0x2BD647, (int32_t)0xAB0, (int32_t)0xFFFFF882, (int32_t)0xFFFFF697, (int32_t)0x2647B48, (int32_t)0x53976AA, (int32_t)0xFFC3261E, (int32_t)0xFD4E2554, (int32_t)0x3BA1FB, (int32_t)0xAB92, (int32_t)0xFFFFFFD9, (int32_t)0xD5555555, (int32_t)0x1708C, (int32_t)0xEF47, (int32_t)0xF72C1D3E, (int32_t)0xFEA36719, (int32_t)0x8888B96, (int32_t)0x857958, (int32_t)0xFFFFF5EF, (int32_t)0xFFFFF56A, (int32_t)0x1D0CB47, (int32_t)0x3B4F12, (int32_t)0x80000000, (int32_t)0xFFFFFFDB, (int32_t)0xDEA02, (int32_t)0xF3A171, (int32_t)0xFFFFFEF4, (int32_t)0xFFFFFFF0, (int32_t)0x14, (int32_t)0x16CFAC, (int32_t)0xFFFFFFB8, (int32_t)0xFFBD2071, (int32_t)0xC30C741, (int32_t)0x1111172C, (int32_t)0xFFFFFFF4, (int32_t)0xFFE416BD, (int32_t)0x55555556, (int32_t)0xAE, (int32_t)0xFFFFF00D, (int32_t)0xFFCC50D6, (int32_t)0x6A, (int32_t)0x2492538A, (int32_t)0xFFEF7AD6, (int32_t)0xFFFE5F84, (int32_t)0x809E, (int32_t)0x15555555, (int32_t)0xFFFFF635, (int32_t)0xFFFFF579, (int32_t)0x64AB6D, (int32_t)0x32182, (int32_t)0xFFFEAF8A, (int32_t)0xFFD8D3E1, (int32_t)0x7, (int32_t)0xD4CF };
		for (int ndx = 0; ndx < 100; ndx++)
			Util::Check("Fixed32::RcpFast", Fixed32::RcpFast(input0[ndx]), output0[ndx], input0[ndx]);
	}

	// Fixed32.RcpFastest()
	static void Fixed32_RcpFastest()
	{
		static const int32_t input0[] = { (int32_t)0xE86557A5, (int32_t)0xFFFFFFFE, (int32_t)0x172398, (int32_t)0x1381AF9, (int32_t)0xFFFFFD0B, (int32_t)0xE65DC7B3, (int32_t)0xCF8, (int32_t)0x10C0, (int32_t)0xFFFFFE21, (int32_t)0xE7823986, (int32_t)0x1ACA42, (int32_t)0x37E28, (int32_t)0xEDEF75A6, (int32_t)0xFFFFE88B, (int32_t)0x30338, (int32_t)0xCD0B0A, (int32_t)0xFFFFFF83, (int32_t)0xFFFFFABE, (int32_t)0x7A972, (int32_t)0xA44, (int32_t)0xFD7AE55E, (int32_t)0xFFFFFFD9, (int32_t)0x11D50EAF, (int32_t)0xD77D, (int32_t)0xFFFFF8F6, (int32_t)0xFFFFFD2A, (int32_t)0x29321, (int32_t)0x14, (int32_t)0xFFF35CC8, (int32_t)0xFFFFB067, (int32_t)0x3B02FFC, (int32_t)0x11733, (int32_t)0xFFFFF8E5, (int32_t)0xFFFB7790, (int32_t)0x29, (int32_t)0x10CE6009, (int32_t)0xFFE69F62, (int32_t)0xFFFFFF63, (int32_t)0xFD4B, (int32_t)0x281378, (int32_t)0xE78D4B38, (int32_t)0xFFFFB6A7, (int32_t)0xF307E7, (int32_t)0x2880, (int32_t)0xFE8813E3, (int32_t)0xDB8780C3, (int32_t)0x2D, (int32_t)0x23A, (int32_t)0xFFFFFFF0, (int32_t)0xFFFF348D, (int32_t)0x14E, (int32_t)0x4A, (int32_t)0xFFC96627, (int32_t)0xFFF94739, (int32_t)0x1E8D28, (int32_t)0x1306B23, (int32_t)0xFFFFFFF7, (int32_t)0xFFFFFFCA, (int32_t)0x58A6, (int32_t)0x2, (int32_t)0xFFFFEC17, (int32_t)0xFFFFFEB7, (int32_t)0x54D449, (int32_t)0x181AF39, (int32_t)0xFFFFFFF3, (int32_t)0xFFFFFFCF, (int32_t)0xFB, (int32_t)0x7F8, (int32_t)0xFFFFFEDC, (int32_t)0xFFF48717, (int32_t)0x10, (int32_t)0x32CFE406, (int32_t)0xFEABC57F, (int32_t)0xF3C3A47A, (int32_t)0x1AE0, (int32_t)0x1197, (int32_t)0xFFFFF58C, (int32_t)0xFFFF1E96, (int32_t)0x24AFC2, (int32_t)0xC5B, (int32_t)0xFFFFFFE1, (int32_t)0xFFFFFDB1, (int32_t)0x2, (int32_t)0x1F, (int32_t)0xFFFFFF87, (int32_t)0xFFE680E5, (int32_t)0x147439B, (int32_t)0x43A971, (int32_t)0xF6811466, (int32_t)0xFFFFF75C, (int32_t)0x37661E2, (int32_t)0xEC55, (int32_t)0xFF8E24C9, (int32_t)0xFFFF0D15, (int32_t)0x406, (int32_t)0x25FFFF, (int32_t)0xFFC8A98F, (int32_t)0xD7ABF85D, (int32_t)0x619, (int32_t)0xF4DCE };
		static const int32_t output0[] = { (int32_t)0xFFFFFFF5, (int32_t)0x80000000, (int32_t)0xB0F, (int32_t)0xD1, (int32_t)0xFFA96EFA, (int32_t)0xFFFFFFF6, (int32_t)0x13BF2D, (int32_t)0xF49F1, (int32_t)0xFF773807, (int32_t)0xFFFFFFF5, (int32_t)0x98F, (int32_t)0x494F, (int32_t)0xFFFFFFF1, (int32_t)0xFFF51678, (int32_t)0x54FA, (int32_t)0x13F, (int32_t)0xFDF3E471, (int32_t)0xFFCF5435, (int32_t)0x2166, (int32_t)0x18EDEA, (int32_t)0xFFFFFF9A, (int32_t)0xF96FCB68, (int32_t)0xE, (int32_t)0x1303E, (int32_t)0xFFDB9FC1, (int32_t)0xFFA5C138, (int32_t)0x6364, (int32_t)0xCCC0417, (int32_t)0xFFFFEBBC, (int32_t)0xFFFCC8D6, (int32_t)0x45, (int32_t)0xEAD1, (int32_t)0xFFDBF75F, (int32_t)0xFFFFC782, (int32_t)0x63DEB05, (int32_t)0xF, (int32_t)0xFFFFF5E8, (int32_t)0xFE5EA32B, (int32_t)0x102AE, (int32_t)0x662, (int32_t)0xFFFFFFF5, (int32_t)0xFFFC8251, (int32_t)0x10D, (int32_t)0x651B5, (int32_t)0xFFFFFF51, (int32_t)0xFFFFFFF8, (int32_t)0x5AFE9ED, (int32_t)0x730346, (int32_t)0xF0000000, (int32_t)0xFFFEBDC7, (int32_t)0xC424BE, (int32_t)0x375C32D, (int32_t)0xFFFFFB4F, (int32_t)0xFFFFD9E6, (int32_t)0x860, (int32_t)0xD7, (int32_t)0xE38C22FE, (int32_t)0xFB41E9FC, (int32_t)0x2E306, (int32_t)0x80000000, (int32_t)0xFFF32523, (int32_t)0xFF38DE77, (int32_t)0x304, (int32_t)0xA9, (int32_t)0xEC4CF1BC, (int32_t)0xFAC660DF, (int32_t)0x1050491, (int32_t)0x201F69, (int32_t)0xFF1F82C9, (int32_t)0xFFFFE9B0, (int32_t)0x10000000, (int32_t)0x5, (int32_t)0xFFFFFF3F, (int32_t)0xFFFFFFEB, (int32_t)0x9877B, (int32_t)0xE8F21, (int32_t)0xFFE784CD, (int32_t)0xFFFEDD34, (int32_t)0x6FA, (int32_t)0x14B90E, (int32_t)0xF7BEBD5C, (int32_t)0xFF911765, (int32_t)0x80000000, (int32_t)0x84142A4, (int32_t)0xFDE28FED, (int32_t)0xFFFFF5F4, (int32_t)0xC8, (int32_t)0x3C8, (int32_t)0xFFFFFFE5, (int32_t)0xFFE25C6D, (int32_t)0x49, (int32_t)0x11541, (int32_t)0xFFFFFDC0, (int32_t)0xFFFEF24F, (int32_t)0x3FA1A3, (int32_t)0x6BC, (int32_t)0xFFFFFB5F, (int32_t)0xFFFFFFF9, (int32_t)0x29FCB2, (int32_t)0x10B8 };
		for (int ndx = 0; ndx < 100; ndx++)
			Util::Check("Fixed32::RcpFastest", Fixed32::RcpFastest(input0[ndx]), output0[ndx], input0[ndx]);
	}

	// Fixed64.Div()
	static void Fixed64_Div()
	{
		static const int64_t input0[] = { (int64_t)0x1130FFFFLL, (int64_t)0x1130FFFFLL, (int64_t)0x1130FFFFLL, (int64_t)0x1130FFFFLL, (int64_t)0x1130FFFFLL, (int64_t)0x1130FFFFLL, (int64_t)0x1130FFFFLL, (int64_t)0x1130FFFFLL, (int64_t)0x1130FFFFLL, (int64_t)0x1130FFFFLL, (int64_t)0x1130FFFFLL, (int64_t)0x1130FFFFLL, (int64_t)0x1130FFFFLL, (int64_t)0x1130FFFFLL, (int64_t)0x1130FFFFLL, (int64_t)0x1130FFFFLL, (int64_t)0x1130FFFFLL, (int64_t)0x1130FFFFLL, (int64_t)0x1130FFFFLL, (int64_t)0x1130FFFFLL, (int64_t)0x1130FFFFLL, (int64_t)0x1130FFFFLL, (int64_t)0x1130FFFFLL, (int64_t)0x1130FFFFLL, (int64_t)0x1130FFFFLL, (int64_t)0x1CEFE38D02DLL, (int64_t)0x26EA0997B4DLL, (int64_t)0xFFFFFC5A93A96E66LL, (int64_t)0xFFFFFFBA8DCF0C66LL, (int64_t)0xFFFFFF3BBD9A2168LL, (int64_t)0xFFFFFE2C48C27569LL, (int64_t)0xFFFFFF00D9E42BB2LL, (int64_t)0x255175503BALL, (int64_t)0xFFFFFDB5D30664BCLL, (int64_t)0xFFFFFE76A6FE8BFELL, (int64_t)0xFFFFFF8F298A4FAFLL, (int64_t)0x875B5F415ELL, (int64_t)0xFFFFFFC0CCED8F72LL, (int64_t)0xFFFFFCDC0EF89DE9LL, (int64_t)0x2D9993D3283LL, (int64_t)0xFFFFFCEE4CBF050DLL, (int64_t)0xFFFFFDFDBD1B98CCLL, (int64_t)0xC90FB76FA2LL, (int64_t)0xDA0E90F104LL, (int64_t)0xFFFFFF57A8723BC0LL, (int64_t)0xFFFFFEDBDF525608LL, (int64_t)0x1B3DB3BB46LL, (int64_t)0xFFFFFF8720BA0F7FLL, (int64_t)0x31E9679334DLL, (int64_t)0x237780938DELL, (int64_t)0xFA486B207490D600LL, (int64_t)0xCEE54A8C1DCA9400LL, (int64_t)0xEF1A80F45E350200LL, (int64_t)0x352F4649EA5E8C00LL, (int64_t)0xE64666D14C8CCE00LL, (int64_t)0xDBE35C7C37C6B800LL, (int64_t)0xEF957EF05F2AFE00LL, (int64_t)0xD126BB68224D7800LL, (int64_t)0x173CC913AE799400LL, (int64_t)0x27D53138CFAA6400LL, (int64_t)0xC3E4B40B07C96800LL, (int64_t)0xCA3705FB146E0C00LL, (int64_t)0xD883899931071400LL, (int64_t)0xFFFFFBB87FFFF800LL, (int64_t)0x116F2917A2DE5400LL, (int64_t)0xC7FEE23A0FFDC400LL, (int64_t)0xF1AD45C1635A8C00LL, (int64_t)0xF6634D246CC69A00LL, (int64_t)0xFB45E934768BD200LL, (int64_t)0x4F8710589F0E400LL, (int64_t)0x2DBF2F22DB7E6000LL, (int64_t)0x193A6254B274C400LL, (int64_t)0x2EB10257DD620400LL, (int64_t)0x15D9B780ABB37000LL, (int64_t)0xCE1143DC1C228800LL, (int64_t)0x3E7E62C1841LL, (int64_t)0x3E79EB5A7EBLL, (int64_t)0x3E73112F116LL, (int64_t)0x3E71C6A9498LL, (int64_t)0x3E7589AD53ALL, (int64_t)0x3E7C21C1197LL, (int64_t)0x3E740689068LL, (int64_t)0x3E7B28192E7LL, (int64_t)0x3E7CE3C04DBLL, (int64_t)0x3E7F3AD4845LL, (int64_t)0x3E739686644LL, (int64_t)0x3E788B0320BLL, (int64_t)0x3E723C9092ELL, (int64_t)0x3E72F5D63D8LL, (int64_t)0x3E743F00DFCLL, (int64_t)0x3E7730FB006LL, (int64_t)0x3E76FE04658LL, (int64_t)0x3E7C9B9DE5FLL, (int64_t)0x3E73F98932ALL, (int64_t)0x3E715E070F2LL, (int64_t)0x3E70CA20254LL, (int64_t)0x3E71FC04370LL, (int64_t)0x3E7AE30EE09LL, (int64_t)0x3E70BC5EC0CLL, (int64_t)0x3E795A94565LL };
		static const int64_t input1[] = { (int64_t)0xFFFFFFFEF9ED0001LL, (int64_t)0xFFFFFFFEF9ED0001LL, (int64_t)0xFFFFFFFEF9ED0001LL, (int64_t)0xFFFFFFFEF9ED0001LL, (int64_t)0xFFFFFFFEF9ED0001LL, (int64_t)0xFFFFFFFEF9ED0001LL, (int64_t)0xFFFFFFFEF9ED0001LL, (int64_t)0xFFFFFFFEF9ED0001LL, (int64_t)0xFFFFFFFEF9ED0001LL, (int64_t)0xFFFFFFFEF9ED0001LL, (int64_t)0xFFFFFFFEF9ED0001LL, (int64_t)0xFFFFFFFEF9ED0001LL, (int64_t)0xFFFFFFFEF9ED0001LL, (int64_t)0xFFFFFFFEF9ED0001LL, (int64_t)0xFFFFFFFEF9ED0001LL, (int64_t)0xFFFFFFFEF9ED0001LL, (int64_t)0xFFFFFFFEF9ED0001LL, (int64_t)0xFFFFFFFEF9ED0001LL, (int64_t)0xFFFFFFFEF9ED0001LL, (int64_t)0xFFFFFFFEF9ED0001LL, (int64_t)0xFFFFFFFEF9ED0001LL, (int64_t)0xFFFFFFFEF9ED0001LL, (int64_t)0xFFFFFFFEF9ED0001LL, (int64_t)0xFFFFFFFEF9ED0001LL, (int64_t)0xFFFFFFFEF9ED0001LL, (int64_t)0xFFFCB4777C641C79LL, (int64_t)0xFFFFFF7979091E61LL, (int64_t)0x1B72BFC6680LL, (int64_t)0x4A138B1D22B98LL, (int64_t)0xFFDB0D9A41C5C346LL, (int64_t)0xFFEFD917AFE7F4D9LL, (int64_t)0xACDC0794B81LL, (int64_t)0x29DAFDECC6LL, (int64_t)0xFFFFFFFD8788ABCCLL, (int64_t)0xFFF7B99E4B551B5DLL, (int64_t)0x36E938C6582LL, (int64_t)0xB41776F1ACLL, (int64_t)0xFFFEB46928F219F9LL, (int64_t)0xFFBCB23FED998328LL, (int64_t)0x11BFB3F2EB3DFF00LL, (int64_t)0x2432874980FLL, (int64_t)0xFFFFFFFED94450DDLL, (int64_t)0xFFFF3E03729C17DDLL, (int64_t)0x426026D7A44D5LL, (int64_t)0x8E473908D622280LL, (int64_t)0xFFFFFE778FE3ECFFLL, (int64_t)0xFFFFFFFD7541D992LL, (int64_t)0xC7E1395DE5CE5LL, (int64_t)0xB4646B3469319LL, (int64_t)0xFFFFFFBB279AA951LL, (int64_t)0xEC6FC2AE58DF8600LL, (int64_t)0x3F2F2959FE5E5400LL, (int64_t)0x2B3D65EAD67ACC00LL, (int64_t)0x3F4236D0FE846C00LL, (int64_t)0xFF8E17277F1C2E00LL, (int64_t)0x5DD2A3A8BBA5400LL, (int64_t)0xA5CDC0794B9B800LL, (int64_t)0x1246E2CEA48DC400LL, (int64_t)0xF3A69A69674D3400LL, (int64_t)0xE033B22340676400LL, (int64_t)0x67EF09E8CFDE000LL, (int64_t)0xC1ADE110035BC200LL, (int64_t)0xE1CD2409439A4800LL, (int64_t)0x1F4AD61FBE95AC00LL, (int64_t)0xF562F32E6AC5E600LL, (int64_t)0x3A23CE52F4479C00LL, (int64_t)0xCED12BEC1DA25800LL, (int64_t)0x2E9F2C5FDD3E5800LL, (int64_t)0x3657FD09ECAFFC00LL, (int64_t)0x34363960E86C7400LL, (int64_t)0xDCF1989B39E33000LL, (int64_t)0x285A7B8CD0B4F800LL, (int64_t)0xC28F2C10051E5800LL, (int64_t)0x3B971266F72E2400LL, (int64_t)0x2BDAF6E7D7B5EC00LL, (int64_t)0xFFFFFC184223F993LL, (int64_t)0xFFFFFC182AC99417LL, (int64_t)0xFFFFFC180F4DF565LL, (int64_t)0xFFFFFC183CB903C1LL, (int64_t)0xFFFFFC181DC0A97FLL, (int64_t)0xFFFFFC1877D571BDLL, (int64_t)0xFFFFFC1806C0056DLL, (int64_t)0xFFFFFC1820B358F9LL, (int64_t)0xFFFFFC18D931802ELL, (int64_t)0xFFFFFC18670FE9F3LL, (int64_t)0xFFFFFC1812FB5377LL, (int64_t)0xFFFFFC189C593908LL, (int64_t)0xFFFFFC1877DCCEFBLL, (int64_t)0xFFFFFC18F14DA068LL, (int64_t)0xFFFFFC1881B4AD52LL, (int64_t)0xFFFFFC18B36AAF2CLL, (int64_t)0xFFFFFC18AF25D0C8LL, (int64_t)0xFFFFFC188AA1BCCALL, (int64_t)0xFFFFFC1835179C07LL, (int64_t)0xFFFFFC18CEA27FE8LL, (int64_t)0xFFFFFC1894689566LL, (int64_t)0xFFFFFC180626B157LL, (int64_t)0xFFFFFC18521F0B19LL, (int64_t)0xFFFFFC18574013E9LL, (int64_t)0xFFFFFC188AA33D46LL };
		static const int64_t output0[] = { (int64_t)0xFFFFFFFFEF35010CLL, (int64_t)0xFFFFFFFFEF35010CLL, (int64_t)0xFFFFFFFFEF35010CLL, (int64_t)0xFFFFFFFFEF35010CLL, (int64_t)0xFFFFFFFFEF35010CLL, (int64_t)0xFFFFFFFFEF35010CLL, (int64_t)0xFFFFFFFFEF35010CLL, (int64_t)0xFFFFFFFFEF35010CLL, (int64_t)0xFFFFFFFFEF35010CLL, (int64_t)0xFFFFFFFFEF35010CLL, (int64_t)0xFFFFFFFFEF35010CLL, (int64_t)0xFFFFFFFFEF35010CLL, (int64_t)0xFFFFFFFFEF35010CLL, (int64_t)0xFFFFFFFFEF35010CLL, (int64_t)0xFFFFFFFFEF35010CLL, (int64_t)0xFFFFFFFFEF35010CLL, (int64_t)0xFFFFFFFFEF35010CLL, (int64_t)0xFFFFFFFFEF35010CLL, (int64_t)0xFFFFFFFFEF35010CLL, (int64_t)0xFFFFFFFFEF35010CLL, (int64_t)0xFFFFFFFFEF35010CLL, (int64_t)0xFFFFFFFFEF35010CLL, (int64_t)0xFFFFFFFFEF35010CLL, (int64_t)0xFFFFFFFFEF35010CLL, (int64_t)0xFFFFFFFFEF35010CLL, (int64_t)0xFFFFFFFFFF737D06LL, (int64_t)0xFFFFFFFB5F2A240DLL, (int64_t)0xFFFFFFFDDFE4ADEELL, (int64_t)0xFFFFFFFFFFF10007LL, (int64_t)0x54FDBLL, (int64_t)0x1CF509LL, (int64_t)0xFFFFFFFFE8621BC1LL, (int64_t)0xE43FB908ALL, (int64_t)0xED43648C6CLL, (int64_t)0x2F88EDLL, (int64_t)0xFFFFFFFFDF1F0CADLL, (int64_t)0xC068DE61LL, (int64_t)0x30CAE2LL, (int64_t)0xBF1EALL, (int64_t)0x291BLL, (int64_t)0xFFFFFFFEA4B43A26LL, (int64_t)0x1BEADA376E8LL, (int64_t)0xFFFFFFFFFEF6A9D7LL, (int64_t)0x34902ALL, (int64_t)0xFFFFFFFFFFFFED11LL, (int64_t)0xBE90791DLL, (int64_t)0xFFFFFFF54891BA04LL, (int64_t)0xFFFFFFFFFFF6530CLL, (int64_t)0x46D4CBLL, (int64_t)0xFFFFFFF7C1E08326LL, (int64_t)0x4ACFE545LL, (int64_t)0xFFFFFFFF390BF5C6LL, (int64_t)0xFFFFFFFF9BF70B66LL, (int64_t)0xD73B5904LL, (int64_t)0x39D07461DCLL, (int64_t)0xFFFFFFF9D77902AELL, (int64_t)0xFFFFFFFE6A75B8A3LL, (int64_t)0xFFFFFFFD6FCD414CLL, (int64_t)0xFFFFFFFE1E493844LL, (int64_t)0xFFFFFFFEBF506539LL, (int64_t)0xFFFFFFF6BF36E9FBLL, (int64_t)0xDCEFE93CLL, (int64_t)0x14EBB6814LL, (int64_t)0xFFFFFFFFFFFFDCFDLL, (int64_t)0xFFFFFFFE5B7B54B5LL, (int64_t)0xFFFFFFFF09672B85LL, (int64_t)0x4A8D8812LL, (int64_t)0xFFFFFFFFCB384FA1LL, (int64_t)0xFFFFFFFFE9BB9074LL, (int64_t)0x185EEA0BLL, (int64_t)0xFFFFFFFEB1EE887DLL, (int64_t)0xA00BA036LL, (int64_t)0xFFFFFFFF3D7463DFLL, (int64_t)0x5DDEAF4DLL, (int64_t)0xFFFFFFFEDC8662CELL, (int64_t)0xFFFFFFFEFFF5AD53LL, (int64_t)0xFFFFFFFF000DF475LL, (int64_t)0xFFFFFFFF00310EC4LL, (int64_t)0xFFFFFFFF002AB9F5LL, (int64_t)0xFFFFFFFF00233D8CLL, (int64_t)0xFFFFFFFEFFF128CBLL, (int64_t)0xFFFFFFFF002F5207LL, (int64_t)0xFFFFFFFF000B77E1LL, (int64_t)0xFFFFFFFEFFD51A1BLL, (int64_t)0xFFFFFFFEFFE8C2D9LL, (int64_t)0xFFFFFFFF002DFBC2LL, (int64_t)0xFFFFFFFEFFF68336LL, (int64_t)0xFFFFFFFF0019B3B5LL, (int64_t)0xFFFFFFFEFFF7A100LL, (int64_t)0xFFFFFFFF000EF25DLL, (int64_t)0xFFFFFFFEFFF6247ELL, (int64_t)0xFFFFFFFEFFF80D61LL, (int64_t)0xFFFFFFFEFFEA647DLL, (int64_t)0xFFFFFFFF0023ABCELL, (int64_t)0xFFFFFFFF00070AEALL, (int64_t)0xFFFFFFFF001852C6LL, (int64_t)0xFFFFFFFF0037D590LL, (int64_t)0xFFFFFFFEFFFFEB79LL, (int64_t)0xFFFFFFFF0028330BLL, (int64_t)0xFFFFFFFEFFF7BA17LL };
		for (int ndx = 0; ndx < 100; ndx++)
			Util::Check("Fixed64::Div", Fixed64::Div(input0[ndx], input1[ndx]), output0[ndx], input0[ndx], input1[ndx]);
	}

	// Fixed64.DivFast()
	static void Fixed64_DivFast()
	{
		static const int64_t input0[] = { (int64_t)0x1130FFFFLL, (int64_t)0x1130FFFFLL, (int64_t)0x1130FFFFLL, (int64_t)0x1130FFFFLL, (int64_t)0x1130FFFFLL, (int64_t)0x1130FFFFLL, (int64_t)0x1130FFFFLL, (int64_t)0x1130FFFFLL, (int64_t)0x1130FFFFLL, (int64_t)0x1130FFFFLL, (int64_t)0x1130FFFFLL, (int64_t)0x1130FFFFLL, (int64_t)0x1130FFFFLL, (int64_t)0x1130FFFFLL, (int64_t)0x1130FFFFLL, (int64_t)0x1130FFFFLL, (int64_t)0x1130FFFFLL, (int64_t)0x1130FFFFLL, (int64_t)0x1130FFFFLL, (int64_t)0x1130FFFFLL, (int64_t)0x1130FFFFLL, (int64_t)0x1130FFFFLL, (int64_t)0x1130FFFFLL, (int64_t)0x1130FFFFLL, (int64_t)0x1130FFFFLL, (int64_t)0x24236CAE314LL, (int64_t)0xFFFFFC4E89B12D8ELL, (int64_t)0x21F2512BE4ELL, (int64_t)0x2F82F0D24E0LL, (int64_t)0x24A8B9FB585LL, (int64_t)0x2262A6EA51CLL, (int64_t)0x36F0CEC34AELL, (int64_t)0xFFFFFD3B69B76067LL, (int64_t)0x34C63ABED9LL, (int64_t)0xD0F2AFA331LL, (int64_t)0x352C21E5E35LL, (int64_t)0xFFFFFE86C1F54E9ELL, (int64_t)0x364F9B8FF79LL, (int64_t)0x34BA6121DE7LL, (int64_t)0xFFFFFF5FED4D3630LL, (int64_t)0xFFFFFE0D3BC952EBLL, (int64_t)0x14359AE09F6LL, (int64_t)0x3D065511E90LL, (int64_t)0xAF35EFC34ELL, (int64_t)0xFFFFFEBF0EE94FEFLL, (int64_t)0xFFFFFC90639CBE51LL, (int64_t)0x32A75369EC4LL, (int64_t)0x1CD2A8E764ALL, (int64_t)0x1FE2B87C4ECLL, (int64_t)0x23C9AEAE709LL, (int64_t)0x2119EFCBC233E000LL, (int64_t)0x3E6F62A6FCDEC400LL, (int64_t)0xCBB9D38E1773A800LL, (int64_t)0xE8EA455251D48A00LL, (int64_t)0xF2F9ECD665F3DA00LL, (int64_t)0x3122EAC4E245D400LL, (int64_t)0xE5F9CCF94BF39A00LL, (int64_t)0xC21C423D04388400LL, (int64_t)0xCC0149DF18029400LL, (int64_t)0xC7A60C300F4C1800LL, (int64_t)0xCE04EA4C1C09D400LL, (int64_t)0xC69E17E90D3C3000LL, (int64_t)0xE5724C8B4AE49A00LL, (int64_t)0xEE57BA345CAF7400LL, (int64_t)0x2B5E0B84D6BC1800LL, (int64_t)0x22C81755C5903000LL, (int64_t)0xC3E233A407C46800LL, (int64_t)0x10A82E91A1505C00LL, (int64_t)0x29E0215AD3C04400LL, (int64_t)0x3529A23CEA534400LL, (int64_t)0xC6371B090C6E3600LL, (int64_t)0x15B24BEBAB649800LL, (int64_t)0x109FFA82A13FF400LL, (int64_t)0x21F48647C3E90C00LL, (int64_t)0xED35B7655A6B6E00LL, (int64_t)0x3E7F51A63BFLL, (int64_t)0x3E7C04F3B6DLL, (int64_t)0x3E7B5A15227LL, (int64_t)0x3E77512657CLL, (int64_t)0x3E7E4C6DE55LL, (int64_t)0x3E716CF47C0LL, (int64_t)0x3E75B9ED048LL, (int64_t)0x3E7538A9A8CLL, (int64_t)0x3E7F7691BD9LL, (int64_t)0x3E794E4B28DLL, (int64_t)0x3E7FBEAA207LL, (int64_t)0x3E704DFABF6LL, (int64_t)0x3E7D450F0FFLL, (int64_t)0x3E74B963EA8LL, (int64_t)0x3E7B523DDD5LL, (int64_t)0x3E7FB09693BLL, (int64_t)0x3E789594FB9LL, (int64_t)0x3E761B1418ALL, (int64_t)0x3E7F4D17935LL, (int64_t)0x3E70F982494LL, (int64_t)0x3E7B5AE5EC5LL, (int64_t)0x3E711A6D368LL, (int64_t)0x3E7B959FD4BLL, (int64_t)0x3E79DC9AC9BLL, (int64_t)0x3E7B51768E3LL };
		static const int64_t input1[] = { (int64_t)0xFFFFFFFEF9ED0001LL, (int64_t)0xFFFFFFFEF9ED0001LL, (int64_t)0xFFFFFFFEF9ED0001LL, (int64_t)0xFFFFFFFEF9ED0001LL, (int64_t)0xFFFFFFFEF9ED0001LL, (int64_t)0xFFFFFFFEF9ED0001LL, (int64_t)0xFFFFFFFEF9ED0001LL, (int64_t)0xFFFFFFFEF9ED0001LL, (int64_t)0xFFFFFFFEF9ED0001LL, (int64_t)0xFFFFFFFEF9ED0001LL, (int64_t)0xFFFFFFFEF9ED0001LL, (int64_t)0xFFFFFFFEF9ED0001LL, (int64_t)0xFFFFFFFEF9ED0001LL, (int64_t)0xFFFFFFFEF9ED0001LL, (int64_t)0xFFFFFFFEF9ED0001LL, (int64_t)0xFFFFFFFEF9ED0001LL, (int64_t)0xFFFFFFFEF9ED0001LL, (int64_t)0xFFFFFFFEF9ED0001LL, (int64_t)0xFFFFFFFEF9ED0001LL, (int64_t)0xFFFFFFFEF9ED0001LL, (int64_t)0xFFFFFFFEF9ED0001LL, (int64_t)0xFFFFFFFEF9ED0001LL, (int64_t)0xFFFFFFFEF9ED0001LL, (int64_t)0xFFFFFFFEF9ED0001LL, (int64_t)0xFFFFFFFEF9ED0001LL, (int64_t)0xFFBFC105782A5958LL, (int64_t)0xFFF05D5C186A81F5LL, (int64_t)0x635F3F47B875A00LL, (int64_t)0x30530216A26B400LL, (int64_t)0xFFFFFFE183BA8E2ALL, (int64_t)0xFF82A27C86F88AC8LL, (int64_t)0x18691C60D1LL, (int64_t)0x1592A746F33LL, (int64_t)0xFFFFFDCF7765DEBFLL, (int64_t)0xFFFFFFF8D6C99AD3LL, (int64_t)0x8CF00566DCFDLL, (int64_t)0x42CD1C5FC3LL, (int64_t)0xC99D5E568B981200LL, (int64_t)0xFFFFF946797C232DLL, (int64_t)0x1974A84FF4B1700LL, (int64_t)0x30297127AC86E000LL, (int64_t)0xFFFFFF61ADB6B990LL, (int64_t)0xFFFFFFFEE1942D7CLL, (int64_t)0x301A64CB92B4LL, (int64_t)0x20DEE7423D54CLL, (int64_t)0xCE5DDFCE25B0B600LL, (int64_t)0xFFFFF52533F77AF2LL, (int64_t)0x112406F8EADA7LL, (int64_t)0x90F1A1BAAF8LL, (int64_t)0xECC1074027061000LL, (int64_t)0x2887938FD10F2800LL, (int64_t)0x332D99C0E65B3400LL, (int64_t)0xE389F6FE4713EE00LL, (int64_t)0xD7F3C9BD2FE79400LL, (int64_t)0x26362A8ACC6C5400LL, (int64_t)0xED141D455A283A00LL, (int64_t)0xD08035AE21006C00LL, (int64_t)0x1F1700C83E2E000LL, (int64_t)0x3499ABC5E9335800LL, (int64_t)0xF3EEFD9967DDFC00LL, (int64_t)0x2391F93AC723F400LL, (int64_t)0xC7F0E7F30FE1D000LL, (int64_t)0x3B0EC9EFF61D9400LL, (int64_t)0x33FB2FEBE7F66000LL, (int64_t)0xDAFB4B0D35F69600LL, (int64_t)0xDA9DEDCB353BDC00LL, (int64_t)0xD7C0D8922F81B000LL, (int64_t)0x32FE2FB6E5FC6000LL, (int64_t)0xE6373DFB4C6E7C00LL, (int64_t)0x1B3D3651B67A6C00LL, (int64_t)0x37A1E16AEF43C400LL, (int64_t)0x39BA946BF3752800LL, (int64_t)0x125936B4A4B26C00LL, (int64_t)0xE9BBCE09D377800LL, (int64_t)0x25EABF2ACBD58000LL, (int64_t)0xFFFFFC1823137B13LL, (int64_t)0xFFFFFC183A97C797LL, (int64_t)0xFFFFFC18AB2E86F2LL, (int64_t)0xFFFFFC18F2916014LL, (int64_t)0xFFFFFC1894D8540CLL, (int64_t)0xFFFFFC18226601B9LL, (int64_t)0xFFFFFC18BE5739E8LL, (int64_t)0xFFFFFC1856238BC5LL, (int64_t)0xFFFFFC189BEDEADCLL, (int64_t)0xFFFFFC1828AE0EABLL, (int64_t)0xFFFFFC18662700E3LL, (int64_t)0xFFFFFC1894A0E6CCLL, (int64_t)0xFFFFFC18F12F8564LL, (int64_t)0xFFFFFC18FB9386CALL, (int64_t)0xFFFFFC18AEF14C8ELL, (int64_t)0xFFFFFC18947ADDD4LL, (int64_t)0xFFFFFC1843A8CAA7LL, (int64_t)0xFFFFFC18014B87FBLL, (int64_t)0xFFFFFC18ACEE52B6LL, (int64_t)0xFFFFFC18C5F40BEELL, (int64_t)0xFFFFFC18CFA3D060LL, (int64_t)0xFFFFFC18A4CF3FDCLL, (int64_t)0xFFFFFC186599DF3BLL, (int64_t)0xFFFFFC1868B561DFLL, (int64_t)0xFFFFFC18448EFC99LL };
		static const int64_t output0[] = { (int64_t)0xFFFFFFFFEF34F6BCLL, (int64_t)0xFFFFFFFFEF34F6BCLL, (int64_t)0xFFFFFFFFEF34F6BCLL, (int64_t)0xFFFFFFFFEF34F6BCLL, (int64_t)0xFFFFFFFFEF34F6BCLL, (int64_t)0xFFFFFFFFEF34F6BCLL, (int64_t)0xFFFFFFFFEF34F6BCLL, (int64_t)0xFFFFFFFFEF34F6BCLL, (int64_t)0xFFFFFFFFEF34F6BCLL, (int64_t)0xFFFFFFFFEF34F6BCLL, (int64_t)0xFFFFFFFFEF34F6BCLL, (int64_t)0xFFFFFFFFEF34F6BCLL, (int64_t)0xFFFFFFFFEF34F6BCLL, (int64_t)0xFFFFFFFFEF34F6BCLL, (int64_t)0xFFFFFFFFEF34F6BCLL, (int64_t)0xFFFFFFFFEF34F6BCLL, (int64_t)0xFFFFFFFFEF34F6BCLL, (int64_t)0xFFFFFFFFEF34F6BCLL, (int64_t)0xFFFFFFFFEF34F6BCLL, (int64_t)0xFFFFFFFFEF34F6BCLL, (int64_t)0xFFFFFFFFEF34F6BCLL, (int64_t)0xFFFFFFFFEF34F6BCLL, (int64_t)0xFFFFFFFFEF34F6BCLL, (int64_t)0xFFFFFFFFEF34F6BCLL, (int64_t)0xFFFFFFFFEF34F6BCLL, (int64_t)0xFFFFFFFFFFF6FFFELL, (int64_t)0x3C7813LL, (int64_t)0x5773LL, (int64_t)0xFBB1LL, (int64_t)0xFFFFFFECC284836ALL, (int64_t)0xFFFFFFFFFFFB9C8ELL, (int64_t)0x2402CA57A3LL, (int64_t)0xFFFFFFFDF274A921LL, (int64_t)0xFFFFFFFFE7E5C4B3LL, (int64_t)0xFFFFFFE2D231867FLL, (int64_t)0x609528ELL, (int64_t)0xFFFFFFFA5A4AC3B0LL, (int64_t)0xFFFFFFFFFFFFF005LL, (int64_t)0xFFFFFFFF828BB392LL, (int64_t)0xFFFFFFFFFFFF9B63LL, (int64_t)0xFFFFFFFFFFFFF5A4LL, (int64_t)0xFFFFFFFDF5285537LL, (int64_t)0xFFFFFC974FF263B4LL, (int64_t)0x3A47427LL, (int64_t)0xFFFFFFFFFF63C73FLL, (int64_t)0x11B8LL, (int64_t)0xFFFFFFFFB555BA5FLL, (int64_t)0x1AE7A5ALL, (int64_t)0x3850E85CLL, (int64_t)0xFFFFFFFFFFFFE23FLL, (int64_t)0xD1147144LL, (int64_t)0x1384E4131LL, (int64_t)0x1D6322B54LL, (int64_t)0x93910F3DLL, (int64_t)0xFFFFFFFFA8BF775BLL, (int64_t)0xFFFFFFFD6735A773LL, (int64_t)0x8C427296LL, (int64_t)0xFFFFFFE0264AFA33LL, (int64_t)0xFFFFFFFF02F2CC36LL, (int64_t)0x4AB8AAA17LL, (int64_t)0xFFFFFFFE98499978LL, (int64_t)0x1060B89D1LL, (int64_t)0xFFFFFFFF8CE57696LL, (int64_t)0xFFFFFFFFA90A88D6LL, (int64_t)0xFFFFFFFED418BE6DLL, (int64_t)0xFFFFFFFF11D14588LL, (int64_t)0x17E62AB4ALL, (int64_t)0x539F4712LL, (int64_t)0xFFFFFFFE603DB387LL, (int64_t)0x1F3A25B22LL, (int64_t)0xFFFFFFFEF618423FLL, (int64_t)0x6036ECC6LL, (int64_t)0xE7F3539FLL, (int64_t)0x2530B5743LL, (int64_t)0xFFFFFFFF8123444ALL, (int64_t)0xFFFFFFFEFFFA79B7LL, (int64_t)0xFFFFFFFF0001F86DLL, (int64_t)0xFFFFFFFEFFE7DC22LL, (int64_t)0xFFFFFFFEFFE619A6LL, (int64_t)0xFFFFFFFEFFE18214LL, (int64_t)0xFFFFFFFF0033902DLL, (int64_t)0xFFFFFFFEFFFA0224LL, (int64_t)0xFFFFFFFF0016C4E1LL, (int64_t)0xFFFFFFFEFFDAEB4FLL, (int64_t)0xFFFFFFFF0011AC78LL, (int64_t)0xFFFFFFFEFFE78C3FLL, (int64_t)0xFFFFFFFF001AEA63LL, (int64_t)0xFFFFFFFEFFCE0C9BLL, (int64_t)0xFFFFFFFEFFEE6BC3LL, (int64_t)0xFFFFFFFEFFE7057CLL, (int64_t)0xFFFFFFFEFFDBE660LL, (int64_t)0xFFFFFFFF000DB8D1LL, (int64_t)0xFFFFFFFF0028DCD9LL, (int64_t)0xFFFFFFFEFFD73989LL, (int64_t)0xFFFFFFFF000B88EDLL, (int64_t)0xFFFFFFFEFFDE803CLL, (int64_t)0xFFFFFFFF00137F90LL, (int64_t)0xFFFFFFFEFFF8BC90LL, (int64_t)0xFFFFFFFEFFFEFFDFLL, (int64_t)0xFFFFFFFF00024A6ELL };
		for (int ndx = 0; ndx < 100; ndx++)
			Util::Check("Fixed64::DivFast", Fixed64::DivFast(input0[ndx], input1[ndx]), output0[ndx], input0[ndx], input1[ndx]);
	}

	// Fixed64.DivFastest()
	static void Fixed64_DivFastest()
	{
		static const int64_t input0[] = { (int64_t)0x1130FFFFLL, (int64_t)0x1130FFFFLL, (int64_t)0x1130FFFFLL, (int64_t)0x1130FFFFLL, (int64_t)0x1130FFFFLL, (int64_t)0x1130FFFFLL, (int64_t)0x1130FFFFLL, (int64_t)0x1130FFFFLL, (int64_t)0x1130FFFFLL, (int64_t)0x1130FFFFLL, (int64_t)0x1130FFFFLL, (int64_t)0x1130FFFFLL, (int64_t)0x1130FFFFLL, (int64_t)0x1130FFFFLL, (int64_t)0x1130FFFFLL, (int64_t)0x1130FFFFLL, (int64_t)0x1130FFFFLL, (int64_t)0x1130FFFFLL, (int64_t)0x1130FFFFLL, (int64_t)0x1130FFFFLL, (int64_t)0x1130FFFFLL, (int64_t)0x1130FFFFLL, (int64_t)0x1130FFFFLL, (int64_t)0x1130FFFFLL, (int64_t)0x1130FFFFLL, (int64_t)0xFFFFFF3437A350F9LL, (int64_t)0x8ACA7F0AA5LL, (int64_t)0x1760D73D15CLL, (int64_t)0x6A6CC97064LL, (int64_t)0xFFFFFCC511A6965BLL, (int64_t)0x308F6D7ADC1LL, (int64_t)0xFFFFFC4E5BF56A0DLL, (int64_t)0xFFFFFCD244BD5735LL, (int64_t)0x1F3D8D56F37LL, (int64_t)0xFFFFFC5559DA7CFBLL, (int64_t)0xFFFFFE93F527D4D8LL, (int64_t)0xFFFFFC4D2439758BLL, (int64_t)0xFFFFFE3BBA960648LL, (int64_t)0x5FBF3A2DCFLL, (int64_t)0x1AFF7A05E6FLL, (int64_t)0x1C722863EBELL, (int64_t)0xFFFFFEDF092362AFLL, (int64_t)0xFFFFFF84EB159DFALL, (int64_t)0xFFFFFFA4559C17B9LL, (int64_t)0xFFFFFCED38EBFF2BLL, (int64_t)0x7A629137A4LL, (int64_t)0xFFFFFFD54D00F23BLL, (int64_t)0xFFFFFEF0A95D15F2LL, (int64_t)0x11761A9059ELL, (int64_t)0x119D482C6E3LL, (int64_t)0x2AAC7BF2D558F800LL, (int64_t)0x3578F224EAF1E400LL, (int64_t)0xD310E9B92621D400LL, (int64_t)0xFDFFDFB47BFFC000LL, (int64_t)0xD5E359B02BC6B400LL, (int64_t)0x35B0CEFFEB619C00LL, (int64_t)0xDA3F8F7C347F2000LL, (int64_t)0xC60F17380C1E2E00LL, (int64_t)0x34C62962E98C5400LL, (int64_t)0xCE67FB121CCFF600LL, (int64_t)0x28409A7AD0813400LL, (int64_t)0x10567710A0ACF000LL, (int64_t)0x1A0CF681B419EC00LL, (int64_t)0xDD9FE1AB3B3FC400LL, (int64_t)0x30F4A4F861E9400LL, (int64_t)0xD3327BD92664F800LL, (int64_t)0xE4A33E2649467C00LL, (int64_t)0x3A0F2F0DF41E6000LL, (int64_t)0x3821B8687043800LL, (int64_t)0xF5BA4EA56B749E00LL, (int64_t)0xD43D0505287A0A00LL, (int64_t)0xDF630C563EC61800LL, (int64_t)0xD129F3232253E600LL, (int64_t)0x32F62A8065EC00LL, (int64_t)0x4338EDE88671C00LL, (int64_t)0x3E71B714EA6LL, (int64_t)0x3E7821CDC9DLL, (int64_t)0x3E7EB6ED113LL, (int64_t)0x3E730525BBALL, (int64_t)0x3E757500E18LL, (int64_t)0x3E79692DF39LL, (int64_t)0x3E7C89DFE03LL, (int64_t)0x3E7A5BBE71DLL, (int64_t)0x3E7F398A1ABLL, (int64_t)0x3E7EFA3D701LL, (int64_t)0x3E7BFAE46E5LL, (int64_t)0x3E7D3CC7671LL, (int64_t)0x3E768030CC8LL, (int64_t)0x3E7AA311B51LL, (int64_t)0x3E799B40771LL, (int64_t)0x3E73001E1B4LL, (int64_t)0x3E7D62B9725LL, (int64_t)0x3E7D0264C9DLL, (int64_t)0x3E78BDD81F9LL, (int64_t)0x3E7EF54B41FLL, (int64_t)0x3E72184B380LL, (int64_t)0x3E707BF60C8LL, (int64_t)0x3E7CDE774F7LL, (int64_t)0x3E76D289C34LL, (int64_t)0x3E7541DA548LL };
		static const int64_t input1[] = { (int64_t)0xFFFFFFFEF9ED0001LL, (int64_t)0xFFFFFFFEF9ED0001LL, (int64_t)0xFFFFFFFEF9ED0001LL, (int64_t)0xFFFFFFFEF9ED0001LL, (int64_t)0xFFFFFFFEF9ED0001LL, (int64_t)0xFFFFFFFEF9ED0001LL, (int64_t)0xFFFFFFFEF9ED0001LL, (int64_t)0xFFFFFFFEF9ED0001LL, (int64_t)0xFFFFFFFEF9ED0001LL, (int64_t)0xFFFFFFFEF9ED0001LL, (int64_t)0xFFFFFFFEF9ED0001LL, (int64_t)0xFFFFFFFEF9ED0001LL, (int64_t)0xFFFFFFFEF9ED0001LL, (int64_t)0xFFFFFFFEF9ED0001LL, (int64_t)0xFFFFFFFEF9ED0001LL, (int64_t)0xFFFFFFFEF9ED0001LL, (int64_t)0xFFFFFFFEF9ED0001LL, (int64_t)0xFFFFFFFEF9ED0001LL, (int64_t)0xFFFFFFFEF9ED0001LL, (int64_t)0xFFFFFFFEF9ED0001LL, (int64_t)0xFFFFFFFEF9ED0001LL, (int64_t)0xFFFFFFFEF9ED0001LL, (int64_t)0xFFFFFFFEF9ED0001LL, (int64_t)0xFFFFFFFEF9ED0001LL, (int64_t)0xFFFFFFFEF9ED0001LL, (int64_t)0xDABD3BC447ABC400LL, (int64_t)0xFFFFFFFB570CEFD7LL, (int64_t)0xFD9153438D9LL, (int64_t)0xCE45D670754LL, (int64_t)0xFFFF44047DE55789LL, (int64_t)0xFFFF6CA56878E252LL, (int64_t)0x20E66D4F5ELL, (int64_t)0x4A0967400F4D48LL, (int64_t)0xFFFFFCF37C4B1965LL, (int64_t)0xFFFFFFFE7833F476LL, (int64_t)0x1D972ED55BBLL, (int64_t)0x21E912E4D65AALL, (int64_t)0xFFFFFFF6166F5601LL, (int64_t)0xFFFFFDCF55F22CA9LL, (int64_t)0x17E3F1A6CA5E6800LL, (int64_t)0x251B7A3606A19LL, (int64_t)0xFFFFFC8B97AFAC43LL, (int64_t)0xFFFFFDA4057083B5LL, (int64_t)0x3070C157852F7800LL, (int64_t)0x3E3B094257AD7600LL, (int64_t)0xFFFFF20B172BB744LL, (int64_t)0xFFFFC61C33FB347FLL, (int64_t)0x2A93F038EA89LL, (int64_t)0x4C6193ED59280LL, (int64_t)0xFFFF822BB3F56889LL, (int64_t)0xDE116E2F3C22DC00LL, (int64_t)0xD5D9AB8D2BB35800LL, (int64_t)0xF059544360B2A800LL, (int64_t)0x120D90D3A41B2000LL, (int64_t)0xDFAD9BBA3F5B3800LL, (int64_t)0x18DF759831BF000LL, (int64_t)0x103FA9A0A07F5400LL, (int64_t)0x2540AB7DCA815800LL, (int64_t)0x31F9D032E3F3A000LL, (int64_t)0x17B120AEAF624000LL, (int64_t)0xB64F03F96C9E000LL, (int64_t)0xC270221904E04400LL, (int64_t)0xE0C38DC241871C00LL, (int64_t)0xD31B74922636E800LL, (int64_t)0xCCEDCD6C19DB9C00LL, (int64_t)0xCBAB7C011756F800LL, (int64_t)0x2D4D1BA85A9A400LL, (int64_t)0xD958662432B0CC00LL, (int64_t)0xD88D7FB8311B0000LL, (int64_t)0xD1AE9604235D2C00LL, (int64_t)0x391B696CF236D400LL, (int64_t)0xFB6C3529F6D8800LL, (int64_t)0xC9CADD561395BA00LL, (int64_t)0xFB39C59776738C00LL, (int64_t)0x2CA15634D942AC00LL, (int64_t)0xFFFFFC185D2F996BLL, (int64_t)0xFFFFFC18F3EAB39CLL, (int64_t)0xFFFFFC180EC7192BLL, (int64_t)0xFFFFFC18A2F73FB4LL, (int64_t)0xFFFFFC1869CFB51DLL, (int64_t)0xFFFFFC18634AAA47LL, (int64_t)0xFFFFFC18E7E26392LL, (int64_t)0xFFFFFC1815C0E2A9LL, (int64_t)0xFFFFFC1835278AC3LL, (int64_t)0xFFFFFC18DC161732LL, (int64_t)0xFFFFFC18FF00EDEALL, (int64_t)0xFFFFFC184AEF7DD3LL, (int64_t)0xFFFFFC1865D104BFLL, (int64_t)0xFFFFFC18735C6DB3LL, (int64_t)0xFFFFFC18E7309DDCLL, (int64_t)0xFFFFFC1831D41D85LL, (int64_t)0xFFFFFC18A0DBA2ECLL, (int64_t)0xFFFFFC18B2118628LL, (int64_t)0xFFFFFC18C96CEDDELL, (int64_t)0xFFFFFC18A5D2AC0ELL, (int64_t)0xFFFFFC18BC757E70LL, (int64_t)0xFFFFFC18E2596954LL, (int64_t)0xFFFFFC1877804F09LL, (int64_t)0xFFFFFC1868990801LL, (int64_t)0xFFFFFC180CA4B5ADLL };
		static const int64_t output0[] = { (int64_t)0xFFFFFFFFEF340A54LL, (int64_t)0xFFFFFFFFEF340A54LL, (int64_t)0xFFFFFFFFEF340A54LL, (int64_t)0xFFFFFFFFEF340A54LL, (int64_t)0xFFFFFFFFEF340A54LL, (int64_t)0xFFFFFFFFEF340A54LL, (int64_t)0xFFFFFFFFEF340A54LL, (int64_t)0xFFFFFFFFEF340A54LL, (int64_t)0xFFFFFFFFEF340A54LL, (int64_t)0xFFFFFFFFEF340A54LL, (int64_t)0xFFFFFFFFEF340A54LL, (int64_t)0xFFFFFFFFEF340A54LL, (int64_t)0xFFFFFFFFEF340A54LL, (int64_t)0xFFFFFFFFEF340A54LL, (int64_t)0xFFFFFFFFEF340A54LL, (int64_t)0xFFFFFFFFEF340A54LL, (int64_t)0xFFFFFFFFEF340A54LL, (int64_t)0xFFFFFFFFEF340A54LL, (int64_t)0xFFFFFFFFEF340A54LL, (int64_t)0xFFFFFFFFEF340A54LL, (int64_t)0xFFFFFFFFEF340A54LL, (int64_t)0xFFFFFFFFEF340A54LL, (int64_t)0xFFFFFFFFEF340A54LL, (int64_t)0xFFFFFFFFEF340A54LL, (int64_t)0xFFFFFFFFEF340A54LL, (int64_t)0x578LL, (int64_t)0xFFFFFFE2367383DELL, (int64_t)0x17991C65LL, (int64_t)0x842054DLL, (int64_t)0x466029BLL, (int64_t)0xFFFFFFFFFAB9EC9CLL, (int64_t)0xFFFFFFE33FFA7FF0LL, (int64_t)0xFFFFFFFFFFF501E2LL, (int64_t)0xFFFFFFFF5C0A8654LL, (int64_t)0x2656180A4E8LL, (int64_t)0xFFFFFFFF3B319A22LL, (int64_t)0xFFFFFFFFFE411320LL, (int64_t)0x2D9E27B807LL, (int64_t)0xFFFFFFFFD4440324LL, (int64_t)0x1214LL, (int64_t)0xC44627LL, (int64_t)0x53AB41A9LL, (int64_t)0x342BF022LL, (int64_t)0xFFFFFFFFFFFFFE1BLL, (int64_t)0xFFFFFFFFFFFFF35CLL, (int64_t)0xFFFFFFFFF73A945CLL, (int64_t)0xBCD2F6LL, (int64_t)0xFFFFFFFFF9A134EDLL, (int64_t)0x3A85E2LL, (int64_t)0xFFFFFFFFFDC2C7E5LL, (int64_t)0xFFFFFFFEBDECE9A8LL, (int64_t)0xFFFFFFFEBB5A9E10LL, (int64_t)0x2DEBA4865LL, (int64_t)0xFFFFFFFFE39FD0A0LL, (int64_t)0x14D93BB55LL, (int64_t)0x228B568B8CLL, (int64_t)0xFFFFFFFDAD1F3F97LL, (int64_t)0xFFFFFFFE71C7A9B6LL, (int64_t)0x10E64660ELL, (int64_t)0xFFFFFFFDE8286944LL, (int64_t)0x388221A83LL, (int64_t)0xFFFFFFFFBC165833LL, (int64_t)0xFFFFFFFF2A928931LL, (int64_t)0xC3F6E2E4LL, (int64_t)0xFFFFFFFFF0A8738CLL, (int64_t)0xDB4216CALL, (int64_t)0xFFFFFFF656AC17AFLL, (int64_t)0xFFFFFFFE7F84763FLL, (int64_t)0xFFFFFFFFE93C9BC6LL, (int64_t)0x38C39E54LL, (int64_t)0xFFFFFFFF3BCDC8E6LL, (int64_t)0xFFFFFFFDECD93BD5LL, (int64_t)0xDD44F4A2LL, (int64_t)0xFFFFFFFFF5537783LL, (int64_t)0x1817664CLL, (int64_t)0xFFFFFFFF00395B02LL, (int64_t)0xFFFFFFFEFFF8B50DLL, (int64_t)0xFFFFFFFF00180D28LL, (int64_t)0xFFFFFFFF00224340LL, (int64_t)0xFFFFFFFF0026D15ALL, (int64_t)0xFFFFFFFF001847CDLL, (int64_t)0xFFFFFFFEFFE9B665LL, (int64_t)0xFFFFFFFF00281DB1LL, (int64_t)0xFFFFFFFF000C33FFLL, (int64_t)0xFFFFFFFEFFE2B916LL, (int64_t)0xFFFFFFFEFFE61C8CLL, (int64_t)0xFFFFFFFF000ECD69LL, (int64_t)0xFFFFFFFF00238EFBLL, (int64_t)0xFFFFFFFF000F2B79LL, (int64_t)0xFFFFFFFEFFF5E7F5LL, (int64_t)0xFFFFFFFF003F1CB8LL, (int64_t)0xFFFFFFFEFFF8546ELL, (int64_t)0xFFFFFFFEFFF57D5FLL, (int64_t)0xFFFFFFFF000107B8LL, (int64_t)0xFFFFFFFEFFF09F64LL, (int64_t)0xFFFFFFFF001F911CLL, (int64_t)0xFFFFFFFF001C8611LL, (int64_t)0xFFFFFFFF0004F911LL, (int64_t)0xFFFFFFFF00218897LL, (int64_t)0xFFFFFFFF003F51DALL };
		for (int ndx = 0; ndx < 100; ndx++)
			Util::Check("Fixed64::DivFastest", Fixed64::DivFastest(input0[ndx], input1[ndx]), output0[ndx], input0[ndx], input1[ndx]);
	}

	// Fixed32.Div()
	static void Fixed32_Div()
	{
		static const int32_t input0[] = { (int32_t)0x1130, (int32_t)0x1130, (int32_t)0x1130, (int32_t)0x1130, (int32_t)0x1130, (int32_t)0x1130, (int32_t)0x1130, (int32_t)0x1130, (int32_t)0x1130, (int32_t)0x1130, (int32_t)0x1130, (int32_t)0x1130, (int32_t)0x1130, (int32_t)0x1130, (int32_t)0x1130, (int32_t)0x1130, (int32_t)0x1130, (int32_t)0x1130, (int32_t)0x1130, (int32_t)0x1130, (int32_t)0x1130, (int32_t)0x1130, (int32_t)0x1130, (int32_t)0x1130, (int32_t)0x1130, (int32_t)0xFCF317C3, (int32_t)0x26B5C75, (int32_t)0x3C4F3A, (int32_t)0x37A0F0, (int32_t)0x1B37C28, (int32_t)0xFCB1DE13, (int32_t)0x197E139, (int32_t)0xFFF2847E, (int32_t)0x2D05BD1, (int32_t)0x19A254C, (int32_t)0x51F50B, (int32_t)0x2AAC5C5, (int32_t)0xFE4FF7A0, (int32_t)0xFEF1BF27, (int32_t)0xFE9FE753, (int32_t)0x1351A33, (int32_t)0x338A048, (int32_t)0xE3DCBF, (int32_t)0x310C3A, (int32_t)0xC105BC, (int32_t)0xFFD87DBB, (int32_t)0xFDECA582, (int32_t)0xFE276D50, (int32_t)0xFF9ADE59, (int32_t)0xFD1B0EE6, (int32_t)0xECFE943C, (int32_t)0x3DFF90, (int32_t)0xC11C3F3B, (int32_t)0x3F590151, (int32_t)0xFC34F567, (int32_t)0x30074FE7, (int32_t)0x5E23FDB, (int32_t)0xCA550C70, (int32_t)0xF2FB02B6, (int32_t)0x3AAED13E, (int32_t)0xECF08378, (int32_t)0xCE708269, (int32_t)0xF5A5764F, (int32_t)0x25D0C95C, (int32_t)0xD7AAEBCE, (int32_t)0xC373FBB5, (int32_t)0xFEC9942C, (int32_t)0x2F82D86B, (int32_t)0x31A1A3CC, (int32_t)0x2C032CB, (int32_t)0xCB95A35F, (int32_t)0x3368968, (int32_t)0x5080D9B, (int32_t)0xFB079BCA, (int32_t)0xE5F5A576, (int32_t)0x3E77933, (int32_t)0x3E7376B, (int32_t)0x3E70D42, (int32_t)0x3E75E24, (int32_t)0x3E79B71, (int32_t)0x3E7D390, (int32_t)0x3E7F66B, (int32_t)0x3E78C29, (int32_t)0x3E7B2C6, (int32_t)0x3E73442, (int32_t)0x3E7620C, (int32_t)0x3E72065, (int32_t)0x3E72FED, (int32_t)0x3E73B93, (int32_t)0x3E7496E, (int32_t)0x3E79096, (int32_t)0x3E76931, (int32_t)0x3E70AEC, (int32_t)0x3E7150B, (int32_t)0x3E72AA8, (int32_t)0x3E7858A, (int32_t)0x3E72273, (int32_t)0x3E7EDC2, (int32_t)0x3E7492C, (int32_t)0x3E743D6 };
		static const int32_t input1[] = { (int32_t)0xFFFEF9EE, (int32_t)0xFFFEF9EE, (int32_t)0xFFFEF9EE, (int32_t)0xFFFEF9EE, (int32_t)0xFFFEF9EE, (int32_t)0xFFFEF9EE, (int32_t)0xFFFEF9EE, (int32_t)0xFFFEF9EE, (int32_t)0xFFFEF9EE, (int32_t)0xFFFEF9EE, (int32_t)0xFFFEF9EE, (int32_t)0xFFFEF9EE, (int32_t)0xFFFEF9EE, (int32_t)0xFFFEF9EE, (int32_t)0xFFFEF9EE, (int32_t)0xFFFEF9EE, (int32_t)0xFFFEF9EE, (int32_t)0xFFFEF9EE, (int32_t)0xFFFEF9EE, (int32_t)0xFFFEF9EE, (int32_t)0xFFFEF9EE, (int32_t)0xFFFEF9EE, (int32_t)0xFFFEF9EE, (int32_t)0xFFFEF9EE, (int32_t)0xFFFEF9EE, (int32_t)0xF9CF57CC, (int32_t)0xFB86756C, (int32_t)0x135F051, (int32_t)0x20DAF, (int32_t)0xFFFE2028, (int32_t)0xFF6453DD, (int32_t)0x92A0E7, (int32_t)0x1E1B6D, (int32_t)0xFFC914A6, (int32_t)0xFF997A55, (int32_t)0x96966CC, (int32_t)0xEE4DD0, (int32_t)0xFFD5286D, (int32_t)0xFFFDEFE2, (int32_t)0x1D969, (int32_t)0x125EE2, (int32_t)0xFFF80530, (int32_t)0xFAC2B6E7, (int32_t)0xE1FFC00, (int32_t)0xDC4409, (int32_t)0xD2E21B17, (int32_t)0xFFFDA8A1, (int32_t)0x2398A615, (int32_t)0x15D84460, (int32_t)0xFC983506, (int32_t)0xE213891D, (int32_t)0xFF012B8B, (int32_t)0xF5AF67C4, (int32_t)0x325E2842, (int32_t)0xD531032C, (int32_t)0x15F79013, (int32_t)0x24A561EF, (int32_t)0x19D7E8FD, (int32_t)0xF02F4F64, (int32_t)0x1B4AFDA0, (int32_t)0xC256E865, (int32_t)0xAE8E7C, (int32_t)0xED8FF61A, (int32_t)0x38A1C595, (int32_t)0xD0B37AF, (int32_t)0xE0D4CDFE, (int32_t)0xFDDDA56F, (int32_t)0x3E95206E, (int32_t)0xCEDE6CEC, (int32_t)0x1B2B7A00, (int32_t)0xD7F452D1, (int32_t)0x25BFB058, (int32_t)0x392C590A, (int32_t)0x14670997, (int32_t)0x3B4EBF3, (int32_t)0xFC186491, (int32_t)0xFC1876BE, (int32_t)0xFC1893AD, (int32_t)0xFC184048, (int32_t)0xFC18E3FE, (int32_t)0xFC188759, (int32_t)0xFC187457, (int32_t)0xFC183D70, (int32_t)0xFC18A2AE, (int32_t)0xFC184ED2, (int32_t)0xFC188B7D, (int32_t)0xFC1843F9, (int32_t)0xFC18AA75, (int32_t)0xFC183B13, (int32_t)0xFC181CFB, (int32_t)0xFC18F1BF, (int32_t)0xFC180ACD, (int32_t)0xFC1857A7, (int32_t)0xFC184300, (int32_t)0xFC18C7F6, (int32_t)0xFC18DEBD, (int32_t)0xFC18B433, (int32_t)0xFC183E6A, (int32_t)0xFC182BB2, (int32_t)0xFC18DA40 };
		static const int32_t output0[] = { (int32_t)0xFFFFEF36, (int32_t)0xFFFFEF36, (int32_t)0xFFFFEF36, (int32_t)0xFFFFEF36, (int32_t)0xFFFFEF36, (int32_t)0xFFFFEF36, (int32_t)0xFFFFEF36, (int32_t)0xFFFFEF36, (int32_t)0xFFFFEF36, (int32_t)0xFFFFEF36, (int32_t)0xFFFFEF36, (int32_t)0xFFFFEF36, (int32_t)0xFFFFEF36, (int32_t)0xFFFFEF36, (int32_t)0xFFFFEF36, (int32_t)0xFFFFEF36, (int32_t)0xFFFFEF36, (int32_t)0xFFFFEF36, (int32_t)0xFFFFEF36, (int32_t)0xFFFFEF36, (int32_t)0xFFFFEF36, (int32_t)0xFFFFEF36, (int32_t)0xFFFFEF36, (int32_t)0xFFFFEF36, (int32_t)0xFFFFEF36, (int32_t)0x7E27, (int32_t)0xFFFF7597, (int32_t)0x31D0, (int32_t)0x1B171F, (int32_t)0xFF17AA6D, (int32_t)0x56F72, (int32_t)0x2C81E, (int32_t)0xFFFF8D5C, (int32_t)0xFFF2E223, (int32_t)0xFFFBFFDC, (int32_t)0x8B5, (int32_t)0x2DD79, (int32_t)0xA1595, (int32_t)0x8300B9, (int32_t)0xFF4199F0, (int32_t)0x10D36D, (int32_t)0xFF98A8F5, (int32_t)0xFFFFD483, (int32_t)0x378, (int32_t)0xE056, (int32_t)0xE0, (int32_t)0xE2F2DE, (int32_t)0xFFFFF2BA, (int32_t)0xFFFFFB5F, (int32_t)0xD993, (int32_t)0xA298, (int32_t)0xFFFFC1B8, (int32_t)0x618D6, (int32_t)0x141F8, (int32_t)0x16AE, (int32_t)0x22FB7, (int32_t)0x291A, (int32_t)0xFFFDEC61, (int32_t)0xD2BE, (int32_t)0x2266D, (int32_t)0x4F22, (int32_t)0xFFB750DE, (int32_t)0x8FC1, (int32_t)0xAAF1, (int32_t)0xFFFCE86F, (int32_t)0x1F14B, (int32_t)0x9173, (int32_t)0xC259, (int32_t)0xFFFEFD65, (int32_t)0x19EB, (int32_t)0x14F13, (int32_t)0x15CA, (int32_t)0x1687, (int32_t)0xFFFFC1A3, (int32_t)0xFFF8F98E, (int32_t)0xFFFF0009, (int32_t)0xFFFF0015, (int32_t)0xFFFF0019, (int32_t)0xFFFF0019, (int32_t)0xFFFEFFE0, (int32_t)0xFFFEFFE9, (int32_t)0xFFFEFFE5, (int32_t)0xFFFF000E, (int32_t)0xFFFEFFEB, (int32_t)0xFFFF0020, (int32_t)0xFFFF0005, (int32_t)0xFFFF0028, (int32_t)0xFFFF000A, (int32_t)0xFFFF0024, (int32_t)0xFFFF0028, (int32_t)0xFFFEFFDF, (int32_t)0xFFFF0024, (int32_t)0xFFFF0029, (int32_t)0xFFFF002C, (int32_t)0xFFFF0004, (int32_t)0xFFFEFFE7, (int32_t)0xFFFF000B, (int32_t)0xFFFEFFF5, (int32_t)0xFFFF0024, (int32_t)0xFFFEFFF9 };
		for (int ndx = 0; ndx < 100; ndx++)
			Util::Check("Fixed32::Div", Fixed32::Div(input0[ndx], input1[ndx]), output0[ndx], input0[ndx], input1[ndx]);
	}

	// Fixed32.DivFast()
	static void Fixed32_DivFast()
	{
		static const int32_t input0[] = { (int32_t)0x1130, (int32_t)0x1130, (int32_t)0x1130, (int32_t)0x1130, (int32_t)0x1130, (int32_t)0x1130, (int32_t)0x1130, (int32_t)0x1130, (int32_t)0x1130, (int32_t)0x1130, (int32_t)0x1130, (int32_t)0x1130, (int32_t)0x1130, (int32_t)0x1130, (int32_t)0x1130, (int32_t)0x1130, (int32_t)0x1130, (int32_t)0x1130, (int32_t)0x1130, (int32_t)0x1130, (int32_t)0x1130, (int32_t)0x1130, (int32_t)0x1130, (int32_t)0x1130, (int32_t)0x1130, (int32_t)0x2287930, (int32_t)0x1F87D03, (int32_t)0x2D8EA5F, (int32_t)0xFFF18941, (int32_t)0xFC269E1D, (int32_t)0xFEBDBF24, (int32_t)0xFE577B3D, (int32_t)0x213EBF9, (int32_t)0xFCE57C8B, (int32_t)0xFC180AF4, (int32_t)0xFE5C7BA1, (int32_t)0x4EE075, (int32_t)0x25532E9, (int32_t)0xB1DBD0, (int32_t)0x1D1AC21, (int32_t)0x2A2E29F, (int32_t)0xFEF50FB2, (int32_t)0x2855D5E, (int32_t)0x5139D0, (int32_t)0x2976B31, (int32_t)0x2949824, (int32_t)0xFCB17D57, (int32_t)0xFE3AD8BC, (int32_t)0xFD9ECC7E, (int32_t)0xFCF5DDAB, (int32_t)0x21B77BF8, (int32_t)0xFC991966, (int32_t)0xDB98530B, (int32_t)0x3FB1B7F1, (int32_t)0xE8992B27, (int32_t)0x1988F357, (int32_t)0xFD4A0087, (int32_t)0x15A3B460, (int32_t)0xF0DFF935, (int32_t)0xF8C3FC91, (int32_t)0x2E532F93, (int32_t)0xCC73F657, (int32_t)0x1979A8D2, (int32_t)0x3BDD41E9, (int32_t)0x182F76C2, (int32_t)0x15059C4, (int32_t)0x3909DC53, (int32_t)0xD93CB859, (int32_t)0xE0BC6FF9, (int32_t)0xC1C34432, (int32_t)0xD4030CAE, (int32_t)0xCCB521F0, (int32_t)0xFB93EA4A, (int32_t)0xD7FBCF95, (int32_t)0x15085650, (int32_t)0x3E79215, (int32_t)0x3E7F649, (int32_t)0x3E7D01C, (int32_t)0x3E7FDDF, (int32_t)0x3E739A1, (int32_t)0x3E7AA04, (int32_t)0x3E7020A, (int32_t)0x3E70739, (int32_t)0x3E75552, (int32_t)0x3E77495, (int32_t)0x3E7DAAA, (int32_t)0x3E7F980, (int32_t)0x3E711FA, (int32_t)0x3E7C983, (int32_t)0x3E709F3, (int32_t)0x3E77421, (int32_t)0x3E7E98C, (int32_t)0x3E70378, (int32_t)0x3E79896, (int32_t)0x3E7D9EE, (int32_t)0x3E7F224, (int32_t)0x3E75972, (int32_t)0x3E7E9B4, (int32_t)0x3E79F3F, (int32_t)0x3E7C605 };
		static const int32_t input1[] = { (int32_t)0xFFFEF9EE, (int32_t)0xFFFEF9EE, (int32_t)0xFFFEF9EE, (int32_t)0xFFFEF9EE, (int32_t)0xFFFEF9EE, (int32_t)0xFFFEF9EE, (int32_t)0xFFFEF9EE, (int32_t)0xFFFEF9EE, (int32_t)0xFFFEF9EE, (int32_t)0xFFFEF9EE, (int32_t)0xFFFEF9EE, (int32_t)0xFFFEF9EE, (int32_t)0xFFFEF9EE, (int32_t)0xFFFEF9EE, (int32_t)0xFFFEF9EE, (int32_t)0xFFFEF9EE, (int32_t)0xFFFEF9EE, (int32_t)0xFFFEF9EE, (int32_t)0xFFFEF9EE, (int32_t)0xFFFEF9EE, (int32_t)0xFFFEF9EE, (int32_t)0xFFFEF9EE, (int32_t)0xFFFEF9EE, (int32_t)0xFFFEF9EE, (int32_t)0xFFFEF9EE, (int32_t)0xFF1233E1, (int32_t)0xFF99A529, (int32_t)0x6591D, (int32_t)0x1EA28, (int32_t)0xFFFC4AAF, (int32_t)0xFFEB8934, (int32_t)0x7911747, (int32_t)0x13E25A1, (int32_t)0xFEA9790A, (int32_t)0xFFE6A3C2, (int32_t)0x4309B33, (int32_t)0x2E60F97, (int32_t)0xFFF29FD4, (int32_t)0xFFDFF901, (int32_t)0x1ECF99, (int32_t)0x51347, (int32_t)0xD0D714C6, (int32_t)0xFFF68D8E, (int32_t)0x6D12487, (int32_t)0x146BA1A, (int32_t)0xFF6A2135, (int32_t)0xFFFB4FC1, (int32_t)0x1F288, (int32_t)0x10DEB, (int32_t)0xFFD77B88, (int32_t)0x2E4E3ABB, (int32_t)0x2C33A384, (int32_t)0x899E53, (int32_t)0xCA687F9, (int32_t)0xC1E67CF, (int32_t)0xF3CA18C8, (int32_t)0xF44272D1, (int32_t)0xD7ADF3C6, (int32_t)0x17BD9756, (int32_t)0xEF91F2F1, (int32_t)0x2B382347, (int32_t)0x83DF50A, (int32_t)0xC50BCFE, (int32_t)0xE4629E2A, (int32_t)0x111CA5E7, (int32_t)0xDEC04ED0, (int32_t)0xC18A90D1, (int32_t)0x31555EC8, (int32_t)0x34F5C102, (int32_t)0xFEE3CEB3, (int32_t)0xC8F92728, (int32_t)0xE27F49C5, (int32_t)0xE1C1E0A0, (int32_t)0xCA4673D2, (int32_t)0xCB0BF731, (int32_t)0xFC18DB10, (int32_t)0xFC18C941, (int32_t)0xFC1872C4, (int32_t)0xFC184DD0, (int32_t)0xFC1867E2, (int32_t)0xFC186863, (int32_t)0xFC186B1D, (int32_t)0xFC18937A, (int32_t)0xFC187CCB, (int32_t)0xFC18F9D9, (int32_t)0xFC188EB6, (int32_t)0xFC186798, (int32_t)0xFC18CE84, (int32_t)0xFC188A27, (int32_t)0xFC184AE1, (int32_t)0xFC182B9B, (int32_t)0xFC1876BE, (int32_t)0xFC18BCB2, (int32_t)0xFC182BD1, (int32_t)0xFC183872, (int32_t)0xFC18BC01, (int32_t)0xFC180EE6, (int32_t)0xFC18E6D9, (int32_t)0xFC182009, (int32_t)0xFC18F65A };
		static const int32_t output0[] = { (int32_t)0xFFFFEF36, (int32_t)0xFFFFEF36, (int32_t)0xFFFFEF36, (int32_t)0xFFFFEF36, (int32_t)0xFFFFEF36, (int32_t)0xFFFFEF36, (int32_t)0xFFFFEF36, (int32_t)0xFFFFEF36, (int32_t)0xFFFFEF36, (int32_t)0xFFFFEF36, (int32_t)0xFFFFEF36, (int32_t)0xFFFFEF36, (int32_t)0xFFFFEF36, (int32_t)0xFFFFEF36, (int32_t)0xFFFFEF36, (int32_t)0xFFFFEF36, (int32_t)0xFFFFEF36, (int32_t)0xFFFFEF36, (int32_t)0xFFFFEF36, (int32_t)0xFFFFEF36, (int32_t)0xFFFFEF36, (int32_t)0xFFFFEF36, (int32_t)0xFFFFEF36, (int32_t)0xFFFFEF36, (int32_t)0xFFFFEF36, (int32_t)0xFFFDAD3B, (int32_t)0xFFFB123C, (int32_t)0x72D2B6, (int32_t)0xFFF87220, (int32_t)0x109BA65, (int32_t)0xFBF4E, (int32_t)0xFFFFC7E5, (int32_t)0x1AC03, (int32_t)0x251D0, (int32_t)0x276DFA, (int32_t)0xFFFF9BDF, (int32_t)0x1B36, (int32_t)0xFFD35A28, (int32_t)0xFFFA7258, (int32_t)0xF1D20, (int32_t)0x84F965, (int32_t)0x5A9, (int32_t)0xFFBBAFD5, (int32_t)0xBEA, (int32_t)0x207CE, (int32_t)0xFFFB979F, (int32_t)0xB48CCA, (int32_t)0xFF174DDC, (int32_t)0xFDBE34BF, (int32_t)0x133472, (int32_t)0xBA67, (int32_t)0xFFFFEC4C, (int32_t)0xFFBC474C, (int32_t)0x508EC, (int32_t)0xFFFE11A8, (int32_t)0xFFFDE8A6, (int32_t)0x3B1C, (int32_t)0xFFFF769B, (int32_t)0xFFFF5CE6, (int32_t)0x70B9, (int32_t)0x11265, (int32_t)0xFFF9BEEA, (int32_t)0x2118D, (int32_t)0xFFFDD508, (int32_t)0x169D3, (int32_t)0xFFFFF5E2, (int32_t)0xFFFF1637, (int32_t)0xFFFF36DA, (int32_t)0xFFFF68E0, (int32_t)0x381021, (int32_t)0xCCA5, (int32_t)0x1BD13, (int32_t)0x256E, (int32_t)0xBEAD, (int32_t)0xFFFF9A51, (int32_t)0xFFFEFFE4, (int32_t)0xFFFEFFCF, (int32_t)0xFFFEFFEF, (int32_t)0xFFFEFFED, (int32_t)0xFFFF0018, (int32_t)0xFFFEFFFB, (int32_t)0xFFFF0026, (int32_t)0xFFFF001A, (int32_t)0xFFFF000C, (int32_t)0xFFFEFFE4, (int32_t)0xFFFEFFE5, (int32_t)0xFFFEFFE7, (int32_t)0xFFFF0008, (int32_t)0xFFFEFFEB, (int32_t)0xFFFF002C, (int32_t)0xFFFF0019, (int32_t)0xFFFEFFE8, (int32_t)0xFFFF0011, (int32_t)0xFFFF000F, (int32_t)0xFFFEFFFB, (int32_t)0xFFFEFFD4, (int32_t)0xFFFF0027, (int32_t)0xFFFEFFCB, (int32_t)0xFFFF0011, (int32_t)0xFFFEFFD0 };
		for (int ndx = 0; ndx < 100; ndx++)
			Util::Check("Fixed32::DivFast", Fixed32::DivFast(input0[ndx], input1[ndx]), output0[ndx], input0[ndx], input1[ndx]);
	}

	// Fixed32.DivFastest()
	static void Fixed32_DivFastest()
	{
		static const int32_t input0[] = { (int32_t)0x1130, (int32_t)0x1130, (int32_t)0x1130, (int32_t)0x1130, (int32_t)0x1130, (int32_t)0x1130, (int32_t)0x1130, (int32_t)0x1130, (int32_t)0x1130, (int32_t)0x1130, (int32_t)0x1130, (int32_t)0x1130, (int32_t)0x1130, (int32_t)0x1130, (int32_t)0x1130, (int32_t)0x1130, (int32_t)0x1130, (int32_t)0x1130, (int32_t)0x1130, (int32_t)0x1130, (int32_t)0x1130, (int32_t)0x1130, (int32_t)0x1130, (int32_t)0x1130, (int32_t)0x1130, (int32_t)0xFD539F1C, (int32_t)0xFE17EA50, (int32_t)0x14F5CA3, (int32_t)0xFDE1F45A, (int32_t)0xFD30DB91, (int32_t)0xFDD27BF9, (int32_t)0xFC7A4D76, (int32_t)0xFD95BC10, (int32_t)0xFDCC500F, (int32_t)0xFCB9A27A, (int32_t)0xFF9C8C76, (int32_t)0xFFA889BC, (int32_t)0xFEB05679, (int32_t)0x1DE2954, (int32_t)0x2D65177, (int32_t)0xFE39237A, (int32_t)0x656486, (int32_t)0x7364BF, (int32_t)0x20E3DEB, (int32_t)0xC0A812, (int32_t)0x2CC9407, (int32_t)0x1B5F62F, (int32_t)0x6A653D, (int32_t)0x30914FC, (int32_t)0xFC433C52, (int32_t)0x1B82B4EB, (int32_t)0xF12AC8CC, (int32_t)0xEAE5DAF9, (int32_t)0xE3A7612D, (int32_t)0xD6F6A6F0, (int32_t)0xF82B9437, (int32_t)0x19F4095B, (int32_t)0x23BADB92, (int32_t)0xDA8AC108, (int32_t)0x1D889F50, (int32_t)0xD13FE58A, (int32_t)0x3B882A6C, (int32_t)0xEC95E301, (int32_t)0x1AE9836C, (int32_t)0x306D2175, (int32_t)0xEAD6A122, (int32_t)0x23C4B9C8, (int32_t)0x163F93A1, (int32_t)0xE6BE27E5, (int32_t)0x37046C3, (int32_t)0xEDE85BAE, (int32_t)0xED892D85, (int32_t)0xD7C19D4B, (int32_t)0x3AEBFCF3, (int32_t)0xD9F9AB30, (int32_t)0x3E7980E, (int32_t)0x3E787BA, (int32_t)0x3E7389E, (int32_t)0x3E77056, (int32_t)0x3E725F6, (int32_t)0x3E75BF3, (int32_t)0x3E732D2, (int32_t)0x3E75FF3, (int32_t)0x3E7135B, (int32_t)0x3E7B9C0, (int32_t)0x3E7B1EB, (int32_t)0x3E78773, (int32_t)0x3E725D8, (int32_t)0x3E78F24, (int32_t)0x3E78669, (int32_t)0x3E79276, (int32_t)0x3E7D8C2, (int32_t)0x3E70342, (int32_t)0x3E7EAD2, (int32_t)0x3E70F59, (int32_t)0x3E78DE1, (int32_t)0x3E76193, (int32_t)0x3E731E2, (int32_t)0x3E74E1B, (int32_t)0x3E7E4B1 };
		static const int32_t input1[] = { (int32_t)0xFFFEF9EE, (int32_t)0xFFFEF9EE, (int32_t)0xFFFEF9EE, (int32_t)0xFFFEF9EE, (int32_t)0xFFFEF9EE, (int32_t)0xFFFEF9EE, (int32_t)0xFFFEF9EE, (int32_t)0xFFFEF9EE, (int32_t)0xFFFEF9EE, (int32_t)0xFFFEF9EE, (int32_t)0xFFFEF9EE, (int32_t)0xFFFEF9EE, (int32_t)0xFFFEF9EE, (int32_t)0xFFFEF9EE, (int32_t)0xFFFEF9EE, (int32_t)0xFFFEF9EE, (int32_t)0xFFFEF9EE, (int32_t)0xFFFEF9EE, (int32_t)0xFFFEF9EE, (int32_t)0xFFFEF9EE, (int32_t)0xFFFEF9EE, (int32_t)0xFFFEF9EE, (int32_t)0xFFFEF9EE, (int32_t)0xFFFEF9EE, (int32_t)0xFFFEF9EE, (int32_t)0xFFCAB619, (int32_t)0xFFFDAF7C, (int32_t)0x242C2, (int32_t)0xDE2ED00, (int32_t)0xFF75CB64, (int32_t)0xFFF8DD90, (int32_t)0x31200, (int32_t)0x2C7EDFA, (int32_t)0xFDACEA49, (int32_t)0xFFBAF261, (int32_t)0x1A2396, (int32_t)0x1BC1FEBA, (int32_t)0xFFF95E6C, (int32_t)0xFFDB004B, (int32_t)0x97131ED, (int32_t)0x2D7E07, (int32_t)0xFFCD579E, (int32_t)0xCDB5F360, (int32_t)0x27C476, (int32_t)0xC22E6, (int32_t)0xFFDA8716, (int32_t)0xFFF8C268, (int32_t)0xA150F2, (int32_t)0x2DE005CB, (int32_t)0xFF77114B, (int32_t)0xFA167039, (int32_t)0x1F35AA60, (int32_t)0xD63A8548, (int32_t)0x10CEB40F, (int32_t)0x12F870F8, (int32_t)0xDA540426, (int32_t)0x8049B12, (int32_t)0xCF26BE25, (int32_t)0xEAF4AAD5, (int32_t)0x258053D9, (int32_t)0x28C04EA8, (int32_t)0x23E61AC9, (int32_t)0xF2FAEAE1, (int32_t)0xFD4E4804, (int32_t)0x3FB0765C, (int32_t)0x1117AF53, (int32_t)0xD14055AE, (int32_t)0x3E694924, (int32_t)0x12185F02, (int32_t)0x15820FEE, (int32_t)0xF6D2A672, (int32_t)0xC73017C8, (int32_t)0xE1E86293, (int32_t)0x27882F, (int32_t)0x361660E1, (int32_t)0xFC18C6B0, (int32_t)0xFC18A1C1, (int32_t)0xFC1874AE, (int32_t)0xFC18B52D, (int32_t)0xFC1839B2, (int32_t)0xFC189A34, (int32_t)0xFC188566, (int32_t)0xFC1853DB, (int32_t)0xFC184A90, (int32_t)0xFC18F21E, (int32_t)0xFC185313, (int32_t)0xFC18A895, (int32_t)0xFC18520A, (int32_t)0xFC18D00E, (int32_t)0xFC1890F3, (int32_t)0xFC186152, (int32_t)0xFC189828, (int32_t)0xFC18AD66, (int32_t)0xFC183F24, (int32_t)0xFC18B28B, (int32_t)0xFC18E544, (int32_t)0xFC180358, (int32_t)0xFC189253, (int32_t)0xFC18E239, (int32_t)0xFC18E773 };
		static const int32_t output0[] = { (int32_t)0xFFFFEF35, (int32_t)0xFFFFEF35, (int32_t)0xFFFFEF35, (int32_t)0xFFFFEF35, (int32_t)0xFFFFEF35, (int32_t)0xFFFFEF35, (int32_t)0xFFFFEF35, (int32_t)0xFFFFEF35, (int32_t)0xFFFFEF35, (int32_t)0xFFFFEF35, (int32_t)0xFFFFEF35, (int32_t)0xFFFFEF35, (int32_t)0xFFFFEF35, (int32_t)0xFFFFEF35, (int32_t)0xFFFFEF35, (int32_t)0xFFFFEF35, (int32_t)0xFFFFEF35, (int32_t)0xFFFFEF35, (int32_t)0xFFFFEF35, (int32_t)0xFFFFEF35, (int32_t)0xFFFFEF35, (int32_t)0xFFFFEF35, (int32_t)0xFFFFEF35, (int32_t)0xFFFFEF35, (int32_t)0xFFFFEF35, (int32_t)0xCD90B, (int32_t)0xD2E99E, (int32_t)0x946108, (int32_t)0xFFFFD8F4, (int32_t)0x53497, (int32_t)0x4E26F3, (int32_t)0xFEDA47A9, (int32_t)0xFFFF21C1, (int32_t)0xF286, (int32_t)0xC2543, (int32_t)0xFFFC31A1, (int32_t)0xFFFFFCD9, (int32_t)0x32A377, (int32_t)0xFFF31302, (int32_t)0x4CED, (int32_t)0xFFF60105, (int32_t)0xFFFDFF77, (int32_t)0xFFFFFDB4, (int32_t)0xD3AEB, (int32_t)0xFE018, (int32_t)0xFFECE018, (int32_t)0xFFC3836D, (int32_t)0xA8CC, (int32_t)0x10EF, (int32_t)0x6FD65, (int32_t)0xFFFB58E8, (int32_t)0xFFFF865F, (int32_t)0x8147, (int32_t)0xFFFE5018, (int32_t)0xFFFDD636, (int32_t)0x3535, (int32_t)0x33CA9, (int32_t)0xFFFF44BB, (int32_t)0x1C77F, (int32_t)0xC9A0, (int32_t)0xFFFEDA67, (int32_t)0x1A8A8, (int32_t)0x17DDF, (int32_t)0xFFF603D6, (int32_t)0xC2A1, (int32_t)0xFFFEC2EF, (int32_t)0xFFFF3C28, (int32_t)0x5B3A, (int32_t)0xFFFE9A94, (int32_t)0x28E9, (int32_t)0x1F8CB, (int32_t)0x5336, (int32_t)0x15641, (int32_t)0x17D7E23, (int32_t)0xFFFF4BF5, (int32_t)0xFFFEFFFE, (int32_t)0xFFFF000C, (int32_t)0xFFFF002B, (int32_t)0xFFFF000D, (int32_t)0xFFFF003F, (int32_t)0xFFFF0019, (int32_t)0xFFFF0029, (int32_t)0xFFFF002A, (int32_t)0xFFFF0040, (int32_t)0xFFFEFFEA, (int32_t)0xFFFF0015, (int32_t)0xFFFF000A, (int32_t)0xFFFF0039, (int32_t)0xFFFEFFFE, (int32_t)0xFFFF0010, (int32_t)0xFFFF0019, (int32_t)0xFFFEFFF9, (int32_t)0xFFFF002B, (int32_t)0xFFFF000B, (int32_t)0xFFFF0026, (int32_t)0xFFFEFFF9, (int32_t)0xFFFF003E, (int32_t)0xFFFF0026, (int32_t)0xFFFF000A, (int32_t)0xFFFEFFE2 };
		for (int ndx = 0; ndx < 100; ndx++)
			Util::Check("Fixed32::DivFastest", Fixed32::DivFastest(input0[ndx], input1[ndx]), output0[ndx], input0[ndx], input1[ndx]);
	}

	// Fixed64.SqrtPrecise()
	static void Fixed64_SqrtPrecise()
	{
		static const int64_t input0[] = { (int64_t)0x10A7FBABA2LL, (int64_t)0x6LL, (int64_t)0x2EF431LL, (int64_t)0xA3F50BFLL, (int64_t)0x725847LL, (int64_t)0x249CLL, (int64_t)0x1BAC40LL, (int64_t)0x1BC515DB97357A0LL, (int64_t)0x3885BEC6ALL, (int64_t)0x27C84B1335FD880LL, (int64_t)0x2B80BBA68955CA00LL, (int64_t)0x17B0E5B1814LL, (int64_t)0x22LL, (int64_t)0x6533DLL, (int64_t)0x142466LL, (int64_t)0x2A24LL, (int64_t)0x22950DFAC5B28ALL, (int64_t)0x95672F4LL, (int64_t)0x9E1BCA34LL, (int64_t)0x197D9B8794AA7FLL, (int64_t)0x4EC8LL, (int64_t)0x526LL, (int64_t)0x90BA8FDF52F48LL, (int64_t)0x3EE8FCE1LL, (int64_t)0x9C2FBDALL, (int64_t)0x250LL, (int64_t)0xCLL, (int64_t)0xA5CCA42LL, (int64_t)0x1LL, (int64_t)0x1E17A074AEDC9LL, (int64_t)0x673DLL, (int64_t)0x4CCBEA34B44C8C0LL, (int64_t)0x5C67A42LL, (int64_t)0x1213LL, (int64_t)0xFA8LL, (int64_t)0x3E5A49LL, (int64_t)0x11ALL, (int64_t)0x50BALL, (int64_t)0x226C0CLL, (int64_t)0x11FB1ED2772B92LL, (int64_t)0x221185LL, (int64_t)0x5312557LL, (int64_t)0x13DLL, (int64_t)0x13AC4LL, (int64_t)0xAF2C51ELL, (int64_t)0xE901C746D475A00LL, (int64_t)0x1061B2LL, (int64_t)0x2LL, (int64_t)0x530FC45LL, (int64_t)0x29LL, (int64_t)0xA4A1LL, (int64_t)0x3E929AA30LL, (int64_t)0x2645B1D3E906300LL, (int64_t)0x1744BLL, (int64_t)0x32182E63281A8ALL, (int64_t)0x33BB23ELL, (int64_t)0x2DBALL, (int64_t)0x2FC46FD8442BA8LL, (int64_t)0x1LL, (int64_t)0x3162LL, (int64_t)0x2F6LL, (int64_t)0xAAE9518A0C9170LL, (int64_t)0x18E6A76CB99C060LL, (int64_t)0x78361DBEE8C2LL, (int64_t)0x62A50AA90E0LL, (int64_t)0x9LL, (int64_t)0x41A2LL, (int64_t)0x7ACDBBB495B118LL, (int64_t)0x67LL, (int64_t)0x14ACA07E22F42F00LL, (int64_t)0x26LL, (int64_t)0x6DAA31886BLL, (int64_t)0x45LL, (int64_t)0x232C27A3AC2LL, (int64_t)0xBF8B444DLL, (int64_t)0x3CB2520EBB278LL, (int64_t)0x4LL, (int64_t)0x75B502DE8LL, (int64_t)0x5LL, (int64_t)0x2AE654BALL, (int64_t)0x90BB208279A39LL, (int64_t)0x4LL, (int64_t)0x1LL, (int64_t)0x1BC4524ADBCAE30LL, (int64_t)0x2ECB16E10LL, (int64_t)0x6998E2B0898LL, (int64_t)0x2LL, (int64_t)0x3F8LL, (int64_t)0x171782LL, (int64_t)0x135F997B4BCD1LL, (int64_t)0x15DLL, (int64_t)0x179EDLL, (int64_t)0x4CE6LL, (int64_t)0xB2LL, (int64_t)0x6109DA97166LL, (int64_t)0xCC1E350LL, (int64_t)0xD582474DLL, (int64_t)0xA9164DLL, (int64_t)0xCC38583A7LL, (int64_t)0x1353CA5LL };
		static const int64_t output0[] = { (int64_t)0x414C97267LL, (int64_t)0x27311LL, (int64_t)0x6DA2FA6LL, (int64_t)0x3337E340LL, (int64_t)0xAB1767FLL, (int64_t)0x60CF20LL, (int64_t)0x542B012LL, (int64_t)0x15142F634412LL, (int64_t)0x1E129385BLL, (int64_t)0x193AB4612017LL, (int64_t)0x6987DD4FB1EELL, (int64_t)0x137828249ELL, (int64_t)0x5D4B9LL, (int64_t)0x283D60ELL, (int64_t)0x47CEDD7LL, (int64_t)0x67DD84LL, (int64_t)0x5E17364C372LL, (int64_t)0x30E4686FLL, (int64_t)0xC92F9AF8LL, (int64_t)0x50C7FEDBC86LL, (int64_t)0x8E039ALL, (int64_t)0x244DE4LL, (int64_t)0x301F0DEEE18LL, (int64_t)0x7EE7CA2BLL, (int64_t)0x31FD65F3LL, (int64_t)0x1854BFLL, (int64_t)0x376CFLL, (int64_t)0x3381579DLL, (int64_t)0x10000LL, (int64_t)0x15F14CB57B6LL, (int64_t)0xA291EALL, (int64_t)0x230DAF335104LL, (int64_t)0x2673732CLL, (int64_t)0x4405A5LL, (int64_t)0x3F4F0BLL, (int64_t)0x7E57893LL, (int64_t)0x10CAF8LL, (int64_t)0x8FC1B9LL, (int64_t)0x5DDF5C6LL, (int64_t)0x43D8A71AD77LL, (int64_t)0x5D639A7LL, (int64_t)0x24751B9FLL, (int64_t)0x11CDF3LL, (int64_t)0x11BDDBDLL, (int64_t)0x34F0F211LL, (int64_t)0x3D0EEA25BABCLL, (int64_t)0x40C23D3LL, (int64_t)0x16A09LL, (int64_t)0x24748B6BLL, (int64_t)0x66733LL, (int64_t)0xCD4ADFLL, (int64_t)0x1FA422CCBLL, (int64_t)0x18BEEE777B11LL, (int64_t)0x134B7E3LL, (int64_t)0x713E705230BLL, (int64_t)0x1CC50BC4LL, (int64_t)0x6C31BBLL, (int64_t)0x6E950F3062DLL, (int64_t)0x10000LL, (int64_t)0x706FC8LL, (int64_t)0x1B8824LL, (int64_t)0xD12C45BF14CLL, (int64_t)0x13F5D9FEBF1BLL, (int64_t)0xAF6CEF767BLL, (int64_t)0x27BA5F2172LL, (int64_t)0x30000LL, (int64_t)0x819F5ELL, (int64_t)0xB14E905700ELL, (int64_t)0xA261DLL, (int64_t)0x48C01D049DC2LL, (int64_t)0x62A17LL, (int64_t)0xA78DB5B88LL, (int64_t)0x84E7ELL, (int64_t)0x17B8F9732DLL, (int64_t)0xDD7067A4LL, (int64_t)0x1F29C779793LL, (int64_t)0x20000LL, (int64_t)0x2B65AC0DFLL, (int64_t)0x23C6ELL, (int64_t)0x68CBEF19LL, (int64_t)0x301F25FA7E2LL, (int64_t)0x20000LL, (int64_t)0x10000LL, (int64_t)0x1513E529D19CLL, (int64_t)0x1B5CBCD90LL, (int64_t)0x291AACEB8FLL, (int64_t)0x16A09LL, (int64_t)0x1FDFEFLL, (int64_t)0x4CE2E68LL, (int64_t)0x119B29C4871LL, (int64_t)0x12AE79LL, (int64_t)0x1370B85LL, (int64_t)0x8C4E8ALL, (int64_t)0xD5777LL, (int64_t)0x27673B3071LL, (int64_t)0x3925DFE8LL, (int64_t)0xE9CA858ALL, (int64_t)0xD00DB8CLL, (int64_t)0x3929887ABLL, (int64_t)0x1195CB41LL };
		for (int ndx = 0; ndx < 100; ndx++)
			Util::Check("Fixed64::SqrtPrecise", Fixed64::SqrtPrecise(input0[ndx]), output0[ndx], input0[ndx]);
	}

	// Fixed64.Sqrt()
	static void Fixed64_Sqrt()
	{
		static const int64_t input0[] = { (int64_t)0x38CD322EC6BBLL, (int64_t)0x889936BLL, (int64_t)0x1925388068649B0LL, (int64_t)0x10120B22LL, (int64_t)0x1LL, (int64_t)0x6013F920BALL, (int64_t)0xE6AA4B4LL, (int64_t)0x1168FLL, (int64_t)0x7C64DDF8EC94LL, (int64_t)0xDLL, (int64_t)0xC7534FLL, (int64_t)0x18DCF9E33ECLL, (int64_t)0x8502118758D3ELL, (int64_t)0x190EA4614LL, (int64_t)0x15D692DLL, (int64_t)0x9CLL, (int64_t)0x559F622D698FF8LL, (int64_t)0x3964F780999F8800LL, (int64_t)0x291ALL, (int64_t)0x3BC9473AA41B9800LL, (int64_t)0x4LL, (int64_t)0x10LL, (int64_t)0x5516BEED8LL, (int64_t)0x155975LL, (int64_t)0xF29769C886D89LL, (int64_t)0x67A1455AEF278LL, (int64_t)0x16D1048LL, (int64_t)0x18E8845350C87A00LL, (int64_t)0x17328775468E3E00LL, (int64_t)0xFLL, (int64_t)0x48C6ALL, (int64_t)0x1925CD7A9A9LL, (int64_t)0x24E34E281E4CA200LL, (int64_t)0x130709D8839LL, (int64_t)0x30561ED41935LL, (int64_t)0x10F3DB9LL, (int64_t)0xC6LL, (int64_t)0x7F30B207CLL, (int64_t)0x19D27A4E92FA640LL, (int64_t)0x1F2B93129E30460LL, (int64_t)0x7532LL, (int64_t)0x7605333AC248LL, (int64_t)0x20B0E02LL, (int64_t)0x1BFAALL, (int64_t)0x18E1C57LL, (int64_t)0x3828B098LL, (int64_t)0xB5D97E9LL, (int64_t)0xC46B95698E9LL, (int64_t)0x20AEDC53A4FBLL, (int64_t)0x9F30773D0LL, (int64_t)0x989241FA2LL, (int64_t)0xEE14F90FLL, (int64_t)0x41DLL, (int64_t)0xDA9D153E0LL, (int64_t)0x447667LL, (int64_t)0x36FD422DC04LL, (int64_t)0x66BE445E206D94LL, (int64_t)0x12D845B35CLL, (int64_t)0x43D5BDCEB4LL, (int64_t)0xAA0LL, (int64_t)0x435FLL, (int64_t)0x250AD781LL, (int64_t)0x30088LL, (int64_t)0x848F56270CCLL, (int64_t)0xB9CE150BC251LL, (int64_t)0x1FB46DCB5E02LL, (int64_t)0x2B23248DBAFLL, (int64_t)0x6FDLL, (int64_t)0x212D54A5C5C93LL, (int64_t)0x1LL, (int64_t)0x326CEE6C20902000LL, (int64_t)0xAC55ELL, (int64_t)0x23LL, (int64_t)0x54656LL, (int64_t)0x8298A81C1E58LL, (int64_t)0x2730CLL, (int64_t)0x205B22F5390LL, (int64_t)0x30A89LL, (int64_t)0x36E9F86F33646E0LL, (int64_t)0x451D9CLL, (int64_t)0x91E2C3LL, (int64_t)0x76F30BED19FLL, (int64_t)0xC31ALL, (int64_t)0x254E08CLL, (int64_t)0x64C54D3ELL, (int64_t)0x13903306FFA18LL, (int64_t)0x61CFAFA1LL, (int64_t)0x2B3242ALL, (int64_t)0x47262LL, (int64_t)0xELL, (int64_t)0xA8F59926LL, (int64_t)0x2A0A5E33BLL, (int64_t)0x77FFEF26AA8DF80LL, (int64_t)0x26E2256A8B73LL, (int64_t)0x766FA73905DLL, (int64_t)0xCA7C06D0B909LL, (int64_t)0x2750185BLL, (int64_t)0xFC87F7816CALL, (int64_t)0x9A3265F6LL, (int64_t)0x323A28C8E20LL };
		static const int64_t output0[] = { (int64_t)0x78963DCF00LL, (int64_t)0x2EC00996LL, (int64_t)0x140EDDE48000LL, (int64_t)0x40240BECLL, (int64_t)0x10000LL, (int64_t)0x9CD4BE980LL, (int64_t)0x3CC02BA5LL, (int64_t)0x10B0A8BLL, (int64_t)0xB273889400LL, (int64_t)0x39B05LL, (int64_t)0xE1E46ABLL, (int64_t)0x13F1F8A780LL, (int64_t)0x2E21B3F8000LL, (int64_t)0x1405DA844LL, (int64_t)0x12B149E5LL, (int64_t)0xC7D70LL, (int64_t)0x940D4D62000LL, (int64_t)0x7936ECB00000LL, (int64_t)0x6693A9LL, (int64_t)0x7BB6E9990000LL, (int64_t)0x20000LL, (int64_t)0x40000LL, (int64_t)0x24E5BF240LL, (int64_t)0x49EDC13LL, (int64_t)0x3E4D27EE000LL, (int64_t)0x28B83287800LL, (int64_t)0x131B4C9FLL, (int64_t)0x4FDA64910000LL, (int64_t)0x4D0FD5A90000LL, (int64_t)0x3DF7BLL, (int64_t)0x221F9E5LL, (int64_t)0x140F194F80LL, (int64_t)0x612D3A1A0000LL, (int64_t)0x1172BDB500LL, (int64_t)0x6F3D308A00LL, (int64_t)0x10782A9ELL, (int64_t)0xE123DLL, (int64_t)0x2D1C885C0LL, (int64_t)0x1453828D4000LL, (int64_t)0x165505908000LL, (int64_t)0xAD35FALL, (int64_t)0xADD1C73800LL, (int64_t)0x16DED1BFLL, (int64_t)0x1528777LL, (int64_t)0x13F3E4EELL, (int64_t)0x77E72021LL, (int64_t)0x35F0CE49LL, (int64_t)0x380F5C5E80LL, (int64_t)0x5B78753D00LL, (int64_t)0x3277D5458LL, (int64_t)0x31686CA30LL, (int64_t)0xF6E0E26ELL, (int64_t)0x207330LL, (int64_t)0x3B2471208LL, (int64_t)0x846327FLL, (int64_t)0x1DA972A5C0LL, (int64_t)0xA22E0310000LL, (int64_t)0x4574FCEF0LL, (int64_t)0x83C776540LL, (int64_t)0x342753LL, (int64_t)0x8353EDLL, (int64_t)0x61614000LL, (int64_t)0x1BB8EEFLL, (int64_t)0x2E0DCA2080LL, (int64_t)0xDA18B44000LL, (int64_t)0x5A175A7F00LL, (int64_t)0x1A4586DC40LL, (int64_t)0x2A4BECLL, (int64_t)0x170A3173800LL, (int64_t)0x10000LL, (int64_t)0x719E13200000LL, (int64_t)0x3482B92LL, (int64_t)0x5EA84LL, (int64_t)0x24BF360LL, (int64_t)0xB6D8920A00LL, (int64_t)0x190A789LL, (int64_t)0x16C0C03500LL, (int64_t)0x1BE6F95LL, (int64_t)0x1DA43E748000LL, (int64_t)0x85046FELL, (int64_t)0xC140CAALL, (int64_t)0x2BA0255E00LL, (int64_t)0xDF7C6BLL, (int64_t)0x186E5A91LL, (int64_t)0xA09D89F6LL, (int64_t)0x11B1313C000LL, (int64_t)0x9E3D44BELL, (int64_t)0x1A4A20EFLL, (int64_t)0x21BD6BDLL, (int64_t)0x3BDDDLL, (int64_t)0xCFF9999ELL, (int64_t)0x19EF7A40CLL, (int64_t)0x2BD158908000LL, (int64_t)0x63C53D4900LL, (int64_t)0x2B88067380LL, (int64_t)0xE3ACDE4800LL, (int64_t)0x6451E8D7LL, (int64_t)0x3F909DFD80LL, (int64_t)0xC6AE80F2LL, (int64_t)0x1C59347000LL };
		for (int ndx = 0; ndx < 100; ndx++)
			Util::Check("Fixed64::Sqrt", Fixed64::Sqrt(input0[ndx]), output0[ndx], input0[ndx]);
	}

	// Fixed64.SqrtFast()
	static void Fixed64_SqrtFast()
	{
		static const int64_t input0[] = { (int64_t)0x5351C4E5DE2C7LL, (int64_t)0x1A03BLL, (int64_t)0x17AE731DC5B93D0LL, (int64_t)0x195F0997D6B0LL, (int64_t)0xCA0AFAEADLL, (int64_t)0xE2A4LL, (int64_t)0x6B1D685LL, (int64_t)0x31E9863291FE80LL, (int64_t)0x6B223C51A7CF7LL, (int64_t)0x1BLL, (int64_t)0x1LL, (int64_t)0x21C8C0FE4BLL, (int64_t)0x15F67EDEFB8LL, (int64_t)0xFB41LL, (int64_t)0x4A9511B6AC58ELL, (int64_t)0x24401C4DFLL, (int64_t)0x309ALL, (int64_t)0x5267D89D9A03A0LL, (int64_t)0x150CLL, (int64_t)0x25FD95C1DB53F200LL, (int64_t)0x52FBLL, (int64_t)0xFFA6LL, (int64_t)0x649B5CE2CBD27CLL, (int64_t)0x25BE53FD1062LL, (int64_t)0x7CEA87CELL, (int64_t)0x1330F35DLL, (int64_t)0x5BE995LL, (int64_t)0x3A88DALL, (int64_t)0x2D9B053736LL, (int64_t)0x29472E31D8529200LL, (int64_t)0x3FCD07F88CAA4LL, (int64_t)0x8333AB69F816600LL, (int64_t)0x1432290CF7770LL, (int64_t)0x117E3LL, (int64_t)0x3516F7149LL, (int64_t)0x59LL, (int64_t)0x141771B821596LL, (int64_t)0x1EC26E719LL, (int64_t)0xBD11C7177CA83LL, (int64_t)0x71D3LL, (int64_t)0x2EC162LL, (int64_t)0x7D6B2D0269LL, (int64_t)0x19CE07B224LL, (int64_t)0x28BALL, (int64_t)0x8LL, (int64_t)0x140129E98C28570LL, (int64_t)0x7A81A1C2D1E6DCLL, (int64_t)0x7A43EFE758ELL, (int64_t)0x215DC6CBBE148A0LL, (int64_t)0x344LL, (int64_t)0x42A7BC6E3LL, (int64_t)0x1E883CB15DLL, (int64_t)0xBFF8BC0CLL, (int64_t)0x103C3B4B6LL, (int64_t)0x9AF437DLL, (int64_t)0x536EF7F31LL, (int64_t)0x108C824LL, (int64_t)0xA09LL, (int64_t)0x33FELL, (int64_t)0xA8LL, (int64_t)0x9DD03C2445F420LL, (int64_t)0x1DLL, (int64_t)0x1182CLL, (int64_t)0xA61B4E4152575LL, (int64_t)0x1C09ALL, (int64_t)0xDLL, (int64_t)0x6B0F80AD4264FLL, (int64_t)0x1416A15LL, (int64_t)0x12EE41AF6BA2LL, (int64_t)0xD4CB2C8A3F0LL, (int64_t)0x7378FEDB4BA3LL, (int64_t)0x65212D920D4LL, (int64_t)0x6LL, (int64_t)0xBD593481BF88680LL, (int64_t)0xD00285A980LL, (int64_t)0x2A581D53F9LL, (int64_t)0x27A0D725F8DLL, (int64_t)0x2785E582510LL, (int64_t)0x48F95F7E08BLL, (int64_t)0x18FA40B49DLL, (int64_t)0xA06A1EB2BLL, (int64_t)0x301C98CB8D3LL, (int64_t)0x70467B3LL, (int64_t)0xDF570CBLL, (int64_t)0x9E88F12LL, (int64_t)0x216FLL, (int64_t)0xAEF62E1LL, (int64_t)0x13E73LL, (int64_t)0x7399D16BBDAACLL, (int64_t)0x28B95568BCAA1200LL, (int64_t)0x15AFFE209E3ELL, (int64_t)0x20059E297CLL, (int64_t)0x97720LL, (int64_t)0x11F57BC3765BLL, (int64_t)0x2E2921LL, (int64_t)0x198CDLL, (int64_t)0x7298D2LL, (int64_t)0x9F144881C785LL, (int64_t)0x5CF7C8126C27600LL, (int64_t)0x27EDDA2650BB8800LL };
		static const int64_t output0[] = { (int64_t)0x24831E33000LL, (int64_t)0x1466C93LL, (int64_t)0x137723B0C000LL, (int64_t)0x50974AC300LL, (int64_t)0x38DB2D5D8LL, (int64_t)0xF0DF81LL, (int64_t)0x2965EBC7LL, (int64_t)0x710965EF000LL, (int64_t)0x2966DAA7800LL, (int64_t)0x53234LL, (int64_t)0x10000LL, (int64_t)0x5CFF683B0LL, (int64_t)0x12BEF80F00LL, (int64_t)0xFD9E27LL, (int64_t)0x228B5F66000LL, (int64_t)0x18154E3CCLL, (int64_t)0x6F8B05LL, (int64_t)0x913EE284000LL, (int64_t)0x49675DLL, (int64_t)0x629E62850000LL, (int64_t)0x91C058LL, (int64_t)0xFFD308LL, (int64_t)0xA07BB668000LL, (int64_t)0x624C1F3500LL, (int64_t)0xB2D3B7D8LL, (int64_t)0x4617BFCBLL, (int64_t)0x9964D55LL, (int64_t)0x7A69CC1LL, (int64_t)0x6C0D25BA0LL, (int64_t)0x66CC42BF0000LL, (int64_t)0x1FF342F7000LL, (int64_t)0x2DD127888000LL, (int64_t)0x11F9E401800LL, (int64_t)0x10BACB0LL, (int64_t)0x1D251018CLL, (int64_t)0x96F1DLL, (int64_t)0x11EDFBE1C00LL, (int64_t)0x162F4ACE0LL, (int64_t)0x37003AE1800LL, (int64_t)0xAAB38FLL, (int64_t)0x6D6795CLL, (int64_t)0xB32FAB000LL, (int64_t)0x5146D0750LL, (int64_t)0x661BDDLL, (int64_t)0x2D413LL, (int64_t)0x11E407BA8000LL, (int64_t)0xB1181480000LL, (int64_t)0x2C3ADDC100LL, (int64_t)0x171AEEA78000LL, (int64_t)0x1CE9D1LL, (int64_t)0x20A820100LL, (int64_t)0x586912370LL, (int64_t)0xDDAF680ELL, (int64_t)0x101DFC490LL, (int64_t)0x31CAE13BLL, (int64_t)0x248983798LL, (int64_t)0x10459FF0LL, (int64_t)0x32AF8FLL, (int64_t)0x735E23LL, (int64_t)0xCF62CLL, (int64_t)0xC8FFED48000LL, (int64_t)0x5629BLL, (int64_t)0x10BCF98LL, (int64_t)0x338DB276800LL, (int64_t)0x152E1DFLL, (int64_t)0x39B02LL, (int64_t)0x29633BB6800LL, (int64_t)0x11ED9EE0LL, (int64_t)0x459D808800LL, (int64_t)0x3A59658F00LL, (int64_t)0xABEEFC3800LL, (int64_t)0x2839926080LL, (int64_t)0x27311LL, (int64_t)0x370A9CC30000LL, (int64_t)0xE6C21D760LL, (int64_t)0x681DF0C70LL, (int64_t)0x192E3CAA00LL, (int64_t)0x1925AB5640LL, (int64_t)0x222B7A8100LL, (int64_t)0x4FF69EA80LL, (int64_t)0x32A9948D0LL, (int64_t)0x1BBEB2B6C0LL, (int64_t)0x2A624645LL, (int64_t)0x3BC72BEALL, (int64_t)0x325D5C4BLL, (int64_t)0x5C8390LL, (int64_t)0x34E8DFB0LL, (int64_t)0x11D865DLL, (int64_t)0x2B01DB25800LL, (int64_t)0x661B07360000LL, (int64_t)0x4A832A5500LL, (int64_t)0x5A8A697D0LL, (int64_t)0x3139B24LL, (int64_t)0x43CDE99D00LL, (int64_t)0x6CB4EF8LL, (int64_t)0x1437F6FLL, (int64_t)0xAB47B48LL, (int64_t)0xC9CDEA9C00LL, (int64_t)0x269165F68000LL, (int64_t)0x651AA6450000LL };
		for (int ndx = 0; ndx < 100; ndx++)
			Util::Check("Fixed64::SqrtFast", Fixed64::SqrtFast(input0[ndx]), output0[ndx], input0[ndx]);
	}

	// Fixed64.SqrtFastest()
	static void Fixed64_SqrtFastest()
	{
		static const int64_t input0[] = { (int64_t)0x2FLL, (int64_t)0x6192E646LL, (int64_t)0x19D596109C1BFF00LL, (int64_t)0x2824LL, (int64_t)0x1CF90FELL, (int64_t)0x2A2ECEBD20C97CLL, (int64_t)0x460D609A3LL, (int64_t)0x40E2FA4D3LL, (int64_t)0x4FEC7A962A0554LL, (int64_t)0xEA3376899AB8DLL, (int64_t)0x86BEE88A90D3C8LL, (int64_t)0x1ACC37737381LL, (int64_t)0x8CDEA24ELL, (int64_t)0x853A3113A3LL, (int64_t)0x43345052BLL, (int64_t)0x347BLL, (int64_t)0x10B09B25ADELL, (int64_t)0x504956C66E0FDLL, (int64_t)0x10C3A0ALL, (int64_t)0xDLL, (int64_t)0x4DA1C6AE5BLL, (int64_t)0x561092601LL, (int64_t)0xB1F1C2605LL, (int64_t)0x1DC02A67E4D7LL, (int64_t)0x273F4EBD34FBF600LL, (int64_t)0x39BLL, (int64_t)0xAAF280LL, (int64_t)0x18DA06LL, (int64_t)0x41A18F8AD1LL, (int64_t)0x82426CLL, (int64_t)0x5E97LL, (int64_t)0xFF16C88E7B4618LL, (int64_t)0x1B3542066D28LL, (int64_t)0x74F743894E8LL, (int64_t)0x85ACD5CALL, (int64_t)0x1ALL, (int64_t)0x77303575095LL, (int64_t)0x2CC0LL, (int64_t)0x7LL, (int64_t)0xF087A89FFLL, (int64_t)0x1E8BA45523FLL, (int64_t)0xAC922718C093E0LL, (int64_t)0xFF013BLL, (int64_t)0x1F9716914DCE5500LL, (int64_t)0x4DLL, (int64_t)0x33CB9E147A801600LL, (int64_t)0x3ALL, (int64_t)0x48C06B86360LL, (int64_t)0x446LL, (int64_t)0xE1LL, (int64_t)0x61F9F899DBLL, (int64_t)0x5B59B6408LL, (int64_t)0x97D3ECLL, (int64_t)0x6EDC579E5EE1C8LL, (int64_t)0x83ABB3LL, (int64_t)0x2392216AFLL, (int64_t)0x2317FC2830CBC80LL, (int64_t)0xDE4CLL, (int64_t)0x4175LL, (int64_t)0x808DLL, (int64_t)0x3F2B9F4ALL, (int64_t)0x2D19LL, (int64_t)0x3F46274B2E2F7A0LL, (int64_t)0x9D132614LL, (int64_t)0x279D2AD47ELL, (int64_t)0x21CE866D5A4E3200LL, (int64_t)0x3F08EAC13B5F4000LL, (int64_t)0x4D14530CEC010LL, (int64_t)0xFFLL, (int64_t)0x28E0B471LL, (int64_t)0x1C2E62EFBLL, (int64_t)0x5F78F34LL, (int64_t)0xA6A4ACE9F75ELL, (int64_t)0x475E9A7E4967DLL, (int64_t)0x1C1CF2ALL, (int64_t)0x1CCA6DE13130LL, (int64_t)0x566LL, (int64_t)0x168816F37BLL, (int64_t)0x62700CFB32LL, (int64_t)0x307EC4D84BF24C00LL, (int64_t)0xFLL, (int64_t)0x96621A4F2A3LL, (int64_t)0x5CFLL, (int64_t)0x4A9E854BLL, (int64_t)0x55167D66B724LL, (int64_t)0x4245A26C273LL, (int64_t)0x1AE1C5A26LL, (int64_t)0xFB50CE4B9AD65LL, (int64_t)0xE3690LL, (int64_t)0xF08310D945C9D80LL, (int64_t)0x2FFLL, (int64_t)0x8941AC9LL, (int64_t)0x2BC177655D6C0C00LL, (int64_t)0x3D67546609E23LL, (int64_t)0x3CLL, (int64_t)0xAD6165BLL, (int64_t)0xAE8D05C68EE4900LL, (int64_t)0x67E6C91336B518LL, (int64_t)0xCC25C6LL, (int64_t)0x92LL };
		static const int64_t output0[] = { (int64_t)0x6DB36LL, (int64_t)0x9E0F5816LL, (int64_t)0x5153A3860000LL, (int64_t)0x655EF6LL, (int64_t)0x15875AFALL, (int64_t)0x67EC3335000LL, (int64_t)0x2179C7740LL, (int64_t)0x20384FC98LL, (int64_t)0x8F0A3A94000LL, (int64_t)0x3D357A7A000LL, (int64_t)0xB9B69D8C000LL, (int64_t)0x52D3688700LL, (int64_t)0xBDE231AALL, (int64_t)0xB8AA82800LL, (int64_t)0x20C9ED6A8LL, (int64_t)0x73E952LL, (int64_t)0x1057139640LL, (int64_t)0x23D759DB000LL, (int64_t)0x10605BD1LL, (int64_t)0x39B0BLL, (int64_t)0x8CF84F440LL, (int64_t)0x251C65880LL, (int64_t)0x355CE89D8LL, (int64_t)0x574327FF00LL, (int64_t)0x643BF7D70000LL, (int64_t)0x1E60DDLL, (int64_t)0xD135368LL, (int64_t)0x4FC48DBLL, (int64_t)0x819D55120LL, (int64_t)0xB69A809LL, (int64_t)0x9BA04DLL, (int64_t)0xFF8A99CA000LL, (int64_t)0x5374BD1100LL, (int64_t)0x2B41A0D300LL, (int64_t)0xB8F9B95ALL, (int64_t)0x51962LL, (int64_t)0x2BAA4A7200LL, (int64_t)0x6B0ACDLL, (int64_t)0x2A546LL, (int64_t)0x3E07C0098LL, (int64_t)0x161AF46B80LL, (int64_t)0xD2335368000LL, (int64_t)0xFF7FBE3LL, (int64_t)0x59ECD5950000LL, (int64_t)0x8C64DLL, (int64_t)0x73276DB30000LL, (int64_t)0x79D77LL, (int64_t)0x221D6C4300LL, (int64_t)0x21129ELL, (int64_t)0xEFFC3LL, (int64_t)0x9E62A5100LL, (int64_t)0x263C0CAA8LL, (int64_t)0xC52397BLL, (int64_t)0xA874F364000LL, (int64_t)0xB7963C1LL, (int64_t)0x17DAB1F4CLL, (int64_t)0x17B1972B8000LL, (int64_t)0xEE8ACELL, (int64_t)0x817170LL, (int64_t)0xB56818LL, (int64_t)0x7F29CB26LL, (int64_t)0x6B751CLL, (int64_t)0x1FD127318000LL, (int64_t)0xC885F534LL, (int64_t)0x64B3CB430LL, (int64_t)0x5D05A6340000LL, (int64_t)0x7F06AFA40000LL, (int64_t)0x231DD936800LL, (int64_t)0xFF7F1LL, (int64_t)0x664CA52BLL, (int64_t)0x153BA7CC4LL, (int64_t)0x2716693ALL, (int64_t)0xCE8D8DB600LL, (int64_t)0x21CA0000000LL, (int64_t)0x1535184DLL, (int64_t)0x55D819F200LL, (int64_t)0x252D87LL, (int64_t)0x4BF471660LL, (int64_t)0x9EC1DB1A0LL, (int64_t)0x6F6E52E30000LL, (int64_t)0x3DF63LL, (int64_t)0x310CA00400LL, (int64_t)0x2690B8LL, (int64_t)0x8A33D6F2LL, (int64_t)0x9398F95200LL, (int64_t)0x208F9FF100LL, (int64_t)0x14BD275D8LL, (int64_t)0x3F68A6B8000LL, (int64_t)0x3C50EF9LL, (int64_t)0x3E0728578000LL, (int64_t)0x1BB27DLL, (int64_t)0x2EDBBD65LL, (int64_t)0x69D861510000LL, (int64_t)0x1F57764E000LL, (int64_t)0x7BEC7LL, (int64_t)0x34AC6447LL, (int64_t)0x34D9E2DA8000LL, (int64_t)0xA3188E96000LL, (int64_t)0xE49E710LL, (int64_t)0xC1500LL };
		for (int ndx = 0; ndx < 100; ndx++)
			Util::Check("Fixed64::SqrtFastest", Fixed64::SqrtFastest(input0[ndx]), output0[ndx], input0[ndx]);
	}

	// Fixed32.SqrtPrecise()
	static void Fixed32_SqrtPrecise()
	{
		static const int32_t input0[] = { (int32_t)0x3A620CCD, (int32_t)0x258, (int32_t)0x1FD29, (int32_t)0x1FD65B, (int32_t)0x4F197, (int32_t)0x63, (int32_t)0xFCBA03, (int32_t)0x2A986, (int32_t)0x8206, (int32_t)0xDEDF4, (int32_t)0xC5A, (int32_t)0x64B, (int32_t)0xA037F, (int32_t)0xD7, (int32_t)0x47, (int32_t)0xDF23A6, (int32_t)0x5, (int32_t)0x3F5B, (int32_t)0x79EBFC, (int32_t)0xDC10964, (int32_t)0x4C2F, (int32_t)0x33, (int32_t)0x96EB, (int32_t)0x34, (int32_t)0x4BF, (int32_t)0xC, (int32_t)0x338B, (int32_t)0x1BE92B2F, (int32_t)0x3388AD, (int32_t)0x1B542DC0, (int32_t)0x901B00, (int32_t)0x274, (int32_t)0x7F, (int32_t)0xCFDF, (int32_t)0x3D9EA24D, (int32_t)0xC6D877, (int32_t)0x25, (int32_t)0x7A86, (int32_t)0x71CABFB, (int32_t)0x21C6B, (int32_t)0x670E076, (int32_t)0x1DF74AF2, (int32_t)0x9C3, (int32_t)0x163C87, (int32_t)0x542F0, (int32_t)0x1C6C89E, (int32_t)0x146CC09, (int32_t)0x7F5890, (int32_t)0x93933, (int32_t)0x3EB, (int32_t)0x15DF, (int32_t)0xE211, (int32_t)0x19, (int32_t)0x4E51, (int32_t)0x114FE7, (int32_t)0x2473370, (int32_t)0xFE9709, (int32_t)0x135B, (int32_t)0xD6A, (int32_t)0xC65D, (int32_t)0x7B0194, (int32_t)0x24381B4, (int32_t)0x34E62FC, (int32_t)0x1307F, (int32_t)0x62FB547, (int32_t)0xA, (int32_t)0x19, (int32_t)0x18, (int32_t)0xDF, (int32_t)0x16EA, (int32_t)0xBE4CA, (int32_t)0x2B953, (int32_t)0x23A29, (int32_t)0x73, (int32_t)0x4, (int32_t)0xA2B6, (int32_t)0x14FF5E3, (int32_t)0x1B26019, (int32_t)0x27FF1, (int32_t)0xAAFF, (int32_t)0x27F, (int32_t)0x19E7C4, (int32_t)0x60D, (int32_t)0x1A48, (int32_t)0x27FAA, (int32_t)0x146, (int32_t)0x31, (int32_t)0x685AD6, (int32_t)0x3007A3A, (int32_t)0x36, (int32_t)0x31FC9921, (int32_t)0x7C10DB, (int32_t)0x12, (int32_t)0x125B, (int32_t)0x1192E51, (int32_t)0x5, (int32_t)0x12, (int32_t)0x20D5EEA, (int32_t)0xE60B2A, (int32_t)0x10B81 };
		static const int32_t output0[] = { (int32_t)0x7A4108, (int32_t)0x187E, (int32_t)0x16908, (int32_t)0x5A478, (int32_t)0x23933, (int32_t)0x9F3, (int32_t)0xFE5BA, (int32_t)0x1A1B2, (int32_t)0xB671, (int32_t)0x3BB73, (int32_t)0x383B, (int32_t)0x2823, (int32_t)0x32A18, (int32_t)0xEA9, (int32_t)0x86D, (int32_t)0xEF016, (int32_t)0x23C, (int32_t)0x7F5A, (int32_t)0xB0AB4, (int32_t)0x3B569C, (int32_t)0x8BA7, (int32_t)0x724, (int32_t)0xC48E, (int32_t)0x736, (int32_t)0x22DB, (int32_t)0x376, (int32_t)0x72DE, (int32_t)0x548773, (int32_t)0x72DBF, (int32_t)0x53A4A6, (int32_t)0xC011F, (int32_t)0x190F, (int32_t)0xB44, (int32_t)0xE6AF, (int32_t)0x7D98DC, (int32_t)0xE19EC, (int32_t)0x615, (int32_t)0xB11A, (int32_t)0x2AAB59, (int32_t)0x173F3, (int32_t)0x289B3A, (int32_t)0x5795FE, (int32_t)0x31FD, (int32_t)0x4B72E, (int32_t)0x24B35, (int32_t)0x15535E, (int32_t)0x1213D8, (int32_t)0xB48E6, (int32_t)0x30979, (int32_t)0x1FAB, (int32_t)0x4AD3, (int32_t)0xF091, (int32_t)0x500, (int32_t)0x8D98, (int32_t)0x42929, (int32_t)0x182649, (int32_t)0xFF4B4, (int32_t)0x4664, (int32_t)0x3A99, (int32_t)0xE158, (int32_t)0xB173F, (int32_t)0x1812AC, (int32_t)0x1D17BC, (int32_t)0x11732, (int32_t)0x27CBBB, (int32_t)0x329, (int32_t)0x500, (int32_t)0x4E6, (int32_t)0xEEE, (int32_t)0x4C96, (int32_t)0x372DF, (int32_t)0x1A682, (int32_t)0x17E0C, (int32_t)0xAB9, (int32_t)0x200, (int32_t)0xCC17, (int32_t)0x125448, (int32_t)0x14D777, (int32_t)0x194C0, (int32_t)0xD139, (int32_t)0x1947, (int32_t)0x516F8, (int32_t)0x275B, (int32_t)0x5206, (int32_t)0x194AA, (int32_t)0x120E, (int32_t)0x700, (int32_t)0xA3725, (int32_t)0x1BB8AF, (int32_t)0x759, (int32_t)0x711F3E, (int32_t)0xB2373, (int32_t)0x43E, (int32_t)0x448C, (int32_t)0x10C4B9, (int32_t)0x23C, (int32_t)0x43E, (int32_t)0x16EBC4, (int32_t)0xF2ACC, (int32_t)0x105B0 };
		for (int ndx = 0; ndx < 100; ndx++)
			Util::Check("Fixed32::SqrtPrecise", Fixed32::SqrtPrecise(input0[ndx]), output0[ndx], input0[ndx]);
	}

	// Fixed32.Sqrt()
	static void Fixed32_Sqrt()
	{
		static const int32_t input0[] = { (int32_t)0x240C2F, (int32_t)0x1A8004, (int32_t)0x12375, (int32_t)0xCE, (int32_t)0x1519F4, (int32_t)0x201F40F, (int32_t)0x19603336, (int32_t)0xDF61B5D, (int32_t)0x24AD, (int32_t)0x36, (int32_t)0x3, (int32_t)0x2582C275, (int32_t)0x1EF8F01, (int32_t)0x5055EB7, (int32_t)0x9E, (int32_t)0x9, (int32_t)0xBF81, (int32_t)0x4067, (int32_t)0x1E773A86, (int32_t)0x9B476, (int32_t)0xCED8004, (int32_t)0xF79, (int32_t)0x20D, (int32_t)0x8, (int32_t)0x1D57, (int32_t)0x622AB98, (int32_t)0x4C59, (int32_t)0x3E, (int32_t)0x1A4A, (int32_t)0x30083EBB, (int32_t)0x11F3, (int32_t)0x28ED20DA, (int32_t)0x3, (int32_t)0x4, (int32_t)0x12F978F, (int32_t)0x60903, (int32_t)0x2D, (int32_t)0xF, (int32_t)0x4FB736, (int32_t)0x4FA778, (int32_t)0x337, (int32_t)0xE4, (int32_t)0x5B0, (int32_t)0x1C36C7, (int32_t)0x1F, (int32_t)0x2, (int32_t)0x1005D34B, (int32_t)0xE8, (int32_t)0x3B, (int32_t)0x3B379D, (int32_t)0x1E6DB, (int32_t)0x120352, (int32_t)0x44FA83C, (int32_t)0x2F, (int32_t)0x52C4F, (int32_t)0x4A8, (int32_t)0x19CD, (int32_t)0x467A, (int32_t)0x1C17956, (int32_t)0xDC1CF2, (int32_t)0xD76, (int32_t)0xD12651, (int32_t)0x10FE2, (int32_t)0x30DE, (int32_t)0xC2339A, (int32_t)0x5, (int32_t)0x13DD961F, (int32_t)0xCF2677, (int32_t)0x8, (int32_t)0x6938A, (int32_t)0xD5B08AE, (int32_t)0x1978, (int32_t)0x33B554, (int32_t)0xC3, (int32_t)0x609, (int32_t)0x1CF667, (int32_t)0x5, (int32_t)0x4A8CB, (int32_t)0x10FC48CC, (int32_t)0x1604, (int32_t)0x1881C232, (int32_t)0xA7, (int32_t)0x2, (int32_t)0x1C6A2F, (int32_t)0x3283, (int32_t)0x3FC8F3, (int32_t)0x12, (int32_t)0x51923BF, (int32_t)0x3B31, (int32_t)0x8254, (int32_t)0x77, (int32_t)0x2952D8, (int32_t)0x224, (int32_t)0x172D97FC, (int32_t)0xBD5, (int32_t)0xFBE1, (int32_t)0x35CBD0, (int32_t)0x773DBB6, (int32_t)0x94C4C96, (int32_t)0xB };
		static const int32_t output0[] = { (int32_t)0x60103, (int32_t)0x525D7, (int32_t)0x11127, (int32_t)0xE5A, (int32_t)0x497F7, (int32_t)0x16ABA8, (int32_t)0x509958, (int32_t)0x3BC8A9, (int32_t)0x60E5, (int32_t)0x759, (int32_t)0x1BB, (int32_t)0x61FE61, (int32_t)0x1642DA, (int32_t)0x23DA20, (int32_t)0xC91, (int32_t)0x2FF, (int32_t)0xDD6A, (int32_t)0x8066, (int32_t)0x585030, (int32_t)0x31D82, (int32_t)0x39873B, (int32_t)0x3EEF, (int32_t)0x16E9, (int32_t)0x2D4, (int32_t)0x56AA, (int32_t)0x27A1B5, (int32_t)0x8BCD, (int32_t)0x7DF, (int32_t)0x5209, (int32_t)0x6EE370, (int32_t)0x43C9, (int32_t)0x665B9B, (int32_t)0x1BB, (int32_t)0x200, (int32_t)0x116C84, (int32_t)0x274E7, (int32_t)0x6B5, (int32_t)0x3DF, (int32_t)0x8EDA9, (int32_t)0x8ECC7, (int32_t)0x1CB0, (int32_t)0xF19, (int32_t)0x2628, (int32_t)0x54FCA, (int32_t)0x591, (int32_t)0x16A, (int32_t)0x400BA5, (int32_t)0xF3B, (int32_t)0x7AE, (int32_t)0x7B1FD, (int32_t)0x16109, (int32_t)0x43E81, (int32_t)0x2138A9, (int32_t)0x6DB, (int32_t)0x24641, (int32_t)0x2286, (int32_t)0x5145, (int32_t)0x8652, (int32_t)0x153367, (int32_t)0xED611, (int32_t)0x3AB3, (int32_t)0xE7646, (int32_t)0x107D2, (int32_t)0x6FD9, (int32_t)0xDEF84, (int32_t)0x23C, (int32_t)0x475034, (int32_t)0xE6488, (int32_t)0x2D4, (int32_t)0x2907E, (int32_t)0x3A78F6, (int32_t)0x50BF, (int32_t)0x730DB, (int32_t)0xDF6, (int32_t)0x274E, (int32_t)0x561B5, (int32_t)0x23C, (int32_t)0x22896, (int32_t)0x41F107, (int32_t)0x4B12, (int32_t)0x4F3501, (int32_t)0xCEC, (int32_t)0x16A, (int32_t)0x5549F, (int32_t)0x71B6, (int32_t)0x7FC8E, (int32_t)0x43E, (int32_t)0x242070, (int32_t)0x7B18, (int32_t)0xB6A8, (int32_t)0xAE8, (int32_t)0x66DA7, (int32_t)0x1768, (int32_t)0x4D07A2, (int32_t)0x3709, (int32_t)0xFDEE, (int32_t)0x755A7, (int32_t)0x2BADD5, (int32_t)0x30C9CE, (int32_t)0x351 };
		for (int ndx = 0; ndx < 100; ndx++)
			Util::Check("Fixed32::Sqrt", Fixed32::Sqrt(input0[ndx]), output0[ndx], input0[ndx]);
	}

	// Fixed32.SqrtFast()
	static void Fixed32_SqrtFast()
	{
		static const int32_t input0[] = { (int32_t)0x8, (int32_t)0x27, (int32_t)0x36, (int32_t)0x24023, (int32_t)0x11BC4D2, (int32_t)0x26, (int32_t)0x164B7D41, (int32_t)0xB4590, (int32_t)0x1F69E90, (int32_t)0xB6E6515, (int32_t)0x1B6, (int32_t)0x1626C2E, (int32_t)0x10990, (int32_t)0x28D3, (int32_t)0x23ED3FD, (int32_t)0x29, (int32_t)0xC75260, (int32_t)0x2646108, (int32_t)0x3DEAC634, (int32_t)0x6, (int32_t)0x124D1B6E, (int32_t)0x7, (int32_t)0x6FF, (int32_t)0x42881, (int32_t)0x1C1D, (int32_t)0xA5, (int32_t)0x17, (int32_t)0x8EC745, (int32_t)0x4232BDD, (int32_t)0x188A7F8, (int32_t)0x2274BD80, (int32_t)0x2E, (int32_t)0x201234, (int32_t)0x2F58E3B, (int32_t)0x520, (int32_t)0x13CD650, (int32_t)0x6, (int32_t)0x3BAD, (int32_t)0x66896BE, (int32_t)0x2A4, (int32_t)0xB71A1F, (int32_t)0x6BCD, (int32_t)0x5, (int32_t)0x14B67, (int32_t)0x98, (int32_t)0x159F, (int32_t)0x4F, (int32_t)0x35B3F00, (int32_t)0x14, (int32_t)0x93, (int32_t)0x50E057, (int32_t)0x59F4C63, (int32_t)0x7B40A0F, (int32_t)0x30DCD7C, (int32_t)0x28, (int32_t)0x2, (int32_t)0x16A1F8D, (int32_t)0x34E6D, (int32_t)0x28, (int32_t)0x36E02, (int32_t)0x3, (int32_t)0x4F, (int32_t)0xAE5BF2, (int32_t)0x2, (int32_t)0x153B9AB1, (int32_t)0x12, (int32_t)0x16, (int32_t)0x166F74, (int32_t)0xF, (int32_t)0x3, (int32_t)0xD, (int32_t)0x6AE, (int32_t)0x17E39EBA, (int32_t)0x2EDC3D, (int32_t)0x220, (int32_t)0x56EB, (int32_t)0x3, (int32_t)0x15A067F, (int32_t)0xDFE, (int32_t)0x2, (int32_t)0x4, (int32_t)0x1C5, (int32_t)0xDD4F9, (int32_t)0xE5B39, (int32_t)0x9, (int32_t)0xC, (int32_t)0x184, (int32_t)0x2A01ABB, (int32_t)0x25BDA2, (int32_t)0x4A7, (int32_t)0x37FF107C, (int32_t)0x762F, (int32_t)0x2E9, (int32_t)0x3BC, (int32_t)0x1A5, (int32_t)0x4949A, (int32_t)0x2791D4, (int32_t)0x4, (int32_t)0x3E6EA, (int32_t)0x10 };
		static const int32_t output0[] = { (int32_t)0x2D4, (int32_t)0x63E, (int32_t)0x759, (int32_t)0x1800B, (int32_t)0x10D866, (int32_t)0x62A, (int32_t)0x4B8C63, (int32_t)0x35B7B, (int32_t)0x166B5A, (int32_t)0x3618A8, (int32_t)0x14ED, (int32_t)0x12D384, (int32_t)0x104BC, (int32_t)0x663B, (int32_t)0x17F9B5, (int32_t)0x667, (int32_t)0xE1E36, (int32_t)0x18BF13, (int32_t)0x7DE6B1, (int32_t)0x273, (int32_t)0x447298, (int32_t)0x2A5, (int32_t)0x2A51, (int32_t)0x20A05, (int32_t)0x54D5, (int32_t)0xCD8, (int32_t)0x4CB, (int32_t)0xBF2EB, (int32_t)0x208B6C, (int32_t)0x13D0BE, (int32_t)0x5DEAF6, (int32_t)0x6C8, (int32_t)0x5A9C2, (int32_t)0x1B860E, (int32_t)0x2438, (int32_t)0x11CCD1, (int32_t)0x273, (int32_t)0x7B99, (int32_t)0x2880F6, (int32_t)0x1A00, (int32_t)0xD8814, (int32_t)0xA61F, (int32_t)0x23C, (int32_t)0x12346, (int32_t)0xC54, (int32_t)0x4A65, (int32_t)0x8E3, (int32_t)0x1D5008, (int32_t)0x478, (int32_t)0xC1F, (int32_t)0x8FE43, (int32_t)0x25F033, (int32_t)0x2C687A, (int32_t)0x1BF5E6, (int32_t)0x653, (int32_t)0x16A, (int32_t)0x130794, (int32_t)0x1D17D, (int32_t)0x653, (int32_t)0x1DA18, (int32_t)0x1BB, (int32_t)0x8E3, (int32_t)0xD3462, (int32_t)0x16A, (int32_t)0x49BA31, (int32_t)0x43E, (int32_t)0x4B0, (int32_t)0x4BC93, (int32_t)0x3DF, (int32_t)0x1BB, (int32_t)0x39B, (int32_t)0x295A, (int32_t)0x4E33C0, (int32_t)0x6D86F, (int32_t)0x1752, (int32_t)0x952B, (int32_t)0x1BB, (int32_t)0x129A17, (int32_t)0x3BD9, (int32_t)0x16A, (int32_t)0x200, (int32_t)0x1548, (int32_t)0x3B817, (int32_t)0x3C9FA, (int32_t)0x2FF, (int32_t)0x376, (int32_t)0x13B2, (int32_t)0x19ECDD, (int32_t)0x624B3, (int32_t)0x2282, (int32_t)0x77BA8B, (int32_t)0xADF0, (int32_t)0x1B4B, (int32_t)0x1EEB, (int32_t)0x1484, (int32_t)0x223E4, (int32_t)0x64A5D, (int32_t)0x200, (int32_t)0x1F9B1, (int32_t)0x400 };
		for (int ndx = 0; ndx < 100; ndx++)
			Util::Check("Fixed32::SqrtFast", Fixed32::SqrtFast(input0[ndx]), output0[ndx], input0[ndx]);
	}

	// Fixed32.SqrtFastest()
	static void Fixed32_SqrtFastest()
	{
		static const int32_t input0[] = { (int32_t)0x1F4, (int32_t)0xE345, (int32_t)0x6BEFFC, (int32_t)0xB, (int32_t)0x15, (int32_t)0x1837, (int32_t)0xF0FF0AE, (int32_t)0x54, (int32_t)0x2DEA4, (int32_t)0x1D8F21, (int32_t)0x2EFD7B8A, (int32_t)0x2, (int32_t)0x78, (int32_t)0x1F, (int32_t)0x1A6BB, (int32_t)0x741154, (int32_t)0x171EB, (int32_t)0x18, (int32_t)0x10DFB8F3, (int32_t)0x376F053, (int32_t)0x318F784, (int32_t)0x21A, (int32_t)0x260BA209, (int32_t)0xDAE605, (int32_t)0x4, (int32_t)0x7487F, (int32_t)0x4, (int32_t)0xCC8F5, (int32_t)0x38FC, (int32_t)0x1DBD14, (int32_t)0x8C95E1, (int32_t)0x2F57CC26, (int32_t)0xB1, (int32_t)0x1BA, (int32_t)0x550C68, (int32_t)0x12B75, (int32_t)0x10CFB, (int32_t)0x26E5D, (int32_t)0x14EFE, (int32_t)0x19A9BD, (int32_t)0x34, (int32_t)0x9, (int32_t)0x1D4, (int32_t)0x2, (int32_t)0x657, (int32_t)0x3581CFC9, (int32_t)0x1F4, (int32_t)0x2F, (int32_t)0x90D6BE, (int32_t)0xE825, (int32_t)0x6, (int32_t)0x34211, (int32_t)0xF, (int32_t)0x481484, (int32_t)0x14E, (int32_t)0x3B810664, (int32_t)0x17E51, (int32_t)0x1F8ED839, (int32_t)0x5, (int32_t)0xC0D0, (int32_t)0xA8E, (int32_t)0x25B, (int32_t)0x5E860F, (int32_t)0x62D035A, (int32_t)0xD74DA79, (int32_t)0x3F85E8B0, (int32_t)0xC15A3E, (int32_t)0x1182531A, (int32_t)0x17B8, (int32_t)0x2, (int32_t)0xDC, (int32_t)0x260A57A1, (int32_t)0x4A3FF, (int32_t)0x150, (int32_t)0x220F76, (int32_t)0xABFF15, (int32_t)0x2, (int32_t)0x1DCC3821, (int32_t)0x450D, (int32_t)0x4, (int32_t)0x774, (int32_t)0x6349E53, (int32_t)0x5A63916, (int32_t)0xFB5F0F4, (int32_t)0x961B4, (int32_t)0x56, (int32_t)0x627378A, (int32_t)0x9D79, (int32_t)0x2, (int32_t)0x5B797C, (int32_t)0x32212311, (int32_t)0x22180, (int32_t)0xE2D2, (int32_t)0x3, (int32_t)0x4DC, (int32_t)0x58699C9, (int32_t)0x63E, (int32_t)0x12F6, (int32_t)0xC, (int32_t)0x663 };
		static const int32_t output0[] = { (int32_t)0x165C, (int32_t)0xF130, (int32_t)0xA639E, (int32_t)0x351, (int32_t)0x495, (int32_t)0x4EBD, (int32_t)0x3E1725, (int32_t)0x92A, (int32_t)0x1B1B5, (int32_t)0x56FB2, (int32_t)0x6DB078, (int32_t)0x16A, (int32_t)0xAF4, (int32_t)0x591, (int32_t)0x148F8, (int32_t)0xAC5C4, (int32_t)0x133C2, (int32_t)0x4E6, (int32_t)0x41B823, (int32_t)0x1DC7B6, (int32_t)0x1C2962, (int32_t)0x1731, (int32_t)0x62AF3F, (int32_t)0xECB74, (int32_t)0x200, (int32_t)0x2B2D0, (int32_t)0x200, (int32_t)0x39365, (int32_t)0x78C5, (int32_t)0x573EA, (int32_t)0xBDB12, (int32_t)0x6E19A4, (int32_t)0xD4E, (int32_t)0x1505, (int32_t)0x93903, (int32_t)0x114DB, (int32_t)0x10663, (int32_t)0x18F24, (int32_t)0x124DB, (int32_t)0x510EA, (int32_t)0x736, (int32_t)0x2FF, (int32_t)0x15A1, (int32_t)0x16A, (int32_t)0x2849, (int32_t)0x750979, (int32_t)0x165C, (int32_t)0x6DB, (int32_t)0xC08AA, (int32_t)0xF3C2, (int32_t)0x273, (int32_t)0x1CE18, (int32_t)0x3DF, (int32_t)0x87D3F, (int32_t)0x1246, (int32_t)0x7B690E, (int32_t)0x138DF, (int32_t)0x59E10B, (int32_t)0x23C, (int32_t)0xDE30, (int32_t)0x33FB, (int32_t)0x188D, (int32_t)0x9B925, (int32_t)0x27C3CE, (int32_t)0x3AB130, (int32_t)0x7F84FD, (int32_t)0xDE804, (int32_t)0x42F19B, (int32_t)0x4DEE, (int32_t)0x16A, (int32_t)0xED4, (int32_t)0x62AD91, (int32_t)0x22770, (int32_t)0x1254, (int32_t)0x5D5EB, (int32_t)0xD1D98, (int32_t)0x16A, (int32_t)0x5754D3, (int32_t)0x84F1, (int32_t)0x200, (int32_t)0x2BAD, (int32_t)0x27DC39, (int32_t)0x260861, (int32_t)0x3F6A74, (int32_t)0x31010, (int32_t)0x946, (int32_t)0x27B127, (int32_t)0xC8C7, (int32_t)0x16A, (int32_t)0x990AC, (int32_t)0x714A5D, (int32_t)0x175A9, (int32_t)0xF0F3, (int32_t)0x1BB, (int32_t)0x2344, (int32_t)0x259D43, (int32_t)0x27FA, (int32_t)0x45AA, (int32_t)0x376, (int32_t)0x286F };
		for (int ndx = 0; ndx < 100; ndx++)
			Util::Check("Fixed32::SqrtFastest", Fixed32::SqrtFastest(input0[ndx]), output0[ndx], input0[ndx]);
	}

	// Fixed64.RSqrt()
	static void Fixed64_RSqrt()
	{
		static const int64_t input0[] = { (int64_t)0x2348LL, (int64_t)0x20A833LL, (int64_t)0x8251D65A20D4LL, (int64_t)0x51B3E598D701LL, (int64_t)0x2637FLL, (int64_t)0x23LL, (int64_t)0x1E0B567235FA9400LL, (int64_t)0x165DF54899FA81LL, (int64_t)0x4LL, (int64_t)0x399125CELL, (int64_t)0x289B00388965D600LL, (int64_t)0xCACC03133LL, (int64_t)0xDD92EF0ELL, (int64_t)0x1LL, (int64_t)0x417LL, (int64_t)0x2B2E7147LL, (int64_t)0x22332A3LL, (int64_t)0x5650095D5CE54LL, (int64_t)0xE101LL, (int64_t)0x2FC87BE33062LL, (int64_t)0x93LL, (int64_t)0x3550FLL, (int64_t)0x2359E286305D780LL, (int64_t)0x1A99C310196LL, (int64_t)0x3LL, (int64_t)0x45021DFB553LL, (int64_t)0x19FC5F3ALL, (int64_t)0x891D9E87FLL, (int64_t)0x3E91C68EB9C51E0LL, (int64_t)0x5AE57627DDA67LL, (int64_t)0xA108961LL, (int64_t)0x53E7934723LL, (int64_t)0x4395930DBAF894LL, (int64_t)0xA2LL, (int64_t)0xCA5B502859E96LL, (int64_t)0x1LL, (int64_t)0xDBLL, (int64_t)0x11ELL, (int64_t)0x15488976E04LL, (int64_t)0x382589E49LL, (int64_t)0x1A0ALL, (int64_t)0x4LL, (int64_t)0x1322426DLL, (int64_t)0x2040513F5LL, (int64_t)0x64BFC0A2D06FLL, (int64_t)0x2FEC811LL, (int64_t)0x6LL, (int64_t)0xA70F1DE3LL, (int64_t)0x32F1DD0F3EF4D6LL, (int64_t)0x154428C838F3D3LL, (int64_t)0x28C2153DLL, (int64_t)0x122A09103LL, (int64_t)0x12BLL, (int64_t)0x3F579CLL, (int64_t)0x2CC7LL, (int64_t)0x2A5AB006598D820LL, (int64_t)0x3B1F636LL, (int64_t)0x4ELL, (int64_t)0x1730EEE01213LL, (int64_t)0x2371E9B975LL, (int64_t)0x583D88AEE9LL, (int64_t)0x381801DLL, (int64_t)0x16E0DFD15492C60LL, (int64_t)0x37F2LL, (int64_t)0x5LL, (int64_t)0x7BE406LL, (int64_t)0xC00AB0A66BELL, (int64_t)0x15D80E7LL, (int64_t)0x647LL, (int64_t)0x3BBLL, (int64_t)0x32677BLL, (int64_t)0x1E97ALL, (int64_t)0x40ELL, (int64_t)0x1007AC3868C2LL, (int64_t)0x1D5BF109DLL, (int64_t)0x1ELL, (int64_t)0xB255E55A95AC9LL, (int64_t)0x1189B15LL, (int64_t)0x10E5D87BD800A50LL, (int64_t)0x4B46ED40B4LL, (int64_t)0xB4C30B8EB3LL, (int64_t)0x9F482C965B81B00LL, (int64_t)0xAC40D647E56LL, (int64_t)0x2FLL, (int64_t)0x23AEA6LL, (int64_t)0x237634927633BC0LL, (int64_t)0x47AD7722LL, (int64_t)0x11124F5D6LL, (int64_t)0xE7F558B00BF5B8LL, (int64_t)0x131C6255C4D9D60LL, (int64_t)0x12FC38A1C6LL, (int64_t)0x2LL, (int64_t)0x315C819LL, (int64_t)0x9LL, (int64_t)0x28B901E1B55D1E0LL, (int64_t)0x1DB600C037DE5LL, (int64_t)0xDBLL, (int64_t)0x578CLL, (int64_t)0x5A379998LL, (int64_t)0xD02E74LL };
		static const int64_t output0[] = { (int64_t)0x2B195D28000LL, (int64_t)0x2CCC1A6F00LL, (int64_t)0x166CD55LL, (int64_t)0x1C52651LL, (int64_t)0xA5A3A25400LL, (int64_t)0x2B459B010000LL, (int64_t)0x2EB45LL, (int64_t)0x362135LL, (int64_t)0x800000000000LL, (int64_t)0x21BD9A250LL, (int64_t)0x282C9LL, (int64_t)0x47E81C98LL, (int64_t)0x1132B7088LL, (int64_t)0x1000000000000LL, (int64_t)0x7E9615B2000LL, (int64_t)0x26F521500LL, (int64_t)0xAF19C5080LL, (int64_t)0x6E3878LL, (int64_t)0x1111075C800LL, (int64_t)0x2508BF6LL, (int64_t)0x151D516E0000LL, (int64_t)0x8C3D534800LL, (int64_t)0xAC39DLL, (int64_t)0xC68AEFDLL, (int64_t)0x93CD3A2C0000LL, (int64_t)0x7B4489DLL, (int64_t)0x32382BDD0LL, (int64_t)0x577305D8LL, (int64_t)0x81747LL, (int64_t)0x6B67D2LL, (int64_t)0x50B1B0AE0LL, (int64_t)0x1BF2A0D2LL, (int64_t)0x1F23D0LL, (int64_t)0x141CFE958000LL, (int64_t)0x47FC1FLL, (int64_t)0x1000000000000LL, (int64_t)0x114C83318000LL, (int64_t)0xF23399C4000LL, (int64_t)0xDDF6732LL, (int64_t)0x88A8B128LL, (int64_t)0x322B05E3000LL, (int64_t)0x800000000000LL, (int64_t)0x3A8651900LL, (int64_t)0xB450195CLL, (int64_t)0x1981315LL, (int64_t)0x93EB47700LL, (int64_t)0x6882F5C00000LL, (int64_t)0x13CE6E818LL, (int64_t)0x23DDD9LL, (int64_t)0x378352LL, (int64_t)0x281953930LL, (int64_t)0xF044067CLL, (int64_t)0xECE0B730000LL, (int64_t)0x202A6CCA00LL, (int64_t)0x2641CA19000LL, (int64_t)0x9D582LL, (int64_t)0x852CD5DC0LL, (int64_t)0x1CFC7D998000LL, (int64_t)0x3528C4DLL, (int64_t)0x2AFFDA4BLL, (int64_t)0x1B40A3B6LL, (int64_t)0x88B92BDC0LL, (int64_t)0xD615DLL, (int64_t)0x2239E54D000LL, (int64_t)0x727C97160000LL, (int64_t)0x16FFE6D400LL, (int64_t)0x49E48E8LL, (int64_t)0xDB188A580LL, (int64_t)0x662D3E62000LL, (int64_t)0x848B1F68000LL, (int64_t)0x240EF3A600LL, (int64_t)0xB923281000LL, (int64_t)0x7F224590000LL, (int64_t)0x3FF0AD2LL, (int64_t)0xBCFC42D4LL, (int64_t)0x2EBD2E8D0000LL, (int64_t)0x4CAE07LL, (int64_t)0xF484B8AC0LL, (int64_t)0xF91B2LL, (int64_t)0x1D8181BALL, (int64_t)0x130A75AELL, (int64_t)0x5122FLL, (int64_t)0x4E05979LL, (int64_t)0x255768720000LL, (int64_t)0x2ADB326400LL, (int64_t)0xABF50LL, (int64_t)0x1E3CD79F0LL, (int64_t)0xF7D5EF0CLL, (int64_t)0x10CF08LL, (int64_t)0xEA3D3LL, (int64_t)0x3AC0D552LL, (int64_t)0xB504F3340000LL, (int64_t)0x91BFD1200LL, (int64_t)0x555555540000LL, (int64_t)0xA0772LL, (int64_t)0xBBDCFALL, (int64_t)0x114C83318000LL, (int64_t)0x1B5C37A2000LL, (int64_t)0x1AF3C7D88LL, (int64_t)0x11BE1F8980LL };
		for (int ndx = 0; ndx < 100; ndx++)
			Util::Check("Fixed64::RSqrt", Fixed64::RSqrt(input0[ndx]), output0[ndx], input0[ndx]);
	}

	// Fixed64.RSqrtFast()
	static void Fixed64_RSqrtFast()
	{
		static const int64_t input0[] = { (int64_t)0xFF89CBB1746LL, (int64_t)0x11E57239559LL, (int64_t)0x1A9A01LL, (int64_t)0xDA559BD1D67LL, (int64_t)0x6C028DBALL, (int64_t)0x1551LL, (int64_t)0x47AA04LL, (int64_t)0x4AC6F9BLL, (int64_t)0x8A1468B96B2E4LL, (int64_t)0x17ELL, (int64_t)0x3CLL, (int64_t)0x3LL, (int64_t)0x128ELL, (int64_t)0x4ELL, (int64_t)0xC8CAE8367E61D00LL, (int64_t)0x23748C6C7B9LL, (int64_t)0x14D766F22F30LL, (int64_t)0x7C6A5F24DE2CDLL, (int64_t)0x6459B1650A82ACLL, (int64_t)0xA5LL, (int64_t)0x6E9ED4470FBEC0LL, (int64_t)0xB3FLL, (int64_t)0x606E9BD2LL, (int64_t)0x1507FLL, (int64_t)0xC95D21169LL, (int64_t)0x1203D9LL, (int64_t)0x27AA40B4E9196ALL, (int64_t)0x6CLL, (int64_t)0x19315AE673A86LL, (int64_t)0x3F3DFFF72D0FLL, (int64_t)0x8C05908344ECA00LL, (int64_t)0x209779F74BLL, (int64_t)0xC70FC037766F90LL, (int64_t)0x14C77A1D3LL, (int64_t)0x12DA6FD9E314370LL, (int64_t)0x2866F1EFB7B65200LL, (int64_t)0x5FCD8FDC5ALL, (int64_t)0x327E08357E284200LL, (int64_t)0x1BE4CF2FEBLL, (int64_t)0x1ACLL, (int64_t)0x7EAD582CELL, (int64_t)0xFLL, (int64_t)0x7E9A3E5DA35LL, (int64_t)0x9B67FD1FA987LL, (int64_t)0x5077B9E64190FLL, (int64_t)0x5A1B6C431LL, (int64_t)0x9A680021B31F1LL, (int64_t)0xA0395LL, (int64_t)0x30LL, (int64_t)0x12608LL, (int64_t)0x16LL, (int64_t)0x70DC8LL, (int64_t)0x37D5EFLL, (int64_t)0x8BD575LL, (int64_t)0x7871C5A7LL, (int64_t)0x16B74E22BLL, (int64_t)0x2F8LL, (int64_t)0x14LL, (int64_t)0x115LL, (int64_t)0x5FELL, (int64_t)0x226509LL, (int64_t)0xA9C6LL, (int64_t)0xBDF6FCF89FLL, (int64_t)0x22LL, (int64_t)0xAEALL, (int64_t)0x77641F47LL, (int64_t)0x115LL, (int64_t)0x39267537E08LL, (int64_t)0x10BBLL, (int64_t)0x13E120E79B585A00LL, (int64_t)0x5LL, (int64_t)0x1A6ABA294A75LL, (int64_t)0x475DLL, (int64_t)0x3BF317A46E35LL, (int64_t)0x5371D869FLL, (int64_t)0x7367752AC035CLL, (int64_t)0x5AFCC300LL, (int64_t)0x27B6897D5B2ELL, (int64_t)0x10BA2295LL, (int64_t)0x2LL, (int64_t)0x77791D93LL, (int64_t)0x3F6017EE3LL, (int64_t)0x2LL, (int64_t)0x15EF240D0LL, (int64_t)0x2C5CD716DAFLL, (int64_t)0x13D9B6A7C81LL, (int64_t)0x956DLL, (int64_t)0x16C6E4927LL, (int64_t)0x2LL, (int64_t)0xD477E0LL, (int64_t)0xD9B3CC8137EB7LL, (int64_t)0x4BBDCD6A5LL, (int64_t)0x2E91526402C5B0LL, (int64_t)0x4A704D6LL, (int64_t)0x31D5F8037449FLL, (int64_t)0xBF03ALL, (int64_t)0x52AC255LL, (int64_t)0x39FC48D2BFLL, (int64_t)0xE3CB3E430LL, (int64_t)0xAC8A3LL };
		static const int64_t output0[] = { (int64_t)0x400ED4ALL, (int64_t)0xF20EE09LL, (int64_t)0x31A26CBF00LL, (int64_t)0x454CD05LL, (int64_t)0x18A1D96B8LL, (int64_t)0x377289BB000LL, (int64_t)0x1E3D95D280LL, (int64_t)0x766A90E80LL, (int64_t)0x5724FDLL, (int64_t)0xD1929730000LL, (int64_t)0x210CB0670000LL, (int64_t)0x93CDC4E80000LL, (int64_t)0x3B6E3AF6000LL, (int64_t)0x1CFC62980000LL, (int64_t)0x4843ELL, (int64_t)0xABF93C1LL, (int64_t)0x38134F6LL, (int64_t)0x5BCE38LL, (int64_t)0x198E34LL, (int64_t)0x13EDEAC88000LL, (int64_t)0x1856FALL, (int64_t)0x4C569DC0000LL, (int64_t)0x1A11D53A8LL, (int64_t)0xDF49EFE000LL, (int64_t)0x4829A648LL, (int64_t)0x3C508B9A00LL, (int64_t)0x28A5A9LL, (int64_t)0x18A224000000LL, (int64_t)0xCC0435LL, (int64_t)0x2031058LL, (int64_t)0x5689ALL, (int64_t)0x2CD7B315LL, (int64_t)0x12250DLL, (int64_t)0xE0A318B8LL, (int64_t)0xEBD4ELL, (int64_t)0x28465LL, (int64_t)0x1A27B5EDLL, (int64_t)0x2406FLL, (int64_t)0x307884C7LL, (int64_t)0xC5FC6DD0000LL, (int64_t)0x5AFB5E1ALL, (int64_t)0x421960CE0000LL, (int64_t)0x5B023D0LL, (int64_t)0x1489053LL, (int64_t)0x7226E5LL, (int64_t)0x6BE03672LL, (int64_t)0x526812LL, (int64_t)0x50E587C800LL, (int64_t)0x24F3713A0000LL, (int64_t)0xEEDEA56C00LL, (int64_t)0x36945F380000LL, (int64_t)0x60633A1000LL, (int64_t)0x22425DF200LL, (int64_t)0x15A6241600LL, (int64_t)0x175392908LL, (int64_t)0xD6D9F270LL, (int64_t)0x94946624000LL, (int64_t)0x393E16EF0000LL, (int64_t)0xF61B81B4000LL, (int64_t)0x6894C7BA000LL, (int64_t)0x2BA6CBE600LL, (int64_t)0x13A5B5C4000LL, (int64_t)0x1292FD89LL, (int64_t)0x2BE77C670000LL, (int64_t)0x4D7D8620000LL, (int64_t)0x176DD56D8LL, (int64_t)0xF61B81B4000LL, (int64_t)0x8773B5ALL, (int64_t)0x3E969189000LL, (int64_t)0x396A7LL, (int64_t)0x727C2DDE0000LL, (int64_t)0x31CEC8ELL, (int64_t)0x1E4DE525800LL, (int64_t)0x21103E3LL, (int64_t)0x701905F0LL, (int64_t)0x5F51F2LL, (int64_t)0x1AD696A68LL, (int64_t)0x289F5F7LL, (int64_t)0x3E982FBB0LL, (int64_t)0xB504F3340000LL, (int64_t)0x176BC6D58LL, (int64_t)0x80A163E8LL, (int64_t)0xB504F3340000LL, (int64_t)0xDAA549E4LL, (int64_t)0x99BE0B2LL, (int64_t)0xE5D4BCBLL, (int64_t)0x14F137A1800LL, (int64_t)0xD6906790LL, (int64_t)0xB504F3340000LL, (int64_t)0x11900A6100LL, (int64_t)0x45668ELL, (int64_t)0x75A8EDC0LL, (int64_t)0x2583CFLL, (int64_t)0x76AF74DC0LL, (int64_t)0x910E26LL, (int64_t)0x4A17A52400LL, (int64_t)0x709EB2280LL, (int64_t)0x219E4AC8LL, (int64_t)0x43D88780LL, (int64_t)0x4DF4FA9400LL };
		for (int ndx = 0; ndx < 100; ndx++)
			Util::Check("Fixed64::RSqrtFast", Fixed64::RSqrtFast(input0[ndx]), output0[ndx], input0[ndx]);
	}

	// Fixed64.RSqrtFastest()
	static void Fixed64_RSqrtFastest()
	{
		static const int64_t input0[] = { (int64_t)0x5322D5FLL, (int64_t)0x2B3LL, (int64_t)0x99LL, (int64_t)0x9DLL, (int64_t)0x31A7LL, (int64_t)0x374272LL, (int64_t)0x19LL, (int64_t)0x3B9BAFB56BLL, (int64_t)0x6B3FC0B2154F2LL, (int64_t)0x42CB92C7668LL, (int64_t)0x3LL, (int64_t)0x4C90899LL, (int64_t)0x4D6ECE0E27LL, (int64_t)0x7CLL, (int64_t)0x33633BA3BCDLL, (int64_t)0x22BBD1E508868LL, (int64_t)0x4CFALL, (int64_t)0x8ALL, (int64_t)0x3265A77LL, (int64_t)0x233166CB2LL, (int64_t)0xCC8ALL, (int64_t)0x30BA3FC2D4LL, (int64_t)0x14B43DD2487LL, (int64_t)0x50A52E2258AB3LL, (int64_t)0x176LL, (int64_t)0x500E1261LL, (int64_t)0x244E50AE7FB770LL, (int64_t)0x3D5B8B90187D8LL, (int64_t)0x4CFCFF139372D40LL, (int64_t)0x6FD5LL, (int64_t)0x1655B05LL, (int64_t)0x646CCA848E9334LL, (int64_t)0x2CALL, (int64_t)0x18DLL, (int64_t)0x1B867CA7CALL, (int64_t)0x2C386FLL, (int64_t)0x69E5C41LL, (int64_t)0xE515E1D790A9F8LL, (int64_t)0x71148LL, (int64_t)0xCD84ALL, (int64_t)0xC8D4E2AFALL, (int64_t)0xA0705916B9LL, (int64_t)0xD9789DB2170LL, (int64_t)0x2A5133LL, (int64_t)0x353068LL, (int64_t)0x2D7E7D4LL, (int64_t)0x3E9A1D12B543020LL, (int64_t)0x5FFA0A14CF6CLL, (int64_t)0x5CB56772658ALL, (int64_t)0x1LL, (int64_t)0x27LL, (int64_t)0x98BB3LL, (int64_t)0x1268LL, (int64_t)0x6LL, (int64_t)0xDLL, (int64_t)0x6D316CAEEC3F5LL, (int64_t)0x85A04610LL, (int64_t)0x79957LL, (int64_t)0x1AFD9CB2A9473000LL, (int64_t)0x27B29D9E06FFLL, (int64_t)0x6169539DLL, (int64_t)0x1A649LL, (int64_t)0x318D4F0024ELL, (int64_t)0xF58141096LL, (int64_t)0x2FD9ALL, (int64_t)0x28BLL, (int64_t)0x1B72CLL, (int64_t)0x31EB829FLL, (int64_t)0x120CE44ADLL, (int64_t)0x1297DFLL, (int64_t)0x53F75DLL, (int64_t)0x158154LL, (int64_t)0x4E6D4FCFA86B0LL, (int64_t)0x3ELL, (int64_t)0xB3712209A370200LL, (int64_t)0x5197876EFCLL, (int64_t)0xE57120A78AEF80LL, (int64_t)0x7D401LL, (int64_t)0x184259A3LL, (int64_t)0x20E2B4044B0ELL, (int64_t)0x51D7BBF76LL, (int64_t)0x60LL, (int64_t)0xALL, (int64_t)0x35A86C17ADAC240LL, (int64_t)0x2D1LL, (int64_t)0x25LL, (int64_t)0x57485A67C3ELL, (int64_t)0x6ELL, (int64_t)0x1DLL, (int64_t)0x1022124D9D4F1LL, (int64_t)0x152DE7EAF48AF6LL, (int64_t)0xDELL, (int64_t)0x21F3480C0874A40LL, (int64_t)0xB64E5D973LL, (int64_t)0x8706E074E97E7LL, (int64_t)0x79BF8LL, (int64_t)0xCF37EDD2A22E700LL, (int64_t)0xE2LL, (int64_t)0xELL, (int64_t)0x14E4LL };
		static const int64_t output0[] = { (int64_t)0x704B40E80LL, (int64_t)0x9BC367F4000LL, (int64_t)0x14B495B08000LL, (int64_t)0x146FD0350000LL, (int64_t)0x244F2A67000LL, (int64_t)0x22719E5700LL, (int64_t)0x332BEE520000LL, (int64_t)0x212E0671LL, (int64_t)0x62DEAELL, (int64_t)0x7D5985DLL, (int64_t)0x93B43FC80000LL, (int64_t)0x7513D8040LL, (int64_t)0x1D1A5954LL, (int64_t)0x1700612D8000LL, (int64_t)0x8EC9CA9LL, (int64_t)0xADDC6FLL, (int64_t)0x1D30A82F000LL, (int64_t)0x15CE42688000LL, (int64_t)0x902B44BC0LL, (int64_t)0xACB9FEA0LL, (int64_t)0x11E45EA8000LL, (int64_t)0x24A6717DLL, (int64_t)0xE106F0ALL, (int64_t)0x720A01LL, (int64_t)0xD3A8F7DC000LL, (int64_t)0x1C9DBB260LL, (int64_t)0x2A8388LL, (int64_t)0x82CE57LL, (int64_t)0x74C05LL, (int64_t)0x1836EE0A000LL, (int64_t)0xD88F79300LL, (int64_t)0x198836LL, (int64_t)0x99354F64000LL, (int64_t)0xCD73C690000LL, (int64_t)0x30CD35F3LL, (int64_t)0x267A7C5B00LL, (int64_t)0x637D04680LL, (int64_t)0x10EBF5LL, (int64_t)0x6054CC9600LL, (int64_t)0x4766520200LL, (int64_t)0x48380ACALL, (int64_t)0x1436B038LL, (int64_t)0x4570B73LL, (int64_t)0x27581DA100LL, (int64_t)0x23189EDE00LL, (int64_t)0x97BA16C80LL, (int64_t)0x81797LL, (int64_t)0x1A1D223LL, (int64_t)0x1A920DCLL, (int64_t)0x1000000000000LL, (int64_t)0x290189860000LL, (int64_t)0x52E5310A00LL, (int64_t)0x3BB4D153000LL, (int64_t)0x68714C3C0000LL, (int64_t)0x46FA64220000LL, (int64_t)0x620048LL, (int64_t)0x1627EF238LL, (int64_t)0x5CED599800LL, (int64_t)0x31462LL, (int64_t)0x28A3ACDLL, (int64_t)0x19EBDE6C0LL, (int64_t)0xC7476E4800LL, (int64_t)0x916205ELL, (int64_t)0x41649938LL, (int64_t)0x93EF563400LL, (int64_t)0xA08A6F50000LL, (int64_t)0xC379BAE000LL, (int64_t)0x243669300LL, (int64_t)0xF12DED88LL, (int64_t)0x3B67387000LL, (int64_t)0x1BEEB6E300LL, (int64_t)0x372F6DEA00LL, (int64_t)0x73A98DLL, (int64_t)0x20876D210000LL, (int64_t)0x4C66BLL, (int64_t)0x1C577261LL, (int64_t)0x10E8A4LL, (int64_t)0x5B88F14600LL, (int64_t)0x33F13CC30LL, (int64_t)0x2CA7D86LL, (int64_t)0x7130A9E6LL, (int64_t)0x1A1C530F0000LL, (int64_t)0x50F782E40000LL, (int64_t)0x8BC7CLL, (int64_t)0x9874ECE4000LL, (int64_t)0x2A1C65280000LL, (int64_t)0x6D8F86FLL, (int64_t)0x18696E798000LL, (int64_t)0x2F9071D40000LL, (int64_t)0xFEF845LL, (int64_t)0x379D0FLL, (int64_t)0x112F6ABF0000LL, (int64_t)0xAFD72LL, (int64_t)0x4BCB5DFALL, (int64_t)0x582B4ELL, (int64_t)0x5CDD2EB400LL, (int64_t)0x471C2LL, (int64_t)0x1108F94E8000LL, (int64_t)0x44704B560000LL, (int64_t)0x3800678C000LL };
		for (int ndx = 0; ndx < 100; ndx++)
			Util::Check("Fixed64::RSqrtFastest", Fixed64::RSqrtFastest(input0[ndx]), output0[ndx], input0[ndx]);
	}

	// Fixed32.RSqrt()
	static void Fixed32_RSqrt()
	{
		static const int32_t input0[] = { (int32_t)0x21, (int32_t)0x4C15, (int32_t)0xD5, (int32_t)0x27AB, (int32_t)0xDA48E, (int32_t)0x79ED68, (int32_t)0xB2C7, (int32_t)0xF, (int32_t)0xA, (int32_t)0x386B, (int32_t)0xC5CF1F7, (int32_t)0x64, (int32_t)0x2C7850D, (int32_t)0x146, (int32_t)0x45, (int32_t)0x12C3, (int32_t)0x96, (int32_t)0x582E8E, (int32_t)0x2958, (int32_t)0x6D, (int32_t)0x5BA4, (int32_t)0x33, (int32_t)0x17F5, (int32_t)0x60768E, (int32_t)0x7B28, (int32_t)0xE2, (int32_t)0x1CE7, (int32_t)0xF1, (int32_t)0x1DE, (int32_t)0xFAFB1, (int32_t)0x102E48, (int32_t)0xB002E0, (int32_t)0x10F, (int32_t)0x17F, (int32_t)0x3F4A4, (int32_t)0xE, (int32_t)0x5150E90, (int32_t)0x9BAE5, (int32_t)0x25C, (int32_t)0x16CC, (int32_t)0x3E5C4, (int32_t)0x3D68F, (int32_t)0x3, (int32_t)0xB08C4, (int32_t)0x38DB1C2, (int32_t)0xE78F2, (int32_t)0x241, (int32_t)0x1466F0, (int32_t)0x1664, (int32_t)0x329A, (int32_t)0xC, (int32_t)0xB0, (int32_t)0x2722B6, (int32_t)0x406C70D, (int32_t)0x4D70E7, (int32_t)0x2A7AF870, (int32_t)0x6, (int32_t)0x8DE2, (int32_t)0x149D6B4A, (int32_t)0x1ECE, (int32_t)0x86F, (int32_t)0x17B, (int32_t)0x20422D2, (int32_t)0x2C24, (int32_t)0xDF26E5, (int32_t)0x23, (int32_t)0x17C9D4CB, (int32_t)0x3B4E5, (int32_t)0x14A13B, (int32_t)0x9, (int32_t)0xEC45, (int32_t)0x3DAE0, (int32_t)0x4AAA, (int32_t)0x3, (int32_t)0x70AB9, (int32_t)0x5F81FEA, (int32_t)0x1E, (int32_t)0x8AF94C, (int32_t)0x6C957EA, (int32_t)0x220A242, (int32_t)0x191F3049, (int32_t)0x5AAB0C, (int32_t)0x2B1A584, (int32_t)0x25D414C, (int32_t)0x28B5B, (int32_t)0x2F12, (int32_t)0x8, (int32_t)0x10DA, (int32_t)0x13D48, (int32_t)0x5F59F, (int32_t)0x4, (int32_t)0x1256, (int32_t)0x1E351A, (int32_t)0x4E82602, (int32_t)0x5, (int32_t)0x542, (int32_t)0x79D609, (int32_t)0x4D669, (int32_t)0x32A24AF, (int32_t)0x329730 };
		static const int32_t output0[] = { (int32_t)0x2C905A, (int32_t)0x1D597, (int32_t)0x118A73, (int32_t)0x28A56, (int32_t)0x454F, (int32_t)0x172F, (int32_t)0x13257, (int32_t)0x421952, (int32_t)0x50F44D, (int32_t)0x22151, (int32_t)0x48C, (int32_t)0x199999, (int32_t)0x998, (int32_t)0xE2DB4, (int32_t)0x1ED19B, (int32_t)0x3B1A2, (int32_t)0x14E6FD, (int32_t)0x1B42, (int32_t)0x27D05, (int32_t)0x188535, (int32_t)0x1ABDF, (int32_t)0x23D8E0, (int32_t)0x344D7, (int32_t)0x1A10, (int32_t)0x17116, (int32_t)0x110763, (int32_t)0x2F9E4, (int32_t)0x107D8B, (int32_t)0xBB58C, (int32_t)0x40A3, (int32_t)0x3FA4, (int32_t)0x134B, (int32_t)0xF8D07, (int32_t)0xD14BB, (int32_t)0x80B7, (int32_t)0x446B3B, (int32_t)0x718, (int32_t)0x5211, (int32_t)0xA6A9F, (int32_t)0x359DF, (int32_t)0x81AB, (int32_t)0x82AB, (int32_t)0x93CD3A, (int32_t)0x4D11, (int32_t)0x87C, (int32_t)0x434A, (int32_t)0xAA84C, (int32_t)0x38AD, (int32_t)0x3619E, (int32_t)0x23FCE, (int32_t)0x49E69D, (int32_t)0x134BF6, (int32_t)0x28EB, (int32_t)0x7F9, (int32_t)0x1D17, (int32_t)0x274, (int32_t)0x6882F5, (int32_t)0x157DE, (int32_t)0x386, (int32_t)0x2E1FD, (int32_t)0x5826F, (int32_t)0xD265B, (int32_t)0xB44, (int32_t)0x26882, (int32_t)0x1123, (int32_t)0x2B459B, (int32_t)0x347, (int32_t)0x84F8, (int32_t)0x385C, (int32_t)0x555555, (int32_t)0x10A79, (int32_t)0x8262, (int32_t)0x1DA07, (int32_t)0x93CD3A, (int32_t)0x6078, (int32_t)0x68C, (int32_t)0x2EBD2E, (int32_t)0x15B7, (int32_t)0x624, (int32_t)0xAF8, (int32_t)0x331, (int32_t)0x1AE2, (int32_t)0x9BF, (int32_t)0xA67, (int32_t)0xA07D, (int32_t)0x25504, (int32_t)0x5A8279, (int32_t)0x3E5CA, (int32_t)0xE5F3, (int32_t)0x68DD, (int32_t)0x800000, (int32_t)0x3BC8D, (int32_t)0x2E94, (int32_t)0x739, (int32_t)0x727C97, (int32_t)0x6FA4F, (int32_t)0x1731, (int32_t)0x7464, (int32_t)0x8FE, (int32_t)0x23FD };
		for (int ndx = 0; ndx < 100; ndx++)
			Util::Check("Fixed32::RSqrt", Fixed32::RSqrt(input0[ndx]), output0[ndx], input0[ndx]);
	}

	// Fixed32.RSqrtFast()
	static void Fixed32_RSqrtFast()
	{
		static const int32_t input0[] = { (int32_t)0x26EFBD, (int32_t)0x26F552, (int32_t)0x3F4B26AE, (int32_t)0x487, (int32_t)0xDB4E941, (int32_t)0xCCB4, (int32_t)0x96DC23, (int32_t)0x159454, (int32_t)0x124, (int32_t)0x33E4B78, (int32_t)0x2C69CF6, (int32_t)0x2EC, (int32_t)0x53A07, (int32_t)0x13, (int32_t)0x4E7C, (int32_t)0x5F491, (int32_t)0x2334, (int32_t)0x369395B6, (int32_t)0x4565837, (int32_t)0x97B, (int32_t)0x7, (int32_t)0x2D2B9, (int32_t)0x5, (int32_t)0x6, (int32_t)0x4, (int32_t)0x19, (int32_t)0x82AE18B, (int32_t)0x3CDDF, (int32_t)0x2AF3B990, (int32_t)0x2AD, (int32_t)0x19, (int32_t)0x194EE, (int32_t)0xAFA8C6E, (int32_t)0x44, (int32_t)0x1B, (int32_t)0x14A, (int32_t)0x5BAE1D, (int32_t)0x13065, (int32_t)0xB0A1712, (int32_t)0x6, (int32_t)0x13F815, (int32_t)0x1AAD, (int32_t)0x1D, (int32_t)0x1874E1, (int32_t)0x896708, (int32_t)0x614D79, (int32_t)0xE0916E, (int32_t)0x31E0F, (int32_t)0x2002, (int32_t)0x3A14, (int32_t)0x9904070, (int32_t)0x8EDF7D, (int32_t)0x4761BB, (int32_t)0xAAE3, (int32_t)0xCA74E, (int32_t)0x1B, (int32_t)0xD06CC, (int32_t)0x1248B644, (int32_t)0x209, (int32_t)0x1105D88, (int32_t)0x6440D, (int32_t)0x4F, (int32_t)0x202770, (int32_t)0x1B564310, (int32_t)0x4232DD, (int32_t)0x382, (int32_t)0x110C, (int32_t)0x26F6, (int32_t)0x2C55D25D, (int32_t)0x79, (int32_t)0x42844CE, (int32_t)0x766D328, (int32_t)0x9, (int32_t)0x15CF3FA, (int32_t)0x1E634F, (int32_t)0x132EFC, (int32_t)0x310B, (int32_t)0xFA7, (int32_t)0x339, (int32_t)0x2EC, (int32_t)0x757, (int32_t)0x53D, (int32_t)0x3C, (int32_t)0x17AA2, (int32_t)0x11EA, (int32_t)0xB3C, (int32_t)0x16B0E0F, (int32_t)0x20E4, (int32_t)0x15B63, (int32_t)0x2, (int32_t)0x65613, (int32_t)0x140E8F6, (int32_t)0x12A, (int32_t)0x14, (int32_t)0x4100, (int32_t)0x80E8, (int32_t)0x35193C, (int32_t)0x45, (int32_t)0x17A4EEF1, (int32_t)0x4E4B };
		static const int32_t output0[] = { (int32_t)0x2906, (int32_t)0x2903, (int32_t)0x202, (int32_t)0x78507, (int32_t)0x452, (int32_t)0x11E49, (int32_t)0x14D7, (int32_t)0x371B, (int32_t)0xEFB31, (int32_t)0x8E2, (int32_t)0x99A, (int32_t)0x95C44, (int32_t)0x6FF9, (int32_t)0x3ABAD0, (int32_t)0x1CE57, (int32_t)0x68E7, (int32_t)0x2B25A, (int32_t)0x22A, (int32_t)0x7AE, (int32_t)0x53245, (int32_t)0x60C1EB, (int32_t)0x985C, (int32_t)0x727C2D, (int32_t)0x688357, (int32_t)0x800000, (int32_t)0x333352, (int32_t)0x599, (int32_t)0x8341, (int32_t)0x270, (int32_t)0x9C7FE, (int32_t)0x333352, (int32_t)0xCB8D, (int32_t)0x4D4, (int32_t)0x1F0B84, (int32_t)0x314448, (int32_t)0xE1799, (int32_t)0x1ABC, (int32_t)0xEAC4, (int32_t)0x4D0, (int32_t)0x688357, (int32_t)0x3949, (int32_t)0x3190B, (int32_t)0x2F899C, (int32_t)0x33C4, (int32_t)0x15D6, (int32_t)0x19F3, (int32_t)0x1115, (int32_t)0x90FE, (int32_t)0x2D3FD, (int32_t)0x21976, (int32_t)0x52C, (int32_t)0x156A, (int32_t)0x1E4C, (int32_t)0x13954, (int32_t)0x47F7, (int32_t)0x314448, (int32_t)0x46ED, (int32_t)0x3BD, (int32_t)0xB3735, (int32_t)0xF83, (int32_t)0x6645, (int32_t)0x1CCD44, (int32_t)0x2D25, (int32_t)0x30F, (int32_t)0x1F76, (int32_t)0x88AEE, (int32_t)0x3E012, (int32_t)0x29034, (int32_t)0x267, (int32_t)0x1745DB, (int32_t)0x7D8, (int32_t)0x5E1, (int32_t)0x555559, (int32_t)0xDB4, (int32_t)0x2E70, (int32_t)0x3A72, (int32_t)0x248E4, (int32_t)0x40B52, (int32_t)0x8E9AC, (int32_t)0x95C44, (int32_t)0x5E7DE, (int32_t)0x6FDA0, (int32_t)0x210CB0, (int32_t)0xD280, (int32_t)0x3C7C0, (int32_t)0x4C60C, (int32_t)0xD6F, (int32_t)0x2CA37, (int32_t)0xDBC3, (int32_t)0xB504F3, (int32_t)0x65B3, (int32_t)0xE4A, (int32_t)0xED45E, (int32_t)0x393E16, (int32_t)0x1FC0C, (int32_t)0x168C3, (int32_t)0x2321, (int32_t)0x1ED1B2, (int32_t)0x34A, (int32_t)0x1CEE7 };
		for (int ndx = 0; ndx < 100; ndx++)
			Util::Check("Fixed32::RSqrtFast", Fixed32::RSqrtFast(input0[ndx]), output0[ndx], input0[ndx]);
	}

	// Fixed32.RSqrtFastest()
	static void Fixed32_RSqrtFastest()
	{
		static const int32_t input0[] = { (int32_t)0xB6A, (int32_t)0xB86, (int32_t)0x4800A, (int32_t)0x86, (int32_t)0x37E21, (int32_t)0x2, (int32_t)0x1CE646, (int32_t)0xD17820D, (int32_t)0x167E882, (int32_t)0x2A36F59C, (int32_t)0x23FEFD, (int32_t)0x1AA, (int32_t)0xB56F2, (int32_t)0x2C9EAA1B, (int32_t)0x4A2E, (int32_t)0x264, (int32_t)0x2, (int32_t)0x2B, (int32_t)0x30D32, (int32_t)0xBC8, (int32_t)0x9E64, (int32_t)0x212C2F5A, (int32_t)0x72D9FAB, (int32_t)0x2BB6DF23, (int32_t)0x4CD63, (int32_t)0x6, (int32_t)0xCB095, (int32_t)0x1E7E4DD7, (int32_t)0xABC, (int32_t)0x78, (int32_t)0x171F3CED, (int32_t)0x16B, (int32_t)0x2A5E, (int32_t)0x2A2CF8C, (int32_t)0x10651C67, (int32_t)0x28C4F962, (int32_t)0x4A8533, (int32_t)0x1CEC0803, (int32_t)0x1B1A1E4A, (int32_t)0xDDD, (int32_t)0x18E27A, (int32_t)0x6EECF80, (int32_t)0x5D965, (int32_t)0x20EA8, (int32_t)0x39B, (int32_t)0x79D, (int32_t)0x38, (int32_t)0x1AC, (int32_t)0x11E75D, (int32_t)0x36, (int32_t)0x62E6, (int32_t)0x27145, (int32_t)0x5A727, (int32_t)0x40372, (int32_t)0x1FA2F804, (int32_t)0x1605, (int32_t)0x66C6, (int32_t)0x696A5, (int32_t)0x70278, (int32_t)0x10D9B, (int32_t)0xD08, (int32_t)0x3CA79F, (int32_t)0x2704D, (int32_t)0x5F6C8, (int32_t)0x3, (int32_t)0x32A5, (int32_t)0x283A8C3, (int32_t)0x11351C7, (int32_t)0x5, (int32_t)0x7473, (int32_t)0x20DD0, (int32_t)0x5, (int32_t)0x66, (int32_t)0x70, (int32_t)0x1E4D8C, (int32_t)0x5B62C, (int32_t)0xB57, (int32_t)0x6FA, (int32_t)0x183E07, (int32_t)0x142, (int32_t)0x78002BF, (int32_t)0xF2A, (int32_t)0x368, (int32_t)0x65, (int32_t)0x4E1A25, (int32_t)0x12EE, (int32_t)0x101800, (int32_t)0x2A39D95, (int32_t)0x5551FD1, (int32_t)0x17D2E, (int32_t)0xCB1A, (int32_t)0x16, (int32_t)0x840, (int32_t)0x3377, (int32_t)0x2, (int32_t)0x1A41D2D2, (int32_t)0x5AF, (int32_t)0x3EC49E56, (int32_t)0x12076, (int32_t)0x48EB8B4 };
		static const int32_t output0[] = { (int32_t)0x4BBA5, (int32_t)0x4B5DA, (int32_t)0x78C1, (int32_t)0x162020, (int32_t)0x8904, (int32_t)0xB504F3, (int32_t)0x2FA5, (int32_t)0x46B, (int32_t)0xD7C, (int32_t)0x276, (int32_t)0x2AB2, (int32_t)0xC66C1, (int32_t)0x4BFA, (int32_t)0x264, (int32_t)0x1DBD9, (int32_t)0xA5A4A, (int32_t)0xB504F3, (int32_t)0x2706D2, (int32_t)0x9274, (int32_t)0x4A88C, (int32_t)0x14587, (int32_t)0x2C7, (int32_t)0x5F9, (int32_t)0x26B, (int32_t)0x74DE, (int32_t)0x68714C, (int32_t)0x47D4, (int32_t)0x2E6, (int32_t)0x4E1C5, (int32_t)0x176292, (int32_t)0x353, (int32_t)0xD6DB8, (int32_t)0x27521, (int32_t)0x9DA, (int32_t)0x3F3, (int32_t)0x281, (int32_t)0x1DAC, (int32_t)0x2FA, (int32_t)0x312, (int32_t)0x44C4F, (int32_t)0x334A, (int32_t)0x613, (int32_t)0x69C7, (int32_t)0xB28A, (int32_t)0x86E42, (int32_t)0x5CD6D, (int32_t)0x223825, (int32_t)0xC5F73, (int32_t)0x3C8A, (int32_t)0x22D60B, (int32_t)0x19BA1, (int32_t)0xA3DA, (int32_t)0x6B9C, (int32_t)0x7FCA, (int32_t)0x2D8, (int32_t)0x3687A, (int32_t)0x193DE, (int32_t)0x63B6, (int32_t)0x60B8, (int32_t)0xF995, (int32_t)0x46E4E, (int32_t)0x20E4, (int32_t)0xA3FB, (int32_t)0x68C1, (int32_t)0x93B43F, (int32_t)0x23F47, (int32_t)0xA17, (int32_t)0xF70, (int32_t)0x728120, (int32_t)0x17BC9, (int32_t)0xB2AE, (int32_t)0x728120, (int32_t)0x195612, (int32_t)0x18325C, (int32_t)0x2E89, (int32_t)0x6B0D, (int32_t)0x4BFA0, (int32_t)0x60F24, (int32_t)0x33F5, (int32_t)0xE4496, (int32_t)0x5D8, (int32_t)0x41C88, (int32_t)0x8AB70, (int32_t)0x1975C2, (int32_t)0x1CF9, (int32_t)0x3ADE4, (int32_t)0x3FD1, (int32_t)0x9D8, (int32_t)0x6ED, (int32_t)0xD1A7, (int32_t)0x11F45, (int32_t)0x368DE3, (int32_t)0x5928C, (int32_t)0x23ABA, (int32_t)0xB504F3, (int32_t)0x31F, (int32_t)0x6B513, (int32_t)0x205, (int32_t)0xF152, (int32_t)0x77F };
		for (int ndx = 0; ndx < 100; ndx++)
			Util::Check("Fixed32::RSqrtFastest", Fixed32::RSqrtFastest(input0[ndx]), output0[ndx], input0[ndx]);
	}

	// Fixed64.Exp()
	static void Fixed64_Exp()
	{
		static const int64_t input0[] = { (int64_t)0xADC09809LL, (int64_t)0xFFFFFFE5EA640A24LL, (int64_t)0xFFFFFFC76F9960C7LL, (int64_t)0xFFFFFFC08AC8915ALL, (int64_t)0x163F9781A4LL, (int64_t)0xFFFFFFEF723BCA27LL, (int64_t)0xFFFFFFE525CC6403LL, (int64_t)0xFFFFFFEC928BBAE2LL, (int64_t)0x4FE2CD4C17LL, (int64_t)0xFFFFFFE4344CCCF1LL, (int64_t)0xFFFFFFA299E28D9ELL, (int64_t)0xFFFFFFB6C30474C6LL, (int64_t)0x5709AFC146LL, (int64_t)0xFFFFFFE43C5A1AB1LL, (int64_t)0x194B99241ALL, (int64_t)0x627D97BE0CLL, (int64_t)0xFFFFFFEFD2A83518LL, (int64_t)0xFFFFFFE548726F43LL, (int64_t)0x4A68261F4CLL, (int64_t)0x1C73DB86F0LL, (int64_t)0x383BDCC6B8LL, (int64_t)0x638494A69FLL, (int64_t)0x5411E9C890LL, (int64_t)0x28D67849DLL, (int64_t)0x5E7737EB14LL, (int64_t)0xFFFFFFF27971B6DDLL, (int64_t)0x2943E6F54ALL, (int64_t)0x33B2E23AAFLL, (int64_t)0xFFFFFFC37E4E3EEFLL, (int64_t)0x2E40E136E4LL, (int64_t)0xFFFFFFD337B4682FLL, (int64_t)0xFFFFFFE4A1F02D62LL, (int64_t)0x3EF8515C25LL, (int64_t)0x3D74E50CC2LL, (int64_t)0x58F9304LL, (int64_t)0x5A87DLL, (int64_t)0x31LL, (int64_t)0x12LL, (int64_t)0x18AFA6LL, (int64_t)0x921LL, (int64_t)0x1LL, (int64_t)0x1E5LL, (int64_t)0x26A093788LL, (int64_t)0x49AE2LL, (int64_t)0x37DB9LL, (int64_t)0x232FLL, (int64_t)0x5DLL, (int64_t)0x6F58150F2LL, (int64_t)0x19035A39LL, (int64_t)0x1LL, (int64_t)0x7BD92LL, (int64_t)0x3E39078C1LL, (int64_t)0x16LL, (int64_t)0x8AB0DB81LL, (int64_t)0x8LL, (int64_t)0x3A528LL, (int64_t)0xE98DLL, (int64_t)0x1D797B3LL, (int64_t)0xACLL, (int64_t)0x4FLL, (int64_t)0x228C4C9LL, (int64_t)0x2BAF30LL, (int64_t)0x98LL, (int64_t)0x3DLL, (int64_t)0x8LL, (int64_t)0xCA4507LL, (int64_t)0x99FLL, (int64_t)0x16LL, (int64_t)0xFFFFFFFFFFCF5B6FLL, (int64_t)0xFFFFFFFFFFFFFFF4LL, (int64_t)0xFFFFFFFFD51D40FCLL, (int64_t)0xFFFFFFFFFFFFFA08LL, (int64_t)0xFFFFFFFFF38B3B95LL, (int64_t)0xFFFFFFFFFFF3C70ALL, (int64_t)0xFFFFFFFFFFC3D69DLL, (int64_t)0xFFFFFFFFFFF9A2AFLL, (int64_t)0xFFFFFFFFFFFFFFFDLL, (int64_t)0xFFFFFFFFFFFFB0EBLL, (int64_t)0xFFFFFFFFFFFFFFFFLL, (int64_t)0xFFFFFFFFFFDB0B9DLL, (int64_t)0xFFFFFFFFFFFFFE5BLL, (int64_t)0xFFFFFFFFFD39E9DDLL, (int64_t)0xFFFFFFFD3B6C4F86LL, (int64_t)0xFFFFFFFFFFFFFFA0LL, (int64_t)0xFFFFFFFFFFFFFF8BLL, (int64_t)0xFFFFFFFFFFFFF757LL, (int64_t)0xFFFFFFFFFFFFFEBCLL, (int64_t)0xFFFFFFFE04254B5FLL, (int64_t)0xFFFFFFFFFD4F2EB5LL, (int64_t)0xFFFFFFFFFFFFFE7ALL, (int64_t)0xFFFFFFFFFFFFFFFALL, (int64_t)0xFFFFFFFFFFFEF2A1LL, (int64_t)0xFFFFFFFEEA689A4ELL, (int64_t)0xFFFFFFFFFFFFB0CBLL, (int64_t)0xFFFFFFFFFFD5B8B0LL, (int64_t)0xFFFFFFFFFFFF9BB6LL, (int64_t)0xFFFFFFFFFFFFFFFDLL, (int64_t)0xFFFFFFFFF5EE8FF5LL, (int64_t)0xFFFFFFFFFFFF6CA5LL, (int64_t)0xFFFFFFFFD3D0B2BCLL };
		static const int64_t output0[] = { (int64_t)0x1F8AA955CLL, (int64_t)0x0LL, (int64_t)0x0LL, (int64_t)0x0LL, (int64_t)0x7FFFFFFFFFFFFFFFLL, (int64_t)0x115LL, (int64_t)0x0LL, (int64_t)0xFLL, (int64_t)0x7FFFFFFFFFFFFFFFLL, (int64_t)0x0LL, (int64_t)0x0LL, (int64_t)0x0LL, (int64_t)0x7FFFFFFFFFFFFFFFLL, (int64_t)0x0LL, (int64_t)0x7FFFFFFFFFFFFFFFLL, (int64_t)0x7FFFFFFFFFFFFFFFLL, (int64_t)0x194LL, (int64_t)0x0LL, (int64_t)0x7FFFFFFFFFFFFFFFLL, (int64_t)0x7FFFFFFFFFFFFFFFLL, (int64_t)0x7FFFFFFFFFFFFFFFLL, (int64_t)0x7FFFFFFFFFFFFFFFLL, (int64_t)0x7FFFFFFFFFFFFFFFLL, (int64_t)0xCD65E1FE0LL, (int64_t)0x7FFFFFFFFFFFFFFFLL, (int64_t)0x166BLL, (int64_t)0x7FFFFFFFFFFFFFFFLL, (int64_t)0x7FFFFFFFFFFFFFFFLL, (int64_t)0x0LL, (int64_t)0x7FFFFFFFFFFFFFFFLL, (int64_t)0x0LL, (int64_t)0x0LL, (int64_t)0x7FFFFFFFFFFFFFFFLL, (int64_t)0x7FFFFFFFFFFFFFFFLL, (int64_t)0x1059F2764LL, (int64_t)0x10005A88CLL, (int64_t)0x10000002CLL, (int64_t)0x100000010LL, (int64_t)0x10018B0DCLL, (int64_t)0x10000091CLL, (int64_t)0x100000000LL, (int64_t)0x1000001E0LL, (int64_t)0xB2E4CB9A0LL, (int64_t)0x100049AECLL, (int64_t)0x100037DBCLL, (int64_t)0x10000232CLL, (int64_t)0x100000058LL, (int64_t)0x41C95D21000LL, (int64_t)0x11A469EC4LL, (int64_t)0x100000000LL, (int64_t)0x10007BDB0LL, (int64_t)0x30DBB62780LL, (int64_t)0x100000010LL, (int64_t)0x1B81272C0LL, (int64_t)0x100000004LL, (int64_t)0x10003A52CLL, (int64_t)0x10000E98CLL, (int64_t)0x101D94BC8LL, (int64_t)0x1000000A8LL, (int64_t)0x10000004CLL, (int64_t)0x1022B1C04LL, (int64_t)0x1002BB2F8LL, (int64_t)0x100000094LL, (int64_t)0x10000003CLL, (int64_t)0x100000004LL, (int64_t)0x100CA9550LL, (int64_t)0x10000099CLL, (int64_t)0x100000010LL, (int64_t)0xFFCF6016LL, (int64_t)0xFFFFFFEALL, (int64_t)0xD8839240LL, (int64_t)0xFFFFF9FELL, (int64_t)0xF3D79296LL, (int64_t)0xFFF3C754LL, (int64_t)0xFFC3DDBALL, (int64_t)0xFFF9A2BELL, (int64_t)0xFFFFFFF2LL, (int64_t)0xFFFFB0E6LL, (int64_t)0xFFFFFFF4LL, (int64_t)0xFFDB0E50LL, (int64_t)0xFFFFFE54LL, (int64_t)0xFD3DBFE4LL, (int64_t)0x101356A4LL, (int64_t)0xFFFFFF98LL, (int64_t)0xFFFFFF82LL, (int64_t)0xFFFFF750LL, (int64_t)0xFFFFFEB6LL, (int64_t)0x233621FDLL, (int64_t)0xFD52CAE8LL, (int64_t)0xFFFFFE72LL, (int64_t)0xFFFFFFF0LL, (int64_t)0xFFFEF29CLL, (int64_t)0x568F52A5LL, (int64_t)0xFFFFB0C4LL, (int64_t)0xFFD5BC32LL, (int64_t)0xFFFF9BB0LL, (int64_t)0xFFFFFFF2LL, (int64_t)0xF62097F6LL, (int64_t)0xFFFF6CA0LL, (int64_t)0xD76B05AALL };
		for (int ndx = 0; ndx < 100; ndx++)
			Util::Check("Fixed64::Exp", Fixed64::Exp(input0[ndx]), output0[ndx], input0[ndx]);
	}

	// Fixed64.ExpFast()
	static void Fixed64_ExpFast()
	{
		static const int64_t input0[] = { (int64_t)0xFFFFFFA6977632C6LL, (int64_t)0xFFFFFFA784299EE8LL, (int64_t)0xFFFFFFE6B613C576LL, (int64_t)0x29A62751FBLL, (int64_t)0xFFFFFFBF87D16EA8LL, (int64_t)0xFFFFFFCB6B0944EFLL, (int64_t)0xFFFFFFBFC9D8BD88LL, (int64_t)0xE5B09C804LL, (int64_t)0xFFFFFFD01ECF2CD9LL, (int64_t)0xBC3B81CFFLL, (int64_t)0xFFFFFFF6088372D5LL, (int64_t)0xFFFFFFA4D88FAC72LL, (int64_t)0x2723AB1B06LL, (int64_t)0x15FE820693LL, (int64_t)0x5665A86754LL, (int64_t)0x61F4426FBBLL, (int64_t)0x1FF118E977LL, (int64_t)0xFFFFFF9FB64783D8LL, (int64_t)0x5EB10E0595LL, (int64_t)0x360DD49014LL, (int64_t)0xFFFFFFF2BC59FDEELL, (int64_t)0xFFFFFFE9016492ABLL, (int64_t)0xFFFFFFED9A508D94LL, (int64_t)0xFFFFFFE594536C24LL, (int64_t)0xFFFFFFA1A2B46F2CLL, (int64_t)0xFFFFFFE795A7CE78LL, (int64_t)0xFFFFFFEA0ADC35DDLL, (int64_t)0xFFFFFFE77BE30777LL, (int64_t)0x59DCCABBABLL, (int64_t)0xFFFFFFC51F75F513LL, (int64_t)0xFFFFFFFC45C646E1LL, (int64_t)0xFFFFFFD45EA86BC1LL, (int64_t)0x5EEA83C675LL, (int64_t)0xFFFFFFBEE7985DE6LL, (int64_t)0xA1B0ELL, (int64_t)0x67LL, (int64_t)0x1363LL, (int64_t)0x15ELL, (int64_t)0x1LL, (int64_t)0x38AE176E8LL, (int64_t)0x1BLL, (int64_t)0xB0F93DLL, (int64_t)0xDC4C60LL, (int64_t)0x33LL, (int64_t)0x10578CD2LL, (int64_t)0x2LL, (int64_t)0x7125531LL, (int64_t)0x5F1LL, (int64_t)0x1A2C3LL, (int64_t)0x364FA0LL, (int64_t)0x65AC98CLL, (int64_t)0x2LL, (int64_t)0x13485D03LL, (int64_t)0x9F8804LL, (int64_t)0x46DELL, (int64_t)0xC1054DLL, (int64_t)0x7B1FCDLL, (int64_t)0x1LL, (int64_t)0x103CE4FLL, (int64_t)0x13003B61LL, (int64_t)0x3C453D2BLL, (int64_t)0x13DA829ELL, (int64_t)0x3F698BLL, (int64_t)0x3LL, (int64_t)0x6LL, (int64_t)0x3DLL, (int64_t)0x5LL, (int64_t)0x54F7CLL, (int64_t)0xFFFFFFFFFFFFFFFCLL, (int64_t)0xFFFFFFFFFB4C8B11LL, (int64_t)0xFFFFFFFFFF993716LL, (int64_t)0xFFFFFFFFFFFF8CA4LL, (int64_t)0xFFFFFFFFFFFFFFFFLL, (int64_t)0xFFFFFFFFFFFFFFFFLL, (int64_t)0xFFFFFFFFFFAAC1FELL, (int64_t)0xFFFFFFFFF6FB3B8CLL, (int64_t)0xFFFFFFFFFDCC6789LL, (int64_t)0xFFFFFFFFFFFFFE5ALL, (int64_t)0xFFFFFFFFFFEC7D14LL, (int64_t)0xFFFFFFF681F2D5FELL, (int64_t)0xFFFFFFFFFFC65D9DLL, (int64_t)0xFFFFFFFFFFFFFFF7LL, (int64_t)0xFFFFFFFF09E5756ELL, (int64_t)0xFFFFFFFFFFFFF260LL, (int64_t)0xFFFFFFFFFFFF0E58LL, (int64_t)0xFFFFFFFFFFFF019FLL, (int64_t)0xFFFFFFFFFFFDFD1BLL, (int64_t)0xFFFFFFFFFFFFF764LL, (int64_t)0xFFFFFFFFF5E0F342LL, (int64_t)0xFFFFFFFF79F84D00LL, (int64_t)0xFFFFFFFFFFF7A258LL, (int64_t)0xFFFFFFFFFFFFEF1FLL, (int64_t)0xFFFFFFFFFFF284ECLL, (int64_t)0xFFFFFFFFFFFFFF58LL, (int64_t)0xFFFFFFFFFFFFFFF1LL, (int64_t)0xFFFFFFFFFFFFF208LL, (int64_t)0xFFFFFFFFFFFFFFFELL, (int64_t)0xFFFFFFFFFFC6AD27LL, (int64_t)0xFFFFFFFFFFFFFFF9LL, (int64_t)0xFFFFFFFFFFBC1B1FLL };
		static const int64_t output0[] = { (int64_t)0x0LL, (int64_t)0x0LL, (int64_t)0x0LL, (int64_t)0x7FFFFFFFFFFFFFFFLL, (int64_t)0x0LL, (int64_t)0x0LL, (int64_t)0x0LL, (int64_t)0x1A2FDAFF400000LL, (int64_t)0x0LL, (int64_t)0x1F660BDC80000LL, (int64_t)0x31370LL, (int64_t)0x0LL, (int64_t)0x7FFFFFFFFFFFFFFFLL, (int64_t)0xD46F6C8000000000LL, (int64_t)0x7FFFFFFFFFFFFFFFLL, (int64_t)0x7FFFFFFFFFFFFFFFLL, (int64_t)0x7FFFFFFFFFFFFFFFLL, (int64_t)0x0LL, (int64_t)0x7FFFFFFFFFFFFFFFLL, (int64_t)0x7FFFFFFFFFFFFFFFLL, (int64_t)0x1D1DLL, (int64_t)0x0LL, (int64_t)0x2BLL, (int64_t)0x0LL, (int64_t)0x0LL, (int64_t)0x0LL, (int64_t)0x1LL, (int64_t)0x0LL, (int64_t)0x7FFFFFFFFFFFFFFFLL, (int64_t)0x0LL, (int64_t)0x6286A21LL, (int64_t)0x0LL, (int64_t)0x7FFFFFFFFFFFFFFFLL, (int64_t)0x0LL, (int64_t)0x1000A1AD0LL, (int64_t)0x100000064LL, (int64_t)0x100001360LL, (int64_t)0x10000015CLL, (int64_t)0x100000000LL, (int64_t)0x228D9EC200LL, (int64_t)0x100000018LL, (int64_t)0x100B12F38LL, (int64_t)0x100DCA258LL, (int64_t)0x100000030LL, (int64_t)0x110DFC128LL, (int64_t)0x100000000LL, (int64_t)0x1072B5FCCLL, (int64_t)0x1000005ECLL, (int64_t)0x10001A2B0LL, (int64_t)0x100365318LL, (int64_t)0x1066EF684LL, (int64_t)0x100000000LL, (int64_t)0x11406D8C4LL, (int64_t)0x1009FB338LL, (int64_t)0x1000046D8LL, (int64_t)0x100C14644LL, (int64_t)0x1007B3854LL, (int64_t)0x100000000LL, (int64_t)0x1010447E0LL, (int64_t)0x113B91CA0LL, (int64_t)0x143F51AECLL, (int64_t)0x114A49C18LL, (int64_t)0x1003F6EBCLL, (int64_t)0x100000000LL, (int64_t)0x100000004LL, (int64_t)0x10000003CLL, (int64_t)0x100000000LL, (int64_t)0x100054F4CLL, (int64_t)0xFFFFFFF6LL, (int64_t)0xFB57A62ELL, (int64_t)0xFF994F16LL, (int64_t)0xFFFF8CA4LL, (int64_t)0xFFFFFFF8LL, (int64_t)0xFFFFFFF8LL, (int64_t)0xFFAAD2FCLL, (int64_t)0xF7239C80LL, (int64_t)0xFDCEE318LL, (int64_t)0xFFFFFE54LL, (int64_t)0xFFEC7E74LL, (int64_t)0x4F167LL, (int64_t)0xFFC66600LL, (int64_t)0xFFFFFFF0LL, (int64_t)0x61E3858CLL, (int64_t)0xFFFFF25ALL, (int64_t)0xFFFF0E5CLL, (int64_t)0xFFFF01A2LL, (int64_t)0xFFFDFD28LL, (int64_t)0xFFFFF760LL, (int64_t)0xF613B200LL, (int64_t)0x97A8547ELL, (int64_t)0xFFF7A2BELL, (int64_t)0xFFFFEF1ALL, (int64_t)0xFFF285B6LL, (int64_t)0xFFFFFF54LL, (int64_t)0xFFFFFFECLL, (int64_t)0xFFFFF206LL, (int64_t)0xFFFFFFF8LL, (int64_t)0xFFC6B574LL, (int64_t)0xFFFFFFF4LL, (int64_t)0xFFBC265CLL };
		for (int ndx = 0; ndx < 100; ndx++)
			Util::Check("Fixed64::ExpFast", Fixed64::ExpFast(input0[ndx]), output0[ndx], input0[ndx]);
	}

	// Fixed64.ExpFastest()
	static void Fixed64_ExpFastest()
	{
		static const int64_t input0[] = { (int64_t)0x5C2199A740LL, (int64_t)0xFFFFFFCBA3213190LL, (int64_t)0xFFFFFFCB5AB20C3FLL, (int64_t)0x2E1437C464LL, (int64_t)0x5EC9FD0795LL, (int64_t)0xFFFFFFDEEA35CF36LL, (int64_t)0xFFFFFF9FDA8203B8LL, (int64_t)0x38E5B8D259LL, (int64_t)0xFFFFFFA11EA8C5ABLL, (int64_t)0x1A3EC901ACLL, (int64_t)0x5B3F2C668ELL, (int64_t)0xFFFFFFEC864A8DB2LL, (int64_t)0xFFFFFFF24456D8EDLL, (int64_t)0x24706400E0LL, (int64_t)0xFFFFFFC03BB5C069LL, (int64_t)0x3330EC7F1ELL, (int64_t)0x4F6F9F15C6LL, (int64_t)0xFFFFFFD5DBB52854LL, (int64_t)0x14DF880D81LL, (int64_t)0x18F2D08D59LL, (int64_t)0x255C24A892LL, (int64_t)0x330B1A5E1ELL, (int64_t)0x316F0EC48ALL, (int64_t)0xFFFFFFC09962CCDALL, (int64_t)0xFFFFFFC496D9EF92LL, (int64_t)0xFFFFFFD80E0589B9LL, (int64_t)0x483D37F088LL, (int64_t)0x3BFC28111FLL, (int64_t)0x5105917F4ALL, (int64_t)0xFFFFFFD811F417D9LL, (int64_t)0x2D797BD5B2LL, (int64_t)0xFFFFFFAEABBF1836LL, (int64_t)0xFFFFFFBCAABE4FD2LL, (int64_t)0x59D05A9BBBLL, (int64_t)0x2LL, (int64_t)0x2B47LL, (int64_t)0x48048203LL, (int64_t)0x46LL, (int64_t)0x19C9LL, (int64_t)0x11LL, (int64_t)0x9EB6LL, (int64_t)0x189923ELL, (int64_t)0x49ALL, (int64_t)0x20LL, (int64_t)0x18759BB69LL, (int64_t)0x1CLL, (int64_t)0x11EBCB2CELL, (int64_t)0x7E171E7ELL, (int64_t)0x1LL, (int64_t)0x1720LL, (int64_t)0xAD34LL, (int64_t)0x5FF4D2DLL, (int64_t)0x1LL, (int64_t)0x127B7LL, (int64_t)0x237555D23LL, (int64_t)0x98LL, (int64_t)0x289B7LL, (int64_t)0x3LL, (int64_t)0x63141LL, (int64_t)0xDE2576LL, (int64_t)0x1A5DELL, (int64_t)0xD6LL, (int64_t)0x858EF0CBLL, (int64_t)0x311559DLL, (int64_t)0xF32CBF57LL, (int64_t)0x592CC43CLL, (int64_t)0x15ELL, (int64_t)0x20C68LL, (int64_t)0xFFFFFFFFFF91F550LL, (int64_t)0xFFFFFFFFEC7FFDCBLL, (int64_t)0xFFFFFFFF18B9EC4DLL, (int64_t)0xFFFFFFFFFD147B6FLL, (int64_t)0xFFFFFFFE320E90A3LL, (int64_t)0xFFFFFFFFFFFD9FD2LL, (int64_t)0xFFFFFFFFFFFFFF94LL, (int64_t)0xFFFFFFF8374350E9LL, (int64_t)0xFFFFFFFFFFFE9C8ALL, (int64_t)0xFFFFFFFFFFD74361LL, (int64_t)0xFFFFFFFFFFFFFDBFLL, (int64_t)0xFFFFFFFFFFFFFFFBLL, (int64_t)0xFFFFFFFFFFFFC9A3LL, (int64_t)0xFFFFFFF9369C1482LL, (int64_t)0xFFFFFFFFF672C456LL, (int64_t)0xFFFFFFFFFFF5283ALL, (int64_t)0xFFFFFFFFA5D4AD8ELL, (int64_t)0xFFFFFFFA9C98A425LL, (int64_t)0xFFFFFFFFFFFFFFFALL, (int64_t)0xFFFFFFFFFE27D4FFLL, (int64_t)0xFFFFFFFFFFFFFFFFLL, (int64_t)0xFFFFFFFFD65BC252LL, (int64_t)0xFFFFFFFF557711D2LL, (int64_t)0xFFFFFFFFECB2335FLL, (int64_t)0xFFFFFFFFFF8DC93CLL, (int64_t)0xFFFFFFFFFED6CF75LL, (int64_t)0xFFFFFFFFFF9802E8LL, (int64_t)0xFFFFFFFFFFFFFF43LL, (int64_t)0xFFFFFFFFE28829DELL, (int64_t)0xFFFFFFFFFFF0FFE8LL, (int64_t)0xFFFFFFFFFFFFFEA5LL, (int64_t)0xFFFFFFFFFFFFFFFCLL };
		static const int64_t output0[] = { (int64_t)0x7FFFFFFFFFFFFFFFLL, (int64_t)0x0LL, (int64_t)0x0LL, (int64_t)0x7FFFFFFFFFFFFFFFLL, (int64_t)0x7FFFFFFFFFFFFFFFLL, (int64_t)0x0LL, (int64_t)0x0LL, (int64_t)0x7FFFFFFFFFFFFFFFLL, (int64_t)0x0LL, (int64_t)0x7FFFFFFFFFFFFFFFLL, (int64_t)0x7FFFFFFFFFFFFFFFLL, (int64_t)0xELL, (int64_t)0x1238LL, (int64_t)0x7FFFFFFFFFFFFFFFLL, (int64_t)0x0LL, (int64_t)0x7FFFFFFFFFFFFFFFLL, (int64_t)0x7FFFFFFFFFFFFFFFLL, (int64_t)0x0LL, (int64_t)0x45404BB200000000LL, (int64_t)0x7FFFFFFFFFFFFFFFLL, (int64_t)0x7FFFFFFFFFFFFFFFLL, (int64_t)0x7FFFFFFFFFFFFFFFLL, (int64_t)0x7FFFFFFFFFFFFFFFLL, (int64_t)0x0LL, (int64_t)0x0LL, (int64_t)0x0LL, (int64_t)0x7FFFFFFFFFFFFFFFLL, (int64_t)0x7FFFFFFFFFFFFFFFLL, (int64_t)0x7FFFFFFFFFFFFFFFLL, (int64_t)0x0LL, (int64_t)0x7FFFFFFFFFFFFFFFLL, (int64_t)0x0LL, (int64_t)0x0LL, (int64_t)0x7FFFFFFFFFFFFFFFLL, (int64_t)0x100000000LL, (int64_t)0x100002B68LL, (int64_t)0x153230098LL, (int64_t)0x100000044LL, (int64_t)0x1000019DCLL, (int64_t)0x100000010LL, (int64_t)0x100009F38LL, (int64_t)0x1018BFB18LL, (int64_t)0x100000498LL, (int64_t)0x10000001CLL, (int64_t)0x49CCB4E30LL, (int64_t)0x100000018LL, (int64_t)0x3109E8430LL, (int64_t)0x1A2F25BFCLL, (int64_t)0x100000000LL, (int64_t)0x100001730LL, (int64_t)0x10000ADC4LL, (int64_t)0x106157C28LL, (int64_t)0x100000000LL, (int64_t)0x1000128B0LL, (int64_t)0x92C2611A0LL, (int64_t)0x100000094LL, (int64_t)0x100028BD8LL, (int64_t)0x100000000LL, (int64_t)0x100063684LL, (int64_t)0x100DF3B3CLL, (int64_t)0x10001A740LL, (int64_t)0x1000000D4LL, (int64_t)0x1AF5C94ACLL, (int64_t)0x103185FACLL, (int64_t)0x295D34358LL, (int64_t)0x16AA47D34LL, (int64_t)0x10000015CLL, (int64_t)0x100020E20LL, (int64_t)0xFF92521CLL, (int64_t)0xED3F7C4CLL, (int64_t)0x67BA913CLL, (int64_t)0xFD1A6C46LL, (int64_t)0x2A1FCC47LL, (int64_t)0xFFFDA154LL, (int64_t)0xFFFFFF92LL, (int64_t)0x1B48A8LL, (int64_t)0xFFFE9D6ALL, (int64_t)0xFFD7606ELL, (int64_t)0xFFFFFDBCLL, (int64_t)0xFFFFFFF8LL, (int64_t)0xFFFFC9C4LL, (int64_t)0x49F986LL, (int64_t)0xF6A43C06LL, (int64_t)0xFFF52F56LL, (int64_t)0xB3FB34EALL, (int64_t)0x12B7E63LL, (int64_t)0xFFFFFFF6LL, (int64_t)0xFE2AA306LL, (int64_t)0xFFFFFFFALL, (int64_t)0xD99541A0LL, (int64_t)0x8382E31CLL, (int64_t)0xED6E04F8LL, (int64_t)0xFF8E2A72LL, (int64_t)0xFED83232LL, (int64_t)0xFF98596ALL, (int64_t)0xFFFFFF3ELL, (int64_t)0xE42FE6BCLL, (int64_t)0xFFF109DCLL, (int64_t)0xFFFFFEA2LL, (int64_t)0xFFFFFFF8LL };
		for (int ndx = 0; ndx < 100; ndx++)
			Util::Check("Fixed64::ExpFastest", Fixed64::ExpFastest(input0[ndx]), output0[ndx], input0[ndx]);
	}

	// Fixed32.Exp()
	static void Fixed32_Exp()
	{
		static const int32_t input0[] = { (int32_t)0x4F90A3, (int32_t)0xFFF1A9EC, (int32_t)0xFFCA68E5, (int32_t)0xFFC97FE3, (int32_t)0xFFF6985E, (int32_t)0x2AC1D6, (int32_t)0x408372, (int32_t)0x521B1, (int32_t)0xFFD183CF, (int32_t)0x59BCC3, (int32_t)0x2FCFAD, (int32_t)0x4D533E, (int32_t)0x3AD046, (int32_t)0xFFF852B5, (int32_t)0xFFD4CBDA, (int32_t)0xFFFDD799, (int32_t)0xFFF58A78, (int32_t)0xFFDDCF52, (int32_t)0x486216, (int32_t)0x55D26B, (int32_t)0x38B34C, (int32_t)0x6F6CD, (int32_t)0xFFFA548C, (int32_t)0x3EA3F8, (int32_t)0x524922, (int32_t)0xFFB0491F, (int32_t)0xFFAB58C0, (int32_t)0xFFCCE693, (int32_t)0x45214F, (int32_t)0x5F6FEB, (int32_t)0xFFBE6C51, (int32_t)0x508F3D, (int32_t)0xFFE517E7, (int32_t)0xFFC3DC1C, (int32_t)0x10, (int32_t)0x61F6A, (int32_t)0x6DEA, (int32_t)0x7D5, (int32_t)0x6, (int32_t)0xD, (int32_t)0xD, (int32_t)0x8D8, (int32_t)0x201, (int32_t)0x4, (int32_t)0x6, (int32_t)0x2, (int32_t)0x2, (int32_t)0x14, (int32_t)0x148, (int32_t)0xE, (int32_t)0x83C7, (int32_t)0x3DE, (int32_t)0x39EB, (int32_t)0x66, (int32_t)0x43, (int32_t)0xC8, (int32_t)0x5C486, (int32_t)0x198, (int32_t)0x6E, (int32_t)0xAD, (int32_t)0x197E, (int32_t)0xC0D, (int32_t)0x2BFD, (int32_t)0x4F, (int32_t)0x95F1, (int32_t)0x13FFC, (int32_t)0x5D9, (int32_t)0xEE6, (int32_t)0xFFFFFFAD, (int32_t)0xFFFFFF88, (int32_t)0xFFFFA52F, (int32_t)0xFFFD0FC6, (int32_t)0xFFFFFFDB, (int32_t)0xFFFFBDA7, (int32_t)0xFFFF695E, (int32_t)0xFFFFFFDB, (int32_t)0xFFFFFFFA, (int32_t)0xFFFFFE95, (int32_t)0xFFFFB674, (int32_t)0xFFFCDD21, (int32_t)0xFFFFFFFA, (int32_t)0xFFFD77C1, (int32_t)0xFFFEA3BD, (int32_t)0xFFFFCCA7, (int32_t)0xFFFFFFE3, (int32_t)0xFFFFD203, (int32_t)0xFFFFFFE7, (int32_t)0xFFFFFFFC, (int32_t)0xFFFC4493, (int32_t)0xFFFF28D9, (int32_t)0xFFFFFFFE, (int32_t)0xFFFFFF77, (int32_t)0xFFFFFFDC, (int32_t)0xFFFF9A8E, (int32_t)0xFFFFFAC3, (int32_t)0xFFFFF48A, (int32_t)0xFFFDFD20, (int32_t)0xFFFFFFF4, (int32_t)0xFFFFFFB6, (int32_t)0xFFFFFFCD };
		static const int32_t output0[] = { (int32_t)0x7FFFFFFF, (int32_t)0x0, (int32_t)0x0, (int32_t)0x0, (int32_t)0x5, (int32_t)0x7FFFFFFF, (int32_t)0x7FFFFFFF, (int32_t)0xA948CD, (int32_t)0x0, (int32_t)0x7FFFFFFF, (int32_t)0x7FFFFFFF, (int32_t)0x7FFFFFFF, (int32_t)0x7FFFFFFF, (int32_t)0x1E, (int32_t)0x0, (int32_t)0x1D96, (int32_t)0x1, (int32_t)0x0, (int32_t)0x7FFFFFFF, (int32_t)0x7FFFFFFF, (int32_t)0x7FFFFFFF, (int32_t)0x421E27B, (int32_t)0xE2, (int32_t)0x7FFFFFFF, (int32_t)0x7FFFFFFF, (int32_t)0x0, (int32_t)0x0, (int32_t)0x0, (int32_t)0x7FFFFFFF, (int32_t)0x7FFFFFFF, (int32_t)0x0, (int32_t)0x7FFFFFFF, (int32_t)0x0, (int32_t)0x0, (int32_t)0x1000F, (int32_t)0x1C815E0, (int32_t)0x18947, (int32_t)0x107F3, (int32_t)0x10005, (int32_t)0x1000C, (int32_t)0x1000C, (int32_t)0x108FF, (int32_t)0x10202, (int32_t)0x10003, (int32_t)0x10005, (int32_t)0x10001, (int32_t)0x10001, (int32_t)0x10013, (int32_t)0x10148, (int32_t)0x1000D, (int32_t)0x1AC58, (int32_t)0x103E5, (int32_t)0x140FD, (int32_t)0x10065, (int32_t)0x10042, (int32_t)0x100C7, (int32_t)0x13FC7CD, (int32_t)0x10198, (int32_t)0x1006D, (int32_t)0x100AC, (int32_t)0x11ACD, (int32_t)0x10C56, (int32_t)0x12FFE, (int32_t)0x1004E, (int32_t)0x1CBD6, (int32_t)0x37D77, (int32_t)0x105E9, (int32_t)0x10F56, (int32_t)0xFFAC, (int32_t)0xFF87, (int32_t)0xB38B, (int32_t)0xD8E, (int32_t)0xFFDA, (int32_t)0xC58D, (int32_t)0x8E22, (int32_t)0xFFDA, (int32_t)0xFFF9, (int32_t)0xFE95, (int32_t)0xC013, (int32_t)0xB1F, (int32_t)0xFFF9, (int32_t)0x1459, (int32_t)0x41AD, (int32_t)0xD178, (int32_t)0xFFE2, (int32_t)0xD5E7, (int32_t)0xFFE6, (int32_t)0xFFFB, (int32_t)0x621, (int32_t)0x6E78, (int32_t)0xFFFD, (int32_t)0xFF76, (int32_t)0xFFDB, (int32_t)0xAC3E, (int32_t)0xFAD0, (int32_t)0xF4CA, (int32_t)0x2242, (int32_t)0xFFF3, (int32_t)0xFFB5, (int32_t)0xFFCC };
		for (int ndx = 0; ndx < 100; ndx++)
			Util::Check("Fixed32::Exp", Fixed32::Exp(input0[ndx]), output0[ndx], input0[ndx]);
	}

	// Fixed32.ExpFast()
	static void Fixed32_ExpFast()
	{
		static const int32_t input0[] = { (int32_t)0xFFFC50AA, (int32_t)0xFFEE4ECD, (int32_t)0x4E415E, (int32_t)0xFFABCB16, (int32_t)0xFFEF45ED, (int32_t)0x489158, (int32_t)0xFFCF61AE, (int32_t)0x61DC2E, (int32_t)0x69385, (int32_t)0xFFA56CC5, (int32_t)0xFFD103FA, (int32_t)0x96380, (int32_t)0x27AC3A, (int32_t)0xFFED799F, (int32_t)0xFFCF4919, (int32_t)0x310A64, (int32_t)0x2F0708, (int32_t)0x619017, (int32_t)0xFFABEBC5, (int32_t)0xFFAE9CA7, (int32_t)0x1B06AF, (int32_t)0xFFF919F5, (int32_t)0x2279B1, (int32_t)0xFFFDB87F, (int32_t)0xFFDB94D3, (int32_t)0xFFECC384, (int32_t)0x231934, (int32_t)0xFFFD2D9E, (int32_t)0xFFC3F99F, (int32_t)0xFFC4906D, (int32_t)0xFFE336D0, (int32_t)0x5A48CF, (int32_t)0xFFB4DFA4, (int32_t)0xFFF8CDD9, (int32_t)0x1C5, (int32_t)0x2E07, (int32_t)0x2, (int32_t)0x7FC0, (int32_t)0x42, (int32_t)0xA5, (int32_t)0x1C2, (int32_t)0x1D, (int32_t)0x5F8, (int32_t)0x20D27, (int32_t)0x76C, (int32_t)0x29D, (int32_t)0x18CE, (int32_t)0x1069A, (int32_t)0x3E8, (int32_t)0x8546, (int32_t)0x14B38, (int32_t)0x2590E, (int32_t)0x4, (int32_t)0x16, (int32_t)0x14E1, (int32_t)0x2, (int32_t)0x5D3D, (int32_t)0x14C, (int32_t)0x7B22, (int32_t)0x2, (int32_t)0x15, (int32_t)0x8BBB, (int32_t)0xB088, (int32_t)0x84, (int32_t)0x329C, (int32_t)0x6B, (int32_t)0x1AC, (int32_t)0x27, (int32_t)0xFFF837BC, (int32_t)0xFFFFF4B9, (int32_t)0xFFFF9C0F, (int32_t)0xFFF910B6, (int32_t)0xFFFFBDFA, (int32_t)0xFFFFAB3C, (int32_t)0xFFFFDAF8, (int32_t)0xFFFFFE50, (int32_t)0xFFFB2AE8, (int32_t)0xFFFF3D60, (int32_t)0xFFFAC9F3, (int32_t)0xFFFE4E9B, (int32_t)0xFFFF77F6, (int32_t)0xFFFE6B13, (int32_t)0xFFF66EE3, (int32_t)0xFFFFFE1A, (int32_t)0xFFFFFF35, (int32_t)0xFFFFFCF1, (int32_t)0xFFFDB15B, (int32_t)0xFFFBC79B, (int32_t)0xFFFEA4C9, (int32_t)0xFFFFFE8F, (int32_t)0xFFFB102F, (int32_t)0xFFFFF07F, (int32_t)0xFFFFFFFE, (int32_t)0xFFFFFFC8, (int32_t)0xFFFFFFF1, (int32_t)0xFFFFDFBE, (int32_t)0xFFFFFE55, (int32_t)0xFFFFFFE9, (int32_t)0xFFFFFFEC, (int32_t)0xFFFFFFDD };
		static const int32_t output0[] = { (int32_t)0x66C, (int32_t)0x0, (int32_t)0x7FFFFFFF, (int32_t)0x0, (int32_t)0x0, (int32_t)0x7FFFFFFF, (int32_t)0x0, (int32_t)0x7FFFFFFF, (int32_t)0x2CDD116, (int32_t)0x0, (int32_t)0x0, (int32_t)0x2EAF9F26, (int32_t)0x7FFFFFFF, (int32_t)0x0, (int32_t)0x0, (int32_t)0x7FFFFFFF, (int32_t)0x7FFFFFFF, (int32_t)0x7FFFFFFF, (int32_t)0x0, (int32_t)0x0, (int32_t)0x7FFFFFFF, (int32_t)0x42, (int32_t)0x7FFFFFFF, (int32_t)0x1A33, (int32_t)0x0, (int32_t)0x0, (int32_t)0x7FFFFFFF, (int32_t)0xF3B, (int32_t)0x0, (int32_t)0x0, (int32_t)0x0, (int32_t)0x7FFFFFFF, (int32_t)0x0, (int32_t)0x31, (int32_t)0x101C6, (int32_t)0x1326C, (int32_t)0x10001, (int32_t)0x1A5A7, (int32_t)0x10041, (int32_t)0x100A5, (int32_t)0x101C3, (int32_t)0x1001C, (int32_t)0x10609, (int32_t)0x7C74B, (int32_t)0x10787, (int32_t)0x102A0, (int32_t)0x11A0B, (int32_t)0x2CA0D, (int32_t)0x103EF, (int32_t)0x1AEDA, (int32_t)0x3A58C, (int32_t)0xA768E, (int32_t)0x10003, (int32_t)0x10015, (int32_t)0x115C0, (int32_t)0x10001, (int32_t)0x1707A, (int32_t)0x1014C, (int32_t)0x19E1E, (int32_t)0x10001, (int32_t)0x10014, (int32_t)0x1B9DC, (int32_t)0x1FE2A, (int32_t)0x10083, (int32_t)0x137F5, (int32_t)0x1006A, (int32_t)0x101AD, (int32_t)0x10026, (int32_t)0x1B, (int32_t)0xF4F7, (int32_t)0xAD41, (int32_t)0x3F, (int32_t)0xC5CD, (int32_t)0xB7D6, (int32_t)0xDD85, (int32_t)0xFE50, (int32_t)0x20A, (int32_t)0x77B1, (int32_t)0x165, (int32_t)0x2F19, (int32_t)0x9678, (int32_t)0x34A3, (int32_t)0x4, (int32_t)0xFE1B, (int32_t)0xFF35, (int32_t)0xFCF5, (int32_t)0x197B, (int32_t)0x3C3, (int32_t)0x41F2, (int32_t)0xFE8F, (int32_t)0x1D6, (int32_t)0xF0F4, (int32_t)0xFFFD, (int32_t)0xFFC7, (int32_t)0xFFF0, (int32_t)0xE1B1, (int32_t)0xFE55, (int32_t)0xFFE8, (int32_t)0xFFEB, (int32_t)0xFFDC };
		for (int ndx = 0; ndx < 100; ndx++)
			Util::Check("Fixed32::ExpFast", Fixed32::ExpFast(input0[ndx]), output0[ndx], input0[ndx]);
	}

	// Fixed32.ExpFastest()
	static void Fixed32_ExpFastest()
	{
		static const int32_t input0[] = { (int32_t)0xFFA30976, (int32_t)0xFFEC1CF8, (int32_t)0x44167D, (int32_t)0x534E63, (int32_t)0xFFA0883B, (int32_t)0x498F41, (int32_t)0xFFBEC83E, (int32_t)0xFFDF0C4B, (int32_t)0x52B0C, (int32_t)0xFFC39B0B, (int32_t)0xFFAAAA9E, (int32_t)0x586921, (int32_t)0xFFF6CC99, (int32_t)0x502EC2, (int32_t)0xFFCCBA41, (int32_t)0xFFDE8293, (int32_t)0x36E694, (int32_t)0xFFE35E3E, (int32_t)0x5D3E35, (int32_t)0xFFC82D1C, (int32_t)0xFFF1D3A4, (int32_t)0xFFFE19CF, (int32_t)0xFFEA54B3, (int32_t)0xDD762, (int32_t)0x19AF81, (int32_t)0xFFB9589F, (int32_t)0x5DA7C8, (int32_t)0xFFF5BDC4, (int32_t)0xE365C, (int32_t)0xFF9E2C79, (int32_t)0xFF9C2E1C, (int32_t)0x320151, (int32_t)0x169439, (int32_t)0x2C7B3B, (int32_t)0x11538, (int32_t)0xD7, (int32_t)0x2, (int32_t)0x5, (int32_t)0x16C, (int32_t)0x440, (int32_t)0x56, (int32_t)0x85C, (int32_t)0x15B, (int32_t)0x1C14, (int32_t)0x91, (int32_t)0x2, (int32_t)0xC, (int32_t)0x7, (int32_t)0x2, (int32_t)0x1204D, (int32_t)0x23568, (int32_t)0x4, (int32_t)0x23, (int32_t)0x646F5, (int32_t)0xC2B2, (int32_t)0x7E3, (int32_t)0x2, (int32_t)0x3E, (int32_t)0x4D, (int32_t)0x21196, (int32_t)0x2CA95, (int32_t)0x4E18, (int32_t)0x801B, (int32_t)0x568, (int32_t)0x18, (int32_t)0x79, (int32_t)0x82, (int32_t)0x54B0, (int32_t)0xFFFFFFFB, (int32_t)0xFFFDF2AC, (int32_t)0xFFFFFF8F, (int32_t)0xFFFFCB1C, (int32_t)0xFFFAE772, (int32_t)0xFFFFFCF1, (int32_t)0xFFFC292B, (int32_t)0xFFFDD35F, (int32_t)0xFFFFFFFB, (int32_t)0xFFFF9903, (int32_t)0xFFFFFFDB, (int32_t)0xFFFFE9D4, (int32_t)0xFFFFFFFE, (int32_t)0xFFFE2B70, (int32_t)0xFFFFFE2F, (int32_t)0xFFFF9E17, (int32_t)0xFFFFFFF6, (int32_t)0xFFFB99D5, (int32_t)0xFFFFF9F9, (int32_t)0xFFFFE21F, (int32_t)0xFFFC2103, (int32_t)0xFFFFFFBA, (int32_t)0xFFFFFF40, (int32_t)0xFFFF9DF3, (int32_t)0xFFFF49E2, (int32_t)0xFFFFF91E, (int32_t)0xFFFFF0C4, (int32_t)0xFFFFF4FA, (int32_t)0xFFFF58E6, (int32_t)0xFFFD7C9A, (int32_t)0xFFFFFDB4, (int32_t)0xFFFFFFFE };
		static const int32_t output0[] = { (int32_t)0x0, (int32_t)0x0, (int32_t)0x7FFFFFFF, (int32_t)0x7FFFFFFF, (int32_t)0x0, (int32_t)0x7FFFFFFF, (int32_t)0x0, (int32_t)0x0, (int32_t)0xAF9116, (int32_t)0x0, (int32_t)0x0, (int32_t)0x7FFFFFFF, (int32_t)0x6, (int32_t)0x7FFFFFFF, (int32_t)0x0, (int32_t)0x0, (int32_t)0x7FFFFFFF, (int32_t)0x0, (int32_t)0x7FFFFFFF, (int32_t)0x0, (int32_t)0x0, (int32_t)0x2652, (int32_t)0x0, (int32_t)0x7FFFFFFF, (int32_t)0x7FFFFFFF, (int32_t)0x0, (int32_t)0x7FFFFFFF, (int32_t)0x2, (int32_t)0x7FFFFFFF, (int32_t)0x0, (int32_t)0x0, (int32_t)0x7FFFFFFF, (int32_t)0x7FFFFFFF, (int32_t)0x7FFFFFFF, (int32_t)0x2F3F2, (int32_t)0x100D7, (int32_t)0x10001, (int32_t)0x10004, (int32_t)0x1016E, (int32_t)0x1044B, (int32_t)0x10056, (int32_t)0x10884, (int32_t)0x1015C, (int32_t)0x11DB3, (int32_t)0x10091, (int32_t)0x10001, (int32_t)0x1000B, (int32_t)0x10006, (int32_t)0x10001, (int32_t)0x3156C, (int32_t)0x91A85, (int32_t)0x10003, (int32_t)0x10022, (int32_t)0x2144F3C, (int32_t)0x223BD, (int32_t)0x10806, (int32_t)0x10001, (int32_t)0x1003D, (int32_t)0x1004D, (int32_t)0x7EA1E, (int32_t)0x104DA8, (int32_t)0x15B47, (int32_t)0x1A641, (int32_t)0x10579, (int32_t)0x10017, (int32_t)0x10079, (int32_t)0x10082, (int32_t)0x16456, (int32_t)0xFFFA, (int32_t)0x20E3, (int32_t)0xFF8E, (int32_t)0xD038, (int32_t)0x191, (int32_t)0xFCF7, (int32_t)0x581, (int32_t)0x1D1B, (int32_t)0xFFFA, (int32_t)0xAB30, (int32_t)0xFFDA, (int32_t)0xEAC8, (int32_t)0xFFFD, (int32_t)0x290C, (int32_t)0xFE31, (int32_t)0xAE9E, (int32_t)0xFFF5, (int32_t)0x325, (int32_t)0xFA0D, (int32_t)0xE3D1, (int32_t)0x555, (int32_t)0xFFBA, (int32_t)0xFF40, (int32_t)0xAE86, (int32_t)0x7DB0, (int32_t)0xF938, (int32_t)0xF13B, (int32_t)0xF53A, (int32_t)0x8549, (int32_t)0x14BC, (int32_t)0xFDB7, (int32_t)0xFFFD };
		for (int ndx = 0; ndx < 100; ndx++)
			Util::Check("Fixed32::ExpFastest", Fixed32::ExpFastest(input0[ndx]), output0[ndx], input0[ndx]);
	}

	// Fixed64.Exp2()
	static void Fixed64_Exp2()
	{
		static const int64_t input0[] = { (int64_t)0x22A4348E9DLL, (int64_t)0xFFFFFFEE767E0B35LL, (int64_t)0xFFFFFFA13503851BLL, (int64_t)0xFFFFFFB8DEA5E8BALL, (int64_t)0x1F89193BBLL, (int64_t)0xFFFFFFC14FFEC93BLL, (int64_t)0xFFFFFFB3BA9E4ED0LL, (int64_t)0x3343FDCEBELL, (int64_t)0xFFFFFFA3BE25FCA0LL, (int64_t)0x5375024A6ELL, (int64_t)0xFFFFFFF814DC3B09LL, (int64_t)0xFFFFFFD06238B4F9LL, (int64_t)0xFFFFFFA3F2DF1CB0LL, (int64_t)0x20687D4AB8LL, (int64_t)0x4A9ED9B47DLL, (int64_t)0xFFFFFFA2A56CF8DELL, (int64_t)0xFFFFFFD73A6B4C77LL, (int64_t)0xFFFFFFA03BA05B19LL, (int64_t)0xFFFFFFE909960D5BLL, (int64_t)0xFFFFFFD05B998F29LL, (int64_t)0x3BF48AB39FLL, (int64_t)0x23EB54291FLL, (int64_t)0x3D438B4132LL, (int64_t)0x3B22561C2ELL, (int64_t)0x32C24090ELL, (int64_t)0xF038638B6LL, (int64_t)0x5087465849LL, (int64_t)0xFFFFFFEE95AC3276LL, (int64_t)0x4ABA67BEDDLL, (int64_t)0xFFFFFFE2B65D035ELL, (int64_t)0xFFFFFFAEF3182B96LL, (int64_t)0xFFFFFFC29A5CEE7ELL, (int64_t)0xFFFFFFD7E4574638LL, (int64_t)0xFFFFFFC76A62F767LL, (int64_t)0x327252F03LL, (int64_t)0x1D0068LL, (int64_t)0x333F5F37LL, (int64_t)0x429LL, (int64_t)0x12DLL, (int64_t)0x27D91F310LL, (int64_t)0x1CC8B639LL, (int64_t)0x89193C8LL, (int64_t)0x2FB6BFLL, (int64_t)0x1LL, (int64_t)0x1F1D4D78LL, (int64_t)0xALL, (int64_t)0x1CBC4FDLL, (int64_t)0x18LL, (int64_t)0xA27607LL, (int64_t)0xEE4F1LL, (int64_t)0x345LL, (int64_t)0x7E92282LL, (int64_t)0x3AB47LL, (int64_t)0x5ELL, (int64_t)0xBFLL, (int64_t)0x88D4BEE40LL, (int64_t)0x2A5E4BLL, (int64_t)0x119LL, (int64_t)0x497BD9LL, (int64_t)0x206967F34LL, (int64_t)0x414LL, (int64_t)0x1E6E371LL, (int64_t)0x90D46F18LL, (int64_t)0x1263FA1LL, (int64_t)0x21361E58LL, (int64_t)0x2B8LL, (int64_t)0x3FD16EB7ALL, (int64_t)0x2150DF94LL, (int64_t)0xFFFFFFFFFDEE046FLL, (int64_t)0xFFFFFFFFFFFFFC0DLL, (int64_t)0xFFFFFFFFFFFFFF90LL, (int64_t)0xFFFFFFFFFFFFFFFFLL, (int64_t)0xFFFFFFFFF1BD7D18LL, (int64_t)0xFFFFFFFFFFFF3C80LL, (int64_t)0xFFFFFFFFFFFF2CEDLL, (int64_t)0xFFFFFFFFFFFFFFFELL, (int64_t)0xFFFFFFFFFFFFFFFBLL, (int64_t)0xFFFFFFFFEDA31B9ALL, (int64_t)0xFFFFFFFA788F34AALL, (int64_t)0xFFFFFFFFFFFF9258LL, (int64_t)0xFFFFFFFF915CB61FLL, (int64_t)0xFFFFFFFFF62BFE64LL, (int64_t)0xFFFFFFFFFA16F850LL, (int64_t)0xFFFFFFFFFFFFF836LL, (int64_t)0xFFFFFFFFFFFFFFFALL, (int64_t)0xFFFFFFFFFFFFF324LL, (int64_t)0xFFFFFFFFFECC8E90LL, (int64_t)0xFFFFFFFFFFFFFFF0LL, (int64_t)0xFFFFFFFFFFFFFFFFLL, (int64_t)0xFFFFFFFC502F425BLL, (int64_t)0xFFFFFFF927A6D386LL, (int64_t)0xFFFFFFFFFFD1648CLL, (int64_t)0xFFFFFFFFFF6F10C9LL, (int64_t)0xFFFFFFFFFFFFFA31LL, (int64_t)0xFFFFFFFFFF63BCD3LL, (int64_t)0xFFFFFFFFFFFFFFF1LL, (int64_t)0xFFFFFFFF688A821FLL, (int64_t)0xFFFFFFFE60E21DE0LL, (int64_t)0xFFFFFFFFFFFFFFA3LL, (int64_t)0xFFFFFFFFFFF4920BLL };
		static const int64_t output0[] = { (int64_t)0x7FFFFFFFFFFFFFFFLL, (int64_t)0x5835LL, (int64_t)0x0LL, (int64_t)0x0LL, (int64_t)0x3EB9A17F8LL, (int64_t)0x0LL, (int64_t)0x0LL, (int64_t)0x7FFFFFFFFFFFFFFFLL, (int64_t)0x0LL, (int64_t)0x7FFFFFFFFFFFFFFFLL, (int64_t)0x10EE019LL, (int64_t)0x0LL, (int64_t)0x0LL, (int64_t)0x7FFFFFFFFFFFFFFFLL, (int64_t)0x7FFFFFFFFFFFFFFFLL, (int64_t)0x0LL, (int64_t)0x0LL, (int64_t)0x0LL, (int64_t)0x20DLL, (int64_t)0x0LL, (int64_t)0x7FFFFFFFFFFFFFFFLL, (int64_t)0x7FFFFFFFFFFFFFFFLL, (int64_t)0x7FFFFFFFFFFFFFFFLL, (int64_t)0x7FFFFFFFFFFFFFFFLL, (int64_t)0x903FEDFA0LL, (int64_t)0x813A2F380000LL, (int64_t)0x7FFFFFFFFFFFFFFFLL, (int64_t)0x5FFALL, (int64_t)0x7FFFFFFFFFFFFFFFLL, (int64_t)0x6LL, (int64_t)0x0LL, (int64_t)0x0LL, (int64_t)0x0LL, (int64_t)0x0LL, (int64_t)0x8E4FCF6C0LL, (int64_t)0x100141B04LL, (int64_t)0x1261AC7E8LL, (int64_t)0x1000002E0LL, (int64_t)0x1000000CCLL, (int64_t)0x59EA88F10LL, (int64_t)0x114BFE894LL, (int64_t)0x1060240B4LL, (int64_t)0x1002114CCLL, (int64_t)0x100000000LL, (int64_t)0x116805D14LL, (int64_t)0x100000004LL, (int64_t)0x1013F7744LL, (int64_t)0x100000010LL, (int64_t)0x10070B4F4LL, (int64_t)0x1000A5324LL, (int64_t)0x100000240LL, (int64_t)0x1058ADCF0LL, (int64_t)0x100028B10LL, (int64_t)0x10000003CLL, (int64_t)0x100000080LL, (int64_t)0x1774F6D9400LL, (int64_t)0x1001D5FCCLL, (int64_t)0x1000000C0LL, (int64_t)0x10032F484LL, (int64_t)0x4126DEF60LL, (int64_t)0x1000002D0LL, (int64_t)0x101525B94LL, (int64_t)0x17AEAFCA4LL, (int64_t)0x100CC46C8LL, (int64_t)0x118164FDCLL, (int64_t)0x1000001E0LL, (int64_t)0xFDFD94E60LL, (int64_t)0x1182A9AD0LL, (int64_t)0xFE91AC5CLL, (int64_t)0xFFFFFD3ELL, (int64_t)0xFFFFFFACLL, (int64_t)0xFFFFFFF4LL, (int64_t)0xF64DE3BCLL, (int64_t)0xFFFF7876LL, (int64_t)0xFFFF6DACLL, (int64_t)0xFFFFFFF4LL, (int64_t)0xFFFFFFF2LL, (int64_t)0xF39545B8LL, (int64_t)0x58B459ALL, (int64_t)0xFFFFB3F6LL, (int64_t)0xBDBB738CLL, (int64_t)0xF9470AD2LL, (int64_t)0xFBEF992ELL, (int64_t)0xFFFFFA92LL, (int64_t)0xFFFFFFF2LL, (int64_t)0xFFFFF712LL, (int64_t)0xFF2B3E66LL, (int64_t)0xFFFFFFECLL, (int64_t)0xFFFFFFF4LL, (int64_t)0x13E1314CLL, (int64_t)0x23A0732LL, (int64_t)0xFFDFB3CCLL, (int64_t)0xFF9B9DD2LL, (int64_t)0xFFFFFBF2LL, (int64_t)0xFF93C6ECLL, (int64_t)0xFFFFFFECLL, (int64_t)0xA9E104FCLL, (int64_t)0x53324B84LL, (int64_t)0xFFFFFFB6LL, (int64_t)0xFFF813FCLL };
		for (int ndx = 0; ndx < 100; ndx++)
			Util::Check("Fixed64::Exp2", Fixed64::Exp2(input0[ndx]), output0[ndx], input0[ndx]);
	}

	// Fixed64.Exp2Fast()
	static void Fixed64_Exp2Fast()
	{
		static const int64_t input0[] = { (int64_t)0xFFFFFFB702D12717LL, (int64_t)0x4C249D0210LL, (int64_t)0xFFFFFFF0216B8999LL, (int64_t)0xFFFFFFE7A90BFDB8LL, (int64_t)0xFFFFFFE61058C365LL, (int64_t)0xFFFFFFD0B2B459CALL, (int64_t)0x5F2FC98D56LL, (int64_t)0xFFFFFFA8D24186AALL, (int64_t)0x30213A6448LL, (int64_t)0xFFFFFFC06987E729LL, (int64_t)0x54F8F9F1B1LL, (int64_t)0x3D8836F2C3LL, (int64_t)0xFFFFFFCEE9DD7A56LL, (int64_t)0xFFFFFFC607106C75LL, (int64_t)0xFFFFFFA89E9E49AALL, (int64_t)0x2392AA33CLL, (int64_t)0x5ABCE68A7DLL, (int64_t)0xE77EB8674LL, (int64_t)0x154D2344E2LL, (int64_t)0xFFFFFFFE58809F45LL, (int64_t)0x1016FAED48LL, (int64_t)0x45BFA63BB3LL, (int64_t)0x400B67D098LL, (int64_t)0x31FCFD1CBBLL, (int64_t)0xFFFFFFD79D425B48LL, (int64_t)0x109E095429LL, (int64_t)0xFFFFFFE30A1C7D9FLL, (int64_t)0xFFFFFFFDED353D44LL, (int64_t)0x38885074B9LL, (int64_t)0xFFFFFFDED31BEAF6LL, (int64_t)0xFFFFFFB99C98D35CLL, (int64_t)0xFFFFFFB89C41B7BALL, (int64_t)0x1693D68C25LL, (int64_t)0xFFFFFFF0A9C90D8ALL, (int64_t)0x404LL, (int64_t)0x8045E3291LL, (int64_t)0x15AFLL, (int64_t)0x24C7LL, (int64_t)0x24D924550LL, (int64_t)0x1BB84C69LL, (int64_t)0x172ELL, (int64_t)0x3FFDD2LL, (int64_t)0x2430LL, (int64_t)0x1F810C04LL, (int64_t)0x2LL, (int64_t)0x4BLL, (int64_t)0x176FLL, (int64_t)0xD848LL, (int64_t)0x13DLL, (int64_t)0x25LL, (int64_t)0x2FLL, (int64_t)0x826LL, (int64_t)0x9ADLL, (int64_t)0x16AE9ADLL, (int64_t)0x50ACCE1EDLL, (int64_t)0x453LL, (int64_t)0x4LL, (int64_t)0xCE9E51LL, (int64_t)0x7LL, (int64_t)0xDFE0F8ELL, (int64_t)0x10F184C59LL, (int64_t)0x242DBLL, (int64_t)0x3D7LL, (int64_t)0x5219LL, (int64_t)0x2LL, (int64_t)0xC40C824LL, (int64_t)0x75LL, (int64_t)0x291C16DALL, (int64_t)0xFFFFFFFE550BF3D2LL, (int64_t)0xFFFFFFFFFFFFFFFBLL, (int64_t)0xFFFFFFFFFFFFFFCFLL, (int64_t)0xFFFFFFFFFFE99A39LL, (int64_t)0xFFFFFFFFFFAF4AD2LL, (int64_t)0xFFFFFFFFF085DF68LL, (int64_t)0xFFFFFFFFFFFFFFE4LL, (int64_t)0xFFFFFFFC752AFC6ALL, (int64_t)0xFFFFFFFFFFFE41B8LL, (int64_t)0xFFFFFFF609F2F2A2LL, (int64_t)0xFFFFFFFFFD94819FLL, (int64_t)0xFFFFFFFFFFFFFFEDLL, (int64_t)0xFFFFFFFFFFFFFEF8LL, (int64_t)0xFFFFFFFEEB728BB0LL, (int64_t)0xFFFFFFFFFFFFFE06LL, (int64_t)0xFFFFFFFFFFAAE8A4LL, (int64_t)0xFFFFFFFFFFFFFFB5LL, (int64_t)0xFFFFFFFFD1F38A61LL, (int64_t)0xFFFFFFFFDDB18FE2LL, (int64_t)0xFFFFFFFE9E3197F4LL, (int64_t)0xFFFFFFFFFFFF0A65LL, (int64_t)0xFFFFFFF6B65CE9B3LL, (int64_t)0xFFFFFFFE2D4B7A4CLL, (int64_t)0xFFFFFFFFFEF3515ALL, (int64_t)0xFFFFFFFFFFFFFAD8LL, (int64_t)0xFFFFFFFFFFFFFFD6LL, (int64_t)0xFFFFFFFEFA3C5365LL, (int64_t)0xFFFFFFFF997B230ELL, (int64_t)0xFFFFFFFFFFFFEF57LL, (int64_t)0xFFFFFFFB9795E854LL, (int64_t)0xFFFFFFFFF24C0255LL, (int64_t)0xFFFFFFFFFFFFFE1CLL };
		static const int64_t output0[] = { (int64_t)0x0LL, (int64_t)0x7FFFFFFFFFFFFFFFLL, (int64_t)0x1183ELL, (int64_t)0xCALL, (int64_t)0x42LL, (int64_t)0x0LL, (int64_t)0x7FFFFFFFFFFFFFFFLL, (int64_t)0x0LL, (int64_t)0x7FFFFFFFFFFFFFFFLL, (int64_t)0x0LL, (int64_t)0x7FFFFFFFFFFFFFFFLL, (int64_t)0x7FFFFFFFFFFFFFFFLL, (int64_t)0x0LL, (int64_t)0x0LL, (int64_t)0x0LL, (int64_t)0x4AB6D2630LL, (int64_t)0x7FFFFFFFFFFFFFFFLL, (int64_t)0x588D12670000LL, (int64_t)0x276ECBE3000000LL, (int64_t)0x5154803BLL, (int64_t)0x1106F0D2C0000LL, (int64_t)0x7FFFFFFFFFFFFFFFLL, (int64_t)0x7FFFFFFFFFFFFFFFLL, (int64_t)0x7FFFFFFFFFFFFFFFLL, (int64_t)0x0LL, (int64_t)0x188B614380000LL, (int64_t)0x8LL, (int64_t)0x3CD3436CLL, (int64_t)0x7FFFFFFFFFFFFFFFLL, (int64_t)0x0LL, (int64_t)0x0LL, (int64_t)0x0LL, (int64_t)0x5F810272000000LL, (int64_t)0x19567LL, (int64_t)0x1000002C8LL, (int64_t)0x1030B91B000LL, (int64_t)0x100000F04LL, (int64_t)0x100001978LL, (int64_t)0x4EF54F550LL, (int64_t)0x113F3E388LL, (int64_t)0x10000100CLL, (int64_t)0x1002C5CF8LL, (int64_t)0x100001914LL, (int64_t)0x116CB7784LL, (int64_t)0x100000000LL, (int64_t)0x100000030LL, (int64_t)0x100001038LL, (int64_t)0x1000095E0LL, (int64_t)0x1000000D8LL, (int64_t)0x100000018LL, (int64_t)0x10000001CLL, (int64_t)0x1000005A4LL, (int64_t)0x1000006B0LL, (int64_t)0x100FBFEF0LL, (int64_t)0x20F3122880LL, (int64_t)0x1000002FCLL, (int64_t)0x100000000LL, (int64_t)0x1008F59BCLL, (int64_t)0x100000000LL, (int64_t)0x109E24EA0LL, (int64_t)0x2155B95C0LL, (int64_t)0x100019128LL, (int64_t)0x1000002A4LL, (int64_t)0x1000038E4LL, (int64_t)0x100000000LL, (int64_t)0x108A2825CLL, (int64_t)0x100000050LL, (int64_t)0x11E242D80LL, (int64_t)0x5092995BLL, (int64_t)0xFFFFFFF6LL, (int64_t)0xFFFFFFDALL, (int64_t)0xFFF07AA0LL, (int64_t)0xFFC816B8LL, (int64_t)0xF57E9BA4LL, (int64_t)0xFFFFFFE8LL, (int64_t)0x15F9324FLL, (int64_t)0xFFFECAB0LL, (int64_t)0x41BF4DLL, (int64_t)0xFE540E22LL, (int64_t)0xFFFFFFEELL, (int64_t)0xFFFFFF46LL, (int64_t)0x79126E4BLL, (int64_t)0xFFFFFE9ELL, (int64_t)0xFFC50DAALL, (int64_t)0xFFFFFFC8LL, (int64_t)0xE1FDCB68LL, (int64_t)0xE94ACEA4LL, (int64_t)0x623839B5LL, (int64_t)0xFFFF55C4LL, (int64_t)0x68DCBDLL, (int64_t)0x4859C115LL, (int64_t)0xFF460D36LL, (int64_t)0xFFFFFC6ALL, (int64_t)0xFFFFFFDELL, (int64_t)0x7E049863LL, (int64_t)0xC1F2D842LL, (int64_t)0xFFFFF470LL, (int64_t)0xC0F4B0BLL, (int64_t)0xF6AD30B2LL, (int64_t)0xFFFFFEAELL };
		for (int ndx = 0; ndx < 100; ndx++)
			Util::Check("Fixed64::Exp2Fast", Fixed64::Exp2Fast(input0[ndx]), output0[ndx], input0[ndx]);
	}

	// Fixed64.Exp2Fastest()
	static void Fixed64_Exp2Fastest()
	{
		static const int64_t input0[] = { (int64_t)0x606ABAEE38LL, (int64_t)0x4D06936C1LL, (int64_t)0x3D965EACFLL, (int64_t)0xFFFFFFBCA1435D62LL, (int64_t)0x61D813917BLL, (int64_t)0xF76F84316LL, (int64_t)0x23F8A8A14FLL, (int64_t)0x5914F8CE3LL, (int64_t)0xB5F83FECELL, (int64_t)0xFFFFFF9EE253DF16LL, (int64_t)0x3E20857E74LL, (int64_t)0xFFFFFFA82159CE69LL, (int64_t)0x5B07C742AELL, (int64_t)0x5BCDA29BFFLL, (int64_t)0xBE4C3BE9FLL, (int64_t)0x63D65169AFLL, (int64_t)0xFFFFFFCA6370AA8DLL, (int64_t)0x1D64BC8DD2LL, (int64_t)0xFFFFFFC9EFE1C7CCLL, (int64_t)0xFFFFFFC39F98A230LL, (int64_t)0x5B96F7F96FLL, (int64_t)0xFFFFFFD31EEE864FLL, (int64_t)0xFFFFFFE7FE575308LL, (int64_t)0x55F8FABF93LL, (int64_t)0xFFFFFFB854335C89LL, (int64_t)0xFFFFFFFB815487E0LL, (int64_t)0xFFFFFFD54AB104A3LL, (int64_t)0xFFFFFFFBE79769A0LL, (int64_t)0x4CE5D86BE1LL, (int64_t)0xFFFFFFD1A7D50ADCLL, (int64_t)0x173E664E06LL, (int64_t)0x1D3C3177BLL, (int64_t)0xFFFFFFC6B13E0956LL, (int64_t)0xFFFFFFF89909719ALL, (int64_t)0x1ELL, (int64_t)0x1CF4F0BLL, (int64_t)0x3697LL, (int64_t)0x9LL, (int64_t)0x6ECA93LL, (int64_t)0x24277ELL, (int64_t)0x2DLL, (int64_t)0x57CLL, (int64_t)0x1BCDLL, (int64_t)0xAC8CLL, (int64_t)0x5FLL, (int64_t)0x69B72E80LL, (int64_t)0x3259392LL, (int64_t)0xE12LL, (int64_t)0x1F1190LL, (int64_t)0x10B08BE31LL, (int64_t)0x59B440LL, (int64_t)0x1713F73LL, (int64_t)0x4137559LL, (int64_t)0x1B724ELL, (int64_t)0x54DLL, (int64_t)0x1F004D6LL, (int64_t)0x22LL, (int64_t)0x1C35D6LL, (int64_t)0x1LL, (int64_t)0x435EALL, (int64_t)0x4D6LL, (int64_t)0x86LL, (int64_t)0x69BC73LL, (int64_t)0x492LL, (int64_t)0x42F6LL, (int64_t)0x646LL, (int64_t)0x3CBB3D3ALL, (int64_t)0x29C34LL, (int64_t)0xFFFFFFFFE0E012C5LL, (int64_t)0xFFFFFFFFB5105D74LL, (int64_t)0xFFFFFFFFFFD20863LL, (int64_t)0xFFFFFFFFFFFFFFE1LL, (int64_t)0xFFFFFFFFFFFFFFFFLL, (int64_t)0xFFFFFFFFFFB36D66LL, (int64_t)0xFFFFFFFFFFFFFFFELL, (int64_t)0xFFFFFFFFFF596077LL, (int64_t)0xFFFFFFFECD8AB6BALL, (int64_t)0xFFFFFFFD8446D195LL, (int64_t)0xFFFFFFFFFB33B5EFLL, (int64_t)0xFFFFFFFFFFFFFCF8LL, (int64_t)0xFFFFFFFFFA3416D1LL, (int64_t)0xFFFFFFFCEA10B34FLL, (int64_t)0xFFFFFFFF622B7F21LL, (int64_t)0xFFFFFFFA54EBC17ELL, (int64_t)0xFFFFFFFFFFB09BA8LL, (int64_t)0xFFFFFFFE86B6AACBLL, (int64_t)0xFFFFFFFFF64C0651LL, (int64_t)0xFFFFFFFFFFBC32A9LL, (int64_t)0xFFFFFFFFFFFFFFC3LL, (int64_t)0xFFFFFFFFFFFF645FLL, (int64_t)0xFFFFFFFFFFF265ACLL, (int64_t)0xFFFFFFFFECA5DED2LL, (int64_t)0xFFFFFFFFFFFFFFFBLL, (int64_t)0xFFFFFFFFFFFFFFE6LL, (int64_t)0xFFFFFFFFFFFFF887LL, (int64_t)0xFFFFFFFC9EBA7AB5LL, (int64_t)0xFFFFFFFFFF7B2428LL, (int64_t)0xFFFFFFFFFFFFFFFALL, (int64_t)0xFFFFFFFFFFFFFFFELL, (int64_t)0xFFFFFFFF674E0E77LL };
		static const int64_t output0[] = { (int64_t)0x7FFFFFFFFFFFFFFFLL, (int64_t)0x1C22472680LL, (int64_t)0xE69E12600LL, (int64_t)0x0LL, (int64_t)0x7FFFFFFFFFFFFFFFLL, (int64_t)0xB0A0FAD60000LL, (int64_t)0x7FFFFFFFFFFFFFFFLL, (int64_t)0x2F6C42A000LL, (int64_t)0xA5C3CB8E000LL, (int64_t)0x0LL, (int64_t)0x7FFFFFFFFFFFFFFFLL, (int64_t)0x0LL, (int64_t)0x7FFFFFFFFFFFFFFFLL, (int64_t)0x7FFFFFFFFFFFFFFFLL, (int64_t)0xEDD3291A000LL, (int64_t)0x7FFFFFFFFFFFFFFFLL, (int64_t)0x0LL, (int64_t)0x2A07E20F80000000LL, (int64_t)0x0LL, (int64_t)0x0LL, (int64_t)0x7FFFFFFFFFFFFFFFLL, (int64_t)0x0LL, (int64_t)0xFELL, (int64_t)0x7FFFFFFFFFFFFFFFLL, (int64_t)0x0LL, (int64_t)0xB5A791ALL, (int64_t)0x0LL, (int64_t)0xEFA6BA2LL, (int64_t)0x7FFFFFFFFFFFFFFFLL, (int64_t)0x0LL, (int64_t)0x979030BE000000LL, (int64_t)0x38C7EB188LL, (int64_t)0x0LL, (int64_t)0x18368F1LL, (int64_t)0x100000010LL, (int64_t)0x10142F070LL, (int64_t)0x1000025F4LL, (int64_t)0x100000004LL, (int64_t)0x1004D16DCLL, (int64_t)0x1001925A4LL, (int64_t)0x10000001CLL, (int64_t)0x1000003D0LL, (int64_t)0x100001354LL, (int64_t)0x1000077FCLL, (int64_t)0x10000003CLL, (int64_t)0x154CEC54CLL, (int64_t)0x1023277C8LL, (int64_t)0x1000009C4LL, (int64_t)0x100159BF4LL, (int64_t)0x20F90B7F0LL, (int64_t)0x1003E6900LL, (int64_t)0x101014170LL, (int64_t)0x102D96D48LL, (int64_t)0x1001316ECLL, (int64_t)0x1000003ACLL, (int64_t)0x10159CBA0LL, (int64_t)0x100000014LL, (int64_t)0x100139EF0LL, (int64_t)0x100000000LL, (int64_t)0x10002ED9CLL, (int64_t)0x100000358LL, (int64_t)0x100000058LL, (int64_t)0x1004991F0LL, (int64_t)0x10000032CLL, (int64_t)0x100002E8CLL, (int64_t)0x100000458LL, (int64_t)0x12DC31A68LL, (int64_t)0x10001D0B0LL, (int64_t)0xEB558AF6LL, (int64_t)0xD0FE5B58LL, (int64_t)0xFFE03980LL, (int64_t)0xFFFFFFE8LL, (int64_t)0xFFFFFFFALL, (int64_t)0xFFCB139ALL, (int64_t)0xFFFFFFFALL, (int64_t)0xFF8CE400LL, (int64_t)0x6FAA08CELL, (int64_t)0x2DC70BC5LL, (int64_t)0xFCB4064CLL, (int64_t)0xFFFFFDE4LL, (int64_t)0xFC05B55ELL, (int64_t)0x1E2858C6LL, (int64_t)0xA6F5A7C0LL, (int64_t)0x508A67DLL, (int64_t)0xFFC920FALL, (int64_t)0x5C295222LL, (int64_t)0xF9601796LL, (int64_t)0xFFD122E0LL, (int64_t)0xFFFFFFD2LL, (int64_t)0xFFFF9462LL, (int64_t)0xFFF69866LL, (int64_t)0xF2F3D7AELL, (int64_t)0xFFFFFFF8LL, (int64_t)0xFFFFFFEALL, (int64_t)0xFFFFFAD2LL, (int64_t)0x1896EA19LL, (int64_t)0xFFA43358LL, (int64_t)0xFFFFFFF8LL, (int64_t)0xFFFFFFFALL, (int64_t)0xA94BB66CLL };
		for (int ndx = 0; ndx < 100; ndx++)
			Util::Check("Fixed64::Exp2Fastest", Fixed64::Exp2Fastest(input0[ndx]), output0[ndx], input0[ndx]);
	}

	// Fixed32.Exp2()
	static void Fixed32_Exp2()
	{
		static const int32_t input0[] = { (int32_t)0xFFA08726, (int32_t)0xFFCAD32F, (int32_t)0x2EB5C, (int32_t)0x2F829D, (int32_t)0xFFD7AB98, (int32_t)0xFFFF2E0B, (int32_t)0x268AF9, (int32_t)0xFFB15664, (int32_t)0x93C19, (int32_t)0x1A8A1E, (int32_t)0x3AA2CB, (int32_t)0xFFC43324, (int32_t)0x452C60, (int32_t)0x31F01D, (int32_t)0x341757, (int32_t)0xFFDFC72A, (int32_t)0xFFDAD3B9, (int32_t)0x214EA6, (int32_t)0x1F6374, (int32_t)0xFFFB481D, (int32_t)0x5D7FF, (int32_t)0xFFC865E3, (int32_t)0xFFDCC25B, (int32_t)0xFFE97297, (int32_t)0xFFD73C91, (int32_t)0x3DC4FB, (int32_t)0xFFAA34C1, (int32_t)0x49A139, (int32_t)0xFFDC4DA1, (int32_t)0xFFAD474F, (int32_t)0xFF9DD98E, (int32_t)0x43EAC1, (int32_t)0x50E372, (int32_t)0x47BBDD, (int32_t)0x2F, (int32_t)0x58E, (int32_t)0x204, (int32_t)0xD, (int32_t)0x2B22, (int32_t)0xB, (int32_t)0x24, (int32_t)0x24A1, (int32_t)0x5, (int32_t)0x708, (int32_t)0x1A49, (int32_t)0xBE, (int32_t)0x59E76, (int32_t)0x74, (int32_t)0xE4, (int32_t)0x6CFAC, (int32_t)0x1AFE, (int32_t)0x862CC, (int32_t)0x18D, (int32_t)0x9DC, (int32_t)0xB7, (int32_t)0xCB94, (int32_t)0x333B6, (int32_t)0xA, (int32_t)0x21F, (int32_t)0x3E9, (int32_t)0x1B8, (int32_t)0x113D4, (int32_t)0xA73F, (int32_t)0x2AE, (int32_t)0x1572, (int32_t)0x58C03, (int32_t)0x56, (int32_t)0x87FD8, (int32_t)0xFFFFFB80, (int32_t)0xFFFFFFD5, (int32_t)0xFFFD231F, (int32_t)0xFFFFFFF0, (int32_t)0xFFF767C7, (int32_t)0xFFFFFA26, (int32_t)0xFFFFFFD2, (int32_t)0xFFFE3B07, (int32_t)0xFFFFFFF4, (int32_t)0xFFFF525B, (int32_t)0xFFFF97FE, (int32_t)0xFFFB7929, (int32_t)0xFFFE6DF2, (int32_t)0xFFFF939D, (int32_t)0xFFFFFBCD, (int32_t)0xFFFFFF52, (int32_t)0xFFFFFDC8, (int32_t)0xFFFFFFFE, (int32_t)0xFFFFFE53, (int32_t)0xFFFFFF66, (int32_t)0xFFFFFB5B, (int32_t)0xFFFFFDAD, (int32_t)0xFFFFEEA5, (int32_t)0xFFFFFF9A, (int32_t)0xFFFFC1CF, (int32_t)0xFFFFFFEA, (int32_t)0xFFFFBEE6, (int32_t)0xFFFFFEAC, (int32_t)0xFFFDCF53, (int32_t)0xFFFFEBAB, (int32_t)0xFFFCB85A, (int32_t)0xFFFFD09C };
		static const int32_t output0[] = { (int32_t)0x0, (int32_t)0x0, (int32_t)0x790AF, (int32_t)0x7FFFFFFF, (int32_t)0x0, (int32_t)0x90FE, (int32_t)0x7FFFFFFF, (int32_t)0x0, (int32_t)0x25A7977, (int32_t)0x7FFFFFFF, (int32_t)0x7FFFFFFF, (int32_t)0x0, (int32_t)0x7FFFFFFF, (int32_t)0x7FFFFFFF, (int32_t)0x7FFFFFFF, (int32_t)0x0, (int32_t)0x0, (int32_t)0x7FFFFFFF, (int32_t)0x7FFFFFFF, (int32_t)0x9B9, (int32_t)0x396E19, (int32_t)0x0, (int32_t)0x0, (int32_t)0x0, (int32_t)0x0, (int32_t)0x7FFFFFFF, (int32_t)0x0, (int32_t)0x7FFFFFFF, (int32_t)0x0, (int32_t)0x0, (int32_t)0x0, (int32_t)0x7FFFFFFF, (int32_t)0x7FFFFFFF, (int32_t)0x7FFFFFFF, (int32_t)0x10020, (int32_t)0x103E1, (int32_t)0x10166, (int32_t)0x10009, (int32_t)0x11FB6, (int32_t)0x10007, (int32_t)0x10018, (int32_t)0x11AB0, (int32_t)0x10003, (int32_t)0x104EB, (int32_t)0x112E2, (int32_t)0x10083, (int32_t)0x312540, (int32_t)0x10050, (int32_t)0x1009E, (int32_t)0x704CE1, (int32_t)0x11369, (int32_t)0x14E83BC, (int32_t)0x10113, (int32_t)0x106ED, (int32_t)0x1007E, (int32_t)0x1BC3F, (int32_t)0x933CA, (int32_t)0x10006, (int32_t)0x10179, (int32_t)0x102B9, (int32_t)0x10131, (int32_t)0x21C3D, (int32_t)0x192A0, (int32_t)0x101DD, (int32_t)0x10F4E, (int32_t)0x2EC038, (int32_t)0x1003B, (int32_t)0x169E2B4, (int32_t)0xFCE6, (int32_t)0xFFE2, (int32_t)0x2331, (int32_t)0xFFF4, (int32_t)0xA9, (int32_t)0xFBF9, (int32_t)0xFFE0, (int32_t)0x4B17, (int32_t)0xFFF7, (int32_t)0x9FF9, (int32_t)0xC12B, (int32_t)0xB1B, (int32_t)0x5631, (int32_t)0xBEE4, (int32_t)0xFD1B, (int32_t)0xFF87, (int32_t)0xFE77, (int32_t)0xFFFE, (int32_t)0xFED7, (int32_t)0xFF95, (int32_t)0xFCCD, (int32_t)0xFE64, (int32_t)0xF43F, (int32_t)0xFFB9, (int32_t)0xD853, (int32_t)0xFFF0, (int32_t)0xD6A0, (int32_t)0xFF14, (int32_t)0x3818, (int32_t)0xF249, (int32_t)0x1A5B, (int32_t)0xE12B };
		for (int ndx = 0; ndx < 100; ndx++)
			Util::Check("Fixed32::Exp2", Fixed32::Exp2(input0[ndx]), output0[ndx], input0[ndx]);
	}

	// Fixed32.Exp2Fast()
	static void Fixed32_Exp2Fast()
	{
		static const int32_t input0[] = { (int32_t)0xFFA8683C, (int32_t)0x5D7B92, (int32_t)0x3FE661, (int32_t)0xFFB5F3ED, (int32_t)0xFFA9A66B, (int32_t)0xFFFB36E8, (int32_t)0x639CE5, (int32_t)0x4F1D84, (int32_t)0xFFDAFC1B, (int32_t)0xFFFE668E, (int32_t)0x1F897F, (int32_t)0xFFB470C0, (int32_t)0xFFE7EB04, (int32_t)0xC168, (int32_t)0x1B0DB5, (int32_t)0x22C53C, (int32_t)0xFFDDE792, (int32_t)0xFFF2AEF7, (int32_t)0xFF9EFD62, (int32_t)0x141155, (int32_t)0x62812, (int32_t)0x5ADF9E, (int32_t)0xFFFCD4D4, (int32_t)0xFFA665C7, (int32_t)0x1B4FB9, (int32_t)0x124C6D, (int32_t)0xFFF7A44F, (int32_t)0x3BD2D0, (int32_t)0x3E1060, (int32_t)0x44902D, (int32_t)0x60A404, (int32_t)0x4BE6F, (int32_t)0x4B2E60, (int32_t)0xFFA860FA, (int32_t)0x20F12, (int32_t)0x26028, (int32_t)0x430D1, (int32_t)0xCE, (int32_t)0x49, (int32_t)0x6B99E, (int32_t)0x2, (int32_t)0x651, (int32_t)0x2, (int32_t)0x2, (int32_t)0xB3BC, (int32_t)0x3AD, (int32_t)0x42218, (int32_t)0x1A, (int32_t)0x8D8, (int32_t)0x3, (int32_t)0x5, (int32_t)0x248, (int32_t)0x10D1, (int32_t)0x69, (int32_t)0xE, (int32_t)0x7, (int32_t)0x39D, (int32_t)0x85A5, (int32_t)0x41A, (int32_t)0x354, (int32_t)0x2, (int32_t)0x19, (int32_t)0x5, (int32_t)0x323, (int32_t)0x500, (int32_t)0xA, (int32_t)0x2D, (int32_t)0x71, (int32_t)0xFFFFE937, (int32_t)0xFFFF9719, (int32_t)0xFFFF9EEE, (int32_t)0xFFF9A656, (int32_t)0xFFFFFFF3, (int32_t)0xFFFFFFFD, (int32_t)0xFFFFF45E, (int32_t)0xFFFFFFFE, (int32_t)0xFFFC09AD, (int32_t)0xFFFFFCD3, (int32_t)0xFFFFFFC9, (int32_t)0xFFFFFFF3, (int32_t)0xFFFFDD6B, (int32_t)0xFFFFFFCE, (int32_t)0xFFFFFFD3, (int32_t)0xFFFF702B, (int32_t)0xFFFF79D2, (int32_t)0xFFFFF8EB, (int32_t)0xFFFC67EC, (int32_t)0xFFFFF5EB, (int32_t)0xFFFCF031, (int32_t)0xFFFF79B7, (int32_t)0xFFFFFEB0, (int32_t)0xFFFFFFF0, (int32_t)0xFFFE07BD, (int32_t)0xFFFF2409, (int32_t)0xFFFAA3D1, (int32_t)0xFFFEE6C0, (int32_t)0xFFFFFDDD, (int32_t)0xFFFFF6FE, (int32_t)0xFFFFFB67, (int32_t)0xFFFFDF36 };
		static const int32_t output0[] = { (int32_t)0x0, (int32_t)0x7FFFFFFF, (int32_t)0x7FFFFFFF, (int32_t)0x0, (int32_t)0x0, (int32_t)0x948, (int32_t)0x7FFFFFFF, (int32_t)0x7FFFFFFF, (int32_t)0x0, (int32_t)0x547B, (int32_t)0x7FFFFFFF, (int32_t)0x0, (int32_t)0x0, (int32_t)0x1B02E, (int32_t)0x7FFFFFFF, (int32_t)0x7FFFFFFF, (int32_t)0x0, (int32_t)0x6, (int32_t)0x0, (int32_t)0x7FFFFFFF, (int32_t)0x475593, (int32_t)0x7FFFFFFF, (int32_t)0x1C78, (int32_t)0x0, (int32_t)0x7FFFFFFF, (int32_t)0x7FFFFFFF, (int32_t)0xC7, (int32_t)0x7FFFFFFF, (int32_t)0x7FFFFFFF, (int32_t)0x7FFFFFFF, (int32_t)0x7FFFFFFF, (int32_t)0x1ACB75, (int32_t)0x7FFFFFFF, (int32_t)0x0, (int32_t)0x42AA4, (int32_t)0x53087, (int32_t)0x1242CD, (int32_t)0x1008E, (int32_t)0x10032, (int32_t)0x69CA53, (int32_t)0x10001, (int32_t)0x1046A, (int32_t)0x10001, (int32_t)0x10001, (int32_t)0x1A079, (int32_t)0x1028F, (int32_t)0x118C1B, (int32_t)0x10012, (int32_t)0x10634, (int32_t)0x10002, (int32_t)0x10003, (int32_t)0x10195, (int32_t)0x10BEC, (int32_t)0x10048, (int32_t)0x10009, (int32_t)0x10004, (int32_t)0x10284, (int32_t)0x16F9D, (int32_t)0x102DB, (int32_t)0x10251, (int32_t)0x10001, (int32_t)0x10011, (int32_t)0x10003, (int32_t)0x1022E, (int32_t)0x1037D, (int32_t)0x10006, (int32_t)0x1001F, (int32_t)0x1004E, (int32_t)0xF0AF, (int32_t)0xC0B3, (int32_t)0xC4D4, (int32_t)0x323, (int32_t)0xFFF6, (int32_t)0xFFFD, (int32_t)0xF810, (int32_t)0xFFFE, (int32_t)0x106C, (int32_t)0xFDCE, (int32_t)0xFFD9, (int32_t)0xFFF6, (int32_t)0xE91E, (int32_t)0xFFDD, (int32_t)0xFFE0, (int32_t)0xAD6C, (int32_t)0xB204, (int32_t)0xFB23, (int32_t)0x1533, (int32_t)0xF91B, (int32_t)0x1EA8, (int32_t)0xB1F6, (int32_t)0xFF17, (int32_t)0xFFF4, (int32_t)0x415A, (int32_t)0x8D1E, (int32_t)0x63B, (int32_t)0x778A, (int32_t)0xFE85, (int32_t)0xF9D5, (int32_t)0xFCD5, (int32_t)0xEA40 };
		for (int ndx = 0; ndx < 100; ndx++)
			Util::Check("Fixed32::Exp2Fast", Fixed32::Exp2Fast(input0[ndx]), output0[ndx], input0[ndx]);
	}

	// Fixed32.Exp2Fastest()
	static void Fixed32_Exp2Fastest()
	{
		static const int32_t input0[] = { (int32_t)0xFFCBA846, (int32_t)0x168BED, (int32_t)0xF0E45, (int32_t)0x3D0C87, (int32_t)0xFFD6F017, (int32_t)0xFFB22638, (int32_t)0xFFD76B11, (int32_t)0xB9F13, (int32_t)0x2F515E, (int32_t)0xFFBA4F19, (int32_t)0xFFC01CF9, (int32_t)0xFF9E070F, (int32_t)0x145DF, (int32_t)0xFFE03F20, (int32_t)0x3F2387, (int32_t)0x34A191, (int32_t)0x5AB42D, (int32_t)0xFFDA646C, (int32_t)0x28DB45, (int32_t)0x5E852A, (int32_t)0xFFC6E894, (int32_t)0x24745D, (int32_t)0xFFEE2DC9, (int32_t)0x481135, (int32_t)0xFFE0F9CC, (int32_t)0xFAA81, (int32_t)0xFFAE6F41, (int32_t)0xFFE0A231, (int32_t)0xFFAF0EF6, (int32_t)0x31D6BF, (int32_t)0xC5050, (int32_t)0xFFE66399, (int32_t)0x5E2D16, (int32_t)0x14DAC2, (int32_t)0x35770, (int32_t)0x3, (int32_t)0x2BAA, (int32_t)0x217, (int32_t)0x368, (int32_t)0x20E0, (int32_t)0x29, (int32_t)0xC4, (int32_t)0x11E10, (int32_t)0x7262, (int32_t)0xD8E, (int32_t)0x127, (int32_t)0x211C, (int32_t)0x69D, (int32_t)0x8ED02, (int32_t)0x15, (int32_t)0x1FB86, (int32_t)0xA, (int32_t)0x18140, (int32_t)0x684, (int32_t)0x226, (int32_t)0x91B, (int32_t)0x19, (int32_t)0x448D, (int32_t)0x2B4, (int32_t)0x45CB, (int32_t)0x2, (int32_t)0x591F5, (int32_t)0x2C9, (int32_t)0x8854F, (int32_t)0xE05, (int32_t)0xE144, (int32_t)0x3, (int32_t)0x2E24D, (int32_t)0xFFFFFE38, (int32_t)0xFFFF7A9B, (int32_t)0xFFFFFFFB, (int32_t)0xFFFFFAB4, (int32_t)0xFFFECB99, (int32_t)0xFFFFFFFD, (int32_t)0xFFFFA93D, (int32_t)0xFFFE7312, (int32_t)0xFFFE6ADC, (int32_t)0xFFFFDFB9, (int32_t)0xFFFFFFC0, (int32_t)0xFFFA9A21, (int32_t)0xFFFC5903, (int32_t)0xFFFFF642, (int32_t)0xFFFFFF51, (int32_t)0xFFFCE8B3, (int32_t)0xFFFDE9CA, (int32_t)0xFFFFFE21, (int32_t)0xFFFFFA28, (int32_t)0xFFFFFDE2, (int32_t)0xFFFFFFF1, (int32_t)0xFFFFFF45, (int32_t)0xFFFE939B, (int32_t)0xFFF9A156, (int32_t)0xFFF842D3, (int32_t)0xFFFF82FF, (int32_t)0xFFFFE609, (int32_t)0xFFFFFFB6, (int32_t)0xFFFD3E9B, (int32_t)0xFFFEB047, (int32_t)0xFFFFFFF0, (int32_t)0xFFFF65F3 };
		static const int32_t output0[] = { (int32_t)0x0, (int32_t)0x7FFFFFFF, (int32_t)0x7FFFFFFF, (int32_t)0x7FFFFFFF, (int32_t)0x0, (int32_t)0x0, (int32_t)0x0, (int32_t)0xC4E688B, (int32_t)0x7FFFFFFF, (int32_t)0x0, (int32_t)0x0, (int32_t)0x0, (int32_t)0x26AA0, (int32_t)0x0, (int32_t)0x7FFFFFFF, (int32_t)0x7FFFFFFF, (int32_t)0x7FFFFFFF, (int32_t)0x0, (int32_t)0x7FFFFFFF, (int32_t)0x7FFFFFFF, (int32_t)0x0, (int32_t)0x7FFFFFFF, (int32_t)0x0, (int32_t)0x7FFFFFFF, (int32_t)0x0, (int32_t)0x7FFFFFFF, (int32_t)0x0, (int32_t)0x0, (int32_t)0x0, (int32_t)0x7FFFFFFF, (int32_t)0x13E2C023, (int32_t)0x0, (int32_t)0x7FFFFFFF, (int32_t)0x7FFFFFFF, (int32_t)0xA22E7, (int32_t)0x10002, (int32_t)0x12026, (int32_t)0x10175, (int32_t)0x10261, (int32_t)0x117DC, (int32_t)0x1001C, (int32_t)0x10088, (int32_t)0x22B79, (int32_t)0x15CE5, (int32_t)0x10997, (int32_t)0x100CD, (int32_t)0x11809, (int32_t)0x104A3, (int32_t)0x1E660D8, (int32_t)0x1000E, (int32_t)0x3F3B0, (int32_t)0x10006, (int32_t)0x2D675, (int32_t)0x10491, (int32_t)0x1017F, (int32_t)0x10668, (int32_t)0x10011, (int32_t)0x13435, (int32_t)0x101E2, (int32_t)0x1353F, (int32_t)0x10001, (int32_t)0x2F818A, (int32_t)0x101F1, (int32_t)0x16F3ECD, (int32_t)0x109ED, (int32_t)0x1D72A, (int32_t)0x10002, (int32_t)0x761F3, (int32_t)0xFEC5, (int32_t)0xB260, (int32_t)0xFFFC, (int32_t)0xFC5C, (int32_t)0x6F13, (int32_t)0xFFFD, (int32_t)0xCA66, (int32_t)0x5763, (int32_t)0x5577, (int32_t)0xEA99, (int32_t)0xFFD3, (int32_t)0x612, (int32_t)0x145B, (int32_t)0xF959, (int32_t)0xFF87, (int32_t)0x1E0B, (int32_t)0x3C45, (int32_t)0xFEB5, (int32_t)0xFBFD, (int32_t)0xFE8A, (int32_t)0xFFF5, (int32_t)0xFF7E, (int32_t)0x5F6F, (int32_t)0x318, (int32_t)0x132, (int32_t)0xB679, (int32_t)0xEEA4, (int32_t)0xFFCC, (int32_t)0x25E9, (int32_t)0x6726, (int32_t)0xFFF4, (int32_t)0xA8AD };
		for (int ndx = 0; ndx < 100; ndx++)
			Util::Check("Fixed32::Exp2Fastest", Fixed32::Exp2Fastest(input0[ndx]), output0[ndx], input0[ndx]);
	}

	// Fixed64.Log()
	static void Fixed64_Log()
	{
		static const int64_t input0[] = { (int64_t)0x3E3096LL, (int64_t)0x72E1A5A9AAC1LL, (int64_t)0x54LL, (int64_t)0x3A6ELL, (int64_t)0x57LL, (int64_t)0x4D5699LL, (int64_t)0x540ADLL, (int64_t)0x38CA6BEF78C22LL, (int64_t)0x291896CD14BE1LL, (int64_t)0x17042E2C1DLL, (int64_t)0xB1A5C34F9DBLL, (int64_t)0x3A4341324LL, (int64_t)0xA8D68C0LL, (int64_t)0xBBC2BC5FLL, (int64_t)0x28442E188487CLL, (int64_t)0x14605D6ALL, (int64_t)0x27BA4EE31ALL, (int64_t)0x56014F5E0LL, (int64_t)0x74LL, (int64_t)0x389LL, (int64_t)0x38CF8LL, (int64_t)0x21C04CDC02LL, (int64_t)0x3B46CBBF2BD1LL, (int64_t)0x14LL, (int64_t)0x2227A1700A79420LL, (int64_t)0xA8LL, (int64_t)0x21C809590LL, (int64_t)0x15LL, (int64_t)0x287C1BDLL, (int64_t)0xDE1DFD5LL, (int64_t)0x924F4C2209F0680LL, (int64_t)0x1LL, (int64_t)0x54921AC4LL, (int64_t)0x644168AALL, (int64_t)0x20B3D59764LL, (int64_t)0x4B8LL, (int64_t)0x151739B6LL, (int64_t)0xF9LL, (int64_t)0x3876EF4B94A73LL, (int64_t)0x10E08B454LL, (int64_t)0x149LL, (int64_t)0x164C1F6F048FLL, (int64_t)0xFF51713B39LL, (int64_t)0xB701071B7LL, (int64_t)0x1A0B6408814LL, (int64_t)0x62394LL, (int64_t)0x1517A4351LL, (int64_t)0x24A78D73LL, (int64_t)0xF38173F3573AD80LL, (int64_t)0x970LL, (int64_t)0x1001801D4LL, (int64_t)0xFFEB6C62LL, (int64_t)0x1001E0608LL, (int64_t)0xFFBF5C9BLL, (int64_t)0xFFFECEAALL, (int64_t)0x100218D04LL, (int64_t)0xFFC07AE9LL, (int64_t)0xFFC2D729LL, (int64_t)0xFFE62093LL, (int64_t)0x1003F89CELL, (int64_t)0x1002AACB0LL, (int64_t)0xFFDC0140LL, (int64_t)0xFFF233D5LL, (int64_t)0xFFEC0691LL, (int64_t)0x100119556LL, (int64_t)0x100186687LL, (int64_t)0xFFC5C6E0LL, (int64_t)0x1003AA9B5LL, (int64_t)0x10035F180LL, (int64_t)0x1001113FALL, (int64_t)0x100416E49LL, (int64_t)0xFFFC7A71LL, (int64_t)0x10020F84BLL, (int64_t)0x1000C3633LL, (int64_t)0xFFC18BBBLL, (int64_t)0x10009299DLL, (int64_t)0x1003B5BCALL, (int64_t)0xFFD46056LL, (int64_t)0xFFF49D23LL, (int64_t)0x1000FC61FLL, (int64_t)0x1000CA406LL, (int64_t)0xFFC6A9E2LL, (int64_t)0xFFCC271CLL, (int64_t)0xFFDC4040LL, (int64_t)0x10022B3A3LL, (int64_t)0x1000E94DELL, (int64_t)0xFFE3DD12LL, (int64_t)0xFFFDCDF9LL, (int64_t)0xFFBEE0DFLL, (int64_t)0x1002CB1AELL, (int64_t)0xFFD21319LL, (int64_t)0xFFF6166DLL, (int64_t)0x1002AA8CCLL, (int64_t)0x10029C2EDLL, (int64_t)0x100191769LL, (int64_t)0x10035A441LL, (int64_t)0xFFE8B256LL, (int64_t)0xFFE56651LL, (int64_t)0x100397612LL, (int64_t)0x1003D9DB5LL };
		static const int64_t output0[] = { (int64_t)0xFFFFFFF90A32B00FLL, (int64_t)0xA4A01048ALL, (int64_t)0xFFFFFFEE40070396LL, (int64_t)0xFFFFFFF36EAAAC87LL, (int64_t)0xFFFFFFEE4902C23ELL, (int64_t)0xFFFFFFF9420169AALL, (int64_t)0xFFFFFFF6918114DELL, (int64_t)0xC5B6D749BLL, (int64_t)0xC089F2267LL, (int64_t)0x322DE42F4LL, (int64_t)0x7F3CFD54DLL, (int64_t)0x14AD8FF1BLL, (int64_t)0xFFFFFFFCCFA91881LL, (int64_t)0xFFFFFFFFB0A33C15LL, (int64_t)0xC03666EEFLL, (int64_t)0xFFFFFFFD781D9160LL, (int64_t)0x3AE9AD9EBLL, (int64_t)0x1AE8BA11ELL, (int64_t)0xFFFFFFEE92A84A82LL, (int64_t)0xFFFFFFF0A091D423LL, (int64_t)0xFFFFFFF62D415923LL, (int64_t)0x384DE2D83LL, (int64_t)0x9A09CB50BLL, (int64_t)0xFFFFFFECD0A5508CLL, (int64_t)0x1164D3274BLL, (int64_t)0xFFFFFFEEF1791B8DLL, (int64_t)0xBF5074C7LL, (int64_t)0xFFFFFFECDD22D3A8LL, (int64_t)0xFFFFFFFB6216CD07LL, (int64_t)0xFFFFFFFD15DF5095LL, (int64_t)0x12D9426911LL, (int64_t)0xFFFFFFE9D1BD0120LL, (int64_t)0xFFFFFFFEE47506A2LL, (int64_t)0xFFFFFFFF1002EAD6LL, (int64_t)0x37CC99433LL, (int64_t)0xFFFFFFF0EA7FBC8ALL, (int64_t)0xFFFFFFFD80EF97C0LL, (int64_t)0xFFFFFFEF5634CC25LL, (int64_t)0xC59F407C7LL, (int64_t)0xDA9AF5CLL, (int64_t)0xFFFFFFEF9D8771F0LL, (int64_t)0x8A64F2AA8LL, (int64_t)0x58AE1F559LL, (int64_t)0x26FD9F295LL, (int64_t)0x6084B0C60LL, (int64_t)0xFFFFFFF6B96BEFDALL, (int64_t)0x46BD0438LL, (int64_t)0xFFFFFFFE0E6D880BLL, (int64_t)0x135BAB6235LL, (int64_t)0xFFFFFFF19BF1D481LL, (int64_t)0x1800B0LL, (int64_t)0xFFFFFFFFFFEB6B91LL, (int64_t)0x1E0444LL, (int64_t)0xFFFFFFFFFFBF5475LL, (int64_t)0xFFFFFFFFFFFECEADLL, (int64_t)0x218AD0LL, (int64_t)0xFFFFFFFFFFC07309LL, (int64_t)0xFFFFFFFFFFC2CFDDLL, (int64_t)0xFFFFFFFFFFE61F41LL, (int64_t)0x3F81E8LL, (int64_t)0x2AA920LL, (int64_t)0xFFFFFFFFFFDBFEB9LL, (int64_t)0xFFFFFFFFFFF23375LL, (int64_t)0xFFFFFFFFFFEC05D1LL, (int64_t)0x1194B8LL, (int64_t)0x186558LL, (int64_t)0xFFFFFFFFFFC5C045LL, (int64_t)0x3AA2FCLL, (int64_t)0x35EBD0LL, (int64_t)0x111364LL, (int64_t)0x4165ECLL, (int64_t)0xFFFFFFFFFFFC7A71LL, (int64_t)0x20F628LL, (int64_t)0xC35E4LL, (int64_t)0xFFFFFFFFFFC1841DLL, (int64_t)0x92970LL, (int64_t)0x3B54E4LL, (int64_t)0xFFFFFFFFFFD45C9DLL, (int64_t)0xFFFFFFFFFFF49CE9LL, (int64_t)0xFC59CLL, (int64_t)0xCA3B4LL, (int64_t)0xFFFFFFFFFFC6A375LL, (int64_t)0xFFFFFFFFFFCC21E1LL, (int64_t)0xFFFFFFFFFFDC3DC5LL, (int64_t)0x22B144LL, (int64_t)0xE9470LL, (int64_t)0xFFFFFFFFFFE3DB8DLL, (int64_t)0xFFFFFFFFFFFDCDF9LL, (int64_t)0xFFFFFFFFFFBED895LL, (int64_t)0x2CADC4LL, (int64_t)0xFFFFFFFFFFD20EFDLL, (int64_t)0xFFFFFFFFFFF6163DLL, (int64_t)0x2AA53CLL, (int64_t)0x29BF84LL, (int64_t)0x19162CLL, (int64_t)0x359EA0LL, (int64_t)0xFFFFFFFFFFE8B14DLL, (int64_t)0xFFFFFFFFFFE564F1LL, (int64_t)0x396F9CLL, (int64_t)0x3D9648LL };
		for (int ndx = 0; ndx < 100; ndx++)
			Util::Check("Fixed64::Log", Fixed64::Log(input0[ndx]), output0[ndx], input0[ndx]);
	}

	// Fixed64.LogFast()
	static void Fixed64_LogFast()
	{
		static const int64_t input0[] = { (int64_t)0x8E93LL, (int64_t)0xC864A262FLL, (int64_t)0x66257E239LL, (int64_t)0x1C8B06LL, (int64_t)0x9C4LL, (int64_t)0x2070LL, (int64_t)0x1985BB54F0LL, (int64_t)0x157LL, (int64_t)0x1F408A00081DF600LL, (int64_t)0x22585133D150500LL, (int64_t)0x37C141A8D4769LL, (int64_t)0x17EEF448CFDF1FLL, (int64_t)0x5701C78FCBLL, (int64_t)0x4EB8913821DLL, (int64_t)0x10B3026LL, (int64_t)0x9EFB4619B5A3LL, (int64_t)0xB5LL, (int64_t)0x53BLL, (int64_t)0x11A12149BFLL, (int64_t)0x2LL, (int64_t)0x1CE08A0LL, (int64_t)0xB33294ACELL, (int64_t)0x5E133852BA2DB40LL, (int64_t)0x14LL, (int64_t)0x380C56D9LL, (int64_t)0xC5419CBC8LL, (int64_t)0x11E6410B59FLL, (int64_t)0x396E8D8406A23E0LL, (int64_t)0xF0685B2F4C00D8LL, (int64_t)0x87LL, (int64_t)0xA423LL, (int64_t)0x191CB4411D4LL, (int64_t)0x48FDLL, (int64_t)0xB2B7C3BLL, (int64_t)0x9FD58DLL, (int64_t)0x2LL, (int64_t)0x93D31C49LL, (int64_t)0xC8463DE75B09LL, (int64_t)0x7LL, (int64_t)0x54CE98AE0LL, (int64_t)0x2LL, (int64_t)0x26ELL, (int64_t)0x80FDAD54LL, (int64_t)0x22LL, (int64_t)0x5LL, (int64_t)0x6832DLL, (int64_t)0x3B06F144F23A4LL, (int64_t)0x1DALL, (int64_t)0x681525CLL, (int64_t)0x2F7B8DC7B5A0C80LL, (int64_t)0x10025C490LL, (int64_t)0xFFD2BF92LL, (int64_t)0x1001C11F8LL, (int64_t)0x100367521LL, (int64_t)0x100090C9ELL, (int64_t)0x10016874FLL, (int64_t)0x100111301LL, (int64_t)0xFFFE7E36LL, (int64_t)0x1002E8C95LL, (int64_t)0x1000E0EB5LL, (int64_t)0x100081FA1LL, (int64_t)0x10014C068LL, (int64_t)0xFFDD1F65LL, (int64_t)0x100305DD2LL, (int64_t)0x10016AEE0LL, (int64_t)0xFFD1CAEFLL, (int64_t)0x1000F9846LL, (int64_t)0xFFD59E47LL, (int64_t)0xFFE68EB1LL, (int64_t)0xFFEE73E5LL, (int64_t)0xFFE07C5ALL, (int64_t)0xFFECA477LL, (int64_t)0xFFCE76B5LL, (int64_t)0xFFC22034LL, (int64_t)0xFFBED8BBLL, (int64_t)0xFFDF5B89LL, (int64_t)0xFFC7EA05LL, (int64_t)0x1002F7837LL, (int64_t)0xFFC2BCB8LL, (int64_t)0xFFD5EC1ALL, (int64_t)0x100235E16LL, (int64_t)0x100008B39LL, (int64_t)0x100004491LL, (int64_t)0x1003E05F4LL, (int64_t)0xFFE9265FLL, (int64_t)0xFFCA9EF3LL, (int64_t)0x10039D54BLL, (int64_t)0xFFE7807DLL, (int64_t)0x10031007BLL, (int64_t)0x1001AB754LL, (int64_t)0xFFF1B67ELL, (int64_t)0xFFC06022LL, (int64_t)0x10036268DLL, (int64_t)0xFFF7D335LL, (int64_t)0x100409479LL, (int64_t)0xFFEDCE89LL, (int64_t)0x1003676C4LL, (int64_t)0x1001125C8LL, (int64_t)0xFFF4069CLL, (int64_t)0x10033249BLL };
		static const int64_t output0[] = { (int64_t)0xFFFFFFF453073C61LL, (int64_t)0x28716D851LL, (int64_t)0x1DA93DF46LL, (int64_t)0xFFFFFFF842D4C1FCLL, (int64_t)0xFFFFFFF1A4B1AAF1LL, (int64_t)0xFFFFFFF2D8022823LL, (int64_t)0x33D538B88LL, (int64_t)0xFFFFFFEFA83280F8LL, (int64_t)0x1413DED900LL, (int64_t)0x11663F0AF3LL, (int64_t)0xC56B71C57LL, (int64_t)0xE44005AA0LL, (int64_t)0x4774AF98ALL, (int64_t)0x723749886LL, (int64_t)0xFFFFFFFA7F629E5CLL, (int64_t)0xA9D2CD301LL, (int64_t)0xFFFFFFEF048DB535LL, (int64_t)0xFFFFFFF104DB2382LL, (int64_t)0x2DE9BF624LL, (int64_t)0xFFFFFFEA832F1917LL, (int64_t)0xFFFFFFFB0B97AA48LL, (int64_t)0x26A786F1DLL, (int64_t)0x1268338EA6LL, (int64_t)0xFFFFFFECD0A55088LL, (int64_t)0xFFFFFFFE7B251507LL, (int64_t)0x2830CDFCDLL, (int64_t)0x5A8488888LL, (int64_t)0x11E9DDED87LL, (int64_t)0x10929BDDC1LL, (int64_t)0xFFFFFFEEB97D1F69LL, (int64_t)0xFFFFFFF477153569LL, (int64_t)0x5FEF5E668LL, (int64_t)0xFFFFFFF3A79EC3B6LL, (int64_t)0xFFFFFFFCDE37FE69LL, (int64_t)0xFFFFFFF9FBD9227DLL, (int64_t)0xFFFFFFEA832F1917LL, (int64_t)0xFFFFFFFF736ADBB1LL, (int64_t)0xAD8492179LL, (int64_t)0xFFFFFFEBC3E42C02LL, (int64_t)0x1AAF44442LL, (int64_t)0xFFFFFFEA832F1917LL, (int64_t)0xFFFFFFF040922893LL, (int64_t)0xFFFFFFFF50874E3DLL, (int64_t)0xFFFFFFED587C94FBLL, (int64_t)0xFFFFFFEB6DC1209ALL, (int64_t)0xFFFFFFF6C889E28ELL, (int64_t)0xC6550BB93LL, (int64_t)0xFFFFFFEFFB01E298LL, (int64_t)0xFFFFFFFC53D1B64ALL, (int64_t)0x11B92AAD63LL, (int64_t)0x25C1A0LL, (int64_t)0xFFFFFFFFFFD2BB81LL, (int64_t)0x1C1050LL, (int64_t)0x366F20LL, (int64_t)0x90C68LL, (int64_t)0x168634LL, (int64_t)0x11125CLL, (int64_t)0xFFFFFFFFFFFE7E31LL, (int64_t)0x2E8828LL, (int64_t)0xE0E40LL, (int64_t)0x81F74LL, (int64_t)0x14BF78LL, (int64_t)0xFFFFFFFFFFDD1CFDLL, (int64_t)0x30590CLL, (int64_t)0x16ADC4LL, (int64_t)0xFFFFFFFFFFD1C6B5LL, (int64_t)0xF97B8LL, (int64_t)0xFFFFFFFFFFD59AB5LL, (int64_t)0xFFFFFFFFFFE68D65LL, (int64_t)0xFFFFFFFFFFEE7345LL, (int64_t)0xFFFFFFFFFFE07A5DLL, (int64_t)0xFFFFFFFFFFECA3B5LL, (int64_t)0xFFFFFFFFFFCE71DDLL, (int64_t)0xFFFFFFFFFFC218A9LL, (int64_t)0xFFFFFFFFFFBED061LL, (int64_t)0xFFFFFFFFFFDF5969LL, (int64_t)0xFFFFFFFFFFC7E3D1LL, (int64_t)0x2F739CLL, (int64_t)0xFFFFFFFFFFC2B555LL, (int64_t)0xFFFFFFFFFFD5E899LL, (int64_t)0x235B7CLL, (int64_t)0x8B34LL, (int64_t)0x448CLL, (int64_t)0x3DFE34LL, (int64_t)0xFFFFFFFFFFE92551LL, (int64_t)0xFFFFFFFFFFCA9951LL, (int64_t)0x39CE88LL, (int64_t)0xFFFFFFFFFFE77F49LL, (int64_t)0x30FB98LL, (int64_t)0x1AB5D0LL, (int64_t)0xFFFFFFFFFFF1B611LL, (int64_t)0xFFFFFFFFFFC0582DLL, (int64_t)0x36209CLL, (int64_t)0xFFFFFFFFFFF7D309LL, (int64_t)0x408C14LL, (int64_t)0xFFFFFFFFFFEDCDDDLL, (int64_t)0x3670C4LL, (int64_t)0x112520LL, (int64_t)0xFFFFFFFFFFF4064DLL, (int64_t)0x331F48LL };
		for (int ndx = 0; ndx < 100; ndx++)
			Util::Check("Fixed64::LogFast", Fixed64::LogFast(input0[ndx]), output0[ndx], input0[ndx]);
	}

	// Fixed64.LogFastest()
	static void Fixed64_LogFastest()
	{
		static const int64_t input0[] = { (int64_t)0x4F71B0E4BEFLL, (int64_t)0x793ED7151DLL, (int64_t)0xF0A8E0F5501A0LL, (int64_t)0xFLL, (int64_t)0x2C2682AB248LL, (int64_t)0x81968BDLL, (int64_t)0x4LL, (int64_t)0x5E230903814LL, (int64_t)0x17F8CE7790C2120LL, (int64_t)0xD385ALL, (int64_t)0x24A767F301LL, (int64_t)0xC601757123BBLL, (int64_t)0x136B38F1LL, (int64_t)0x3C97B2255E4LL, (int64_t)0xF2CE48EE19DB7LL, (int64_t)0xCLL, (int64_t)0x338LL, (int64_t)0x120AELL, (int64_t)0x33492B2E9LL, (int64_t)0xFDCD2370FLL, (int64_t)0x1BAELL, (int64_t)0x7D07BLL, (int64_t)0x6D91BLL, (int64_t)0x282B1C1AD3LL, (int64_t)0x15F87E1CCC608300LL, (int64_t)0x9305LL, (int64_t)0x96FB5D2LL, (int64_t)0x56045175ABDLL, (int64_t)0x4LL, (int64_t)0xDAAD3B9EB6LL, (int64_t)0x1BED58LL, (int64_t)0xA2FDB89LL, (int64_t)0x11466CB0LL, (int64_t)0x1C5LL, (int64_t)0x6EEEAA20LL, (int64_t)0x1C3LL, (int64_t)0x291FA80C64DLL, (int64_t)0x8E7E206LL, (int64_t)0x756E0LL, (int64_t)0x91BC7E545F47D8LL, (int64_t)0xDLL, (int64_t)0xDF58LL, (int64_t)0x1CADCE5LL, (int64_t)0x581AF191FLL, (int64_t)0x57LL, (int64_t)0x62DAAB31F3LL, (int64_t)0x62BFD0D30LL, (int64_t)0x67D8LL, (int64_t)0x25645E21DELL, (int64_t)0x3E62244922AC0C0LL, (int64_t)0xFFD955CFLL, (int64_t)0x1001440C3LL, (int64_t)0xFFC9F702LL, (int64_t)0x1002B07E5LL, (int64_t)0x100181632LL, (int64_t)0xFFEFC9A1LL, (int64_t)0xFFE9067FLL, (int64_t)0xFFDD4500LL, (int64_t)0xFFCA24DDLL, (int64_t)0xFFF5F4EFLL, (int64_t)0x1004111CBLL, (int64_t)0xFFEC19FDLL, (int64_t)0x10013C807LL, (int64_t)0xFFE1FA11LL, (int64_t)0x1003F40B9LL, (int64_t)0xFFD343A3LL, (int64_t)0xFFE7B31ELL, (int64_t)0xFFE7900DLL, (int64_t)0xFFD5F812LL, (int64_t)0x100199006LL, (int64_t)0xFFF1A46DLL, (int64_t)0x1001C9543LL, (int64_t)0x1003BD151LL, (int64_t)0x100140A29LL, (int64_t)0x10002A18FLL, (int64_t)0x1003B296FLL, (int64_t)0x100351A5BLL, (int64_t)0x1002059E5LL, (int64_t)0xFFFFB338LL, (int64_t)0xFFEC95AFLL, (int64_t)0x1001870BCLL, (int64_t)0xFFD8F3FELL, (int64_t)0xFFC97378LL, (int64_t)0xFFCB9B5DLL, (int64_t)0xFFF79F03LL, (int64_t)0x10017AB46LL, (int64_t)0xFFECBD4ELL, (int64_t)0x1001058F3LL, (int64_t)0xFFFA828BLL, (int64_t)0xFFCE31FDLL, (int64_t)0x1002991E3LL, (int64_t)0xFFF70B60LL, (int64_t)0xFFEC2684LL, (int64_t)0x10031E6DDLL, (int64_t)0x10033963FLL, (int64_t)0x1001BB8D7LL, (int64_t)0x1000D90FCLL, (int64_t)0xFFCF6D8BLL, (int64_t)0x1000990E3LL, (int64_t)0x1003A5B3FLL };
		static const int64_t output0[] = { (int64_t)0x725CC7E16LL, (int64_t)0x4CC3E72BALL, (int64_t)0xDCD190BB9LL, (int64_t)0xFFFFFFEC8700B901LL, (int64_t)0x68F67034BLL, (int64_t)0xFFFFFFFC8BED8D85LL, (int64_t)0xFFFFFFEB34A1310ELL, (int64_t)0x7513AC726LL, (int64_t)0x110A2FCD30LL, (int64_t)0xFFFFFFF77DCB5211LL, (int64_t)0x399FE6B2BLL, (int64_t)0xAD55CB23DLL, (int64_t)0xFFFFFFFD6BCBECE4LL, (int64_t)0x6E0741D5FLL, (int64_t)0xDCF5EAC69LL, (int64_t)0xFFFFFFEC4DDD9FEDLL, (int64_t)0xFFFFFFF0889004D3LL, (int64_t)0xFFFFFFF507A1142CLL, (int64_t)0x12A3105EFLL, (int64_t)0x2C392FD29LL, (int64_t)0xFFFFFFF2AF681FECLL, (int64_t)0xFFFFFFF6F7324132LL, (int64_t)0xFFFFFFF6D568699ELL, (int64_t)0x3B16E1E8FLL, (int64_t)0x13B9A7C930LL, (int64_t)0xFFFFFFF45AE49F49LL, (int64_t)0xFFFFFFFCB30CA219LL, (int64_t)0x73A242E6ALL, (int64_t)0xFFFFFFEB34A1310ELL, (int64_t)0x5633A2B65LL, (int64_t)0xFFFFFFF83D404460LL, (int64_t)0xFFFFFFFCC6A367F9LL, (int64_t)0xFFFFFFFD4DD9491CLL, (int64_t)0xFFFFFFEFEF697A40LL, (int64_t)0xFFFFFFFF29EC1DF6LL, (int64_t)0xFFFFFFEFEE4773C8LL, (int64_t)0x67D3A499FLL, (int64_t)0xFFFFFFFCA43BE341LL, (int64_t)0xFFFFFFF6E72582BELL, (int64_t)0x101279CC2DLL, (int64_t)0xFFFFFFEC625CEF01LL, (int64_t)0xFFFFFFF4C5F04E59LL, (int64_t)0xFFFFFFFB09D5C908LL, (int64_t)0x1B4B70E16LL, (int64_t)0xFFFFFFEE49015C5ELL, (int64_t)0x497F755E2LL, (int64_t)0x1D1E95D4ELL, (int64_t)0xFFFFFFF401E16276LL, (int64_t)0x39F191713LL, (int64_t)0x11FF09C8B7LL, (int64_t)0xFFFFFFFFFFD95001LL, (int64_t)0x143F2CLL, (int64_t)0xFFFFFFFFFFC9ED55LL, (int64_t)0x2B02ACLL, (int64_t)0x181424LL, (int64_t)0xFFFFFFFFFFEFC7E1LL, (int64_t)0xFFFFFFFFFFE903B9LL, (int64_t)0xFFFFFFFFFFDD400DLL, (int64_t)0xFFFFFFFFFFCA1B41LL, (int64_t)0xFFFFFFFFFFF5F3F5LL, (int64_t)0x41071CLL, (int64_t)0xFFFFFFFFFFEC17B5LL, (int64_t)0x13C680LL, (int64_t)0xFFFFFFFFFFE1F60DLL, (int64_t)0x3F3694LL, (int64_t)0xFFFFFFFFFFD33C6DLL, (int64_t)0xFFFFFFFFFFE7B01DLL, (int64_t)0xFFFFFFFFFFE78D05LL, (int64_t)0xFFFFFFFFFFD5F185LL, (int64_t)0x198DC4LL, (int64_t)0xFFFFFFFFFFF1A2E9LL, (int64_t)0x1C9294LL, (int64_t)0x3BC81CLL, (int64_t)0x14089CLL, (int64_t)0x2A16CLL, (int64_t)0x3B2068LL, (int64_t)0x3512DCLL, (int64_t)0x2056A0LL, (int64_t)0xFFFFFFFFFFFFB331LL, (int64_t)0xFFFFFFFFFFEC9375LL, (int64_t)0x186EA4LL, (int64_t)0xFFFFFFFFFFD8EE1DLL, (int64_t)0xFFFFFFFFFFC969A9LL, (int64_t)0xFFFFFFFFFFCB9229LL, (int64_t)0xFFFFFFFFFFF79E39LL, (int64_t)0x17A944LL, (int64_t)0xFFFFFFFFFFECBB1DLL, (int64_t)0x1057C8LL, (int64_t)0xFFFFFFFFFFFA820DLL, (int64_t)0xFFFFFFFFFFCE2979LL, (int64_t)0x298CF0LL, (int64_t)0xFFFFFFFFFFF70A89LL, (int64_t)0xFFFFFFFFFFEC243DLL, (int64_t)0x31E024LL, (int64_t)0x338F20LL, (int64_t)0x1BB648LL, (int64_t)0xD901CLL, (int64_t)0xFFFFFFFFFFCF655DLL, (int64_t)0x99054LL, (int64_t)0x3A526CLL };
		for (int ndx = 0; ndx < 100; ndx++)
			Util::Check("Fixed64::LogFastest", Fixed64::LogFastest(input0[ndx]), output0[ndx], input0[ndx]);
	}

	// Fixed32.Log()
	static void Fixed32_Log()
	{
		static const int32_t input0[] = { (int32_t)0x3D4, (int32_t)0x111, (int32_t)0x6, (int32_t)0x982D263, (int32_t)0x1B80E, (int32_t)0x8B1C, (int32_t)0x261894, (int32_t)0x30B9, (int32_t)0x3D3, (int32_t)0x4BD15A, (int32_t)0x65B2, (int32_t)0x36304, (int32_t)0x534B05, (int32_t)0x5308FE, (int32_t)0x52C861, (int32_t)0x105A39D, (int32_t)0x197, (int32_t)0x1F66B, (int32_t)0x2501E0A, (int32_t)0x35E, (int32_t)0x148BC39, (int32_t)0x202259, (int32_t)0x37FBAB8, (int32_t)0x6, (int32_t)0x580B77D, (int32_t)0x1BF2110C, (int32_t)0xD22, (int32_t)0x9, (int32_t)0x8223B8, (int32_t)0x15DABD3, (int32_t)0x878, (int32_t)0xB466E6, (int32_t)0x41, (int32_t)0x209FE, (int32_t)0x4, (int32_t)0x3862, (int32_t)0x24, (int32_t)0x48, (int32_t)0x22FE1, (int32_t)0x172765A4, (int32_t)0x2CFDBB3E, (int32_t)0xC748291, (int32_t)0x48E, (int32_t)0x422AD7, (int32_t)0xE1455, (int32_t)0xF5, (int32_t)0x23659E, (int32_t)0x6AD48, (int32_t)0x24, (int32_t)0xE, (int32_t)0xFFF9, (int32_t)0xFFC5, (int32_t)0xFFE5, (int32_t)0xFFE2, (int32_t)0xFFD0, (int32_t)0x1000F, (int32_t)0xFFF1, (int32_t)0x10041, (int32_t)0xFFC2, (int32_t)0x1000B, (int32_t)0xFFCD, (int32_t)0x10010, (int32_t)0x10016, (int32_t)0xFFFF, (int32_t)0xFFF0, (int32_t)0x10019, (int32_t)0xFFF3, (int32_t)0xFFD6, (int32_t)0x10019, (int32_t)0xFFE5, (int32_t)0x10013, (int32_t)0xFFC9, (int32_t)0x10040, (int32_t)0x10032, (int32_t)0xFFE8, (int32_t)0x10032, (int32_t)0xFFEF, (int32_t)0xFFCF, (int32_t)0xFFF4, (int32_t)0x10012, (int32_t)0xFFE1, (int32_t)0x10021, (int32_t)0x10038, (int32_t)0x10014, (int32_t)0xFFED, (int32_t)0xFFE5, (int32_t)0xFFFD, (int32_t)0x10034, (int32_t)0xFFF4, (int32_t)0xFFF6, (int32_t)0xFFC5, (int32_t)0xFFD1, (int32_t)0xFFD2, (int32_t)0x1003D, (int32_t)0x1002B, (int32_t)0xFFED, (int32_t)0xFFDE, (int32_t)0x10029, (int32_t)0xFFEB, (int32_t)0x1003B };
		static const int32_t output0[] = { (int32_t)0xFFFBCC15, (int32_t)0xFFFA84E5, (int32_t)0xFFF6B390, (int32_t)0x7CC30, (int32_t)0x8AAE, (int32_t)0xFFFF63DC, (int32_t)0x3A3DD, (int32_t)0xFFFE5749, (int32_t)0xFFFBCBD2, (int32_t)0x4540D, (int32_t)0xFFFF13A9, (int32_t)0x13849, (int32_t)0x46C1F, (int32_t)0x46B54, (int32_t)0x46A8C, (int32_t)0x59123, (int32_t)0xFFFAEB20, (int32_t)0xAC9B, (int32_t)0x66239, (int32_t)0xFFFBAB3D, (int32_t)0x5CB94, (int32_t)0x3784C, (int32_t)0x6CC31, (int32_t)0xFFF6B390, (int32_t)0x7401B, (int32_t)0x8E01B, (int32_t)0xFFFD07AA, (int32_t)0xFFF71B5D, (int32_t)0x4DE5C, (int32_t)0x5DB63, (int32_t)0xFFFC9759, (int32_t)0x531F7, (int32_t)0xFFF91584, (int32_t)0xB664, (int32_t)0xFFF64BC4, (int32_t)0xFFFE7CAB, (int32_t)0xFFF87E41, (int32_t)0xFFF92FB3, (int32_t)0xC854, (int32_t)0x8AFF4, (int32_t)0x95A04, (int32_t)0x8113A, (int32_t)0xFFFBF892, (int32_t)0x43132, (int32_t)0x2A50B, (int32_t)0xFFFA6931, (int32_t)0x3910D, (int32_t)0x1E60D, (int32_t)0xFFF87E41, (int32_t)0xFFF78C78, (int32_t)0xFFFFFFF9, (int32_t)0xFFFFFFC5, (int32_t)0xFFFFFFE5, (int32_t)0xFFFFFFE2, (int32_t)0xFFFFFFD0, (int32_t)0xE, (int32_t)0xFFFFFFF1, (int32_t)0x40, (int32_t)0xFFFFFFC2, (int32_t)0xA, (int32_t)0xFFFFFFCD, (int32_t)0xF, (int32_t)0x15, (int32_t)0xFFFFFFFF, (int32_t)0xFFFFFFF0, (int32_t)0x18, (int32_t)0xFFFFFFF3, (int32_t)0xFFFFFFD6, (int32_t)0x18, (int32_t)0xFFFFFFE5, (int32_t)0x12, (int32_t)0xFFFFFFC9, (int32_t)0x3F, (int32_t)0x31, (int32_t)0xFFFFFFE8, (int32_t)0x31, (int32_t)0xFFFFFFEF, (int32_t)0xFFFFFFCF, (int32_t)0xFFFFFFF4, (int32_t)0x11, (int32_t)0xFFFFFFE1, (int32_t)0x20, (int32_t)0x37, (int32_t)0x13, (int32_t)0xFFFFFFED, (int32_t)0xFFFFFFE5, (int32_t)0xFFFFFFFD, (int32_t)0x33, (int32_t)0xFFFFFFF4, (int32_t)0xFFFFFFF6, (int32_t)0xFFFFFFC5, (int32_t)0xFFFFFFD1, (int32_t)0xFFFFFFD2, (int32_t)0x3C, (int32_t)0x2A, (int32_t)0xFFFFFFED, (int32_t)0xFFFFFFDE, (int32_t)0x28, (int32_t)0xFFFFFFEB, (int32_t)0x3A };
		for (int ndx = 0; ndx < 100; ndx++)
			Util::Check("Fixed32::Log", Fixed32::Log(input0[ndx]), output0[ndx], input0[ndx]);
	}

	// Fixed32.LogFast()
	static void Fixed32_LogFast()
	{
		static const int32_t input0[] = { (int32_t)0x2550149, (int32_t)0xDDD4, (int32_t)0xC700760, (int32_t)0x3122C13, (int32_t)0x4234, (int32_t)0xB2B, (int32_t)0x6, (int32_t)0x1D3F, (int32_t)0x186ED3D2, (int32_t)0x141, (int32_t)0x115, (int32_t)0x171, (int32_t)0x41F41, (int32_t)0x134E, (int32_t)0x4FC, (int32_t)0xAC5, (int32_t)0x20E705, (int32_t)0x2, (int32_t)0x20, (int32_t)0xC, (int32_t)0x95, (int32_t)0xBBA8, (int32_t)0xA62D23, (int32_t)0x1B1, (int32_t)0x104, (int32_t)0xC0A9, (int32_t)0x11115D67, (int32_t)0x3, (int32_t)0x5, (int32_t)0x1C6A2AA2, (int32_t)0xCB19E, (int32_t)0x22A7F, (int32_t)0xEA63DD, (int32_t)0x4CCE, (int32_t)0x13A74C8, (int32_t)0x749EDB, (int32_t)0x287C0A8, (int32_t)0xA, (int32_t)0x88, (int32_t)0x3FFE2AD3, (int32_t)0xE7, (int32_t)0x8, (int32_t)0x178C3F89, (int32_t)0x32, (int32_t)0x4A, (int32_t)0xFF7AC3, (int32_t)0x24D4C, (int32_t)0x8B63E6, (int32_t)0xE42C2, (int32_t)0x67E7, (int32_t)0x10016, (int32_t)0xFFDC, (int32_t)0x10017, (int32_t)0xFFDF, (int32_t)0x1001F, (int32_t)0xFFEA, (int32_t)0x1001F, (int32_t)0x10013, (int32_t)0x1000D, (int32_t)0x1003A, (int32_t)0xFFF6, (int32_t)0xFFC2, (int32_t)0xFFED, (int32_t)0x10040, (int32_t)0x1000E, (int32_t)0x10018, (int32_t)0xFFFC, (int32_t)0xFFCF, (int32_t)0x1000B, (int32_t)0x10008, (int32_t)0x10002, (int32_t)0x1000E, (int32_t)0x10027, (int32_t)0xFFD0, (int32_t)0x1002E, (int32_t)0xFFD1, (int32_t)0x10006, (int32_t)0x1000E, (int32_t)0xFFC9, (int32_t)0xFFF9, (int32_t)0x1003A, (int32_t)0xFFD4, (int32_t)0xFFEF, (int32_t)0x1000A, (int32_t)0xFFE4, (int32_t)0xFFF4, (int32_t)0x10031, (int32_t)0x10004, (int32_t)0x1001C, (int32_t)0xFFFC, (int32_t)0xFFC0, (int32_t)0xFFD7, (int32_t)0xFFFC, (int32_t)0xFFE0, (int32_t)0x10009, (int32_t)0xFFD8, (int32_t)0x1001C, (int32_t)0x1003B, (int32_t)0x10006, (int32_t)0xFFFE };
		static const int32_t output0[] = { (int32_t)0x66454, (int32_t)0xFFFFDB52, (int32_t)0x810DD, (int32_t)0x6AACB, (int32_t)0xFFFEA5C6, (int32_t)0xFFFCDE2D, (int32_t)0xFFF6B390, (int32_t)0xFFFDD4A0, (int32_t)0x8BDB8, (int32_t)0xFFFAAE5C, (int32_t)0xFFFA889E, (int32_t)0xFFFAD209, (int32_t)0x16A96, (int32_t)0xFFFD6A48, (int32_t)0xFFFC0FA6, (int32_t)0xFFFCD4E0, (int32_t)0x37E58, (int32_t)0xFFF59A52, (int32_t)0xFFF8601A, (int32_t)0xFFF76502, (int32_t)0xFFF9E9E1, (int32_t)0xFFFFB07E, (int32_t)0x51CF0, (int32_t)0xFFFAFAFB, (int32_t)0xFFFA7868, (int32_t)0xFFFFB73B, (int32_t)0x861E2, (int32_t)0xFFF6021E, (int32_t)0xFFF684E3, (int32_t)0x8E45E, (int32_t)0x28A86, (int32_t)0xC5DB, (int32_t)0x574FC, (int32_t)0xFFFECBCC, (int32_t)0x5C036, (int32_t)0x4C248, (int32_t)0x67937, (int32_t)0xFFF73655, (int32_t)0xFFF9D283, (int32_t)0x9B434, (int32_t)0xFFFA5A21, (int32_t)0xFFF6FD36, (int32_t)0x8B446, (int32_t)0xFFF8D259, (int32_t)0xFFF936B6, (int32_t)0x58B0A, (int32_t)0xD570, (int32_t)0x4EFF0, (int32_t)0x2A852, (int32_t)0xFFFF1928, (int32_t)0x15, (int32_t)0xFFFFFFDC, (int32_t)0x16, (int32_t)0xFFFFFFDF, (int32_t)0x1E, (int32_t)0xFFFFFFEA, (int32_t)0x1E, (int32_t)0x12, (int32_t)0xC, (int32_t)0x39, (int32_t)0xFFFFFFF6, (int32_t)0xFFFFFFC2, (int32_t)0xFFFFFFED, (int32_t)0x3F, (int32_t)0xD, (int32_t)0x17, (int32_t)0xFFFFFFFC, (int32_t)0xFFFFFFCF, (int32_t)0xA, (int32_t)0x7, (int32_t)0x1, (int32_t)0xD, (int32_t)0x26, (int32_t)0xFFFFFFD0, (int32_t)0x2D, (int32_t)0xFFFFFFD1, (int32_t)0x5, (int32_t)0xD, (int32_t)0xFFFFFFC9, (int32_t)0xFFFFFFF9, (int32_t)0x39, (int32_t)0xFFFFFFD4, (int32_t)0xFFFFFFEF, (int32_t)0x9, (int32_t)0xFFFFFFE4, (int32_t)0xFFFFFFF4, (int32_t)0x30, (int32_t)0x3, (int32_t)0x1B, (int32_t)0xFFFFFFFC, (int32_t)0xFFFFFFC0, (int32_t)0xFFFFFFD7, (int32_t)0xFFFFFFFC, (int32_t)0xFFFFFFE0, (int32_t)0x8, (int32_t)0xFFFFFFD8, (int32_t)0x1B, (int32_t)0x3A, (int32_t)0x5, (int32_t)0xFFFFFFFE };
		for (int ndx = 0; ndx < 100; ndx++)
			Util::Check("Fixed32::LogFast", Fixed32::LogFast(input0[ndx]), output0[ndx], input0[ndx]);
	}

	// Fixed32.LogFastest()
	static void Fixed32_LogFastest()
	{
		static const int32_t input0[] = { (int32_t)0x50F, (int32_t)0x2AE4, (int32_t)0x46, (int32_t)0xA, (int32_t)0x1868D505, (int32_t)0x6, (int32_t)0x2647, (int32_t)0x19E15, (int32_t)0x16CA, (int32_t)0x4D364, (int32_t)0xCC638E, (int32_t)0x19, (int32_t)0x288BC, (int32_t)0x2F, (int32_t)0x2, (int32_t)0x156, (int32_t)0x11A8F1, (int32_t)0xB19F7F, (int32_t)0x28A92A, (int32_t)0x61, (int32_t)0x17F4962, (int32_t)0x10A23762, (int32_t)0x1E95, (int32_t)0x14, (int32_t)0x20134, (int32_t)0x62C, (int32_t)0x1C, (int32_t)0x1A678, (int32_t)0x2A03F, (int32_t)0xEFD86, (int32_t)0x29F4, (int32_t)0x4A7F5, (int32_t)0x6, (int32_t)0x4F1A0, (int32_t)0x19, (int32_t)0xF9C3, (int32_t)0x388EABDA, (int32_t)0x2C8, (int32_t)0x97273, (int32_t)0xCD, (int32_t)0x37877022, (int32_t)0x69A, (int32_t)0x22, (int32_t)0x17, (int32_t)0x1EF379, (int32_t)0x6C9FBB9, (int32_t)0x8B550, (int32_t)0x4BD, (int32_t)0x179, (int32_t)0x493, (int32_t)0x10005, (int32_t)0x10039, (int32_t)0xFFE0, (int32_t)0xFFED, (int32_t)0x10017, (int32_t)0xFFF1, (int32_t)0xFFC0, (int32_t)0xFFC6, (int32_t)0x10003, (int32_t)0x1000F, (int32_t)0x10038, (int32_t)0x10031, (int32_t)0x1003E, (int32_t)0x10020, (int32_t)0xFFD4, (int32_t)0xFFD7, (int32_t)0xFFC7, (int32_t)0x1003D, (int32_t)0xFFC2, (int32_t)0xFFFE, (int32_t)0xFFE0, (int32_t)0xFFEE, (int32_t)0xFFD1, (int32_t)0xFFFC, (int32_t)0xFFD8, (int32_t)0xFFFD, (int32_t)0x10026, (int32_t)0xFFE4, (int32_t)0xFFF6, (int32_t)0x10015, (int32_t)0x1001B, (int32_t)0x10029, (int32_t)0xFFE3, (int32_t)0xFFDE, (int32_t)0xFFCC, (int32_t)0xFFFE, (int32_t)0xFFEA, (int32_t)0x1001A, (int32_t)0x10036, (int32_t)0x1001F, (int32_t)0xFFFF, (int32_t)0x10038, (int32_t)0x10022, (int32_t)0xFFBF, (int32_t)0xFFE6, (int32_t)0xFFCD, (int32_t)0xFFED, (int32_t)0xFFF2, (int32_t)0x1003B, (int32_t)0xFFFF };
		static const int32_t output0[] = { (int32_t)0xFFFC136F, (int32_t)0xFFFE36A5, (int32_t)0xFFF9287D, (int32_t)0xFFF73656, (int32_t)0x8BD77, (int32_t)0xFFF6B38E, (int32_t)0xFFFE1986, (int32_t)0x7B1A, (int32_t)0xFFFD94C1, (int32_t)0x192F0, (int32_t)0x551EB, (int32_t)0xFFF820E6, (int32_t)0xEE0A, (int32_t)0xFFF8C280, (int32_t)0xFFF59A52, (int32_t)0xFFFABE94, (int32_t)0x2DF0D, (int32_t)0x52DFB, (int32_t)0x3B48B, (int32_t)0xFFF97BFD, (int32_t)0x5F2E0, (int32_t)0x85B49, (int32_t)0xFFFDE010, (int32_t)0xFFF7E7C8, (int32_t)0xB20B, (int32_t)0xFFFC4659, (int32_t)0xFFF83DEC, (int32_t)0x803D, (int32_t)0xF726, (int32_t)0x2B519, (int32_t)0xFFFE30FD, (int32_t)0x189C6, (int32_t)0xFFF6B38E, (int32_t)0x19920, (int32_t)0xFFF820E6, (int32_t)0xFFFFF9AF, (int32_t)0x99497, (int32_t)0xFFFB7A4A, (int32_t)0x23EE7, (int32_t)0xFFFA3B8F, (int32_t)0x98FE4, (int32_t)0xFFFC5796, (int32_t)0xFFF86F9F, (int32_t)0xFFF80B8D, (int32_t)0x36EB2, (int32_t)0x775E1, (int32_t)0x22A0E, (int32_t)0xFFFC02B1, (int32_t)0xFFFAD784, (int32_t)0xFFFBF9AC, (int32_t)0x4, (int32_t)0x38, (int32_t)0xFFFFFFE0, (int32_t)0xFFFFFFED, (int32_t)0x16, (int32_t)0xFFFFFFF1, (int32_t)0xFFFFFFC0, (int32_t)0xFFFFFFC6, (int32_t)0x2, (int32_t)0xE, (int32_t)0x37, (int32_t)0x30, (int32_t)0x3D, (int32_t)0x1F, (int32_t)0xFFFFFFD4, (int32_t)0xFFFFFFD7, (int32_t)0xFFFFFFC7, (int32_t)0x3C, (int32_t)0xFFFFFFC2, (int32_t)0xFFFFFFFE, (int32_t)0xFFFFFFE0, (int32_t)0xFFFFFFEE, (int32_t)0xFFFFFFD1, (int32_t)0xFFFFFFFC, (int32_t)0xFFFFFFD8, (int32_t)0xFFFFFFFD, (int32_t)0x25, (int32_t)0xFFFFFFE4, (int32_t)0xFFFFFFF6, (int32_t)0x14, (int32_t)0x1A, (int32_t)0x28, (int32_t)0xFFFFFFE3, (int32_t)0xFFFFFFDE, (int32_t)0xFFFFFFCC, (int32_t)0xFFFFFFFE, (int32_t)0xFFFFFFEA, (int32_t)0x19, (int32_t)0x35, (int32_t)0x1E, (int32_t)0xFFFFFFFF, (int32_t)0x37, (int32_t)0x21, (int32_t)0xFFFFFFBF, (int32_t)0xFFFFFFE6, (int32_t)0xFFFFFFCD, (int32_t)0xFFFFFFED, (int32_t)0xFFFFFFF2, (int32_t)0x3A, (int32_t)0xFFFFFFFF };
		for (int ndx = 0; ndx < 100; ndx++)
			Util::Check("Fixed32::LogFastest", Fixed32::LogFastest(input0[ndx]), output0[ndx], input0[ndx]);
	}

	// Fixed64.Log2()
	static void Fixed64_Log2()
	{
		static const int64_t input0[] = { (int64_t)0x7AD22CB1CB661LL, (int64_t)0x1BF7B1D96E3LL, (int64_t)0x3BA35LL, (int64_t)0x1000E3B48E12CLL, (int64_t)0xALL, (int64_t)0x6E7LL, (int64_t)0x26DE220FE7385LL, (int64_t)0x1995300859D4BLL, (int64_t)0x357LL, (int64_t)0x14B2LL, (int64_t)0x2094082B8DLL, (int64_t)0x2404F94B6C13LL, (int64_t)0xA332AF1650LL, (int64_t)0x35931DEA20D7E6LL, (int64_t)0x1875F480D907340LL, (int64_t)0x8CLL, (int64_t)0x234841F1C2LL, (int64_t)0x22A381CD5788LL, (int64_t)0xA4592AFC2ALL, (int64_t)0x4D491A34E07LL, (int64_t)0x1AA4C75F96C861LL, (int64_t)0x5F25EDLL, (int64_t)0x7LL, (int64_t)0x449D9LL, (int64_t)0x250BB9AF1804A000LL, (int64_t)0x1633BBLL, (int64_t)0x2F2D00FD5FLL, (int64_t)0x16ALL, (int64_t)0x58DLL, (int64_t)0x2CLL, (int64_t)0xA3LL, (int64_t)0x173CAC8LL, (int64_t)0x195535LL, (int64_t)0x2D8C94801262060LL, (int64_t)0x124CD9C6939832LL, (int64_t)0x8LL, (int64_t)0x171091726LL, (int64_t)0xAF2EBAC9LL, (int64_t)0xFBBLL, (int64_t)0x41D34C06B38FB80LL, (int64_t)0x75CF04B787BLL, (int64_t)0x4C34FCC16LL, (int64_t)0x38C3A8C0ALL, (int64_t)0x18ACA9B3F307LL, (int64_t)0x1ABLL, (int64_t)0xDB9B7654F23CLL, (int64_t)0x55766LL, (int64_t)0xB50D8B98350700LL, (int64_t)0x3DLL, (int64_t)0xC29LL, (int64_t)0x10001B75CLL, (int64_t)0x100113C49LL, (int64_t)0x100223821LL, (int64_t)0xFFE23EC8LL, (int64_t)0x100138966LL, (int64_t)0xFFFA6766LL, (int64_t)0x1000E7A7ELL, (int64_t)0x100411B9FLL, (int64_t)0x1002595D4LL, (int64_t)0x1001D731BLL, (int64_t)0x10008E7CCLL, (int64_t)0x10014A4EFLL, (int64_t)0x1000F32FALL, (int64_t)0xFFC77EFALL, (int64_t)0xFFC9128FLL, (int64_t)0xFFD8D79FLL, (int64_t)0xFFF23E61LL, (int64_t)0x1001B1EACLL, (int64_t)0xFFC1BCA9LL, (int64_t)0x1002FBA00LL, (int64_t)0x1000BCFF0LL, (int64_t)0xFFCA7A6BLL, (int64_t)0x100047D04LL, (int64_t)0x1001A048CLL, (int64_t)0x100403FBELL, (int64_t)0xFFE5833ELL, (int64_t)0x10029B91FLL, (int64_t)0xFFE96326LL, (int64_t)0xFFD23C08LL, (int64_t)0xFFDAD6BELL, (int64_t)0xFFC2CE18LL, (int64_t)0x1001B9505LL, (int64_t)0xFFC3E1F6LL, (int64_t)0x1003F2453LL, (int64_t)0x10009C546LL, (int64_t)0xFFFE3CB4LL, (int64_t)0x100119A28LL, (int64_t)0xFFC65505LL, (int64_t)0xFFE2E9E0LL, (int64_t)0xFFF0CD34LL, (int64_t)0xFFF7DCC5LL, (int64_t)0x100039FDELL, (int64_t)0x1001CDC02LL, (int64_t)0xFFFBCF26LL, (int64_t)0xFFEEA951LL, (int64_t)0xFFC2E6D1LL, (int64_t)0x100392C33LL, (int64_t)0xFFFCE735LL, (int64_t)0x1001227CFLL, (int64_t)0x100399B82LL };
		static const int64_t output0[] = { (int64_t)0x12F0BEEE64LL, (int64_t)0x8CE4132F8LL, (int64_t)0xFFFFFFF1E5EDB740LL, (int64_t)0x1000148790LL, (int64_t)0xFFFFFFE35269E12CLL, (int64_t)0xFFFFFFEAC97E7D44LL, (int64_t)0x1147CEDAC8LL, (int64_t)0x10AD567118LL, (int64_t)0xFFFFFFE9BD624318LL, (int64_t)0xFFFFFFEC5F091198LL, (int64_t)0x5069D4418LL, (int64_t)0xD2BB337D8LL, (int64_t)0x759B90508LL, (int64_t)0x15BE54A8B4LL, (int64_t)0x189CC6143CLL, (int64_t)0xFFFFFFE72118B118LL, (int64_t)0x524101DC4LL, (int64_t)0xD1D439B74LL, (int64_t)0x75C511F50LL, (int64_t)0xA45AA1BECLL, (int64_t)0x14BC583220LL, (int64_t)0xFFFFFFF6927562BCLL, (int64_t)0xFFFFFFE2CEAECFE8LL, (int64_t)0xFFFFFFF219B7E348LL, (int64_t)0x1D3613B44CLL, (int64_t)0xFFFFFFF478FDC884LL, (int64_t)0x58F5A84F4LL, (int64_t)0xFFFFFFE87FF5E664LL, (int64_t)0xFFFFFFEA7902444CLL, (int64_t)0xFFFFFFE5759D4F7CLL, (int64_t)0xFFFFFFE759463F8CLL, (int64_t)0xFFFFFFF889D175D4LL, (int64_t)0xFFFFFFF4A9B63BD4LL, (int64_t)0x198264E380LL, (int64_t)0x14319C0C44LL, (int64_t)0xFFFFFFE300000000LL, (int64_t)0x8711D4C4LL, (int64_t)0xFFFFFFFF73E52410LL, (int64_t)0xFFFFFFEBF9B9B25CLL, (int64_t)0x1A0A62ED68LL, (int64_t)0xAE15B7658LL, (int64_t)0x24079532CLL, (int64_t)0x1D3B07E20LL, (int64_t)0xC9FFC8490LL, (int64_t)0xFFFFFFE8BCF39D44LL, (int64_t)0xFC75E4260LL, (int64_t)0xFFFFFFF26ACECBF0LL, (int64_t)0x17801188FCLL, (int64_t)0xFFFFFFE5EE44CD58LL, (int64_t)0xFFFFFFEB9AA5A214LL, (int64_t)0x279D8LL, (int64_t)0x18DCBCLL, (int64_t)0x315AE0LL, (int64_t)0xFFFFFFFFFFD5102CLL, (int64_t)0x1C2E64LL, (int64_t)0xFFFFFFFFFFF7ED1CLL, (int64_t)0x14E2BCLL, (int64_t)0x5DE254LL, (int64_t)0x363560LL, (int64_t)0x2A7A28LL, (int64_t)0xCD8D0LL, (int64_t)0x1DC754LL, (int64_t)0x15ECD4LL, (int64_t)0xFFFFFFFFFFAE7264LL, (int64_t)0xFFFFFFFFFFB0B91CLL, (int64_t)0xFFFFFFFFFFC77D8CLL, (int64_t)0xFFFFFFFFFFEC26D4LL, (int64_t)0x271E14LL, (int64_t)0xFFFFFFFFFFA62170LL, (int64_t)0x44D46CLL, (int64_t)0x110A38LL, (int64_t)0xFFFFFFFFFFB2C0B4LL, (int64_t)0x6799CLL, (int64_t)0x258738LL, (int64_t)0x5CA570LL, (int64_t)0xFFFFFFFFFFD9C778LL, (int64_t)0x3C2CACLL, (int64_t)0xFFFFFFFFFFDF5F00LL, (int64_t)0xFFFFFFFFFFBDF388LL, (int64_t)0xFFFFFFFFFFCA5F60LL, (int64_t)0xFFFFFFFFFFA7AC54LL, (int64_t)0x27C8BCLL, (int64_t)0xFFFFFFFFFFA93AB0LL, (int64_t)0x5B0CF0LL, (int64_t)0xE1848LL, (int64_t)0xFFFFFFFFFFFD74E8LL, (int64_t)0x196420LL, (int64_t)0xFFFFFFFFFFACC420LL, (int64_t)0xFFFFFFFFFFD60724LL, (int64_t)0xFFFFFFFFFFEA1220LL, (int64_t)0xFFFFFFFFFFF44258LL, (int64_t)0x53A94LL, (int64_t)0x29A048LL, (int64_t)0xFFFFFFFFFFF9F428LL, (int64_t)0xFFFFFFFFFFE6FB78LL, (int64_t)0xFFFFFFFFFFA7D004LL, (int64_t)0x527258LL, (int64_t)0xFFFFFFFFFFFB8834LL, (int64_t)0x1A306CLL, (int64_t)0x5312CCLL };
		for (int ndx = 0; ndx < 100; ndx++)
			Util::Check("Fixed64::Log2", Fixed64::Log2(input0[ndx]), output0[ndx], input0[ndx]);
	}

	// Fixed64.Log2Fast()
	static void Fixed64_Log2Fast()
	{
		static const int64_t input0[] = { (int64_t)0x9A73BCLL, (int64_t)0x17DA570167LL, (int64_t)0x3DD8376B2EE684LL, (int64_t)0x51B9LL, (int64_t)0x200A34D7FFLL, (int64_t)0x467B264LL, (int64_t)0x41LL, (int64_t)0xELL, (int64_t)0x2EB70LL, (int64_t)0x36A0B2LL, (int64_t)0xC525439B8BLL, (int64_t)0x2EB8FLL, (int64_t)0x15AC6F7858C3D5LL, (int64_t)0xA3E4DB312LL, (int64_t)0x7661C75C087LL, (int64_t)0x23F3A715847AFELL, (int64_t)0x4A35F9C168LL, (int64_t)0xA184B1C9A0LL, (int64_t)0x63B1F8B1LL, (int64_t)0x1CA97979A0LL, (int64_t)0x8DB7DBB0CLL, (int64_t)0x1B856ALL, (int64_t)0x602640DLL, (int64_t)0xD374C040B1LL, (int64_t)0x5573887LL, (int64_t)0xELL, (int64_t)0x823195LL, (int64_t)0x11LL, (int64_t)0x16BD77LL, (int64_t)0x9C92AF8FA72FF00LL, (int64_t)0x569868LL, (int64_t)0x249EFFLL, (int64_t)0x690F6C09F38LL, (int64_t)0x2274LL, (int64_t)0x11E4FADA3B851ELL, (int64_t)0xB271260LL, (int64_t)0x1141DBFF370764LL, (int64_t)0x4A2D65C0261E1LL, (int64_t)0xE96E30LL, (int64_t)0x2D2LL, (int64_t)0x11CA023LL, (int64_t)0xB06C4F828LL, (int64_t)0x121EA038DBF3ALL, (int64_t)0x2CB471C53866660LL, (int64_t)0x49A317609C84LL, (int64_t)0x312LL, (int64_t)0x4E5C38B8A58LL, (int64_t)0x279LL, (int64_t)0x11B387B66F15BLL, (int64_t)0xC82473C7LL, (int64_t)0xFFF528FELL, (int64_t)0xFFE5FEB6LL, (int64_t)0x1003F3B57LL, (int64_t)0xFFC44BB8LL, (int64_t)0xFFEF480FLL, (int64_t)0xFFC3B84BLL, (int64_t)0xFFD3903DLL, (int64_t)0xFFDC842ALL, (int64_t)0x1002802BCLL, (int64_t)0x100047800LL, (int64_t)0xFFC50AD5LL, (int64_t)0xFFC286A5LL, (int64_t)0x1001E5AC1LL, (int64_t)0xFFE9417CLL, (int64_t)0x100402125LL, (int64_t)0xFFE5654CLL, (int64_t)0x1000C4BA2LL, (int64_t)0x10011950DLL, (int64_t)0x1001DFBCELL, (int64_t)0xFFDF0355LL, (int64_t)0xFFC0B346LL, (int64_t)0x1002825ECLL, (int64_t)0xFFDF242CLL, (int64_t)0xFFEB212ALL, (int64_t)0xFFD94427LL, (int64_t)0x10040DE04LL, (int64_t)0x1000795A9LL, (int64_t)0x10000305ALL, (int64_t)0x10033D419LL, (int64_t)0xFFE1F2C0LL, (int64_t)0xFFF048A6LL, (int64_t)0xFFDB70EBLL, (int64_t)0xFFE467A6LL, (int64_t)0x10029F888LL, (int64_t)0x100050C3ALL, (int64_t)0xFFC65462LL, (int64_t)0xFFED8AE1LL, (int64_t)0x10012E626LL, (int64_t)0x1002C60E7LL, (int64_t)0x10027746FLL, (int64_t)0xFFE369D1LL, (int64_t)0x1000E84FBLL, (int64_t)0xFFBF0CACLL, (int64_t)0x1002DF022LL, (int64_t)0xFFCBF233LL, (int64_t)0xFFED6DC5LL, (int64_t)0x1002C92AFLL, (int64_t)0xFFF97727LL, (int64_t)0x100396205LL, (int64_t)0xFFF925B4LL };
		static const int64_t output0[] = { (int64_t)0xFFFFFFF7456146A4LL, (int64_t)0x4937AC69CLL, (int64_t)0x15F358EC80LL, (int64_t)0xFFFFFFEE5A4833A4LL, (int64_t)0x50075B974LL, (int64_t)0xFFFFFFFA23A0396CLL, (int64_t)0xFFFFFFE605B9E670LL, (int64_t)0xFFFFFFE3CEAECFECLL, (int64_t)0xFFFFFFF18BBA25E4LL, (int64_t)0xFFFFFFF5C58508F0LL, (int64_t)0x79F849FC8LL, (int64_t)0xFFFFFFF18BC976FCLL, (int64_t)0x147017F0B4LL, (int64_t)0x35B4B61B4LL, (int64_t)0xAE32670A8LL, (int64_t)0x152B017208LL, (int64_t)0x636ABBE70LL, (int64_t)0x755E6E054LL, (int64_t)0xFFFFFFFEA3B322BCLL, (int64_t)0x4D7503960LL, (int64_t)0x3259A014CLL, (int64_t)0xFFFFFFF4C84FDFE0LL, (int64_t)0xFFFFFFFA96532798LL, (int64_t)0x7B9661840LL, (int64_t)0xFFFFFFFA6AC283B0LL, (int64_t)0xFFFFFFE3CEAECFECLL, (int64_t)0xFFFFFFF70646A880LL, (int64_t)0xFFFFFFE41663F6F8LL, (int64_t)0xFFFFFFF481D5A9F4LL, (int64_t)0x1B4A6AC374LL, (int64_t)0xFFFFFFF66FABF238LL, (int64_t)0xFFFFFFF531D17634LL, (int64_t)0xAB70F0638LL, (int64_t)0xFFFFFFED1B47B54CLL, (int64_t)0x142954298CLL, (int64_t)0xFFFFFFFB7AB42540LL, (int64_t)0x141BF00F60LL, (int64_t)0x1236810AFCLL, (int64_t)0xFFFFFFF7DDE9CCFCLL, (int64_t)0xFFFFFFE97EF05B1CLL, (int64_t)0xFFFFFFF82725D8C4LL, (int64_t)0x3768052B4LL, (int64_t)0x102DF283FCLL, (int64_t)0x197B7BEEC4LL, (int64_t)0xE33CDE504LL, (int64_t)0xFFFFFFE99E4E834CLL, (int64_t)0xA4AC3C8E8LL, (int64_t)0xFFFFFFE94E5A0EC4LL, (int64_t)0x1025520158LL, (int64_t)0xFFFFFFFFA5170CB0LL, (int64_t)0xFFFFFFFFFFF05C2CLL, (int64_t)0xFFFFFFFFFFDA79A4LL, (int64_t)0x5B2E14LL, (int64_t)0xFFFFFFFFFFA9D364LL, (int64_t)0xFFFFFFFFFFE7E08CLL, (int64_t)0xFFFFFFFFFFA8FE80LL, (int64_t)0xFFFFFFFFFFBFDEA8LL, (int64_t)0xFFFFFFFFFFCCCB3CLL, (int64_t)0x39B498LL, (int64_t)0x67260LL, (int64_t)0xFFFFFFFFFFAAE758LL, (int64_t)0xFFFFFFFFFFA74520LL, (int64_t)0x2BC834LL, (int64_t)0xFFFFFFFFFFDF2E6CLL, (int64_t)0x5C794CLL, (int64_t)0xFFFFFFFFFFD99C3CLL, (int64_t)0x11BCA0LL, (int64_t)0x195CC0LL, (int64_t)0x2B3F44LL, (int64_t)0xFFFFFFFFFFD065D8LL, (int64_t)0xFFFFFFFFFFA4A234LL, (int64_t)0x39E754LL, (int64_t)0xFFFFFFFFFFD09540LL, (int64_t)0xFFFFFFFFFFE1E2B0LL, (int64_t)0xFFFFFFFFFFC81A34LL, (int64_t)0x5D8984LL, (int64_t)0xAF10CLL, (int64_t)0x45BCLL, (int64_t)0x4ABE34LL, (int64_t)0xFFFFFFFFFFD4A26CLL, (int64_t)0xFFFFFFFFFFE952D0LL, (int64_t)0xFFFFFFFFFFCB3DE8LL, (int64_t)0xFFFFFFFFFFD82E24LL, (int64_t)0x3C8814LL, (int64_t)0x74830LL, (int64_t)0xFFFFFFFFFFACC338LL, (int64_t)0xFFFFFFFFFFE55E20LL, (int64_t)0x1B42F0LL, (int64_t)0x4000B8LL, (int64_t)0x38E768LL, (int64_t)0xFFFFFFFFFFD6BFC4LL, (int64_t)0x14F1D8LL, (int64_t)0xFFFFFFFFFFA23FF0LL, (int64_t)0x42404CLL, (int64_t)0xFFFFFFFFFFB4DF44LL, (int64_t)0xFFFFFFFFFFE5341CLL, (int64_t)0x40487CLL, (int64_t)0xFFFFFFFFFFF69274LL, (int64_t)0x52BFE4LL, (int64_t)0xFFFFFFFFFFF61CF4LL };
		for (int ndx = 0; ndx < 100; ndx++)
			Util::Check("Fixed64::Log2Fast", Fixed64::Log2Fast(input0[ndx]), output0[ndx], input0[ndx]);
	}

	// Fixed64.Log2Fastest()
	static void Fixed64_Log2Fastest()
	{
		static const int64_t input0[] = { (int64_t)0x6E94C0DAFLL, (int64_t)0x7LL, (int64_t)0x4528AC8LL, (int64_t)0x1AAE8FDF5LL, (int64_t)0x6012166ELL, (int64_t)0x3B2CE230B6LL, (int64_t)0x9LL, (int64_t)0xDA2EBA3B53LL, (int64_t)0x10D4C15EF53448LL, (int64_t)0xAB8672LL, (int64_t)0x3B1E8D11LL, (int64_t)0x1D874FEE22ALL, (int64_t)0x1A12CBLL, (int64_t)0x2339ED2DELL, (int64_t)0x2ECLL, (int64_t)0xA890677761A60LL, (int64_t)0x3E67F1C502FBLL, (int64_t)0x16C1DDD14A878A0LL, (int64_t)0x1CE152E1FFAA4LL, (int64_t)0x30E1BA753BDBFA0LL, (int64_t)0x46C4E673B159D40LL, (int64_t)0x758C475DEA25F80LL, (int64_t)0x283EC3B10BFE5LL, (int64_t)0x2DF592BA5DE5400LL, (int64_t)0xF1C86D3B5115680LL, (int64_t)0x2427757LL, (int64_t)0x34D5B98A2DD5BLL, (int64_t)0x1A8F022LL, (int64_t)0x6C48LL, (int64_t)0x15FC4DD8600682LL, (int64_t)0x303LL, (int64_t)0x66LL, (int64_t)0x7C5010D1FLL, (int64_t)0xD6F8F00LL, (int64_t)0x1017279A58A2LL, (int64_t)0x18955FLL, (int64_t)0x30B17D4ECEE6BLL, (int64_t)0x9547278C29FBLL, (int64_t)0x136077LL, (int64_t)0x2DC3FF9AE5BE900LL, (int64_t)0x1LL, (int64_t)0x16D967B79029LL, (int64_t)0x3AECE1277E822LL, (int64_t)0x17E31185LL, (int64_t)0xDCE9CLL, (int64_t)0x616FABF3FDLL, (int64_t)0x24356LL, (int64_t)0x233A6258LL, (int64_t)0x91E6794D031LL, (int64_t)0x1FB05LL, (int64_t)0x1000F5475LL, (int64_t)0x10038311BLL, (int64_t)0x1001543A8LL, (int64_t)0xFFBF9877LL, (int64_t)0x100014BEBLL, (int64_t)0x1000E94BALL, (int64_t)0xFFDF7B7ELL, (int64_t)0xFFFF197BLL, (int64_t)0x100080B3ELL, (int64_t)0xFFC9E3F8LL, (int64_t)0x100287E1DLL, (int64_t)0x100141474LL, (int64_t)0xFFF34E84LL, (int64_t)0x10040B86ALL, (int64_t)0xFFDBAE1FLL, (int64_t)0xFFEF7E87LL, (int64_t)0xFFCAFB26LL, (int64_t)0x10032A1E3LL, (int64_t)0x1002A89C1LL, (int64_t)0x1002A1CBCLL, (int64_t)0xFFC23F67LL, (int64_t)0x1003EDF96LL, (int64_t)0x1000B0768LL, (int64_t)0x1002F341ELL, (int64_t)0x100373B68LL, (int64_t)0xFFDB421ELL, (int64_t)0xFFD1776BLL, (int64_t)0xFFEA4EA0LL, (int64_t)0x1000E34F6LL, (int64_t)0xFFEB7CD6LL, (int64_t)0xFFCF5B71LL, (int64_t)0xFFE9F3D4LL, (int64_t)0x1001A7CDDLL, (int64_t)0x1003CD2AELL, (int64_t)0xFFDC71D0LL, (int64_t)0xFFDC0DCDLL, (int64_t)0xFFF8CB07LL, (int64_t)0x1000733B8LL, (int64_t)0x1003952F6LL, (int64_t)0xFFCB571ELL, (int64_t)0xFFC9009DLL, (int64_t)0xFFE6A32BLL, (int64_t)0xFFD8A930LL, (int64_t)0xFFDDDE54LL, (int64_t)0xFFCDFE8ELL, (int64_t)0xFFECE070LL, (int64_t)0xFFE7AAC8LL, (int64_t)0x10028B5C0LL, (int64_t)0xFFDD9E0FLL, (int64_t)0x1003A4CC8LL };
		static const int64_t output0[] = { (int64_t)0x2C9F9EC8CLL, (int64_t)0xFFFFFFE2CEAFC270LL, (int64_t)0xFFFFFFFA1CA29018LL, (int64_t)0xBCDF1620LL, (int64_t)0xFFFFFFFE96027B18LL, (int64_t)0x5E30EC0FCLL, (int64_t)0xFFFFFFE32B81FB50LL, (int64_t)0x7C4F70680LL, (int64_t)0x1412B3FA90LL, (int64_t)0xFFFFFFF76C199DC0LL, (int64_t)0xFFFFFFFDE2B54508LL, (int64_t)0x8E251BB94LL, (int64_t)0xFFFFFFF4B4591F7CLL, (int64_t)0x1237B48D4LL, (int64_t)0xFFFFFFE98BFE3BB4LL, (int64_t)0x1365ABC3E4LL, (int64_t)0xDF6AF7E9CLL, (int64_t)0x18821A8F70LL, (int64_t)0x10DA1E900CLL, (int64_t)0x199C761B48LL, (int64_t)0x1A25234F00LL, (int64_t)0x1AE08B61E4LL, (int64_t)0x1154AD04E0LL, (int64_t)0x1985B1A128LL, (int64_t)0x1BEAE6AFB4LL, (int64_t)0xFFFFFFF92D160280LL, (int64_t)0x11B930F1C8LL, (int64_t)0xFFFFFFF8BB2922ECLL, (int64_t)0xFFFFFFEEC2361CC0LL, (int64_t)0x14755DABA8LL, (int64_t)0xFFFFFFE9972D89D4LL, (int64_t)0xFFFFFFE6AC21DE28LL, (int64_t)0x2F5349570LL, (int64_t)0xFFFFFFFBBF7D1230LL, (int64_t)0xC0214E3CCLL, (int64_t)0xFFFFFFF49E9C3C60LL, (int64_t)0x119B08E468LL, (int64_t)0xF38CDDDD4LL, (int64_t)0xFFFFFFF446BB1040LL, (int64_t)0x1984227D74LL, (int64_t)0xFFFFFFE000000000LL, (int64_t)0xC8397B5F4LL, (int64_t)0x11E17E7C8CLL, (int64_t)0xFFFFFFFC93FEA570LL, (int64_t)0xFFFFFFF3C98F5C14LL, (int64_t)0x69B39053CLL, (int64_t)0xFFFFFFF12DA416F8LL, (int64_t)0xFFFFFFFD23801588LL, (int64_t)0xB3059BF08LL, (int64_t)0xFFFFFFF0FC63B3ACLL, (int64_t)0x161C00LL, (int64_t)0x51045CLL, (int64_t)0x1EAAB4LL, (int64_t)0xFFFFFFFFFFA30558LL, (int64_t)0x1DEBCLL, (int64_t)0x150780LL, (int64_t)0xFFFFFFFFFFD110F8LL, (int64_t)0xFFFFFFFFFFFEB35CLL, (int64_t)0xB9A10LL, (int64_t)0xFFFFFFFFFFB1E3B0LL, (int64_t)0x3A6394LL, (int64_t)0x1CF57CLL, (int64_t)0xFFFFFFFFFFEDAE9CLL, (int64_t)0x5D4EB8LL, (int64_t)0xFFFFFFFFFFCB93B0LL, (int64_t)0xFFFFFFFFFFE82DF4LL, (int64_t)0xFFFFFFFFFFB376E0LL, (int64_t)0x490128LL, (int64_t)0x3D5668LL, (int64_t)0x3CB944LL, (int64_t)0xFFFFFFFFFFA6D9F8LL, (int64_t)0x5AA55CLL, (int64_t)0xFE828LL, (int64_t)0x440FFCLL, (int64_t)0x4FA248LL, (int64_t)0xFFFFFFFFFFCAF7C0LL, (int64_t)0xFFFFFFFFFFBCD460LL, (int64_t)0xFFFFFFFFFFE0B144LL, (int64_t)0x147D64LL, (int64_t)0xFFFFFFFFFFE2657CLL, (int64_t)0xFFFFFFFFFFB9C8A4LL, (int64_t)0xFFFFFFFFFFE02E34LL, (int64_t)0x2632CCLL, (int64_t)0x57B0F0LL, (int64_t)0xFFFFFFFFFFCCAE34LL, (int64_t)0xFFFFFFFFFFCC1DC8LL, (int64_t)0xFFFFFFFFFFF59994LL, (int64_t)0xA633CLL, (int64_t)0x52A618LL, (int64_t)0xFFFFFFFFFFB3FBB0LL, (int64_t)0xFFFFFFFFFFB09B60LL, (int64_t)0xFFFFFFFFFFDB652CLL, (int64_t)0xFFFFFFFFFFC737B4LL, (int64_t)0xFFFFFFFFFFCEBC78LL, (int64_t)0xFFFFFFFFFFB7D0D8LL, (int64_t)0xFFFFFFFFFFE466C4LL, (int64_t)0xFFFFFFFFFFDCE1B8LL, (int64_t)0x3AB3C8LL, (int64_t)0xFFFFFFFFFFCE5FB0LL, (int64_t)0x540E24LL };
		for (int ndx = 0; ndx < 100; ndx++)
			Util::Check("Fixed64::Log2Fastest", Fixed64::Log2Fastest(input0[ndx]), output0[ndx], input0[ndx]);
	}

	// Fixed32.Log2()
	static void Fixed32_Log2()
	{
		static const int32_t input0[] = { (int32_t)0x1381A, (int32_t)0x141B, (int32_t)0xD1E4C, (int32_t)0x5342567, (int32_t)0x113, (int32_t)0xB36AA, (int32_t)0x7EE, (int32_t)0x1336068, (int32_t)0xB, (int32_t)0x2AC, (int32_t)0x5C17, (int32_t)0xC28D4AC, (int32_t)0x64F8A8F, (int32_t)0x9F, (int32_t)0x1BA80152, (int32_t)0x722F, (int32_t)0x17F69421, (int32_t)0x3575, (int32_t)0x912458, (int32_t)0x3C6ED23C, (int32_t)0xF5F3FFB, (int32_t)0x197AE, (int32_t)0x16F43341, (int32_t)0x42EB91, (int32_t)0x59C100, (int32_t)0x3D88F7, (int32_t)0xC374C3, (int32_t)0x7F6, (int32_t)0x5B0726, (int32_t)0x2B9D8, (int32_t)0x988F6A1, (int32_t)0x67B, (int32_t)0xE, (int32_t)0x1305FE, (int32_t)0x19AC949, (int32_t)0x551E18, (int32_t)0x1E2A72, (int32_t)0x1FB6906, (int32_t)0x39BA20, (int32_t)0x4712A, (int32_t)0x5EA8334, (int32_t)0xC8ADF, (int32_t)0x5F2A, (int32_t)0xD9BD2, (int32_t)0xA080F, (int32_t)0x35, (int32_t)0x25B5, (int32_t)0x2CB1C471, (int32_t)0x23D, (int32_t)0xC28AE, (int32_t)0xFFF3, (int32_t)0x10031, (int32_t)0xFFC4, (int32_t)0xFFDD, (int32_t)0xFFC0, (int32_t)0x1003F, (int32_t)0xFFF8, (int32_t)0x10036, (int32_t)0xFFD0, (int32_t)0x10002, (int32_t)0x1002E, (int32_t)0x10041, (int32_t)0xFFC6, (int32_t)0x10002, (int32_t)0xFFF0, (int32_t)0xFFCF, (int32_t)0x10029, (int32_t)0xFFDB, (int32_t)0xFFF3, (int32_t)0xFFDB, (int32_t)0x10026, (int32_t)0xFFCE, (int32_t)0x1001C, (int32_t)0xFFD5, (int32_t)0xFFCD, (int32_t)0xFFE3, (int32_t)0xFFC7, (int32_t)0xFFE6, (int32_t)0xFFCA, (int32_t)0x1000A, (int32_t)0xFFE5, (int32_t)0x10026, (int32_t)0xFFC6, (int32_t)0xFFCB, (int32_t)0xFFD3, (int32_t)0xFFC2, (int32_t)0xFFE4, (int32_t)0x1002E, (int32_t)0x10013, (int32_t)0x1002B, (int32_t)0xFFE5, (int32_t)0x10023, (int32_t)0x10019, (int32_t)0xFFD8, (int32_t)0x1001E, (int32_t)0x10032, (int32_t)0x1000A, (int32_t)0x1003A, (int32_t)0xFFE0, (int32_t)0xFFFF };
		static const int32_t output0[] = { (int32_t)0x492E, (int32_t)0xFFFC545B, (int32_t)0x3B6A8, (int32_t)0xA6129, (int32_t)0xFFF81A71, (int32_t)0x37CB7, (int32_t)0xFFFAFCBD, (int32_t)0x8438C, (int32_t)0xFFF3759D, (int32_t)0xFFF96AF8, (int32_t)0xFFFE8664, (int32_t)0xB9AA0, (int32_t)0xAA865, (int32_t)0xFFF75019, (int32_t)0xCCA1E, (int32_t)0xFFFED5D0, (int32_t)0xC952F, (int32_t)0xFFFDBD84, (int32_t)0x72E6B, (int32_t)0xDEAD1, (int32_t)0xBF136, (int32_t)0xABD9, (int32_t)0xC854A, (int32_t)0x6107A, (int32_t)0x67CE7, (int32_t)0x5F17E, (int32_t)0x79C56, (int32_t)0xFFFAFE31, (int32_t)0x6821B, (int32_t)0x1725E, (int32_t)0xB40D4, (int32_t)0xFFFAB233, (int32_t)0xFFF3CEAE, (int32_t)0x43FEC, (int32_t)0x8AEA7, (int32_t)0x66950, (int32_t)0x4EA33, (int32_t)0x8FCAC, (int32_t)0x5D9E6, (int32_t)0x226B6, (int32_t)0xA908C, (int32_t)0x3A614, (int32_t)0xFFFE9285, (int32_t)0x3C436, (int32_t)0x35393, (int32_t)0xFFF5BA58, (int32_t)0xFFFD3C9C, (int32_t)0xD7B65, (int32_t)0xFFF92992, (int32_t)0x39A9B, (int32_t)0xFFFFFFED, (int32_t)0x46, (int32_t)0xFFFFFFA9, (int32_t)0xFFFFFFCD, (int32_t)0xFFFFFFA3, (int32_t)0x5A, (int32_t)0xFFFFFFF4, (int32_t)0x4D, (int32_t)0xFFFFFFBA, (int32_t)0x2, (int32_t)0x42, (int32_t)0x5D, (int32_t)0xFFFFFFAC, (int32_t)0x2, (int32_t)0xFFFFFFE8, (int32_t)0xFFFFFFB9, (int32_t)0x3B, (int32_t)0xFFFFFFCA, (int32_t)0xFFFFFFED, (int32_t)0xFFFFFFCA, (int32_t)0x36, (int32_t)0xFFFFFFB7, (int32_t)0x28, (int32_t)0xFFFFFFC1, (int32_t)0xFFFFFFB6, (int32_t)0xFFFFFFD6, (int32_t)0xFFFFFFAD, (int32_t)0xFFFFFFDA, (int32_t)0xFFFFFFB2, (int32_t)0xE, (int32_t)0xFFFFFFD9, (int32_t)0x36, (int32_t)0xFFFFFFAC, (int32_t)0xFFFFFFB3, (int32_t)0xFFFFFFBF, (int32_t)0xFFFFFFA6, (int32_t)0xFFFFFFD7, (int32_t)0x42, (int32_t)0x1B, (int32_t)0x3E, (int32_t)0xFFFFFFD9, (int32_t)0x32, (int32_t)0x24, (int32_t)0xFFFFFFC6, (int32_t)0x2B, (int32_t)0x48, (int32_t)0xE, (int32_t)0x53, (int32_t)0xFFFFFFD1, (int32_t)0xFFFFFFFE };
		for (int ndx = 0; ndx < 100; ndx++)
			Util::Check("Fixed32::Log2", Fixed32::Log2(input0[ndx]), output0[ndx], input0[ndx]);
	}

	// Fixed32.Log2Fast()
	static void Fixed32_Log2Fast()
	{
		static const int32_t input0[] = { (int32_t)0x7A5, (int32_t)0x71, (int32_t)0x39805, (int32_t)0x6, (int32_t)0x3365392, (int32_t)0x223, (int32_t)0x2D, (int32_t)0x4ECE1B4, (int32_t)0x18, (int32_t)0x47BE71, (int32_t)0xB6FD9E0, (int32_t)0x21, (int32_t)0x1E172E9, (int32_t)0x231A4, (int32_t)0xAF, (int32_t)0x6, (int32_t)0x11ED6F34, (int32_t)0x1CDDDBF1, (int32_t)0xA0A, (int32_t)0x9CF, (int32_t)0x2C199CF, (int32_t)0x1F476638, (int32_t)0x31110, (int32_t)0x2F776, (int32_t)0xDB20CE8, (int32_t)0x3, (int32_t)0x2D44, (int32_t)0x12669, (int32_t)0x3604, (int32_t)0xDC, (int32_t)0x2A3C23, (int32_t)0x18, (int32_t)0x4, (int32_t)0x4B977, (int32_t)0xE2, (int32_t)0xE, (int32_t)0x9B, (int32_t)0x2, (int32_t)0x12A, (int32_t)0x64E821E, (int32_t)0x532AA4E, (int32_t)0x217E, (int32_t)0x498344, (int32_t)0xC5A0D9E, (int32_t)0xBBAAD55, (int32_t)0x2E, (int32_t)0x1474C161, (int32_t)0x1F, (int32_t)0x25897903, (int32_t)0x170DEE, (int32_t)0x1003A, (int32_t)0x1000F, (int32_t)0x1000C, (int32_t)0x10035, (int32_t)0x10014, (int32_t)0xFFF0, (int32_t)0x10010, (int32_t)0xFFBF, (int32_t)0xFFD0, (int32_t)0x1002B, (int32_t)0x1002D, (int32_t)0x10011, (int32_t)0xFFF7, (int32_t)0x10033, (int32_t)0xFFC1, (int32_t)0x10025, (int32_t)0xFFCB, (int32_t)0xFFDC, (int32_t)0xFFE8, (int32_t)0xFFCE, (int32_t)0x1002D, (int32_t)0x10039, (int32_t)0x1001B, (int32_t)0xFFFC, (int32_t)0xFFFD, (int32_t)0xFFF6, (int32_t)0xFFDD, (int32_t)0x10014, (int32_t)0x10014, (int32_t)0x10022, (int32_t)0xFFC8, (int32_t)0xFFE5, (int32_t)0x10006, (int32_t)0x10022, (int32_t)0xFFE4, (int32_t)0xFFC9, (int32_t)0x10004, (int32_t)0xFFCF, (int32_t)0x10039, (int32_t)0x1002E, (int32_t)0xFFFC, (int32_t)0xFFD9, (int32_t)0x1002F, (int32_t)0xFFF5, (int32_t)0xFFC3, (int32_t)0xFFDE, (int32_t)0x1003F, (int32_t)0x1002C, (int32_t)0x10033, (int32_t)0xFFCE };
		static const int32_t output0[] = { (int32_t)0xFFFAEF36, (int32_t)0xFFF6D1F7, (int32_t)0x1D874, (int32_t)0xFFF295C0, (int32_t)0x9AEFE, (int32_t)0xFFF9186B, (int32_t)0xFFF57DEA, (int32_t)0xA4CDB, (int32_t)0xFFF495C0, (int32_t)0x62A2F, (int32_t)0xB8400, (int32_t)0xFFF50B5D, (int32_t)0x8E946, (int32_t)0x1222D, (int32_t)0xFFF77382, (int32_t)0xFFF295C0, (int32_t)0xC2A02, (int32_t)0xCD9F0, (int32_t)0xFFFB53DA, (int32_t)0xFFFB4B46, (int32_t)0x97674, (int32_t)0xCF795, (int32_t)0x19DDD, (int32_t)0x1919E, (int32_t)0xBC68F, (int32_t)0xFFF195C0, (int32_t)0xFFFD8016, (int32_t)0x33A1, (int32_t)0xFFFDC15B, (int32_t)0xFFF7C807, (int32_t)0x5667E, (int32_t)0xFFF495C0, (int32_t)0xFFF20000, (int32_t)0x23D7A, (int32_t)0xFFF7D1F7, (int32_t)0xFFF3CEAE, (int32_t)0xFFF746B0, (int32_t)0xFFF10000, (int32_t)0xFFF8381B, (int32_t)0xAA829, (int32_t)0xA60C0, (int32_t)0xFFFD10D5, (int32_t)0x6332E, (int32_t)0xBA06B, (int32_t)0xB8D52, (int32_t)0xFFF58608, (int32_t)0xC5ABD, (int32_t)0xFFF4F446, (int32_t)0xD3AF1, (int32_t)0x486E7, (int32_t)0x53, (int32_t)0x15, (int32_t)0x11, (int32_t)0x4C, (int32_t)0x1C, (int32_t)0xFFFFFFE8, (int32_t)0x17, (int32_t)0xFFFFFFA2, (int32_t)0xFFFFFFBA, (int32_t)0x3E, (int32_t)0x40, (int32_t)0x18, (int32_t)0xFFFFFFF3, (int32_t)0x49, (int32_t)0xFFFFFFA5, (int32_t)0x35, (int32_t)0xFFFFFFB3, (int32_t)0xFFFFFFCC, (int32_t)0xFFFFFFDD, (int32_t)0xFFFFFFB7, (int32_t)0x40, (int32_t)0x52, (int32_t)0x26, (int32_t)0xFFFFFFFA, (int32_t)0xFFFFFFFB, (int32_t)0xFFFFFFF1, (int32_t)0xFFFFFFCD, (int32_t)0x1C, (int32_t)0x1C, (int32_t)0x31, (int32_t)0xFFFFFFAF, (int32_t)0xFFFFFFD9, (int32_t)0x8, (int32_t)0x31, (int32_t)0xFFFFFFD7, (int32_t)0xFFFFFFB0, (int32_t)0x5, (int32_t)0xFFFFFFB9, (int32_t)0x52, (int32_t)0x42, (int32_t)0xFFFFFFFA, (int32_t)0xFFFFFFC7, (int32_t)0x43, (int32_t)0xFFFFFFF0, (int32_t)0xFFFFFFA7, (int32_t)0xFFFFFFCE, (int32_t)0x5A, (int32_t)0x3F, (int32_t)0x49, (int32_t)0xFFFFFFB7 };
		for (int ndx = 0; ndx < 100; ndx++)
			Util::Check("Fixed32::Log2Fast", Fixed32::Log2Fast(input0[ndx]), output0[ndx], input0[ndx]);
	}

	// Fixed32.Log2Fastest()
	static void Fixed32_Log2Fastest()
	{
		static const int32_t input0[] = { (int32_t)0x6, (int32_t)0x336375, (int32_t)0x1923B05, (int32_t)0x323DEF6, (int32_t)0x2169BAA, (int32_t)0x2, (int32_t)0xAA364C5, (int32_t)0x16, (int32_t)0x29F6, (int32_t)0xC7, (int32_t)0x24, (int32_t)0x2552FAC7, (int32_t)0x994, (int32_t)0xDC2, (int32_t)0x6A0E0C, (int32_t)0x21514, (int32_t)0x9, (int32_t)0x13ECDC, (int32_t)0x58C12, (int32_t)0x1532A9F7, (int32_t)0x160, (int32_t)0x21456905, (int32_t)0x2C3, (int32_t)0x57AA, (int32_t)0xF1224, (int32_t)0xAFD85, (int32_t)0x8, (int32_t)0x2B5, (int32_t)0x30DB, (int32_t)0xE3, (int32_t)0x3ABA, (int32_t)0x1550, (int32_t)0x8BDB11, (int32_t)0x14B5D, (int32_t)0x2FE433, (int32_t)0xC44, (int32_t)0x7653, (int32_t)0x27F6CB, (int32_t)0x11F38D21, (int32_t)0x220, (int32_t)0x3D, (int32_t)0x1EF5, (int32_t)0x2BD97C, (int32_t)0x2F67E1, (int32_t)0x326A0D, (int32_t)0xAE17, (int32_t)0x35B0C1A, (int32_t)0x984E, (int32_t)0x160E9E, (int32_t)0x802C, (int32_t)0xFFD3, (int32_t)0xFFE8, (int32_t)0xFFDD, (int32_t)0x1003A, (int32_t)0x10030, (int32_t)0xFFCA, (int32_t)0xFFF5, (int32_t)0xFFEC, (int32_t)0xFFD8, (int32_t)0xFFD7, (int32_t)0x10039, (int32_t)0x1000F, (int32_t)0x10018, (int32_t)0xFFD7, (int32_t)0x10025, (int32_t)0x10020, (int32_t)0xFFD9, (int32_t)0x1002A, (int32_t)0x10015, (int32_t)0xFFF0, (int32_t)0xFFC8, (int32_t)0xFFF0, (int32_t)0x1001E, (int32_t)0xFFE8, (int32_t)0x10023, (int32_t)0x1002D, (int32_t)0xFFE0, (int32_t)0x1000A, (int32_t)0x10020, (int32_t)0xFFD2, (int32_t)0x10025, (int32_t)0x1000A, (int32_t)0x1000F, (int32_t)0x1003B, (int32_t)0xFFC7, (int32_t)0xFFCF, (int32_t)0xFFD2, (int32_t)0x10029, (int32_t)0x10015, (int32_t)0x1000F, (int32_t)0x1003A, (int32_t)0xFFCF, (int32_t)0x10000, (int32_t)0x1001F, (int32_t)0xFFEB, (int32_t)0x10006, (int32_t)0x1001D, (int32_t)0x10001, (int32_t)0x10037, (int32_t)0x1003C };
		static const int32_t output0[] = { (int32_t)0xFFF295BC, (int32_t)0x5AEEF, (int32_t)0x8A6DE, (int32_t)0x9A699, (int32_t)0x90FF5, (int32_t)0xFFF10000, (int32_t)0xB6943, (int32_t)0xFFF4759B, (int32_t)0xFFFD6417, (int32_t)0xFFF7A2F7, (int32_t)0xFFF52B81, (int32_t)0xD38D9, (int32_t)0xFFFB4280, (int32_t)0xFFFBC83D, (int32_t)0x6BA89, (int32_t)0x10EE6, (int32_t)0xFFF32B81, (int32_t)0x45109, (int32_t)0x278C2, (int32_t)0xC67E5, (int32_t)0xFFF8759B, (int32_t)0xD0E63, (int32_t)0xFFF9772D, (int32_t)0xFFFE7432, (int32_t)0x3E9E8, (int32_t)0x37548, (int32_t)0xFFF30000, (int32_t)0xFFF96FCB, (int32_t)0xFFFD9C43, (int32_t)0xFFF7D399, (int32_t)0xFFFDE03F, (int32_t)0xFFFC69E3, (int32_t)0x720B8, (int32_t)0x5F4D, (int32_t)0x594E6, (int32_t)0xFFFB9DD3, (int32_t)0xFFFEE2F9, (int32_t)0x55216, (int32_t)0xC2A82, (int32_t)0xFFF91664, (int32_t)0xFFF5EE45, (int32_t)0xFFFCF3C3, (int32_t)0x57457, (int32_t)0x59123, (int32_t)0x5A7DD, (int32_t)0xFFFF7194, (int32_t)0x9BF20, (int32_t)0xFFFF4037, (int32_t)0x47690, (int32_t)0xFFFF007E, (int32_t)0xFFFFFFBF, (int32_t)0xFFFFFFDD, (int32_t)0xFFFFFFCD, (int32_t)0x53, (int32_t)0x45, (int32_t)0xFFFFFFB2, (int32_t)0xFFFFFFF0, (int32_t)0xFFFFFFE3, (int32_t)0xFFFFFFC6, (int32_t)0xFFFFFFC4, (int32_t)0x52, (int32_t)0x15, (int32_t)0x22, (int32_t)0xFFFFFFC4, (int32_t)0x35, (int32_t)0x2E, (int32_t)0xFFFFFFC7, (int32_t)0x3C, (int32_t)0x1E, (int32_t)0xFFFFFFE8, (int32_t)0xFFFFFFAF, (int32_t)0xFFFFFFE8, (int32_t)0x2B, (int32_t)0xFFFFFFDD, (int32_t)0x32, (int32_t)0x40, (int32_t)0xFFFFFFD1, (int32_t)0xE, (int32_t)0x2E, (int32_t)0xFFFFFFBD, (int32_t)0x35, (int32_t)0xE, (int32_t)0x15, (int32_t)0x55, (int32_t)0xFFFFFFAD, (int32_t)0xFFFFFFB9, (int32_t)0xFFFFFFBD, (int32_t)0x3B, (int32_t)0x1E, (int32_t)0x15, (int32_t)0x53, (int32_t)0xFFFFFFB9, (int32_t)0x0, (int32_t)0x2C, (int32_t)0xFFFFFFE1, (int32_t)0x8, (int32_t)0x29, (int32_t)0x1, (int32_t)0x4F, (int32_t)0x56 };
		for (int ndx = 0; ndx < 100; ndx++)
			Util::Check("Fixed32::Log2Fastest", Fixed32::Log2Fastest(input0[ndx]), output0[ndx], input0[ndx]);
	}

	// Fixed64.Pow()
	static void Fixed64_Pow()
	{
		static const int64_t input0[] = { (int64_t)0x37FC3LL, (int64_t)0x1942LL, (int64_t)0x183746AALL, (int64_t)0x38092LL, (int64_t)0x125F15LL, (int64_t)0xD24C689LL, (int64_t)0xDD3DDCLL, (int64_t)0x4DBD3033LL, (int64_t)0xB574LL, (int64_t)0x171ALL, (int64_t)0x1783542CLL, (int64_t)0x1B84F0F8LL, (int64_t)0x104DF91LL, (int64_t)0x1EAELL, (int64_t)0x12EC9DLL, (int64_t)0x921B0LL, (int64_t)0xFF9D296DLL, (int64_t)0x67391B0LL, (int64_t)0x58D3LL, (int64_t)0x247C024LL, (int64_t)0xF36BB6LL, (int64_t)0xF2121LL, (int64_t)0x9D3DLL, (int64_t)0x1DD8LL, (int64_t)0x1BF73ALL, (int64_t)0x7C448BECLL, (int64_t)0x2E6AE63FLL, (int64_t)0xD2716A69LL, (int64_t)0xC932F932LL, (int64_t)0x1703ELL, (int64_t)0x5664LL, (int64_t)0x7F01029LL, (int64_t)0x248C37DLL, (int64_t)0xE32195ELL, (int64_t)0x2853AAAALL, (int64_t)0x8803920LL, (int64_t)0x83C965ELL, (int64_t)0x66C27LL, (int64_t)0x787C15LL, (int64_t)0x3691DLL, (int64_t)0x6F9EE6LL, (int64_t)0x1DEA0LL, (int64_t)0x1DE9790LL, (int64_t)0x1BC9939LL, (int64_t)0xEB5CEA3LL, (int64_t)0x48CELL, (int64_t)0x5F6F43LL, (int64_t)0x254A33LL, (int64_t)0x68FC7LL, (int64_t)0xCC4263EDLL, (int64_t)0xD0914B1C4LL, (int64_t)0x7516CAA84LL, (int64_t)0x22F100B9ALL, (int64_t)0x688231289LL, (int64_t)0x2D93E7016LL, (int64_t)0xB90DAA9D3LL, (int64_t)0x947714A1BLL, (int64_t)0x4B3C4BC8FLL, (int64_t)0x18007932ELL, (int64_t)0x109D58674LL, (int64_t)0x17DAB8D7BLL, (int64_t)0x298E990C2LL, (int64_t)0x475710A35LL, (int64_t)0x432EC50E6LL, (int64_t)0x11DD8EDECLL, (int64_t)0x3E8030262LL, (int64_t)0xDEC57773BLL, (int64_t)0xD42A5A82CLL, (int64_t)0x22688F08FLL, (int64_t)0x8AACF241ALL, (int64_t)0x76BF7CA22LL, (int64_t)0x8E1F6898DLL, (int64_t)0x2E7D88E7BLL, (int64_t)0x1C446918ELL, (int64_t)0x878C0A8CELL, (int64_t)0x5EFFCEBEFLL, (int64_t)0x1AC7A8AF1LL, (int64_t)0x15726F633LL, (int64_t)0x38D6600BCLL, (int64_t)0x1A9BBC4FCLL, (int64_t)0x11EDD3DF4LL, (int64_t)0x12A08DEE5LL, (int64_t)0x8EC057D61LL, (int64_t)0x464B40E2FLL, (int64_t)0x3151D571ALL, (int64_t)0x703DE6634LL, (int64_t)0x174BD29C0LL, (int64_t)0xEF3438E46LL, (int64_t)0x5998B9C49LL, (int64_t)0x8EDFC62A0LL, (int64_t)0x2715EE532LL, (int64_t)0x91F28F07BLL, (int64_t)0x1FA8A2380LL, (int64_t)0x3202474B4LL, (int64_t)0x9EF8F4648LL, (int64_t)0x47D4CF8C5LL, (int64_t)0x33E8726F8LL, (int64_t)0xE8294F2B4LL, (int64_t)0x1213FDD63LL, (int64_t)0xBA97991C4LL };
		static const int64_t input1[] = { (int64_t)0x3BF9DBD5LL, (int64_t)0x12A8935E53LL, (int64_t)0xC895745LL, (int64_t)0x39150A5LL, (int64_t)0x99B2173LL, (int64_t)0x7007AE6A6LL, (int64_t)0x5646F36B9LL, (int64_t)0x270E97FDALL, (int64_t)0x482BB1761LL, (int64_t)0x186C9A10LL, (int64_t)0x8185DFC88LL, (int64_t)0x63A97C29LL, (int64_t)0xA1D8DEA84LL, (int64_t)0xC0ABEBC0CLL, (int64_t)0x7C5105A32LL, (int64_t)0x8EBDB0LL, (int64_t)0x186380CLL, (int64_t)0x306DF7854LL, (int64_t)0x17BFEA3LL, (int64_t)0xAAA5090DLL, (int64_t)0x67877246LL, (int64_t)0xBF2B0D8ELL, (int64_t)0x1AC0E29LL, (int64_t)0x3E2EB5986LL, (int64_t)0xD68B2FLL, (int64_t)0x86558FCLL, (int64_t)0x1AE6FEDFALL, (int64_t)0x2DA45768LL, (int64_t)0x2FF9033LL, (int64_t)0x6DD981ELL, (int64_t)0x1078D41FLL, (int64_t)0xFF2DB4DLL, (int64_t)0xA3C24AD1LL, (int64_t)0x13C8E5343CLL, (int64_t)0xC809907BLL, (int64_t)0xE36E39LL, (int64_t)0x8AB2E5DLL, (int64_t)0xC7913B9LL, (int64_t)0x112963A9LL, (int64_t)0xF2FED85A5LL, (int64_t)0x675CA54E5LL, (int64_t)0xDF37AB4C6LL, (int64_t)0x1E5E29A8LL, (int64_t)0x964EF7LL, (int64_t)0xABFE2FBLL, (int64_t)0xAA46C661CLL, (int64_t)0x5974693LL, (int64_t)0xFA12B22BLL, (int64_t)0x16FA2F7F5LL, (int64_t)0x12F4D6D1CLL, (int64_t)0xE91C354BLL, (int64_t)0x38323FCLL, (int64_t)0x4A019A3LL, (int64_t)0xBBCF4652LL, (int64_t)0xF1B71C21LL, (int64_t)0xAA6ACALL, (int64_t)0x28E886ELL, (int64_t)0x6F2191LL, (int64_t)0x85ECB88ELL, (int64_t)0x2912886ALL, (int64_t)0x1F9B4DBCLL, (int64_t)0x1FBF1F52LL, (int64_t)0x83CC62LL, (int64_t)0xC602EA7FLL, (int64_t)0xD3C46054LL, (int64_t)0x795EF3LL, (int64_t)0xBD47B29LL, (int64_t)0x43FE36LL, (int64_t)0x8D8E0FLL, (int64_t)0x2A0E8A9LL, (int64_t)0x2FE26C5LL, (int64_t)0xD66744E0LL, (int64_t)0x2315A2DLL, (int64_t)0x7603225LL, (int64_t)0x6013435LL, (int64_t)0x99231512LL, (int64_t)0xACAA71ALL, (int64_t)0xD573B6A9LL, (int64_t)0x376BECFLL, (int64_t)0x13ED4FALL, (int64_t)0x1276D2DLL, (int64_t)0x12DAEFALL, (int64_t)0x645183LL, (int64_t)0xD3E606ALL, (int64_t)0xFF927ELL, (int64_t)0x18C7157FLL, (int64_t)0x14B1884BLL, (int64_t)0x516DFAD9LL, (int64_t)0xAD4C2C3LL, (int64_t)0x1A06769LL, (int64_t)0x34928A9LL, (int64_t)0x628BDBLL, (int64_t)0x69C97BLL, (int64_t)0x74AB7DE3LL, (int64_t)0x7C2264LL, (int64_t)0x131B93BALL, (int64_t)0x1F63CC4FLL, (int64_t)0x1CFE770LL, (int64_t)0x54B0579LL, (int64_t)0x2A2D6CCFLL };
		static const int64_t output0[] = { (int64_t)0x198AEDFELL, (int64_t)0x0LL, (int64_t)0xE4147A9ALL, (int64_t)0xDF345F9CLL, (int64_t)0xBC573D7ELL, (int64_t)0x4LL, (int64_t)0x0LL, (int64_t)0xDF497AFLL, (int64_t)0x0LL, (int64_t)0x46A3DD15LL, (int64_t)0x11LL, (int64_t)0x6B7025AFLL, (int64_t)0x0LL, (int64_t)0x0LL, (int64_t)0x0LL, (int64_t)0xFB18D67CLL, (int64_t)0xFFFF6932LL, (int64_t)0xF33FLL, (int64_t)0xEE9657F8LL, (int64_t)0xB0138CELL, (int64_t)0x1AA2E0B4LL, (int64_t)0x7E2025LL, (int64_t)0xED5AD422LL, (int64_t)0x0LL, (int64_t)0xF9943EEALL, (int64_t)0xFA00DA9CLL, (int64_t)0xE802D02LL, (int64_t)0xF735D99CLL, (int64_t)0xFF475E70LL, (int64_t)0xC00023FALL, (int64_t)0x74F167F0LL, (int64_t)0xCE2F8A60LL, (int64_t)0xC823447LL, (int64_t)0x0LL, (int64_t)0x3C671175LL, (int64_t)0xFCFE2852LL, (int64_t)0xE3E09E60LL, (int64_t)0xA346A77ELL, (int64_t)0xA7D305C8LL, (int64_t)0x0LL, (int64_t)0x0LL, (int64_t)0x0LL, (int64_t)0x8ED29FC0LL, (int64_t)0xFD15C43CLL, (int64_t)0xE31008B6LL, (int64_t)0x0LL, (int64_t)0xDDF7404ALL, (int64_t)0x2C54FBLL, (int64_t)0x1E47LL, (int64_t)0xC3E9B968LL, (int64_t)0xA5C867E60LL, (int64_t)0x1071643E0LL, (int64_t)0x103A37178LL, (int64_t)0x3F650C460LL, (int64_t)0x2AFDDF170LL, (int64_t)0x101A28610LL, (int64_t)0x105C27DCCLL, (int64_t)0x100AC4308LL, (int64_t)0x13C80E0B8LL, (int64_t)0x1018D8C30LL, (int64_t)0x10CF08020LL, (int64_t)0x1202AE710LL, (int64_t)0x100C551ACLL, (int64_t)0x308A67EC0LL, (int64_t)0x11873C1B4LL, (int64_t)0x100A596A8LL, (int64_t)0x121214A88LL, (int64_t)0x100AFFBD4LL, (int64_t)0x1006C7B14LL, (int64_t)0x105BD6A74LL, (int64_t)0x10611D338LL, (int64_t)0x63A9F2470LL, (int64_t)0x102598450LL, (int64_t)0x1043B7678LL, (int64_t)0x10D284C24LL, (int64_t)0x2E7056188LL, (int64_t)0x1059E81E4LL, (int64_t)0x146D792B4LL, (int64_t)0x1046DBE50LL, (int64_t)0x100A25F08LL, (int64_t)0x10021A340LL, (int64_t)0x1002DE1C8LL, (int64_t)0x100DBEAF8LL, (int64_t)0x1145F3444LL, (int64_t)0x101205728LL, (int64_t)0x1351E78F8LL, (int64_t)0x107E4D2C8LL, (int64_t)0x25D2B7B38LL, (int64_t)0x1135B1A78LL, (int64_t)0x103960A14LL, (int64_t)0x102F39F40LL, (int64_t)0x100DA3748LL, (int64_t)0x100483B5CLL, (int64_t)0x1AE53CEACLL, (int64_t)0x1011DA708LL, (int64_t)0x11E5D5894LL, (int64_t)0x127BD99F8LL, (int64_t)0x104E4B2B4LL, (int64_t)0x100A5ACB0LL, (int64_t)0x17FB45B2CLL };
		for (int ndx = 0; ndx < 100; ndx++)
			Util::Check("Fixed64::Pow", Fixed64::Pow(input0[ndx], input1[ndx]), output0[ndx], input0[ndx], input1[ndx]);
	}

	// Fixed64.PowFast()
	static void Fixed64_PowFast()
	{
		static const int64_t input0[] = { (int64_t)0xD516C568LL, (int64_t)0x157213LL, (int64_t)0x21B718DELL, (int64_t)0x4764EC6LL, (int64_t)0x632E49LL, (int64_t)0x13D5LL, (int64_t)0x2B0BLL, (int64_t)0x64ACDDA5LL, (int64_t)0x401C6CLL, (int64_t)0x29CCLL, (int64_t)0xF96026LL, (int64_t)0x96725LL, (int64_t)0x40553C7LL, (int64_t)0x2F5CE19LL, (int64_t)0x53040FLL, (int64_t)0x2F2483LL, (int64_t)0x1AE1F64LL, (int64_t)0x6309DDLL, (int64_t)0xA122D7DLL, (int64_t)0x4C981LL, (int64_t)0x226678LL, (int64_t)0x567333FLL, (int64_t)0x27686ELL, (int64_t)0x1D958FD9LL, (int64_t)0xA3D4C44DLL, (int64_t)0x3F612LL, (int64_t)0x44EA6BEELL, (int64_t)0x17266ELL, (int64_t)0xF29C5LL, (int64_t)0x1948192FLL, (int64_t)0x18F4DLL, (int64_t)0x252FFLL, (int64_t)0x6A93FFLL, (int64_t)0x1BA03EFLL, (int64_t)0x1DD0CLL, (int64_t)0xFE5AE1DLL, (int64_t)0xA8B76LL, (int64_t)0x8CF5FLL, (int64_t)0x1DABLL, (int64_t)0xD7D6LL, (int64_t)0xEF4BF5LL, (int64_t)0x440E42CLL, (int64_t)0x6C735LL, (int64_t)0x2F162ALL, (int64_t)0x2B74E3CLL, (int64_t)0x1343LL, (int64_t)0x96F47LL, (int64_t)0xEC47BLL, (int64_t)0xABEE8LL, (int64_t)0x146DDC3LL, (int64_t)0x1AC70636ALL, (int64_t)0x249BA6B45LL, (int64_t)0xE36553CB4LL, (int64_t)0x613CBC281LL, (int64_t)0x416BB4352LL, (int64_t)0x718538305LL, (int64_t)0x68BDDF7D2LL, (int64_t)0xD6BCA218BLL, (int64_t)0x3202717B3LL, (int64_t)0x46A731465LL, (int64_t)0xB811693C1LL, (int64_t)0xEAD08FCE5LL, (int64_t)0xA2BD8322BLL, (int64_t)0x8BAE9947CLL, (int64_t)0x245831B25LL, (int64_t)0x531B39B88LL, (int64_t)0x51AD60F71LL, (int64_t)0x83D6D27DALL, (int64_t)0x9C25C085FLL, (int64_t)0x889F08E40LL, (int64_t)0x53E5DEEC8LL, (int64_t)0x32D677705LL, (int64_t)0x7220AF357LL, (int64_t)0x390D4EE5ELL, (int64_t)0xB535B2EAELL, (int64_t)0x8008DCE62LL, (int64_t)0x655F1B671LL, (int64_t)0x698DB5152LL, (int64_t)0x408D681CCLL, (int64_t)0x860A74211LL, (int64_t)0x50FCD744DLL, (int64_t)0x7437BAD50LL, (int64_t)0x29F45F43FLL, (int64_t)0xA46E4F2A2LL, (int64_t)0x88088529CLL, (int64_t)0x5E00F60CBLL, (int64_t)0x4AAB47624LL, (int64_t)0x31236370BLL, (int64_t)0x21CEB7A3ALL, (int64_t)0x176E5BDA4LL, (int64_t)0x2E9633938LL, (int64_t)0x94BF8F3E9LL, (int64_t)0xFD5EC38B7LL, (int64_t)0x9A1518BBCLL, (int64_t)0x14D6B1673LL, (int64_t)0xB48A22D41LL, (int64_t)0x43F79A13ALL, (int64_t)0xA1981E546LL, (int64_t)0x4235F4C17LL, (int64_t)0x3D26F3ABALL };
		static const int64_t input1[] = { (int64_t)0x11C87E8BDDLL, (int64_t)0x15430D5LL, (int64_t)0x2B0F3894LL, (int64_t)0xE88F83LL, (int64_t)0x454CCBALL, (int64_t)0x3910C47LL, (int64_t)0xCEE28C9D0LL, (int64_t)0x47F92ELL, (int64_t)0x182D52ADDLL, (int64_t)0x2933FBELL, (int64_t)0xBD47E2LL, (int64_t)0x95FAC743LL, (int64_t)0x34F41A0BLL, (int64_t)0xBB58AF47LL, (int64_t)0x3F77B270ALL, (int64_t)0x74F0252LL, (int64_t)0x382523C49LL, (int64_t)0x7820AALL, (int64_t)0x12FEB8C2LL, (int64_t)0x13A6EA4DCLL, (int64_t)0xBFBB6ALL, (int64_t)0x4280109LL, (int64_t)0x205893CALL, (int64_t)0x50AC2E05LL, (int64_t)0x1361237F1LL, (int64_t)0x1AE3D1B0ALL, (int64_t)0xB964AB8LL, (int64_t)0x119A98BE0FLL, (int64_t)0x16B051BLL, (int64_t)0xD2767DA10LL, (int64_t)0xABC7DB589LL, (int64_t)0x29209D3BLL, (int64_t)0x719C02LL, (int64_t)0x236A45670LL, (int64_t)0x4475BC7BDLL, (int64_t)0x7A77EFLL, (int64_t)0x189008240LL, (int64_t)0xE751019LL, (int64_t)0x8680A18LL, (int64_t)0xFD1BC1409LL, (int64_t)0x438404DA4LL, (int64_t)0x8E5E3EBLL, (int64_t)0x71B43B71LL, (int64_t)0x2FDEA8869LL, (int64_t)0x8D9E4FLL, (int64_t)0xC37663653LL, (int64_t)0x14FED3CLL, (int64_t)0xC28CA5F8LL, (int64_t)0x90058461LL, (int64_t)0x6E4A4CBLL, (int64_t)0x3204E4DLL, (int64_t)0x42E7545LL, (int64_t)0x59A5C115LL, (int64_t)0x6563632ALL, (int64_t)0x29023D1BLL, (int64_t)0x33D4627DLL, (int64_t)0xF104407LL, (int64_t)0x8061AA3LL, (int64_t)0x3648F868LL, (int64_t)0x300D1A98LL, (int64_t)0x56E30BLL, (int64_t)0xFB1F5966LL, (int64_t)0x51D2F2ELL, (int64_t)0x15F34C23LL, (int64_t)0xB6310249LL, (int64_t)0xCE1499LL, (int64_t)0x12B1B703LL, (int64_t)0xF97E1362LL, (int64_t)0x4600E7LL, (int64_t)0x17FD126DLL, (int64_t)0x5591A4LL, (int64_t)0xE86EA2LL, (int64_t)0x7995F93LL, (int64_t)0x1CE079ACLL, (int64_t)0x3BC5D1CLL, (int64_t)0x3D769857LL, (int64_t)0x4AE2F94LL, (int64_t)0x792F6DE3LL, (int64_t)0x325D3A4LL, (int64_t)0x4224CELL, (int64_t)0x13D775BLL, (int64_t)0x501CAB65LL, (int64_t)0xD17699LL, (int64_t)0x4AFE9DLL, (int64_t)0x42E88AFLL, (int64_t)0xE417EDLL, (int64_t)0x6633869FLL, (int64_t)0x72341C5LL, (int64_t)0x87C88BLL, (int64_t)0x42FD31LL, (int64_t)0x5BC949LL, (int64_t)0x611693LL, (int64_t)0x13C3A609LL, (int64_t)0x8CB7C1ALL, (int64_t)0x7FDECBLL, (int64_t)0x3BDAD9CLL, (int64_t)0x350370ALL, (int64_t)0x2E8E97CLL, (int64_t)0x65894198LL, (int64_t)0x9D3E91BELL };
		static const int64_t output0[] = { (int64_t)0x9CD325DLL, (int64_t)0xF58E4CF8LL, (int64_t)0xB608C17ELL, (int64_t)0xFC591222LL, (int64_t)0xE55D9E58LL, (int64_t)0xD3AB7F80LL, (int64_t)0x0LL, (int64_t)0xFFBCDF3ALL, (int64_t)0x1DB71LL, (int64_t)0xE0D6D626LL, (int64_t)0xFBE9FE34LL, (int64_t)0x16F32A8LL, (int64_t)0x6C6AC855LL, (int64_t)0x9CA1A5CLL, (int64_t)0x0LL, (int64_t)0xD03658CCLL, (int64_t)0x5DLL, (int64_t)0xFCF880D0LL, (int64_t)0xC95C83D4LL, (int64_t)0x8B5FLL, (int64_t)0xFA680110LL, (int64_t)0xF074FE2CLL, (int64_t)0x644B2863LL, (int64_t)0x81B0C782LL, (int64_t)0x95178DF4LL, (int64_t)0x15DLL, (int64_t)0xF13CE90CLL, (int64_t)0x0LL, (int64_t)0xF466925ALL, (int64_t)0x0LL, (int64_t)0x0LL, (int64_t)0x3159D87CLL, (int64_t)0xFD2A9690LL, (int64_t)0x10690LL, (int64_t)0x0LL, (int64_t)0xFEAC946CLL, (int64_t)0x192FLL, (int64_t)0x9ABD7BECLL, (int64_t)0xA5B573F2LL, (int64_t)0x0LL, (int64_t)0x0LL, (int64_t)0xDE04A9B4LL, (int64_t)0x458A228LL, (int64_t)0x1LL, (int64_t)0xFD7F6DB2LL, (int64_t)0x0LL, (int64_t)0xF4A6F858LL, (int64_t)0x6EDC75LL, (int64_t)0x1E65D99LL, (int64_t)0xDDF2DFF4LL, (int64_t)0x1019D5EDCLL, (int64_t)0x1037BE40CLL, (int64_t)0x288773588LL, (int64_t)0x20B267D58LL, (int64_t)0x140C8C904LL, (int64_t)0x17CA5A448LL, (int64_t)0x11DED3B98LL, (int64_t)0x115B51330LL, (int64_t)0x145FB242CLL, (int64_t)0x1524E4230LL, (int64_t)0x100D48CE8LL, (int64_t)0xDF196D180LL, (int64_t)0x10C23F790LL, (int64_t)0x134447C44LL, (int64_t)0x1CB0406C4LL, (int64_t)0x101545A60LL, (int64_t)0x1205CF440LL, (int64_t)0x7CF527E50LL, (int64_t)0x1009FA6C4LL, (int64_t)0x138FB344CLL, (int64_t)0x1008DEB5CLL, (int64_t)0x1010D3680LL, (int64_t)0x10F5F902CLL, (int64_t)0x1277A09FCLL, (int64_t)0x1093A896CLL, (int64_t)0x1A5C8E3B4LL, (int64_t)0x108C9A394LL, (int64_t)0x271537CD0LL, (int64_t)0x1046D96D4LL, (int64_t)0x1008CB874LL, (int64_t)0x10204C9F4LL, (int64_t)0x1DC2203C0LL, (int64_t)0x100CA33A0LL, (int64_t)0x100AEEF68LL, (int64_t)0x1091B95B0LL, (int64_t)0x1019514D8LL, (int64_t)0x1D982DDECLL, (int64_t)0x108227920LL, (int64_t)0x10065A414LL, (int64_t)0x100198E2CLL, (int64_t)0x1006226E4LL, (int64_t)0x100D8CC44LL, (int64_t)0x13CDA707CLL, (int64_t)0x114B6D95CLL, (int64_t)0x10021CA00LL, (int64_t)0x1093A2A70LL, (int64_t)0x104D64AE4LL, (int64_t)0x106D14228LL, (int64_t)0x1C1A87FE8LL, (int64_t)0x247513248LL };
		for (int ndx = 0; ndx < 100; ndx++)
			Util::Check("Fixed64::PowFast", Fixed64::PowFast(input0[ndx], input1[ndx]), output0[ndx], input0[ndx], input1[ndx]);
	}

	// Fixed64.PowFastest()
	static void Fixed64_PowFastest()
	{
		static const int64_t input0[] = { (int64_t)0x22821LL, (int64_t)0x5D1C15LL, (int64_t)0x16A9985BLL, (int64_t)0x2287CC01LL, (int64_t)0x1EA421LL, (int64_t)0xC6E6LL, (int64_t)0x4D834669LL, (int64_t)0xA1B1LL, (int64_t)0x304572LL, (int64_t)0x71F661F2LL, (int64_t)0x80958LL, (int64_t)0x3F49765LL, (int64_t)0x6D03LL, (int64_t)0xB4CF569LL, (int64_t)0x62651ELL, (int64_t)0x12D21LL, (int64_t)0x181D44B5LL, (int64_t)0x13F8D5LL, (int64_t)0x1CE41LL, (int64_t)0xAB43FEBLL, (int64_t)0x410E1LL, (int64_t)0x7315LL, (int64_t)0x38A47404LL, (int64_t)0x1252LL, (int64_t)0x1255E37LL, (int64_t)0xC6DB3521LL, (int64_t)0x8A4D93LL, (int64_t)0xBF1EE9F1LL, (int64_t)0xDB09D9LL, (int64_t)0xFF4C3888LL, (int64_t)0x168D3BLL, (int64_t)0x2B68LL, (int64_t)0x17E6LL, (int64_t)0x1A4326LL, (int64_t)0x7EC7F8CLL, (int64_t)0x43A6E49LL, (int64_t)0x128FLL, (int64_t)0x4F69DLL, (int64_t)0xB78CDFLL, (int64_t)0x1799BLL, (int64_t)0x29F33LL, (int64_t)0x43BC496LL, (int64_t)0x11B5LL, (int64_t)0xA1C8LL, (int64_t)0x22E6487LL, (int64_t)0x851E8LL, (int64_t)0x567799C0LL, (int64_t)0x2291165ELL, (int64_t)0xC93EB6DALL, (int64_t)0x364C597DLL, (int64_t)0x68DA7A1F5LL, (int64_t)0x1D6DA8F4DLL, (int64_t)0x9F827DD1BLL, (int64_t)0x18AB2E15BLL, (int64_t)0x6B34B2C2FLL, (int64_t)0x120C66110LL, (int64_t)0x162554898LL, (int64_t)0x14F305620LL, (int64_t)0x52C25F6F3LL, (int64_t)0x11A0E99CALL, (int64_t)0xF0DEAF135LL, (int64_t)0xC643B3209LL, (int64_t)0x3A60FEACBLL, (int64_t)0xF80D0393ALL, (int64_t)0x30E7855A2LL, (int64_t)0xD07A8DA89LL, (int64_t)0xD7D0C943CLL, (int64_t)0xB61021F98LL, (int64_t)0x11C0E0DA6LL, (int64_t)0x12824E6EBLL, (int64_t)0x271B3B7F0LL, (int64_t)0x7D7CA46F0LL, (int64_t)0xC135E60E9LL, (int64_t)0x2F465D299LL, (int64_t)0x82E30E869LL, (int64_t)0x1090C8E45LL, (int64_t)0x3792BFA5DLL, (int64_t)0x787A0E1D9LL, (int64_t)0x3272B0673LL, (int64_t)0x19B1E1AC4LL, (int64_t)0x3AC674D90LL, (int64_t)0x56BC61E08LL, (int64_t)0x140CD018ALL, (int64_t)0xEF31D7150LL, (int64_t)0x4FDAB0CB4LL, (int64_t)0xA4815A34ELL, (int64_t)0xB25609A6CLL, (int64_t)0xA4545577CLL, (int64_t)0x109C7BC91LL, (int64_t)0x301DA858FLL, (int64_t)0x2A1738D70LL, (int64_t)0xAD8688BFDLL, (int64_t)0x28BA6A55DLL, (int64_t)0x869E545DBLL, (int64_t)0x62E256447LL, (int64_t)0x18F8E7625LL, (int64_t)0x768BB77A4LL, (int64_t)0x13DE1F8F7LL, (int64_t)0x7207C8277LL, (int64_t)0x67D47A9DALL };
		static const int64_t input1[] = { (int64_t)0x4118721DLL, (int64_t)0xD060ADE2ELL, (int64_t)0xC6664CLL, (int64_t)0xA96D99LL, (int64_t)0x840D984FLL, (int64_t)0xC9AEA6LL, (int64_t)0x894DD2C6LL, (int64_t)0x34D6FC068LL, (int64_t)0x2F0D80ELL, (int64_t)0x1928F501LL, (int64_t)0x7CC272E9LL, (int64_t)0xA791ECF1FLL, (int64_t)0x4D5956D6LL, (int64_t)0x1D22A6DBLL, (int64_t)0x2B8AE2FELL, (int64_t)0x411A615LL, (int64_t)0xC7F012A4LL, (int64_t)0x10AB99CDALL, (int64_t)0x5486CCLL, (int64_t)0x395C5C705LL, (int64_t)0x1E30B89LL, (int64_t)0x2A5501DDLL, (int64_t)0x4140948ACLL, (int64_t)0x4BC2EDLL, (int64_t)0x255E4361LL, (int64_t)0x5D684B2BLL, (int64_t)0xFAB5CCLL, (int64_t)0x15618ED5CLL, (int64_t)0x84D42C7LL, (int64_t)0x34AA1B5LL, (int64_t)0x770E5DLL, (int64_t)0x103C8A701LL, (int64_t)0x134603D11FLL, (int64_t)0x10550C047LL, (int64_t)0x141881E4LL, (int64_t)0x19E0F0E9LL, (int64_t)0xD0F15DC1FLL, (int64_t)0x9F82FE6E0LL, (int64_t)0x2D8C33B5FLL, (int64_t)0x89C518FFLL, (int64_t)0x81010ELL, (int64_t)0x1AAADA4LL, (int64_t)0x7EE221LL, (int64_t)0xC54F48LL, (int64_t)0x61E93E30LL, (int64_t)0x6E195A4LL, (int64_t)0xE53375LL, (int64_t)0x2EC2DCA1LL, (int64_t)0x98CC3859LL, (int64_t)0xA94964DLL, (int64_t)0x3E4076ELL, (int64_t)0x16EE053LL, (int64_t)0x777F13ELL, (int64_t)0xF6005F4LL, (int64_t)0x5ECE5BLL, (int64_t)0xA3A1C598LL, (int64_t)0x25AFCFCLL, (int64_t)0x54C4BC5LL, (int64_t)0x4012FD5LL, (int64_t)0x1AD7D794LL, (int64_t)0xF89563FLL, (int64_t)0x3C3427ELL, (int64_t)0x1CA9AD64LL, (int64_t)0x4B7FBE9LL, (int64_t)0xCBE3260LL, (int64_t)0x342EB85LL, (int64_t)0x4D3030D7LL, (int64_t)0x7A0000CLL, (int64_t)0x44FC354LL, (int64_t)0xC76D928LL, (int64_t)0x60B4E2LL, (int64_t)0x813C9BLL, (int64_t)0x63BED5AALL, (int64_t)0x1559FE83LL, (int64_t)0x210EFFACLL, (int64_t)0x64063DBLL, (int64_t)0x43993EFLL, (int64_t)0xA13B8ELL, (int64_t)0x28B6B52FLL, (int64_t)0xFDFB219LL, (int64_t)0x1E6826DLL, (int64_t)0x3521268LL, (int64_t)0x4B28C4LL, (int64_t)0x2A62DCF9LL, (int64_t)0x36D3FFE6LL, (int64_t)0x12B6D8ELL, (int64_t)0x977F1CLL, (int64_t)0x77A7CF3LL, (int64_t)0x956C0F83LL, (int64_t)0x15FB9F66LL, (int64_t)0x93EB3BFLL, (int64_t)0x5069BDALL, (int64_t)0x56C5400LL, (int64_t)0x2AE3496LL, (int64_t)0x41885BEELL, (int64_t)0xC1E31A7FLL, (int64_t)0xDE2772LL, (int64_t)0x8E701727LL, (int64_t)0x10975C5LL, (int64_t)0x1E0E962LL };
		static const int64_t output0[] = { (int64_t)0x128D80AALL, (int64_t)0x0LL, (int64_t)0xFE21DE70LL, (int64_t)0xFEAE446ELL, (int64_t)0x4E70AF9LL, (int64_t)0xF73C0D5CLL, (int64_t)0x86E5054ALL, (int64_t)0x0LL, (int64_t)0xEBAA6840LL, (int64_t)0xEC73784CLL, (int64_t)0x32D5B10LL, (int64_t)0x0LL, (int64_t)0x6EF15BELL, (int64_t)0xB37596DELL, (int64_t)0x54B6ACFELL, (int64_t)0xD731A684LL, (int64_t)0x28732F4CLL, (int64_t)0xE3A87LL, (int64_t)0xFC907AB2LL, (int64_t)0xBF6CLL, (int64_t)0xEE61972ELL, (int64_t)0x23D7E2AFLL, (int64_t)0x8B9A5CLL, (int64_t)0xFBFA766ELL, (int64_t)0x74400779LL, (int64_t)0xE97B716ELL, (int64_t)0xFA0C9D02LL, (int64_t)0xAD33E3DCLL, (int64_t)0xD4CC1FD2LL, (int64_t)0xFFFDB0C2LL, (int64_t)0xFC5384A2LL, (int64_t)0x23E4LL, (int64_t)0x0LL, (int64_t)0x1652A7LL, (int64_t)0xC2DDF67CLL, (int64_t)0xA9108602LL, (int64_t)0x0LL, (int64_t)0x0LL, (int64_t)0xE8LL, (int64_t)0xCEA9BCLL, (int64_t)0xFAF55464LL, (int64_t)0xF94457D0LL, (int64_t)0xF94869DELL, (int64_t)0xF7449620LL, (int64_t)0x295E9AD8LL, (int64_t)0xC923E06ALL, (int64_t)0xFF084A38LL, (int64_t)0xB190A5FALL, (int64_t)0xDDC335E4LL, (int64_t)0xF02175A6LL, (int64_t)0x107703730LL, (int64_t)0x100E0AA34LL, (int64_t)0x111CA94D4LL, (int64_t)0x106C2B548LL, (int64_t)0x100B529D4LL, (int64_t)0x11485D9F4LL, (int64_t)0x100C4E960LL, (int64_t)0x1016FB264LL, (int64_t)0x106AEEE38LL, (int64_t)0x1029F94A8LL, (int64_t)0x12DCD6608LL, (int64_t)0x109AB8150LL, (int64_t)0x127F03B4CLL, (int64_t)0x10D4ACE34LL, (int64_t)0x10EAAC760LL, (int64_t)0x108880AB8LL, (int64_t)0x23107A7E0LL, (int64_t)0x113422100LL, (int64_t)0x100734478LL, (int64_t)0x101D3F378LL, (int64_t)0x10056C3E4LL, (int64_t)0x1010B8FECLL, (int64_t)0x2A3ADDD48LL, (int64_t)0x1183C7474LL, (int64_t)0x14FCB5BB0LL, (int64_t)0x10037CC74LL, (int64_t)0x105544C54LL, (int64_t)0x1014757A0LL, (int64_t)0x1334B78E0LL, (int64_t)0x107A644B8LL, (int64_t)0x1027DFEFCLL, (int64_t)0x105B08FECLL, (int64_t)0x100110470LL, (int64_t)0x1909AB32CLL, (int64_t)0x1692EE850LL, (int64_t)0x102BF953CLL, (int64_t)0x1016F6D78LL, (int64_t)0x1120DD0DCLL, (int64_t)0x105ADD674LL, (int64_t)0x119693E94LL, (int64_t)0x1091EFB34LL, (int64_t)0x10C4A2AC4LL, (int64_t)0x10521A2B8LL, (int64_t)0x105C9D864LL, (int64_t)0x1980F06E4LL, (int64_t)0x1669AE75CLL, (int64_t)0x101BFCDACLL, (int64_t)0x120CBD8C4LL, (int64_t)0x1020D02A0LL, (int64_t)0x1038C3030LL };
		for (int ndx = 0; ndx < 100; ndx++)
			Util::Check("Fixed64::PowFastest", Fixed64::PowFastest(input0[ndx], input1[ndx]), output0[ndx], input0[ndx], input1[ndx]);
	}

	// Fixed32.Pow()
	static void Fixed32_Pow()
	{
		static const int32_t input0[] = { (int32_t)0x6, (int32_t)0x1, (int32_t)0x2A7, (int32_t)0x0, (int32_t)0x14F, (int32_t)0x3, (int32_t)0xD, (int32_t)0x1F52, (int32_t)0x375F, (int32_t)0xE5, (int32_t)0x62, (int32_t)0x0, (int32_t)0x455, (int32_t)0x104B, (int32_t)0xD, (int32_t)0x1, (int32_t)0xA, (int32_t)0x7510, (int32_t)0x1E5, (int32_t)0x7, (int32_t)0x1, (int32_t)0x6, (int32_t)0xAA, (int32_t)0x9D9, (int32_t)0x0, (int32_t)0x172, (int32_t)0x237, (int32_t)0x5A, (int32_t)0x1B2D, (int32_t)0x771, (int32_t)0x3, (int32_t)0x39, (int32_t)0x5E70, (int32_t)0x1E, (int32_t)0x2, (int32_t)0x0, (int32_t)0x427, (int32_t)0x2CE4, (int32_t)0x0, (int32_t)0x32, (int32_t)0x19E3, (int32_t)0x2, (int32_t)0x102, (int32_t)0x6, (int32_t)0x0, (int32_t)0x6, (int32_t)0x5D3, (int32_t)0x1CE, (int32_t)0x8CAD, (int32_t)0xC4, (int32_t)0x132AB, (int32_t)0x3A5B8, (int32_t)0x155A8, (int32_t)0x5C6C8, (int32_t)0x12C66, (int32_t)0x14D60, (int32_t)0x3211B, (int32_t)0x157FA, (int32_t)0x29A99, (int32_t)0x134E4, (int32_t)0x20AF8, (int32_t)0x33C97, (int32_t)0x208DB, (int32_t)0x2EDD4, (int32_t)0x14BF6, (int32_t)0x5A5C9, (int32_t)0x24495, (int32_t)0x80B47, (int32_t)0xFA4B4, (int32_t)0x20395, (int32_t)0x9A973, (int32_t)0x1B40B, (int32_t)0xAB8DB, (int32_t)0x21D65, (int32_t)0xD0DF6, (int32_t)0x77744, (int32_t)0x770D3, (int32_t)0x6D605, (int32_t)0x27094, (int32_t)0x4771F, (int32_t)0x72C22, (int32_t)0x2335F, (int32_t)0x1CCB0, (int32_t)0x4E332, (int32_t)0x60F72, (int32_t)0x3510D, (int32_t)0xC7EB4, (int32_t)0xD5654, (int32_t)0x1BE7A, (int32_t)0x12CC7, (int32_t)0x5E9FD, (int32_t)0x15F29, (int32_t)0x77B86, (int32_t)0x28A14, (int32_t)0x106D3, (int32_t)0xEE1B2, (int32_t)0x47967, (int32_t)0x2E5F4, (int32_t)0x11A00, (int32_t)0x1D3F3 };
		static const int32_t input1[] = { (int32_t)0x58BA, (int32_t)0x294, (int32_t)0x3B7, (int32_t)0x4D76D, (int32_t)0x62, (int32_t)0x134395, (int32_t)0xB399, (int32_t)0x7D070, (int32_t)0xB5, (int32_t)0x12A25E, (int32_t)0x8FE2, (int32_t)0x51C67, (int32_t)0x48, (int32_t)0x114, (int32_t)0x53F, (int32_t)0x60, (int32_t)0x377, (int32_t)0x358, (int32_t)0x345E, (int32_t)0x657, (int32_t)0x2CDF, (int32_t)0x228B, (int32_t)0x36D7F, (int32_t)0x14B, (int32_t)0x289C, (int32_t)0xF6A49, (int32_t)0x18072, (int32_t)0x2B4, (int32_t)0x9E38, (int32_t)0x13060, (int32_t)0x75DA9, (int32_t)0x4B, (int32_t)0x4638, (int32_t)0x34E, (int32_t)0x12B, (int32_t)0x6E, (int32_t)0x246, (int32_t)0x84, (int32_t)0xDF8, (int32_t)0x39B, (int32_t)0xD1E, (int32_t)0x2AB03, (int32_t)0x2142F, (int32_t)0xEA, (int32_t)0x42E64, (int32_t)0xF2479, (int32_t)0x377, (int32_t)0x16F9, (int32_t)0x54, (int32_t)0x8C, (int32_t)0x1B69, (int32_t)0x8BD, (int32_t)0x63C, (int32_t)0x359B, (int32_t)0x187, (int32_t)0x6A82, (int32_t)0x1170, (int32_t)0x514F, (int32_t)0x2193, (int32_t)0x28C, (int32_t)0x354, (int32_t)0x248A, (int32_t)0x39EA, (int32_t)0x42C8, (int32_t)0x304, (int32_t)0xD4AD, (int32_t)0x11A, (int32_t)0x1CD6, (int32_t)0x29D4, (int32_t)0x18AA, (int32_t)0x2366, (int32_t)0x319, (int32_t)0xB8B, (int32_t)0xA1F7, (int32_t)0x117C, (int32_t)0x2126, (int32_t)0x668, (int32_t)0x943, (int32_t)0x18C, (int32_t)0xB8B7, (int32_t)0xEA, (int32_t)0x2AE, (int32_t)0x182D, (int32_t)0x86, (int32_t)0x6373, (int32_t)0x104, (int32_t)0x4B00, (int32_t)0x548, (int32_t)0x23C, (int32_t)0x36C8, (int32_t)0x4A85, (int32_t)0x6F, (int32_t)0x13D, (int32_t)0x66DC, (int32_t)0x1D68, (int32_t)0x9640, (int32_t)0x27C, (int32_t)0x93B9, (int32_t)0xDD6B, (int32_t)0x54 };
		static const int32_t output0[] = { (int32_t)0xA33, (int32_t)0xE4F1, (int32_t)0xEF92, (int32_t)0x0, (int32_t)0xFDFB, (int32_t)0x0, (int32_t)0xA5, (int32_t)0x0, (int32_t)0xFEE9, (int32_t)0x0, (int32_t)0x69C, (int32_t)0x0, (int32_t)0xFEDA, (int32_t)0xFD0B, (int32_t)0xD6F6, (int32_t)0xFBDF, (int32_t)0xE34A, (int32_t)0xFD65, (int32_t)0x5DD6, (int32_t)0xCC1E, (int32_t)0x24A5, (int32_t)0x4900, (int32_t)0x0, (int32_t)0xFBD1, (int32_t)0x0, (int32_t)0x0, (int32_t)0x34, (int32_t)0xEEC9, (int32_t)0x4001, (int32_t)0x3D0, (int32_t)0x0, (int32_t)0xFDF0, (int32_t)0xC2BB, (int32_t)0xE7CD, (int32_t)0xF423, (int32_t)0x0, (int32_t)0xF6CB, (int32_t)0xFF1A, (int32_t)0x0, (int32_t)0xE761, (int32_t)0xE3A3, (int32_t)0x0, (int32_t)0x0, (int32_t)0xF7A3, (int32_t)0x0, (int32_t)0x0, (int32_t)0xF338, (int32_t)0xA41C, (int32_t)0xFFCC, (int32_t)0xFCD6, (int32_t)0x104FE, (int32_t)0x10B8E, (int32_t)0x101CD, (int32_t)0x17198, (int32_t)0x1003D, (int32_t)0x11DBA, (int32_t)0x114AE, (int32_t)0x1192D, (int32_t)0x1223B, (int32_t)0x1007A, (int32_t)0x10262, (int32_t)0x12EB8, (int32_t)0x12C9E, (int32_t)0x152D5, (int32_t)0x100C7, (int32_t)0x43692, (int32_t)0x100E5, (int32_t)0x143C2, (int32_t)0x19136, (int32_t)0x111DB, (int32_t)0x15E4E, (int32_t)0x101A6, (int32_t)0x11CE6, (int32_t)0x19B2C, (int32_t)0x13119, (int32_t)0x14C1C, (int32_t)0x10D2E, (int32_t)0x1126E, (int32_t)0x10161, (int32_t)0x2F190, (int32_t)0x101CE, (int32_t)0x1021E, (int32_t)0x10E9A, (int32_t)0x100D3, (int32_t)0x2037A, (int32_t)0x10137, (int32_t)0x21878, (int32_t)0x10E0D, (int32_t)0x1013E, (int32_t)0x108FB, (int32_t)0x1AD74, (int32_t)0x10022, (int32_t)0x1027F, (int32_t)0x17442, (int32_t)0x100C5, (int32_t)0x4E0C0, (int32_t)0x103BE, (int32_t)0x1D90C, (int32_t)0x11655, (int32_t)0x10031 };
		for (int ndx = 0; ndx < 100; ndx++)
			Util::Check("Fixed32::Pow", Fixed32::Pow(input0[ndx], input1[ndx]), output0[ndx], input0[ndx], input1[ndx]);
	}

	// Fixed32.PowFast()
	static void Fixed32_PowFast()
	{
		static const int32_t input0[] = { (int32_t)0x993, (int32_t)0x2341, (int32_t)0x1EC, (int32_t)0xB, (int32_t)0x45, (int32_t)0x5, (int32_t)0x92CB, (int32_t)0x61, (int32_t)0x0, (int32_t)0x8B, (int32_t)0x12, (int32_t)0x0, (int32_t)0xB4, (int32_t)0x875, (int32_t)0x0, (int32_t)0x0, (int32_t)0x0, (int32_t)0x31B, (int32_t)0x7370, (int32_t)0x0, (int32_t)0x0, (int32_t)0xB32, (int32_t)0xA, (int32_t)0x9545, (int32_t)0x1C0C, (int32_t)0x1B1, (int32_t)0x0, (int32_t)0x339, (int32_t)0x1, (int32_t)0x377, (int32_t)0xB, (int32_t)0x7B, (int32_t)0x72, (int32_t)0x1, (int32_t)0x0, (int32_t)0x6, (int32_t)0x3BC, (int32_t)0x3, (int32_t)0x105, (int32_t)0x7E, (int32_t)0x1, (int32_t)0x3, (int32_t)0x2, (int32_t)0x931, (int32_t)0xA, (int32_t)0x61F, (int32_t)0x44, (int32_t)0x2E, (int32_t)0x55A, (int32_t)0x231, (int32_t)0x1A42F, (int32_t)0x188E7, (int32_t)0xC8F3D, (int32_t)0xC22C9, (int32_t)0x26A6C, (int32_t)0x146D7, (int32_t)0x4D3FF, (int32_t)0x509DC, (int32_t)0xC3E76, (int32_t)0x114EF, (int32_t)0x3E78F, (int32_t)0xB52AD, (int32_t)0x14C4A, (int32_t)0x33C3F, (int32_t)0x7A720, (int32_t)0x44B84, (int32_t)0x261DE, (int32_t)0x6C5E3, (int32_t)0x607A0, (int32_t)0x382F9, (int32_t)0x2414F, (int32_t)0xA0A1B, (int32_t)0x1074D, (int32_t)0x2B7D0, (int32_t)0xF0C62, (int32_t)0x27C45, (int32_t)0x1117B, (int32_t)0x29F1B, (int32_t)0x11664, (int32_t)0xE1A79, (int32_t)0xA67B4, (int32_t)0x6DDC0, (int32_t)0x1173B, (int32_t)0x14172, (int32_t)0xD3B0A, (int32_t)0xF153B, (int32_t)0x7E1DE, (int32_t)0x130DA, (int32_t)0x22262, (int32_t)0x7B9CB, (int32_t)0x18D72, (int32_t)0xF53B4, (int32_t)0x998DA, (int32_t)0x25D89, (int32_t)0x72C43, (int32_t)0xE9599, (int32_t)0xCA2B9, (int32_t)0x27B06, (int32_t)0xFF424, (int32_t)0xA3C67 };
		static const int32_t input1[] = { (int32_t)0x5277B, (int32_t)0x9D6F, (int32_t)0x1017A6, (int32_t)0x368E9, (int32_t)0x66E7F, (int32_t)0x11E10A, (int32_t)0x1F9B, (int32_t)0xE25E, (int32_t)0x3286, (int32_t)0x55E97, (int32_t)0x191, (int32_t)0x3F4, (int32_t)0x428, (int32_t)0x1BDD, (int32_t)0x183, (int32_t)0x50D21, (int32_t)0x3C06, (int32_t)0x81D, (int32_t)0x4346, (int32_t)0x35B2C, (int32_t)0x73A, (int32_t)0x22759, (int32_t)0x91, (int32_t)0xCC5, (int32_t)0x8DDF3, (int32_t)0x4DB6E, (int32_t)0x2347, (int32_t)0x6CAD, (int32_t)0x5929, (int32_t)0xC3, (int32_t)0xF5, (int32_t)0xABF7, (int32_t)0xDE787, (int32_t)0x59A5, (int32_t)0x38DA8, (int32_t)0x15535, (int32_t)0x46D1, (int32_t)0x13D31, (int32_t)0x757, (int32_t)0x1E4, (int32_t)0x42D8E, (int32_t)0x47, (int32_t)0x1B376, (int32_t)0x16BA8, (int32_t)0x977, (int32_t)0xDEA66, (int32_t)0x4A, (int32_t)0x2D43A, (int32_t)0x4FAF, (int32_t)0x2789, (int32_t)0x16DC, (int32_t)0x25F, (int32_t)0xBE, (int32_t)0x9D, (int32_t)0x122, (int32_t)0x2CF, (int32_t)0xB1, (int32_t)0xB98, (int32_t)0x95CB, (int32_t)0xEE7A, (int32_t)0x66, (int32_t)0x12C, (int32_t)0xBAC, (int32_t)0xB3FE, (int32_t)0xE8, (int32_t)0x3EBA, (int32_t)0x571F, (int32_t)0x47, (int32_t)0x7A9, (int32_t)0x2F37, (int32_t)0x3866, (int32_t)0x170, (int32_t)0x48C, (int32_t)0x8A0F, (int32_t)0x1F4, (int32_t)0x229, (int32_t)0x49, (int32_t)0x2025, (int32_t)0x16D0, (int32_t)0x46, (int32_t)0x474, (int32_t)0x1F62, (int32_t)0x2D8, (int32_t)0xF5, (int32_t)0x217, (int32_t)0x974, (int32_t)0xAB3, (int32_t)0x848A, (int32_t)0x65CE, (int32_t)0xE86, (int32_t)0x5186, (int32_t)0xF7, (int32_t)0xAD, (int32_t)0x1D1, (int32_t)0x1AC4, (int32_t)0xA743, (int32_t)0x50B, (int32_t)0x65E5, (int32_t)0x9D, (int32_t)0x8D8E };
		static const int32_t output0[] = { (int32_t)0x0, (int32_t)0x4BA2, (int32_t)0x0, (int32_t)0x0, (int32_t)0x0, (int32_t)0x0, (int32_t)0xEF02, (int32_t)0xCE, (int32_t)0x0, (int32_t)0x0, (int32_t)0xF377, (int32_t)0x0, (int32_t)0xE8A0, (int32_t)0xB09E, (int32_t)0x0, (int32_t)0x0, (int32_t)0x0, (int32_t)0xDE97, (int32_t)0xCFA6, (int32_t)0x0, (int32_t)0x0, (int32_t)0x4D, (int32_t)0xFB11, (int32_t)0xF933, (int32_t)0x0, (int32_t)0x0, (int32_t)0x0, (int32_t)0x27F6, (int32_t)0x561, (int32_t)0xFCBE, (int32_t)0xF7D0, (int32_t)0x3C5, (int32_t)0x0, (int32_t)0x544, (int32_t)0x0, (int32_t)0x0, (int32_t)0x4F7E, (int32_t)0x0, (int32_t)0xDA7C, (int32_t)0xF471, (int32_t)0x0, (int32_t)0xFD3D, (int32_t)0x0, (int32_t)0x244, (int32_t)0xB8FB, (int32_t)0x0, (int32_t)0xFE04, (int32_t)0x0, (int32_t)0x4CCE, (int32_t)0x7ABA, (int32_t)0x10B93, (int32_t)0x10104, (int32_t)0x101E1, (int32_t)0x10188, (int32_t)0x100FE, (int32_t)0x100AE, (int32_t)0x10116, (int32_t)0x11372, (int32_t)0x454AC, (int32_t)0x11371, (int32_t)0x1008A, (int32_t)0x102DB, (int32_t)0x1030E, (int32_t)0x24874, (int32_t)0x101D8, (int32_t)0x16DDE, (int32_t)0x157FA, (int32_t)0x10086, (int32_t)0x10E22, (int32_t)0x142BB, (int32_t)0x13239, (int32_t)0x10355, (int32_t)0x1001F, (int32_t)0x1B6F5, (int32_t)0x10558, (int32_t)0x101F8, (int32_t)0x10003, (int32_t)0x120ED, (int32_t)0x101EA, (int32_t)0x100B8, (int32_t)0x10AA4, (int32_t)0x14431, (int32_t)0x1003E, (int32_t)0x10036, (int32_t)0x10573, (int32_t)0x11AF9, (int32_t)0x11710, (int32_t)0x11838, (int32_t)0x15A13, (int32_t)0x11F7A, (int32_t)0x1267C, (int32_t)0x102A5, (int32_t)0x10188, (int32_t)0x10191, (int32_t)0x13A8E, (int32_t)0x5C290, (int32_t)0x10D1C, (int32_t)0x16F83, (int32_t)0x101B3, (int32_t)0x39E59 };
		for (int ndx = 0; ndx < 100; ndx++)
			Util::Check("Fixed32::PowFast", Fixed32::PowFast(input0[ndx], input1[ndx]), output0[ndx], input0[ndx], input1[ndx]);
	}

	// Fixed32.PowFastest()
	static void Fixed32_PowFastest()
	{
		static const int32_t input0[] = { (int32_t)0x0, (int32_t)0x42EC, (int32_t)0x1A6D, (int32_t)0x1, (int32_t)0x0, (int32_t)0x10, (int32_t)0x45B3, (int32_t)0x1, (int32_t)0x1938, (int32_t)0x46A2, (int32_t)0x6, (int32_t)0x1E, (int32_t)0x4224, (int32_t)0x4AFC, (int32_t)0xBB, (int32_t)0xA, (int32_t)0x2B72, (int32_t)0x9, (int32_t)0x1E4, (int32_t)0x25E, (int32_t)0x2, (int32_t)0x6E9D, (int32_t)0x0, (int32_t)0x4737, (int32_t)0x55E0, (int32_t)0xDE, (int32_t)0x0, (int32_t)0x0, (int32_t)0x1, (int32_t)0x8, (int32_t)0x2EFF, (int32_t)0x0, (int32_t)0xB2, (int32_t)0x6A6, (int32_t)0x36FD, (int32_t)0x4B, (int32_t)0x2544, (int32_t)0x0, (int32_t)0x0, (int32_t)0x43FA, (int32_t)0x148, (int32_t)0x3, (int32_t)0x0, (int32_t)0x92BB, (int32_t)0x2, (int32_t)0xE, (int32_t)0x3, (int32_t)0x1, (int32_t)0x47F, (int32_t)0x4, (int32_t)0x4330A, (int32_t)0x16957, (int32_t)0x1C675, (int32_t)0x5ED9C, (int32_t)0x91F93, (int32_t)0x24C56, (int32_t)0xA5068, (int32_t)0x3CB9E, (int32_t)0x33794, (int32_t)0x6F087, (int32_t)0x267C1, (int32_t)0x4E136, (int32_t)0x224A4, (int32_t)0x8F925, (int32_t)0x19C0E, (int32_t)0x31F2B, (int32_t)0x29F56, (int32_t)0x13A3D, (int32_t)0x1ADFC, (int32_t)0x1D9C6, (int32_t)0x20488, (int32_t)0x858C3, (int32_t)0x14763, (int32_t)0x268C1, (int32_t)0x260B5, (int32_t)0x4EDE6, (int32_t)0xF5287, (int32_t)0x4C793, (int32_t)0x16C7A, (int32_t)0x1BEC6, (int32_t)0x665D4, (int32_t)0x21E1E, (int32_t)0x207E2, (int32_t)0x4FEFC, (int32_t)0x109F7, (int32_t)0x19E28, (int32_t)0x6769F, (int32_t)0x8C6CD, (int32_t)0x1744C, (int32_t)0xF8608, (int32_t)0xE8DDB, (int32_t)0x37358, (int32_t)0x6AFD2, (int32_t)0x2DBD5, (int32_t)0x2F03A, (int32_t)0x1A76C, (int32_t)0x62FFB, (int32_t)0xF9953, (int32_t)0x3EA5E, (int32_t)0x1C128 };
		static const int32_t input1[] = { (int32_t)0x7E, (int32_t)0x82, (int32_t)0x24D, (int32_t)0x19D3, (int32_t)0xAD79, (int32_t)0x192, (int32_t)0x1CF73, (int32_t)0x9D3C4, (int32_t)0x641, (int32_t)0x1AC3, (int32_t)0x48D, (int32_t)0x21CDC, (int32_t)0x45, (int32_t)0x1C9E, (int32_t)0x57, (int32_t)0x189, (int32_t)0x5A249, (int32_t)0x154, (int32_t)0x51, (int32_t)0x7D, (int32_t)0x2709, (int32_t)0x1FBAE, (int32_t)0x273, (int32_t)0x188F7, (int32_t)0x65, (int32_t)0xD6466, (int32_t)0x55907, (int32_t)0x19C, (int32_t)0xA544, (int32_t)0x315E, (int32_t)0x4E3, (int32_t)0x61937, (int32_t)0x1147, (int32_t)0xA3F30, (int32_t)0x47D, (int32_t)0x2F8B5, (int32_t)0x9C7D9, (int32_t)0xBC, (int32_t)0x8D, (int32_t)0x11490, (int32_t)0x1BC5A, (int32_t)0xA39DC, (int32_t)0x2508B, (int32_t)0xB7A8, (int32_t)0x6F40, (int32_t)0x43FDD, (int32_t)0x487, (int32_t)0x5DDC, (int32_t)0xA0572, (int32_t)0x87, (int32_t)0x7DE, (int32_t)0x123, (int32_t)0x452, (int32_t)0x221B, (int32_t)0x49CD, (int32_t)0x2E3B, (int32_t)0x53, (int32_t)0x77A0, (int32_t)0x27E, (int32_t)0x12F, (int32_t)0x244, (int32_t)0x1BD, (int32_t)0x2F2, (int32_t)0x12C, (int32_t)0x50, (int32_t)0x5A, (int32_t)0x246, (int32_t)0x1F13, (int32_t)0x3718, (int32_t)0xFCC5, (int32_t)0x29C3, (int32_t)0xC9F, (int32_t)0xA7CC, (int32_t)0x101, (int32_t)0x180, (int32_t)0x433E, (int32_t)0x71, (int32_t)0x2280, (int32_t)0x9C18, (int32_t)0xA1, (int32_t)0x914D, (int32_t)0xF4D7, (int32_t)0x6B, (int32_t)0x981F, (int32_t)0x215B, (int32_t)0x5DC, (int32_t)0x6250, (int32_t)0xB39, (int32_t)0x30DD, (int32_t)0x18F, (int32_t)0xA9, (int32_t)0x3943, (int32_t)0x5E3, (int32_t)0x8C64, (int32_t)0x1ACF, (int32_t)0x1DC0, (int32_t)0x7C, (int32_t)0x658, (int32_t)0x2DC, (int32_t)0x2BB };
		static const int32_t output0[] = { (int32_t)0x0, (int32_t)0xFF51, (int32_t)0xFAD5, (int32_t)0x539F, (int32_t)0x0, (int32_t)0xF348, (int32_t)0x1849, (int32_t)0x0, (int32_t)0xF1ED, (int32_t)0xDFC6, (int32_t)0xD902, (int32_t)0x0, (int32_t)0xFFA2, (int32_t)0xDF2E, (int32_t)0xFE05, (int32_t)0xF2E0, (int32_t)0x2, (int32_t)0xF479, (int32_t)0xFE73, (int32_t)0xFDB9, (int32_t)0x3472, (int32_t)0x3079, (int32_t)0x0, (int32_t)0x23EB, (int32_t)0xFF90, (int32_t)0x0, (int32_t)0x0, (int32_t)0x0, (int32_t)0x32, (int32_t)0x2D08, (int32_t)0xF7DC, (int32_t)0x0, (int32_t)0xABCB, (int32_t)0x0, (int32_t)0xF932, (int32_t)0x0, (int32_t)0x0, (int32_t)0x0, (int32_t)0x0, (int32_t)0x3D1C, (int32_t)0x6, (int32_t)0x0, (int32_t)0x0, (int32_t)0xABB4, (int32_t)0x2CA, (int32_t)0x0, (int32_t)0xD68B, (int32_t)0x463, (int32_t)0x0, (int32_t)0xFAF0, (int32_t)0x10B8F, (int32_t)0x10064, (int32_t)0x1027E, (int32_t)0x14479, (int32_t)0x1E43F, (int32_t)0x12985, (int32_t)0x100C1, (int32_t)0x1DD79, (int32_t)0x102EE, (int32_t)0x1024E, (int32_t)0x10200, (int32_t)0x102C6, (int32_t)0x10242, (int32_t)0x10297, (int32_t)0x10025, (int32_t)0x10066, (int32_t)0x10234, (int32_t)0x10676, (int32_t)0x11E3E, (int32_t)0x1D625, (int32_t)0x11F13, (int32_t)0x11C40, (int32_t)0x12CC9, (int32_t)0x100E1, (int32_t)0x1014D, (int32_t)0x18534, (int32_t)0x10135, (int32_t)0x13C11, (int32_t)0x13D82, (int32_t)0x10059, (int32_t)0x2DDF4, (int32_t)0x20CB2, (int32_t)0x1004B, (int32_t)0x299CA, (int32_t)0x10146, (int32_t)0x102D6, (int32_t)0x20C33, (int32_t)0x11999, (int32_t)0x112FE, (int32_t)0x10452, (int32_t)0x101C6, (int32_t)0x151AE, (int32_t)0x10B74, (int32_t)0x1C772, (int32_t)0x11E9C, (int32_t)0x10F70, (int32_t)0x100E1, (int32_t)0x1120E, (int32_t)0x103F1, (int32_t)0x1018A };
		for (int ndx = 0; ndx < 100; ndx++)
			Util::Check("Fixed32::PowFastest", Fixed32::PowFastest(input0[ndx], input1[ndx]), output0[ndx], input0[ndx], input1[ndx]);
	}

	// Fixed64.Sin()
	static void Fixed64_Sin()
	{
		static const int64_t input0[] = { (int64_t)0x490F6F471ALL, (int64_t)0x5C8522B6D1LL, (int64_t)0xFFFFFFC6A4953116LL, (int64_t)0xFFFFFFFED3C41426LL, (int64_t)0xFFFFFFF90CE481EBLL, (int64_t)0x565007BA44LL, (int64_t)0xFFFFFFD3773D948FLL, (int64_t)0xFFFFFFC63E527025LL, (int64_t)0xFFFFFFF668289625LL, (int64_t)0xFFFFFF9EB1B01546LL, (int64_t)0x22740EE2BCLL, (int64_t)0xFFFFFFDD24B49943LL, (int64_t)0x5C4BB6FEB0LL, (int64_t)0xFFFFFFC3B7676A40LL, (int64_t)0xFFFFFFD8CE8E5E5ALL, (int64_t)0xFFFFFFDC6FDAFF51LL, (int64_t)0xFFFFFFC5193F6003LL, (int64_t)0xFFFFFFF1CC25AB8CLL, (int64_t)0x31F39524ELL, (int64_t)0xF3892E8F6LL, (int64_t)0xFFFFFFC0E53E9FDALL, (int64_t)0x35C6DAD483LL, (int64_t)0x56E56FC4B5LL, (int64_t)0x337F4BE0ELL, (int64_t)0x480C792C78LL, (int64_t)0x5ADC7E48FDLL, (int64_t)0xFFFFFFB213F97FFDLL, (int64_t)0xFFFFFFA129AF5F9BLL, (int64_t)0x4EA42B801LL, (int64_t)0xD8CD7FA63LL, (int64_t)0x2AAE4B236DLL, (int64_t)0x170BFD7D36LL, (int64_t)0xFFFFFFE411D930A1LL, (int64_t)0x111CCDBEEALL, (int64_t)0xFFFFFFD11F4CE7FBLL, (int64_t)0x5B1502A9AELL, (int64_t)0x3811191878LL, (int64_t)0xF8EA0E3F7LL, (int64_t)0xFFFFFFF7E1595428LL, (int64_t)0x36AEE68445LL, (int64_t)0xFFFFFFBF2D4B5C27LL, (int64_t)0x1E0C65A444LL, (int64_t)0xFFFFFFAF0DC823F7LL, (int64_t)0x315B4F1DAALL, (int64_t)0x11DA9A8BBBLL, (int64_t)0x3E70CE9B54LL, (int64_t)0x4058A88C58LL, (int64_t)0xFFFFFFCF1146BDE7LL, (int64_t)0x15CCE3AE93LL, (int64_t)0xFFFFFFE23C6250FDLL, (int64_t)0xFFFFF2AA461A7F95LL, (int64_t)0x8030189F1A20LL, (int64_t)0x15EE20883B484LL, (int64_t)0xD59BEB8FAEF7LL, (int64_t)0xFFFEF51490C07B6ALL, (int64_t)0xFFFEC4B383DF9C27LL, (int64_t)0xFFFE8F57D301BA70LL, (int64_t)0x9A0052C152C0LL, (int64_t)0x689A7C98FDF5LL, (int64_t)0x88D0F4E5B5ALL, (int64_t)0xFAEA9793AB15LL, (int64_t)0xFFFF3DDEF37EDB7ELL, (int64_t)0x91D05D674760LL, (int64_t)0x12C38B2E06CB1LL, (int64_t)0xFFFF63CD4250B3DBLL, (int64_t)0xFFFEA5EE83F4969DLL, (int64_t)0x16B91A910B963LL, (int64_t)0xFFFF9F0F3F211EDFLL, (int64_t)0x15242278CDE44LL, (int64_t)0xFFFF89BCC9B9BDBALL, (int64_t)0x20B2256DBEA4LL, (int64_t)0x63C57B148B4BLL, (int64_t)0x16EDD2E355DFALL, (int64_t)0xBD36C374D2ADLL, (int64_t)0xFFFFB20C0F7E0CD9LL, (int64_t)0x1ABF0F96C0BELL, (int64_t)0x87A2F101A885LL, (int64_t)0xFFFF0C038F8C8348LL, (int64_t)0x14D74A8549329LL, (int64_t)0xFFFE9EE81246F191LL, (int64_t)0xFFFEE0F2FAE8E4A6LL, (int64_t)0x115628A462605LL, (int64_t)0xFFFFBF027BAB8245LL, (int64_t)0xFFFF00D734926CEFLL, (int64_t)0xFFFEBBA3E58F9388LL, (int64_t)0xFFFE9FE8BCE34912LL, (int64_t)0x81C4CDAD66C9LL, (int64_t)0x43E9CCD64293LL, (int64_t)0xFFFFC723F2F14788LL, (int64_t)0xFFFEFD8EC08A8D5ELL, (int64_t)0x14DD23F6515E4LL, (int64_t)0xFFFEBA6277464285LL, (int64_t)0x15ACAA7E17F55LL, (int64_t)0x15E5B35A25FF6LL, (int64_t)0x161509CE103E1LL, (int64_t)0x14B89FAE11A53LL, (int64_t)0x16A300FA262A0LL, (int64_t)0xFFFF1E3522EC0CABLL, (int64_t)0xFFFFD65F6ABB2EFFLL, (int64_t)0x192F67BD3E9ELL };
		static const int64_t output0[] = { (int64_t)0xFFFFFFFF47B48538LL, (int64_t)0xFFFFFFFF03253E90LL, (int64_t)0xFFFFFFFF46DC1514LL, (int64_t)0xFFFFFFFF14029A70LL, (int64_t)0xFFFFFFFF61BD864CLL, (int64_t)0xFFFFFFFF00D7D44CLL, (int64_t)0xFFFFFFFF79C5FD2CLL, (int64_t)0xFFFFFFFF10AC7EA4LL, (int64_t)0x2AE51F04LL, (int64_t)0xFFFFFFFFEAA85E84LL, (int64_t)0x1A9E59FCLL, (int64_t)0x4B6EDD1CLL, (int64_t)0xFFFFFFFF1260CA24LL, (int64_t)0x8F2227C8LL, (int64_t)0xFFFFFFFF00C104A4LL, (int64_t)0xD82E2740LL, (int64_t)0xFFFFFFFF4A59CF90LL, (int64_t)0xFFFFFFFF008C0864LL, (int64_t)0x5060314LL, (int64_t)0x77CBAE44LL, (int64_t)0xFFFFFFFFBB0F8800LL, (int64_t)0xFFFFFFFFA37F6908LL, (int64_t)0xFFFFFFFF1FA38BC4LL, (int64_t)0xFFFFFFFFEC4FA7E8LL, (int64_t)0x34D77248LL, (int64_t)0x3E10DB1CLL, (int64_t)0xFFFFFFFF6BB4776CLL, (int64_t)0xFFFFFFFF71B3A574LL, (int64_t)0xFFFFFFFF053DA220LL, (int64_t)0xD525CCB0LL, (int64_t)0xFFFFFFFF093AAB28LL, (int64_t)0xFFFFFFFF2137FD44LL, (int64_t)0xFFFFFFFFA9A64924LL, (int64_t)0xFFFFFFFF03878A40LL, (int64_t)0xFFFFFFFFC19E46F8LL, (int64_t)0x62C3FA0LL, (int64_t)0xFFFFFFFF895BB15CLL, (int64_t)0x2676C284LL, (int64_t)0xFFFFFFFF08FC9298LL, (int64_t)0xFFFFFFFF0B08A9D0LL, (int64_t)0xFFFFFFFF164B04B8LL, (int64_t)0xFFFFFFFF05459D9CLL, (int64_t)0xABB7772CLL, (int64_t)0xFFFFFFFF36132080LL, (int64_t)0xFFFFFFFF29306F9CLL, (int64_t)0xFFFFFFFF9E633948LL, (int64_t)0xFF980FA0LL, (int64_t)0xF8CB49B4LL, (int64_t)0x308C8004LL, (int64_t)0xFF291904LL, (int64_t)0xFFFFFFFF12CF9EF4LL, (int64_t)0xFFFFFFFF2B4C64C0LL, (int64_t)0xFFBC9148LL, (int64_t)0xFA403BD4LL, (int64_t)0xFFFFFFFF065F63B8LL, (int64_t)0xFFFFFFFF8F77C73CLL, (int64_t)0xFFFFFFFF9A2B41A8LL, (int64_t)0xFFFFFFFF8A72E368LL, (int64_t)0xFFFFFFFF90DDFCCCLL, (int64_t)0x96E17BC8LL, (int64_t)0xFFF572A0LL, (int64_t)0x3186B3A0LL, (int64_t)0xFFFFFFFFF602CD18LL, (int64_t)0xB35466C8LL, (int64_t)0xFFFFFFFF7A42B77CLL, (int64_t)0xFFFFFFFF7578EA78LL, (int64_t)0xBE082430LL, (int64_t)0xF78B1190LL, (int64_t)0xFFFFFFFF5A08A7CCLL, (int64_t)0xFFFFFFFFB05A4048LL, (int64_t)0xCF3E8A60LL, (int64_t)0x5390ED38LL, (int64_t)0xAB10BB1CLL, (int64_t)0xFE3E6750LL, (int64_t)0xFFFFFFFF7BBB5E18LL, (int64_t)0xFFFFFFFF00352F80LL, (int64_t)0xE20A2C80LL, (int64_t)0xA60F588CLL, (int64_t)0xF6CEDC2CLL, (int64_t)0xFFFFFFFF19EFD124LL, (int64_t)0x6B2D508LL, (int64_t)0xFFFFFFFF196A4F5CLL, (int64_t)0x59A5BD9CLL, (int64_t)0xFFFFFFFF4850F404LL, (int64_t)0x9E8D189CLL, (int64_t)0xFFFFFFFFD407D490LL, (int64_t)0xFFDE96F4LL, (int64_t)0x3977920CLL, (int64_t)0xDE58B348LL, (int64_t)0xA39D9494LL, (int64_t)0x99C4D854LL, (int64_t)0xFF10D124LL, (int64_t)0xFFFFFFFF9EE610BCLL, (int64_t)0xFFFFFFFF0C35E1ECLL, (int64_t)0xD4C82730LL, (int64_t)0xA76F8B74LL, (int64_t)0xFFFFFFFF36C326F8LL, (int64_t)0xA4FEE66CLL, (int64_t)0xFFFFFFFFB42645D0LL, (int64_t)0xC186337CLL };
		for (int ndx = 0; ndx < 100; ndx++)
			Util::Check("Fixed64::Sin", Fixed64::Sin(input0[ndx]), output0[ndx], input0[ndx]);
	}

	// Fixed64.SinFast()
	static void Fixed64_SinFast()
	{
		static const int64_t input0[] = { (int64_t)0x455DF332B2LL, (int64_t)0xFFFFFFF529BF4C93LL, (int64_t)0xFFFFFFDC792C3BA1LL, (int64_t)0xFFFFFFD01357F9E9LL, (int64_t)0x3DDDA06A23LL, (int64_t)0x470B778ED6LL, (int64_t)0x26E61F5675LL, (int64_t)0xFFFFFFC563241C63LL, (int64_t)0xFFFFFFE6A3CDD776LL, (int64_t)0x18D24E1F29LL, (int64_t)0xFFFFFFF08F81C20ALL, (int64_t)0x4415924B10LL, (int64_t)0x360F4640B4LL, (int64_t)0x112BA0568ALL, (int64_t)0xFFFFFFE7AC907C48LL, (int64_t)0x5D395B7832LL, (int64_t)0x42F0C283EDLL, (int64_t)0x2A62F511DLL, (int64_t)0x3BE48EAC3FLL, (int64_t)0xFFFFFFCE26057C45LL, (int64_t)0xFFFFFFEA2F8AD2BDLL, (int64_t)0xFFFFFFE7B0179C48LL, (int64_t)0x59BD429B9BLL, (int64_t)0x34C1620CE1LL, (int64_t)0xFFFFFFF0443BFD19LL, (int64_t)0xFFFFFFF7BA494168LL, (int64_t)0x24C3487FC1LL, (int64_t)0xFFFFFFA039D93C29LL, (int64_t)0x39FD7A840BLL, (int64_t)0xFFFFFFFB2B8A659FLL, (int64_t)0xE20830F74LL, (int64_t)0xFFFFFFF8869B285ALL, (int64_t)0x3032367B38LL, (int64_t)0xFFFFFFEAEAD10C1ELL, (int64_t)0xFFFFFFC43DB75E71LL, (int64_t)0x255A167012LL, (int64_t)0x689868675LL, (int64_t)0xFFFFFFBB4973B71FLL, (int64_t)0xFFFFFFE4D03FFCE2LL, (int64_t)0xFFFFFFC9EB4A60ACLL, (int64_t)0xFFFFFFE2F7401F1ELL, (int64_t)0xFFFFFFF7D5627668LL, (int64_t)0xFFFFFFC6BEF5F4E6LL, (int64_t)0x3C9F588501LL, (int64_t)0x314736B35ALL, (int64_t)0xFFFFFFAD5FBD6C83LL, (int64_t)0xFFFFFFDA953264BELL, (int64_t)0xFFFFFFE39BB5A5C0LL, (int64_t)0xE04629EF4LL, (int64_t)0x61397CD1CALL, (int64_t)0xFFFEBF6D830DC11BLL, (int64_t)0xFFFFD936E6CD882ELL, (int64_t)0xFFFFBAE0559B3381LL, (int64_t)0xFFFF127AE54DC436LL, (int64_t)0xFFFEE7C5B1760ECCLL, (int64_t)0xFFFFE74F21C3935FLL, (int64_t)0xFFFFFDBFC7134440LL, (int64_t)0x2DC5EDC69BCBLL, (int64_t)0x108E105538B02LL, (int64_t)0xFFFF8B5A0C771F75LL, (int64_t)0xFFFEFF49F7D2E854LL, (int64_t)0x8770F1D6BE21LL, (int64_t)0xFFFFBF251E7B130BLL, (int64_t)0x1366DC774AF9BLL, (int64_t)0xFFFEA32681355C8DLL, (int64_t)0x16782C4C857C5LL, (int64_t)0xFFFEC7101EA3E2E1LL, (int64_t)0xFFFF9EE669D56B0DLL, (int64_t)0xFFFFA5E156092503LL, (int64_t)0x95B22CBFADA4LL, (int64_t)0xFFFFCBFED7D04BBELL, (int64_t)0x8B458BD009CBLL, (int64_t)0xFFFEEDEBAEE10918LL, (int64_t)0x3695B2C739EBLL, (int64_t)0x1354EB2F3DDDDLL, (int64_t)0x151502DA8AAE0LL, (int64_t)0xFFFEFA0DEB75D65CLL, (int64_t)0xFFFEEB1CDA684A7ALL, (int64_t)0xFFFE86F53955B72BLL, (int64_t)0xFFFF7EAC8E64C91ALL, (int64_t)0xFFFEEB38E14DF932LL, (int64_t)0xFFFF77E295A39906LL, (int64_t)0xFFFFD9C0D75614C2LL, (int64_t)0xED5D97004FFBLL, (int64_t)0xFFFFA714918F316ALL, (int64_t)0xFFFED7581926D5F1LL, (int64_t)0xFFFEA14D787A685BLL, (int64_t)0x23293F839012LL, (int64_t)0xFFFF3F3F8F2145C0LL, (int64_t)0xB5E1F2855403LL, (int64_t)0xFFFF0D88209284D1LL, (int64_t)0x1726347B69D86LL, (int64_t)0xFFFF7155E6AFC46CLL, (int64_t)0xFFFE83D36D7CB1E7LL, (int64_t)0xFFFEA6D522B6B6EBLL, (int64_t)0x8DC4E0A2CEC9LL, (int64_t)0xFFFE9A546A2371E9LL, (int64_t)0xFFFF708C294FF0D9LL, (int64_t)0xC307F092304FLL, (int64_t)0xDF9B68E441F6LL };
		static const int64_t output0[] = { (int64_t)0x3FD1E874LL, (int64_t)0xFCC905B4LL, (int64_t)0xD30C2768LL, (int64_t)0xB7BDBCB8LL, (int64_t)0xFFFFFFFF2D64524CLL, (int64_t)0xEFAEE108LL, (int64_t)0xEE9561F0LL, (int64_t)0xFFFFFFFF1E848C84LL, (int64_t)0xFFFFFFFFC6494534LL, (int64_t)0xFFFFFFFFB19A7EB0LL, (int64_t)0xFFFFFFFFBC13E7DCLL, (int64_t)0xFFFFFFFF246DFBB4LL, (int64_t)0xFFFFFFFF648B6E2CLL, (int64_t)0xFFFFFFFF018030A4LL, (int64_t)0xB8DB0390LL, (int64_t)0xFFFFFFFF255CD604LL, (int64_t)0xFFFFFFFF2D42DFE8LL, (int64_t)0x790794B8LL, (int64_t)0xFFFFFFFFCC80CBD8LL, (int64_t)0x66FBB6D8LL, (int64_t)0xFFFFFFFFD2F597CCLL, (int64_t)0xBB4746D0LL, (int64_t)0xFAB24DA4LL, (int64_t)0x9B44C19CLL, (int64_t)0x686C014LL, (int64_t)0xFFFFFFFF16138D24LL, (int64_t)0xFFFFFFFF31D3C7B4LL, (int64_t)0xFFFFFFFF0040F254LL, (int64_t)0xFDDCE3DCLL, (int64_t)0xFE3BF5B4LL, (int64_t)0xFFFCA264LL, (int64_t)0xFFFFFFFF123DEC48LL, (int64_t)0xFFFFFFFF1F291388LL, (int64_t)0xFFFFFFFF36237AC8LL, (int64_t)0x1190313CLL, (int64_t)0xFFFFFFFFA8E3DDACLL, (int64_t)0x40553CE4LL, (int64_t)0x64273954LL, (int64_t)0xFFFFFFFF1D489938LL, (int64_t)0x9FBCFA8CLL, (int64_t)0xB055C738LL, (int64_t)0xFFFFFFFF0C65C964LL, (int64_t)0xFFFFFFFF5A06DC44LL, (int64_t)0xFFFFFFFF32739BC8LL, (int64_t)0xFFFFFFFF2A5B6294LL, (int64_t)0xFFFFFFFF309263B4LL, (int64_t)0x4737A5BCLL, (int64_t)0x1DFDEFA0LL, (int64_t)0xFE287DE0LL, (int64_t)0x2A003F84LL, (int64_t)0xFFFFFFFF06FA8384LL, (int64_t)0xFFFFFFFF01267FA4LL, (int64_t)0xFFFFFFFF336DD3D0LL, (int64_t)0xFFFFFFFF9743D318LL, (int64_t)0x9E08AA4LL, (int64_t)0x42C8E80LL, (int64_t)0xF7672D30LL, (int64_t)0xFFFFFFFFCA305EECLL, (int64_t)0xC61FD438LL, (int64_t)0xE5A809E0LL, (int64_t)0xFFFFFFFF308D370CLL, (int64_t)0xBA04DCD8LL, (int64_t)0xFFFFFFFF93D55F1CLL, (int64_t)0xD279BD4LL, (int64_t)0xFFFFFFFF783A1530LL, (int64_t)0xFFFFFFFF07687348LL, (int64_t)0xFFFFFFFF0BAB7B74LL, (int64_t)0xFFFFFFFF08F4572CLL, (int64_t)0xEDE67A1CLL, (int64_t)0xDB27F188LL, (int64_t)0xCA888194LL, (int64_t)0x610EF49CLL, (int64_t)0x36E5B68LL, (int64_t)0xFFFFFFFFE4F9B108LL, (int64_t)0xE9025D9CLL, (int64_t)0xB3D50B98LL, (int64_t)0xB4F6699CLL, (int64_t)0xFFFFFFFF6DBBCBB4LL, (int64_t)0xFFFFFFFF8902F1ACLL, (int64_t)0xFFFFFFFF06C38D5CLL, (int64_t)0x5A5D5864LL, (int64_t)0xE78D9E88LL, (int64_t)0xFFFFFFFF12C5E160LL, (int64_t)0xC94A42E4LL, (int64_t)0x8593E964LL, (int64_t)0xD191428CLL, (int64_t)0xF1CCFE40LL, (int64_t)0xFFFFFFFF729A95ECLL, (int64_t)0xFFFFFFFF7920D6B0LL, (int64_t)0xFFFFFFFF9BAEC3C0LL, (int64_t)0xFFFFFFFFB7FC6C48LL, (int64_t)0xFFFFFFFFBBE4DAE8LL, (int64_t)0xE24C5CECLL, (int64_t)0xEC10E618LL, (int64_t)0xFFFFFFFF58B8720CLL, (int64_t)0xEE865E70LL, (int64_t)0xF4CF26F4LL, (int64_t)0xFB543BB4LL, (int64_t)0xFBEE9410LL, (int64_t)0xFFFFFFFF90A473CCLL };
		for (int ndx = 0; ndx < 100; ndx++)
			Util::Check("Fixed64::SinFast", Fixed64::SinFast(input0[ndx]), output0[ndx], input0[ndx]);
	}

	// Fixed64.SinFastest()
	static void Fixed64_SinFastest()
	{
		static const int64_t input0[] = { (int64_t)0x617C619CAALL, (int64_t)0x5770BD3026LL, (int64_t)0x5EADCCADA5LL, (int64_t)0x4BB1E892BFLL, (int64_t)0xA89A7E00DLL, (int64_t)0xFFFFFFEE47ABD675LL, (int64_t)0xFFFFFFD83C3746C9LL, (int64_t)0x4454A49060LL, (int64_t)0xFFFFFFD8031F5269LL, (int64_t)0xFFFFFFC5E8D5F724LL, (int64_t)0xFFFFFFD8BCB9EF0ALL, (int64_t)0xFFFFFFE24E929A5DLL, (int64_t)0x83D9ED538LL, (int64_t)0xEA9D6C39LL, (int64_t)0xFFFFFFC4FE404C12LL, (int64_t)0x45209C3512LL, (int64_t)0xFFFFFFC876CF7D19LL, (int64_t)0x16A1ABE615LL, (int64_t)0x23BB3AF7CLL, (int64_t)0x56A36E9B45LL, (int64_t)0x51D0344D4BLL, (int64_t)0xAE30A042DLL, (int64_t)0xFFFFFFB47CA27BF1LL, (int64_t)0x1E5E0D3014LL, (int64_t)0x64E04D18LL, (int64_t)0xFFFFFFF7DE189A08LL, (int64_t)0xFFFFFFE42CF71281LL, (int64_t)0xFFFFFFB729068017LL, (int64_t)0x25628F9FCLL, (int64_t)0xFFFFFFC6E3CB5856LL, (int64_t)0x4DEA6F7E43LL, (int64_t)0x45AA6F2453LL, (int64_t)0xFFFFFFEB305CA14FLL, (int64_t)0xFFFFFFCA3BDB3FDDLL, (int64_t)0xFFFFFFE1681CF3EBLL, (int64_t)0xFFFFFFC5B459AC84LL, (int64_t)0xFFFFFFE279C62C5DLL, (int64_t)0xE838E0A75LL, (int64_t)0xFFFFFFCE3A55D235LL, (int64_t)0x5EF4E3EBE5LL, (int64_t)0x3FD2252DA7LL, (int64_t)0xFFFFFFC5E40DBC04LL, (int64_t)0xFFFFFFCCFD327942LL, (int64_t)0xFFFFFFA4BEFCC182LL, (int64_t)0xFFFFFFF1D321D8FCLL, (int64_t)0x439F0724BFLL, (int64_t)0xFFFFFFF2941D827ELL, (int64_t)0x3E8FBA4E15LL, (int64_t)0x3DAEA88813LL, (int64_t)0xFFFFFFC6827F1C86LL, (int64_t)0xFFFFE014C622256ALL, (int64_t)0xFFFFC88CE2A8AEDALL, (int64_t)0xEE72F36A72A5LL, (int64_t)0xF7398883A9B3LL, (int64_t)0x126A61C96528CLL, (int64_t)0xFFFFCBA6FE2BA90ELL, (int64_t)0xF5E9884FF293LL, (int64_t)0xFFFF749784027CEFLL, (int64_t)0xFFFF9F84E85012CALL, (int64_t)0xFFFEC24E27A984DDLL, (int64_t)0xFFFEA0D8521D71F1LL, (int64_t)0xFFFEFA92F68827E6LL, (int64_t)0xFFFF7B2A12C37695LL, (int64_t)0xFFFEBC426008D745LL, (int64_t)0xFFFF7359C0482AF4LL, (int64_t)0xFFFFDD1F7427D77FLL, (int64_t)0x163EE02D4DF9CLL, (int64_t)0xFFFF6B96E3FF6F6ELL, (int64_t)0xFFFEF475C5D5F4ACLL, (int64_t)0x183D8ACDF44F1LL, (int64_t)0xFFFFFABBB4120438LL, (int64_t)0x74FE37A7D03CLL, (int64_t)0xFFFF9433A83DA628LL, (int64_t)0x1C6C9B940419LL, (int64_t)0xFFFED28186D42FC4LL, (int64_t)0x9BF276A780A5LL, (int64_t)0xFFFF6B29D1F6A914LL, (int64_t)0xFFFEB6DCCF60437ALL, (int64_t)0xFFFF275EA74C39FELL, (int64_t)0x8004D8459DC9LL, (int64_t)0xFFFE8E08FCD3F552LL, (int64_t)0x258E355F42DCLL, (int64_t)0xFFFF7925FF10CB8CLL, (int64_t)0xFFFF6312CF891B66LL, (int64_t)0xC7750C2EE9AALL, (int64_t)0xFFFFE12EE0DC8A1ELL, (int64_t)0xFFFE9B0ECEBB72DELL, (int64_t)0x3E1B61527076LL, (int64_t)0xFFFF8DF3B3DB22A8LL, (int64_t)0x14377B2ED242FLL, (int64_t)0xFFFFACFEF5F9EEBELL, (int64_t)0xFFFE91742A1ACE29LL, (int64_t)0xFFFF128CFA88C65ALL, (int64_t)0xFFFEF4A5B793980CLL, (int64_t)0x14B7448340828LL, (int64_t)0x7819EAB22EF3LL, (int64_t)0x12878C2E2F831LL, (int64_t)0xFFFEF5DAAD20D276LL, (int64_t)0xAED04B0BB6E0LL, (int64_t)0x17221480FBF82LL };
		static const int64_t output0[] = { (int64_t)0xFFFFFFFFE7560EB4LL, (int64_t)0xFFFFFFFF7FD967C0LL, (int64_t)0x6AFD9588LL, (int64_t)0x4ADB688CLL, (int64_t)0xFFFFFFFF1A5C6AF0LL, (int64_t)0xE77B1468LL, (int64_t)0xFFFFFFFF1EB33AC4LL, (int64_t)0xFFFFFFFF4B2186CCLL, (int64_t)0xFFFFFFFF3F2702C4LL, (int64_t)0xFFFFFFFF001FB068LL, (int64_t)0xFFFFFFFF0002CE70LL, (int64_t)0xFD010B64LL, (int64_t)0xED16634CLL, (int64_t)0xCB272D20LL, (int64_t)0xFFFFFFFF5E5241BCLL, (int64_t)0x32908C8LL, (int64_t)0xD92FB2F4LL, (int64_t)0xFFFFFFFF67042AF8LL, (int64_t)0xC9E330D4LL, (int64_t)0xFFFFFFFF07A79B20LL, (int64_t)0x21AA89F4LL, (int64_t)0xFFFFFFFF018CE948LL, (int64_t)0xFFFFFFFFE2A4F9CCLL, (int64_t)0xFFFFFFFF221C1524LL, (int64_t)0x624B314CLL, (int64_t)0xFFFFFFFF09E3A628LL, (int64_t)0xFFFFFFFF90A48270LL, (int64_t)0x8CFADFF4LL, (int64_t)0xB89180C8LL, (int64_t)0xFFFFFFFF77ABA398LL, (int64_t)0x959C52F0LL, (int64_t)0x85FB9014LL, (int64_t)0xFFFFFFFF134D0A18LL, (int64_t)0x59F9AD40LL, (int64_t)0xBBA91990LL, (int64_t)0xFFFFFFFF03FF8A00LL, (int64_t)0xF2EB2DC8LL, (int64_t)0xEE0A1AC4LL, (int64_t)0x7940443CLL, (int64_t)0xA6AB10F4LL, (int64_t)0xD5E8C154LL, (int64_t)0xFFFFFFFF00051B0CLL, (int64_t)0xFFFFFFFF525295E8LL, (int64_t)0x25B119DCLL, (int64_t)0xFFFFFFFF0034C9E4LL, (int64_t)0xFFFFFFFF00CA9034LL, (int64_t)0xFFFFFFFF3ECA5190LL, (int64_t)0xFFFFFFFFBB9C74D8LL, (int64_t)0xFFFFFFFF166006D4LL, (int64_t)0xFFFFFFFF30FFE73CLL, (int64_t)0xFFFFFFFFF18EBF68LL, (int64_t)0xFFFFFFFF03CF487CLL, (int64_t)0xF8F03FA8LL, (int64_t)0xFFFFFFFF29A1B538LL, (int64_t)0x746E56FCLL, (int64_t)0xDB1AF940LL, (int64_t)0xBF1DA700LL, (int64_t)0x2187288LL, (int64_t)0x1BD2C2D8LL, (int64_t)0xFFFFFFFFB5B04330LL, (int64_t)0xFFFFFFFF29538208LL, (int64_t)0xFFFFFFFFB1972A18LL, (int64_t)0xFFFFFFFF078D7A74LL, (int64_t)0xFFFFFFFF5515EB98LL, (int64_t)0x70A20850LL, (int64_t)0xFFFFFFFFDC49F7F8LL, (int64_t)0xFFFFFFFF52EFC444LL, (int64_t)0xF773D70CLL, (int64_t)0x5B940144LL, (int64_t)0xFA51E5E4LL, (int64_t)0x868E8100LL, (int64_t)0xFFFFFFFF03280C68LL, (int64_t)0xFFFFFFFF70EC3364LL, (int64_t)0xA0D3A8B8LL, (int64_t)0x2C8EBC7CLL, (int64_t)0xFFFFFFFF3816D47CLL, (int64_t)0xFFFFFFFF309CF958LL, (int64_t)0xFFFFFFFF016D906CLL, (int64_t)0xFFFFFFFF127AE850LL, (int64_t)0xFFFFFFFFC0BAB824LL, (int64_t)0xFD00D8A8LL, (int64_t)0xCE002184LL, (int64_t)0xFFFFFFFF2E8E1EB0LL, (int64_t)0xFF47C68CLL, (int64_t)0xFFFFFFFF52EEFD08LL, (int64_t)0x8CD88E20LL, (int64_t)0xFFFFFFFF434DA928LL, (int64_t)0x37EE0560LL, (int64_t)0xFED5F6F8LL, (int64_t)0xFFE038F0LL, (int64_t)0xA3AD9AB4LL, (int64_t)0xFFFFFFFF9D63F920LL, (int64_t)0x569DBD20LL, (int64_t)0x706C3A30LL, (int64_t)0xFFFFFFFF27B84DECLL, (int64_t)0xC0715A28LL, (int64_t)0xD40072B4LL, (int64_t)0xFFD7781CLL, (int64_t)0xFFFFFFFFB2EB67E8LL, (int64_t)0x4A4DFC08LL };
		for (int ndx = 0; ndx < 100; ndx++)
			Util::Check("Fixed64::SinFastest", Fixed64::SinFastest(input0[ndx]), output0[ndx], input0[ndx]);
	}

	// Fixed32.Sin()
	static void Fixed32_Sin()
	{
		static const int32_t input0[] = { (int32_t)0x4C80D1, (int32_t)0xFFB4925A, (int32_t)0x1F0D39, (int32_t)0x3E64C1, (int32_t)0x2BDBA9, (int32_t)0x3DE0E9, (int32_t)0xFFA966B7, (int32_t)0xFFD1C430, (int32_t)0x2878D5, (int32_t)0xFFBF81F6, (int32_t)0xFFB4B381, (int32_t)0x2F3674, (int32_t)0xFFAFC4D5, (int32_t)0x2A872F, (int32_t)0xFFA96195, (int32_t)0x7D77, (int32_t)0x4398D2, (int32_t)0xFFA22AD2, (int32_t)0xFFDE0FB4, (int32_t)0x47E203, (int32_t)0xFFEE72DB, (int32_t)0xFFE737F9, (int32_t)0x5B3404, (int32_t)0xFFCCB3BC, (int32_t)0x1489A7, (int32_t)0xFFF87CD0, (int32_t)0xFFF6BCBC, (int32_t)0xFFC4D890, (int32_t)0x166CA0, (int32_t)0xFFF81256, (int32_t)0x400694, (int32_t)0xFFBA07FA, (int32_t)0xFFE2FD10, (int32_t)0xFFCDCA15, (int32_t)0x384507, (int32_t)0x50B7A1, (int32_t)0x4E9002, (int32_t)0x3159C, (int32_t)0xFF800, (int32_t)0x592EB7, (int32_t)0xFFEAB5AC, (int32_t)0x36DB41, (int32_t)0x4B6D68, (int32_t)0xFFBF4BCB, (int32_t)0x3A1B45, (int32_t)0x1F89C9, (int32_t)0x566532, (int32_t)0xFFFCAF57, (int32_t)0xFFAE2D33, (int32_t)0xFFF05CB8, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x3010A2A3, (int32_t)0x5048F90, (int32_t)0x80000000, (int32_t)0xBB0D9703, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x8F45515C, (int32_t)0x80000000, (int32_t)0x7A6E0476, (int32_t)0x80000000, (int32_t)0x9099F22B, (int32_t)0x80000000, (int32_t)0xA320349C, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x55A79149, (int32_t)0x80000000, (int32_t)0xD9B68027, (int32_t)0xA5AED626, (int32_t)0xE55538FB, (int32_t)0x6BC82E87, (int32_t)0xFF2F41E0, (int32_t)0x80000000, (int32_t)0xDB438C31, (int32_t)0x80000000, (int32_t)0x17CC3C92, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x70FAA8E7, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0xF8A718B5, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0xF134F472, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x46792C59, (int32_t)0x180A5CB0, (int32_t)0x80000000, (int32_t)0x6992FA15, (int32_t)0x80000000, (int32_t)0x80000000 };
		static const int32_t output0[] = { (int32_t)0xE4B9, (int32_t)0xFFFFF84C, (int32_t)0xFFFFA4CB, (int32_t)0xFFFF935B, (int32_t)0xFFFFE046, (int32_t)0xFFFF2F46, (int32_t)0xFAA4, (int32_t)0xFFFF3907, (int32_t)0x5C43, (int32_t)0xFFFF0107, (int32_t)0x1968, (int32_t)0xFFFFE94A, (int32_t)0xFE24, (int32_t)0xFFFF01BC, (int32_t)0xF98B, (int32_t)0x7880, (int32_t)0xFFFF005B, (int32_t)0x673A, (int32_t)0xFFFF6B7E, (int32_t)0x5D79, (int32_t)0xF68C, (int32_t)0x581D, (int32_t)0xFFFFE735, (int32_t)0xFFFF2436, (int32_t)0xFE3D, (int32_t)0xFFFF0EC9, (int32_t)0xFFFFD6B4, (int32_t)0xFFFF7D36, (int32_t)0xFFFF948B, (int32_t)0xFFFF00B5, (int32_t)0xEE06, (int32_t)0xFFFF3F07, (int32_t)0xAC13, (int32_t)0xE09, (int32_t)0xFFFFB97D, (int32_t)0xFFFF2DAF, (int32_t)0xFFFFFA2F, (int32_t)0xEA1, (int32_t)0xFFFFBDFE, (int32_t)0xF039, (int32_t)0xFFFF5AEC, (int32_t)0xFFFF01E2, (int32_t)0x775, (int32_t)0xFFFF0B87, (int32_t)0xFFFA, (int32_t)0x1F3A, (int32_t)0xFFFF0000, (int32_t)0x2C30, (int32_t)0xFFFFDBC3, (int32_t)0xFFFFEE0E, (int32_t)0xFFFF1277, (int32_t)0xFFFF1277, (int32_t)0xFFFF1277, (int32_t)0xFFFF1277, (int32_t)0xD50C, (int32_t)0x57ED, (int32_t)0xFFFF1277, (int32_t)0xFFFF30DF, (int32_t)0xFFFF1277, (int32_t)0xFFFF1277, (int32_t)0xFFFFFCE7, (int32_t)0xFFFF1277, (int32_t)0xFF25, (int32_t)0xFFFF1277, (int32_t)0xF83F, (int32_t)0xFFFF1277, (int32_t)0xFFFFC7CE, (int32_t)0xFFFF1277, (int32_t)0xFFFF1277, (int32_t)0xFFFF1277, (int32_t)0xFFFF51A7, (int32_t)0xFFFF1277, (int32_t)0x4433, (int32_t)0xD17B, (int32_t)0x18B0, (int32_t)0x69E8, (int32_t)0xFFFF03D4, (int32_t)0xFFFF1277, (int32_t)0xFED9, (int32_t)0xFFFF1277, (int32_t)0xFFFF5D5A, (int32_t)0xFFFF1277, (int32_t)0xFFFF1277, (int32_t)0xFFFF1277, (int32_t)0xEA7A, (int32_t)0xFFFF1277, (int32_t)0xFFFF1277, (int32_t)0xFFFF35CE, (int32_t)0xFFFF1277, (int32_t)0xFFFF1277, (int32_t)0xFFFF1277, (int32_t)0xFD52, (int32_t)0xFFFF1277, (int32_t)0xFFFF1277, (int32_t)0xD67E, (int32_t)0x497, (int32_t)0xFFFF1277, (int32_t)0x24E9, (int32_t)0xFFFF1277, (int32_t)0xFFFF1277 };
		for (int ndx = 0; ndx < 100; ndx++)
			Util::Check("Fixed32::Sin", Fixed32::Sin(input0[ndx]), output0[ndx], input0[ndx]);
	}

	// Fixed32.SinFast()
	static void Fixed32_SinFast()
	{
		static const int32_t input0[] = { (int32_t)0xFFD35065, (int32_t)0xFFAC6A73, (int32_t)0xA6D2F, (int32_t)0x55833F, (int32_t)0x3E6F42, (int32_t)0xFFFEA2EB, (int32_t)0xFFEB87F0, (int32_t)0xFFF4ED30, (int32_t)0xFFEBB23B, (int32_t)0x54B663, (int32_t)0xFF9D7E4A, (int32_t)0xFFE9761C, (int32_t)0x5BC108, (int32_t)0xFFD0DB3D, (int32_t)0x2D473C, (int32_t)0xFFE916C9, (int32_t)0x31E2CA, (int32_t)0xFFF947A6, (int32_t)0x137A4C, (int32_t)0xFFE92F8D, (int32_t)0x1E71B9, (int32_t)0x4E1AE8, (int32_t)0xFFBC7EA9, (int32_t)0x1F45F8, (int32_t)0xFFF150A8, (int32_t)0xFFB5B6F1, (int32_t)0xFF9F48B5, (int32_t)0xFFB599AA, (int32_t)0x3AD671, (int32_t)0x5704D4, (int32_t)0x413E6, (int32_t)0x48C3A7, (int32_t)0x5C17D0, (int32_t)0x1B28B7, (int32_t)0x21AF79, (int32_t)0xFFF5AD2B, (int32_t)0xFFEFA036, (int32_t)0xFFC1281E, (int32_t)0xFFE7A0A8, (int32_t)0xFFBA4949, (int32_t)0xEC3E4, (int32_t)0x4B4C9D, (int32_t)0xFFAE6C44, (int32_t)0x34C5B4, (int32_t)0xFFD17DE6, (int32_t)0xFFE1E330, (int32_t)0x4757B, (int32_t)0xFFA45F46, (int32_t)0x1351EA, (int32_t)0xFFC4F3C2, (int32_t)0x80000000, (int32_t)0x761A95E2, (int32_t)0x80000000, (int32_t)0xCBC45DB4, (int32_t)0x80000000, (int32_t)0xA6F8EC89, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0xC5A099, (int32_t)0x80000000, (int32_t)0xEDD86293, (int32_t)0x80000000, (int32_t)0x7588D955, (int32_t)0xE365565D, (int32_t)0xB45AB804, (int32_t)0x80000000, (int32_t)0xC6D85675, (int32_t)0x80000000, (int32_t)0x4AE2F347, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x31B9315F, (int32_t)0x80000000, (int32_t)0xD5C77920, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0xB0CA7864, (int32_t)0xA9358743, (int32_t)0x80000000, (int32_t)0x5307B337, (int32_t)0x80000000, (int32_t)0x188844E7, (int32_t)0x45DD7C2D, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x1558A8C2, (int32_t)0xE936C94F, (int32_t)0x80000000, (int32_t)0x167B5D9D, (int32_t)0x1178A087, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x64918FB2, (int32_t)0x9329907A, (int32_t)0x80000000 };
		static const int32_t output0[] = { (int32_t)0xFFFF5A5D, (int32_t)0xFFFF0DFA, (int32_t)0xFFFF2858, (int32_t)0xFFFF5D1C, (int32_t)0xFFFF9CF5, (int32_t)0xFFFF0579, (int32_t)0xFFFF004D, (int32_t)0xFF39, (int32_t)0xFFFF01BC, (int32_t)0x1C3E, (int32_t)0xE61F, (int32_t)0x8542, (int32_t)0xFFFF6583, (int32_t)0x50B, (int32_t)0xF664, (int32_t)0xCBA6, (int32_t)0xFFFFA124, (int32_t)0xFFFF93AB, (int32_t)0x9671, (int32_t)0xBBB7, (int32_t)0xFFFF2C95, (int32_t)0x6BD0, (int32_t)0xFFCE, (int32_t)0xFFFFDB9D, (int32_t)0xFFFF2574, (int32_t)0xE59E, (int32_t)0xFFFF6059, (int32_t)0xD734, (int32_t)0xC0C4, (int32_t)0xFFFF3067, (int32_t)0xFFFF31D9, (int32_t)0xFFFF838E, (int32_t)0xFFFF2A6C, (int32_t)0xE5E5, (int32_t)0xC402, (int32_t)0xC856, (int32_t)0x9E36, (int32_t)0xFFFFFD12, (int32_t)0xB06B, (int32_t)0xFFFF6FBA, (int32_t)0xCF26, (int32_t)0xFFFFE6B5, (int32_t)0x1AA8, (int32_t)0x97CF, (int32_t)0xFFFF6C27, (int32_t)0xF6E6, (int32_t)0xFFFF082E, (int32_t)0x7F91, (int32_t)0x7408, (int32_t)0xFFFF669E, (int32_t)0xFFFF1277, (int32_t)0xFFFFE5E1, (int32_t)0xFFFF1277, (int32_t)0xFFFF2672, (int32_t)0xFFFF1277, (int32_t)0xFFFF136E, (int32_t)0xFFFF1277, (int32_t)0xFFFF1277, (int32_t)0x49F0, (int32_t)0xFFFF1277, (int32_t)0xEE8C, (int32_t)0xFFFF1277, (int32_t)0xFFFF07AA, (int32_t)0xFFFF9EB6, (int32_t)0xFFFF8459, (int32_t)0xFFFF1277, (int32_t)0xF425, (int32_t)0xFFFF1277, (int32_t)0xD085, (int32_t)0xFFFF1277, (int32_t)0xFFFF1277, (int32_t)0xFFFF7C41, (int32_t)0xFFFF1277, (int32_t)0xFFFF01EC, (int32_t)0xFFFF1277, (int32_t)0xFFFF1277, (int32_t)0xFFFF1277, (int32_t)0xFFFF01D6, (int32_t)0xFFFF18A5, (int32_t)0xFFFF1277, (int32_t)0xFFFFB07C, (int32_t)0xFFFF1277, (int32_t)0xFFFFC6C6, (int32_t)0xFFFF9CC2, (int32_t)0xFFFF1277, (int32_t)0xFFFF1277, (int32_t)0xFFFF1277, (int32_t)0xFFFF028C, (int32_t)0xFFFF5671, (int32_t)0xFFFF1277, (int32_t)0xFFFFF7CB, (int32_t)0xFFFF2876, (int32_t)0xFFFF1277, (int32_t)0xFFFF1277, (int32_t)0xFFFF1277, (int32_t)0xFFFF1277, (int32_t)0xFFFF1277, (int32_t)0xFFFFCAC0, (int32_t)0xFFFFA851, (int32_t)0xFFFF1277 };
		for (int ndx = 0; ndx < 100; ndx++)
			Util::Check("Fixed32::SinFast", Fixed32::SinFast(input0[ndx]), output0[ndx], input0[ndx]);
	}

	// Fixed32.SinFastest()
	static void Fixed32_SinFastest()
	{
		static const int32_t input0[] = { (int32_t)0x5484E4, (int32_t)0xFFC3DD2A, (int32_t)0xFFF53382, (int32_t)0xFFDBB7D8, (int32_t)0xFFCB7D30, (int32_t)0xFFC78A0E, (int32_t)0xC9510, (int32_t)0x125B96, (int32_t)0x183534, (int32_t)0xFFE9D8EA, (int32_t)0x1186D6, (int32_t)0x432D6, (int32_t)0x15F25, (int32_t)0xFFF0C520, (int32_t)0xFFAB76DC, (int32_t)0x70C6, (int32_t)0x2FA685, (int32_t)0xFFA83410, (int32_t)0xFFD9ED4D, (int32_t)0x6CAA4, (int32_t)0xFFDB8395, (int32_t)0x4FE757, (int32_t)0x466D9E, (int32_t)0xFFDAB1C7, (int32_t)0x31D8B3, (int32_t)0xFFF4FD95, (int32_t)0x4BC526, (int32_t)0xFFEABEA8, (int32_t)0x3641F1, (int32_t)0x19609, (int32_t)0x9EF3C, (int32_t)0xFFBDEFC9, (int32_t)0xFFA395BD, (int32_t)0xFFD104CE, (int32_t)0xFFBAE895, (int32_t)0xFFED644C, (int32_t)0x5B5ED, (int32_t)0xFFC68FE9, (int32_t)0xFFE26581, (int32_t)0x57360C, (int32_t)0xFFD942C9, (int32_t)0xFFCADB77, (int32_t)0x5141BF, (int32_t)0xFFAC51CA, (int32_t)0x26F326, (int32_t)0xFF9D8E89, (int32_t)0xFF9F19D9, (int32_t)0xFFD03067, (int32_t)0x17717A, (int32_t)0xFFBE7E4D, (int32_t)0x337FF99F, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x889BB6FC, (int32_t)0x80000000, (int32_t)0x362FA5C0, (int32_t)0x80000000, (int32_t)0x821927FA, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0xBFE6108B, (int32_t)0xF2C5AEBE, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x13E05789, (int32_t)0x80000000, (int32_t)0x9D3BD0FD, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x5CC0A031, (int32_t)0x80000000, (int32_t)0xC8E195E1, (int32_t)0x5C1D0CE6, (int32_t)0x80000000, (int32_t)0x4D343D55, (int32_t)0x80000000, (int32_t)0xA5DF725C, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0xDFD9FAB9, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0xAEC3E4B5, (int32_t)0x70127DC0, (int32_t)0x2E7A09A9, (int32_t)0x4BF1F7F8, (int32_t)0x80000000, (int32_t)0xBCA519E6, (int32_t)0x80000000, (int32_t)0x80000000, (int32_t)0x80000000 };
		static const int32_t output0[] = { (int32_t)0x4C9C, (int32_t)0x6E65, (int32_t)0xFB05, (int32_t)0xFCF2, (int32_t)0xFFFF3810, (int32_t)0x167C, (int32_t)0x412, (int32_t)0xFFFF8719, (int32_t)0xFFFF3389, (int32_t)0x292C, (int32_t)0xFFFF07DC, (int32_t)0xFFFF210A, (int32_t)0xFAE6, (int32_t)0xFFFF8A3A, (int32_t)0xFFFFB774, (int32_t)0x6D2B, (int32_t)0xFFFF7F53, (int32_t)0x2ACC, (int32_t)0xFFFFA27B, (int32_t)0x7CA0, (int32_t)0xEFC8, (int32_t)0xFFFF0580, (int32_t)0xF784, (int32_t)0x622D, (int32_t)0xFFFF97D6, (int32_t)0xFFF7, (int32_t)0x5D07, (int32_t)0xFFFF5421, (int32_t)0xFFFF3F8E, (int32_t)0xFFF5, (int32_t)0xFFFF8312, (int32_t)0x16FB, (int32_t)0xF73D, (int32_t)0xFFFFDB9A, (int32_t)0x608, (int32_t)0x3D2F, (int32_t)0xFFFF7549, (int32_t)0xFFFF392B, (int32_t)0xF887, (int32_t)0xFFFF50D2, (int32_t)0xFFFF2334, (int32_t)0xFFFFBD1B, (int32_t)0xFFFF9688, (int32_t)0xFFFF171F, (int32_t)0xF2F9, (int32_t)0xDE90, (int32_t)0xFFFF876D, (int32_t)0xA264, (int32_t)0xFFFF01D7, (int32_t)0xFFFF8CC7, (int32_t)0xF5E4, (int32_t)0xFFFF1279, (int32_t)0xFFFF1279, (int32_t)0xFFFF1279, (int32_t)0xFFFF1279, (int32_t)0xFFFF1279, (int32_t)0xFFFFBBCA, (int32_t)0xFFFF1279, (int32_t)0xFFFF0069, (int32_t)0xFFFF1279, (int32_t)0xF280, (int32_t)0xFFFF1279, (int32_t)0xFFFF1279, (int32_t)0xFFFF1279, (int32_t)0xFFFF1279, (int32_t)0xFC19, (int32_t)0x5067, (int32_t)0xFFFF1279, (int32_t)0xFFFF1279, (int32_t)0xFFFF1279, (int32_t)0xFFFF1279, (int32_t)0xFFFF2372, (int32_t)0xFFFF1279, (int32_t)0xFFFF65DE, (int32_t)0xFFFF1279, (int32_t)0xFFFF1279, (int32_t)0xFFFF1279, (int32_t)0xFFFF1279, (int32_t)0x739B, (int32_t)0xFFFF1279, (int32_t)0xFFAB, (int32_t)0x40CF, (int32_t)0xFFFF1279, (int32_t)0xFFFF89B9, (int32_t)0xFFFF1279, (int32_t)0xFFFF5BAB, (int32_t)0xFFFF1279, (int32_t)0xFFFF1279, (int32_t)0xD093, (int32_t)0xFFFF1279, (int32_t)0xFFFF1279, (int32_t)0xF1D4, (int32_t)0xFE96, (int32_t)0xFFFF43B0, (int32_t)0xF9A6, (int32_t)0xFFFF1279, (int32_t)0xFFFF0923, (int32_t)0xFFFF1279, (int32_t)0xFFFF1279, (int32_t)0xFFFF1279 };
		for (int ndx = 0; ndx < 100; ndx++)
			Util::Check("Fixed32::SinFastest", Fixed32::SinFastest(input0[ndx]), output0[ndx], input0[ndx]);
	}

	// Fixed64.Cos()
	static void Fixed64_Cos()
	{
		static const int64_t input0[] = { (int64_t)0x4F16EA671LL, (int64_t)0x36BF816095LL, (int64_t)0x6253DB0CCCLL, (int64_t)0x595EEA6F5ALL, (int64_t)0xFFFFFFC3C3743F70LL, (int64_t)0xFFFFFFA4187B6A01LL, (int64_t)0xFFFFFFF7333FC457LL, (int64_t)0x591A5159DALL, (int64_t)0x13D0B74C8FLL, (int64_t)0x2C97922C81LL, (int64_t)0xFFFFFFA1F7F4C7FCLL, (int64_t)0xF53B51D16LL, (int64_t)0x2C31BC5BDLL, (int64_t)0x4194FA214BLL, (int64_t)0xFFFFFFE49BDE67C2LL, (int64_t)0x2C3027B2E0LL, (int64_t)0xFFFFFFEA893B8C0ELL, (int64_t)0xFFFFFFC855FFB239LL, (int64_t)0xFFFFFFBE383A7095LL, (int64_t)0xFFFFFFF6FC3FDF36LL, (int64_t)0xD78D75602LL, (int64_t)0xFFFFFFD25FF1065DLL, (int64_t)0x38953A2CC9LL, (int64_t)0xFFFFFFB7918418F8LL, (int64_t)0x161DCF5984LL, (int64_t)0xF86A5E5B7LL, (int64_t)0x4C65D98B90LL, (int64_t)0xFFFFFFB9E8A9C65CLL, (int64_t)0x37461AE276LL, (int64_t)0xFFFFFFAE1B7BF5E5LL, (int64_t)0x21E64CB33BLL, (int64_t)0xFFFFFFC403031A81LL, (int64_t)0x5B3B9E873LL, (int64_t)0xFFFFFFE06287D0E9LL, (int64_t)0xFFFFFFC758BB8227LL, (int64_t)0x1F243A7EA6LL, (int64_t)0x1940E4AB2ALL, (int64_t)0x41EE42A47BLL, (int64_t)0xFFFFFFEC0030F521LL, (int64_t)0x504E750398LL, (int64_t)0x55BA2D6153LL, (int64_t)0x5103E5C98ALL, (int64_t)0x166C71FA24LL, (int64_t)0x2F2D8B31D6LL, (int64_t)0xFFFFFFB05312A0B9LL, (int64_t)0xFFFFFFFCA10B8C42LL, (int64_t)0x4C71169570LL, (int64_t)0x3F1BC9E6E6LL, (int64_t)0xFFFFFFC34A07658FLL, (int64_t)0x4B40FD284ELL, (int64_t)0x1318BA2F11D1LL, (int64_t)0xFFFFE7F21DE88045LL, (int64_t)0x9898B472433LL, (int64_t)0x166E21FB00BCLL, (int64_t)0x105CC5401AD9LL, (int64_t)0xFFFFECB0D5128842LL, (int64_t)0x265883D03BD1LL, (int64_t)0x1BA3E9F73F67LL, (int64_t)0xFFFFF3356E9487CBLL, (int64_t)0x977C09B0C0FLL, (int64_t)0xFFFFE551C73AE384LL, (int64_t)0xFFFFF0E1229735E3LL, (int64_t)0xFFFFE626E546A2EELL, (int64_t)0xAACB2DDAF5LL, (int64_t)0xFFFFDD1D3F235F1BLL, (int64_t)0x19C3AE67C467LL, (int64_t)0xFFFFDCB27E208FC5LL, (int64_t)0xFFFFE65DB9CBA31CLL, (int64_t)0x8AF88762A3FLL, (int64_t)0x1032BC070E85LL, (int64_t)0xFFFFE055762F030BLL, (int64_t)0x4EC893A74B9LL, (int64_t)0x192184C1DDA3LL, (int64_t)0xFFFFEDFF511E925FLL, (int64_t)0x20DCF392C7BLL, (int64_t)0xCADAE5ADF3BLL, (int64_t)0xC7B1DA0C5D6LL, (int64_t)0xFFFFDC9C805A06D9LL, (int64_t)0xFFFFDBC46452F869LL, (int64_t)0xFFFFE2E4BC7C2E2ALL, (int64_t)0xF446BFB5B68LL, (int64_t)0xFFFFDE20EE1C52A2LL, (int64_t)0x2365F76DD02BLL, (int64_t)0x1F41FF9CB7A4LL, (int64_t)0xFFFFF3FA023CFB55LL, (int64_t)0xFFFFFE3BD80D8318LL, (int64_t)0x617A1EF35CFLL, (int64_t)0x12DC12A3CC58LL, (int64_t)0xA59B7CD8013LL, (int64_t)0x243DD42C4EDBLL, (int64_t)0xCE1A3093D23LL, (int64_t)0x15496F5B9D32LL, (int64_t)0xFFFFFF7BA373B898LL, (int64_t)0x15C85284B470LL, (int64_t)0x12FCDE7A8419LL, (int64_t)0x98B9722CEB7LL, (int64_t)0x126EA07C16FDLL, (int64_t)0xFFFFE1079157DB70LL, (int64_t)0xE408B3C18A1LL, (int64_t)0xFFFFEE2CC4DF03BALL };
		static const int64_t output0[] = { (int64_t)0x3A89C274LL, (int64_t)0xFFFFFFFFC5AFCD98LL, (int64_t)0xFFFFFFFF68A3DE78LL, (int64_t)0x29F4412CLL, (int64_t)0xFFFFFFFF2540CA7CLL, (int64_t)0xFFFFFFFF4D4F23C4LL, (int64_t)0xFFFFFFFF30638F58LL, (int64_t)0x6B520BE0LL, (int64_t)0x919D5F88LL, (int64_t)0xD1DCD214LL, (int64_t)0xFA0812D8LL, (int64_t)0xFFFFFFFF125AE8A0LL, (int64_t)0xFFFFFFFF1235AD44LL, (int64_t)0xFFFFFFFF135EB3B8LL, (int64_t)0xFFFFFFFF5D855268LL, (int64_t)0xFA98EE98LL, (int64_t)0xFFFFFFFF22C2F990LL, (int64_t)0xA23383D8LL, (int64_t)0xFFFFFFFF04C1E3D0LL, (int64_t)0xFFFFFFFF153AE70CLL, (int64_t)0x9DFE59F8LL, (int64_t)0xFFFFFFFFED8CA7E8LL, (int64_t)0xFFD98FCCLL, (int64_t)0xFFFFFFFF03E85BA8LL, (int64_t)0xFFFFFFFF0201C294LL, (int64_t)0xFFFFFFFF043A58F4LL, (int64_t)0x8A65D084LL, (int64_t)0x8F6BDF7CLL, (int64_t)0x4AAB235CLL, (int64_t)0xFA4F5EE8LL, (int64_t)0xFFFFFFFF356F41B0LL, (int64_t)0xFFFFFFFF0B47F2D4LL, (int64_t)0xD5F9CD90LL, (int64_t)0xFAF02FD4LL, (int64_t)0xFE98FA2CLL, (int64_t)0xF66C015CLL, (int64_t)0xFE22D1ECLL, (int64_t)0xFFFFFFFF003BDA40LL, (int64_t)0x68A4C0E8LL, (int64_t)0x31D1FEF4LL, (int64_t)0xFFFFFFFF61B8E330LL, (int64_t)0xC94376FCLL, (int64_t)0xFFFFFFFF17918FCCLL, (int64_t)0xFFFFFFFF005F9550LL, (int64_t)0xFFFFFFFF941793C0LL, (int64_t)0xFFFFFFFF06B3BA08LL, (int64_t)0x80D01798LL, (int64_t)0xF6433764LL, (int64_t)0xFFFFFFFF7A243450LL, (int64_t)0xFD564C88LL, (int64_t)0xEADF8828LL, (int64_t)0xEF728614LL, (int64_t)0xFFFFFFFF22AD9260LL, (int64_t)0xC4067358LL, (int64_t)0xFFFFFFFF7BA8BED8LL, (int64_t)0xFFFFFFFFDF3B7098LL, (int64_t)0xFFFFFFFF6DA0C83CLL, (int64_t)0x7FFB7720LL, (int64_t)0x841F3B74LL, (int64_t)0x37D8FBCLL, (int64_t)0xEBDBA988LL, (int64_t)0xE976EDD8LL, (int64_t)0x9D10A5D8LL, (int64_t)0x691E38BCLL, (int64_t)0xFFFFFFFF4CA4B858LL, (int64_t)0xFFFFFFFFE85A7A88LL, (int64_t)0xFFFFFFFF57F55CC8LL, (int64_t)0xFFFFFFFF20EE084CLL, (int64_t)0xC1615D5CLL, (int64_t)0xFC675404LL, (int64_t)0x55BB97E8LL, (int64_t)0xFFFFFFFF45FBB0E8LL, (int64_t)0xE5073F5CLL, (int64_t)0xFFFFFFFF00245134LL, (int64_t)0xFFFFFFFF9A96EF7CLL, (int64_t)0xFFFFFFFF15D1D06CLL, (int64_t)0xFFFFFFFF01B87DA4LL, (int64_t)0xA812A698LL, (int64_t)0xFFFFFFFFF1B8A960LL, (int64_t)0xD424CBB4LL, (int64_t)0xF5FDD720LL, (int64_t)0xF670648CLL, (int64_t)0xFFFFFFFFF51E87C4LL, (int64_t)0xFFFFFFFF10976474LL, (int64_t)0xB7DDE694LL, (int64_t)0xF9109458LL, (int64_t)0x2ADAF1B8LL, (int64_t)0xFFFFFFFF2670295CLL, (int64_t)0xFFFFFFFFC94707BCLL, (int64_t)0xFFFFFFFF3D24CCC8LL, (int64_t)0x8299E738LL, (int64_t)0xFFFFFFFFAA03E390LL, (int64_t)0xEA4EFDB8LL, (int64_t)0xFFFFFFFF0000B304LL, (int64_t)0xFFFFFFFF5254EA8CLL, (int64_t)0xD7B476CCLL, (int64_t)0xFFBCDBF4LL, (int64_t)0x956908B8LL, (int64_t)0xFFFFFFFF988DD5D8LL, (int64_t)0xFFFFFFFFEEB2293CLL };
		for (int ndx = 0; ndx < 100; ndx++)
			Util::Check("Fixed64::Cos", Fixed64::Cos(input0[ndx]), output0[ndx], input0[ndx]);
	}

	// Fixed64.CosFast()
	static void Fixed64_CosFast()
	{
		static const int64_t input0[] = { (int64_t)0xFFFFFFF30110579FLL, (int64_t)0x2A1082A09CLL, (int64_t)0xFFFFFFC4DF8B47C2LL, (int64_t)0xFFFFFFFDD2637C74LL, (int64_t)0x3851BA2098LL, (int64_t)0xFFFFFFC0482B67F9LL, (int64_t)0xFFFFFFE61602F245LL, (int64_t)0xFFFFFFE28094E2BELL, (int64_t)0xFFFFFFD029C99E49LL, (int64_t)0xFFFFFFA56E4F17A3LL, (int64_t)0x129DFE93DDLL, (int64_t)0x58C29838D9LL, (int64_t)0x3F83E57B97LL, (int64_t)0xFFFFFFC5C4574894LL, (int64_t)0x55273F0972LL, (int64_t)0xFFFFFFAE689239C5LL, (int64_t)0xFFFFFFE2ABF39D2ELL, (int64_t)0xFFFFFFD1CF18BD3CLL, (int64_t)0xFFFFFFBC7CE3B051LL, (int64_t)0xF36CA7566LL, (int64_t)0xFFFFFFCE5C48E2B5LL, (int64_t)0xFFFFFFD9581D685BLL, (int64_t)0x7E14CC807LL, (int64_t)0x1D7500BD12LL, (int64_t)0xFFFFFFA47DB09E41LL, (int64_t)0xFFFFFFDC70B55061LL, (int64_t)0xFFFFFFA9EDD158ECLL, (int64_t)0xFFFFFFA4926C21B2LL, (int64_t)0x54DF247D2LL, (int64_t)0x50D27B1A89LL, (int64_t)0x5545423A52LL, (int64_t)0xB3C4868BELL, (int64_t)0xFFFFFFE4EB694262LL, (int64_t)0x34E0508501LL, (int64_t)0x267BB375A4LL, (int64_t)0x61050CAFAALL, (int64_t)0x486A845CE8LL, (int64_t)0xFFFFFFF8CC3EE45ALL, (int64_t)0xFFFFFFB3B3639990LL, (int64_t)0xFFFFFFBCF02C3E62LL, (int64_t)0xFFFFFFB16478119BLL, (int64_t)0xFFFFFFC91813E80BLL, (int64_t)0xFFFFFFFC1E142E01LL, (int64_t)0x1110F8152ALL, (int64_t)0xFFFFFFE6293F4E35LL, (int64_t)0x2C375B1200LL, (int64_t)0x5AFAA83BBDLL, (int64_t)0xFFFFFFD4E8D04612LL, (int64_t)0x469C2391F5LL, (int64_t)0x1E3340EB64LL, (int64_t)0xFFFFEDF06BF96901LL, (int64_t)0xFFFFFD69BAD22BB4LL, (int64_t)0x2276C866FBCDLL, (int64_t)0xFFFFE13F24263C9FLL, (int64_t)0xFFFFDA80B8667522LL, (int64_t)0xFFFFE2F5FEE5764CLL, (int64_t)0xFFFFE64A710899F5LL, (int64_t)0x4759E1E2C4BLL, (int64_t)0xFFFFFBD515DECBCBLL, (int64_t)0xFFFFFCD3E5E155C8LL, (int64_t)0xFFFFE1AB4B2DE0F7LL, (int64_t)0xFFFFF28766E9796FLL, (int64_t)0x1977C784838FLL, (int64_t)0xFFFFF4CE1AAB767DLL, (int64_t)0xFFFFE26009067361LL, (int64_t)0xFFFFDBD22B28D805LL, (int64_t)0x6300E5846C0LL, (int64_t)0xFFFFDD17E6305250LL, (int64_t)0x1485FFE6530LL, (int64_t)0x226D5BAB123ALL, (int64_t)0xFFFFEAE73D6A45EFLL, (int64_t)0x1E6B629832B6LL, (int64_t)0xFFFFE4B2D2C1EF46LL, (int64_t)0x26E2F7A88165LL, (int64_t)0xFFFFFD96282EFB8DLL, (int64_t)0xFFFFDAFEA4B1EA9ELL, (int64_t)0x197AAB9ACB55LL, (int64_t)0x23796115DE92LL, (int64_t)0xFFFFEE89978F4EF4LL, (int64_t)0xFFFFF20B796AC937LL, (int64_t)0xFFFFF5A21D1C0FA5LL, (int64_t)0x1645F46B5D2BLL, (int64_t)0xFFFFE7C434582569LL, (int64_t)0x1D566D481B0CLL, (int64_t)0xA91CC1CF4C3LL, (int64_t)0xFFFFFCD5530C9C8BLL, (int64_t)0x8FCC3E1EE99LL, (int64_t)0xFFFFED1CD0F7B19ALL, (int64_t)0x1316E70D7F8DLL, (int64_t)0x50253347E24LL, (int64_t)0x188B87EC0477LL, (int64_t)0xFFFFF0C3FD961EA8LL, (int64_t)0xFFFFDA4AB2B26736LL, (int64_t)0xC6E2D06A63CLL, (int64_t)0xFFFFDD12861A7D46LL, (int64_t)0x15D3D7FD6707LL, (int64_t)0xFFFFF825A042206CLL, (int64_t)0xFFFFE29DA536819CLL, (int64_t)0xFFFFFD3A97E1D116LL, (int64_t)0xFFFFF305F191B46CLL };
		static const int64_t output0[] = { (int64_t)0xE8C04548LL, (int64_t)0xFFFFFFFFA8F02704LL, (int64_t)0xFFFFFFFF2793CBA8LL, (int64_t)0xFFFFFFFF6DE5BEFCLL, (int64_t)0xF94AD5C4LL, (int64_t)0xA1E0A77CLL, (int64_t)0xB5C39804LL, (int64_t)0xFFFFFFFFA8D7D888LL, (int64_t)0xFFFFFFFF3E571DF4LL, (int64_t)0xFFFFFFFF240B2764LL, (int64_t)0xF91E4E78LL, (int64_t)0xB32C9408LL, (int64_t)0xC683F394LL, (int64_t)0xFFFFFFFFE2FC78F8LL, (int64_t)0xFFFFFFFF0DD6B014LL, (int64_t)0xFEF77D24LL, (int64_t)0xFFFFFFFF8181A930LL, (int64_t)0xFFFFFFFF678AC4A4LL, (int64_t)0xFFFFFFFFF7C93A50LL, (int64_t)0xFFFFFFFF1E995CB8LL, (int64_t)0xCF760D5CLL, (int64_t)0x9383C754LL, (int64_t)0xFFFFFFFFF951F3E8LL, (int64_t)0xFFFFFFFF9F1FE8ACLL, (int64_t)0xFFFFFFFF147E10B8LL, (int64_t)0xFFFFFFFF7628E51CLL, (int64_t)0xFFFFFFFFAECC16D8LL, (int64_t)0xFFFFFFFF0D2538DCLL, (int64_t)0x8EDF69A0LL, (int64_t)0xA72D0238LL, (int64_t)0xFFFFFFFF19366F3CLL, (int64_t)0x3CD413B0LL, (int64_t)0xFFFFFFFFA1C8E02CLL, (int64_t)0xFFFFFFFF233B3280LL, (int64_t)0xB541512CLL, (int64_t)0xFFFFFFFF114AB6B0LL, (int64_t)0xFFFFFFFF033F4CA4LL, (int64_t)0x9B4C3CCCLL, (int64_t)0x9EEC93A4LL, (int64_t)0xFFFFFFFF893C6264LL, (int64_t)0xFFFFFFFF00962A14LL, (int64_t)0xFFFFFFFFED9A604CLL, (int64_t)0xFFFFFFFF431C0694LL, (int64_t)0xFFFFFFFFCA03D358LL, (int64_t)0xC2C8ADC4LL, (int64_t)0xF906E498LL, (int64_t)0xFFFFFFFF02103564LL, (int64_t)0xA0C946DCLL, (int64_t)0x136A8348LL, (int64_t)0x590090D0LL, (int64_t)0xA9B18EACLL, (int64_t)0xFFFFFFFF2D8F13E4LL, (int64_t)0x5EFD3B5CLL, (int64_t)0xFFE71408LL, (int64_t)0x2491C404LL, (int64_t)0x8B283E30LL, (int64_t)0xFFFFFFFF00C7E7ACLL, (int64_t)0xFFFFFFFFA7E8FD14LL, (int64_t)0x564DFE90LL, (int64_t)0xFFFFFFFFFFEA6030LL, (int64_t)0x41D5E88CLL, (int64_t)0xA4EEBDD0LL, (int64_t)0xFFFFFFFF7042492CLL, (int64_t)0xB8F896C8LL, (int64_t)0xFCBA1994LL, (int64_t)0xEA235AACLL, (int64_t)0xC4E4D920LL, (int64_t)0x28A6F208LL, (int64_t)0xFFFFFFFFEBE9DE7CLL, (int64_t)0xFFFFFFFFA104EFE0LL, (int64_t)0xFFFFFFFF109F11F4LL, (int64_t)0xFFFFFFFF301A04F0LL, (int64_t)0xFFFFFFFF5A529AD0LL, (int64_t)0xFFFFFFFF42E65EA0LL, (int64_t)0xFFFFFFFF80C80A30LL, (int64_t)0xFFFFFFFFE2601BFCLL, (int64_t)0xBFC9B760LL, (int64_t)0xFFFFFFFF6E40E52CLL, (int64_t)0xFFFFFFFF00C916B8LL, (int64_t)0xFFFFFFFF23C120F8LL, (int64_t)0xFFFFFFFF465A8F18LL, (int64_t)0xFFFFFFFF002A2A88LL, (int64_t)0xFFFFFFFF57092F9CLL, (int64_t)0xFFFFFFFF90BADAF0LL, (int64_t)0xFFFFFFFF5E15A7E8LL, (int64_t)0xFD534DF0LL, (int64_t)0x6FAF89A4LL, (int64_t)0xFFFFFFFF09748698LL, (int64_t)0x27911DE0LL, (int64_t)0xD98B8024LL, (int64_t)0xF0DC04A0LL, (int64_t)0xFFFFFFFFB9C8455CLL, (int64_t)0xFFFFFFFF4FE81034LL, (int64_t)0xFFFFFFFF08705204LL, (int64_t)0xE03BC21CLL, (int64_t)0xFFFFFFFF80895DF8LL, (int64_t)0xF8560A38LL, (int64_t)0x301697D8LL, (int64_t)0xD4427BF8LL, (int64_t)0xFFFFFFFFD2B535D8LL };
		for (int ndx = 0; ndx < 100; ndx++)
			Util::Check("Fixed64::CosFast", Fixed64::CosFast(input0[ndx]), output0[ndx], input0[ndx]);
	}

	// Fixed64.CosFastest()
	static void Fixed64_CosFastest()
	{
		static const int64_t input0[] = { (int64_t)0xFFFFFFB8602C1B89LL, (int64_t)0x5057134528LL, (int64_t)0x35A02C7323LL, (int64_t)0x5279F1382CLL, (int64_t)0xFFFFFFF035330E89LL, (int64_t)0xFFFFFFE7E3EF0D58LL, (int64_t)0xFFFFFFDB44E1713FLL, (int64_t)0x58AD9B8139LL, (int64_t)0x1B7328DF5ELL, (int64_t)0x62BDA315DDLL, (int64_t)0xFFFFFFD86EE9B4E9LL, (int64_t)0xFFFFFFC75EE125B7LL, (int64_t)0xFFFFFFD41EC91BD1LL, (int64_t)0xFFFFFFB50E5D51F3LL, (int64_t)0xFFFFFFAE6AF7BB95LL, (int64_t)0xFFFFFFDD5558FC33LL, (int64_t)0xFFFFFFB78D4E40D8LL, (int64_t)0x5A17F13E7CLL, (int64_t)0x2C48772F60LL, (int64_t)0x20446137E8LL, (int64_t)0xFFFFFFF05FC0B589LL, (int64_t)0xFFFFFFDC3140F741LL, (int64_t)0xFFFFFFD9C51C821CLL, (int64_t)0x5A75E34C8CLL, (int64_t)0xFFFFFFB54C5B82B3LL, (int64_t)0x54FE140AA1LL, (int64_t)0x4A6828B2ACLL, (int64_t)0xFFFFFFFE49565A55LL, (int64_t)0x58F6E54299LL, (int64_t)0x25F17122C3LL, (int64_t)0x195EC3AD8ALL, (int64_t)0x2873439018LL, (int64_t)0xFFFFFFFDE8697B04LL, (int64_t)0x5884384BC9LL, (int64_t)0xFFFFFFBFE62970B8LL, (int64_t)0xFFFFFFF91EF9CF7BLL, (int64_t)0xFFFFFF9F64D49FB7LL, (int64_t)0xFFFFFFD37C57578FLL, (int64_t)0xFFFFFFF6E57E4DE6LL, (int64_t)0xFFFFFFCF2AE84707LL, (int64_t)0xFFFFFFB89FCA342ALL, (int64_t)0x225459F45CLL, (int64_t)0x1832C51FD8LL, (int64_t)0x3220D55E9CLL, (int64_t)0xFFFFFFD063D6D179LL, (int64_t)0x1376F5B15ELL, (int64_t)0xFFFFFFA0E130B66ALL, (int64_t)0x4E692EB434LL, (int64_t)0xD67670DC2LL, (int64_t)0x2D40793322LL, (int64_t)0xB10A56C1301LL, (int64_t)0xFFFFFC044605B7E9LL, (int64_t)0xFFFFF86156A7FFE3LL, (int64_t)0x17AFE1E7FA3FLL, (int64_t)0x20308A4ACB01LL, (int64_t)0x191253DA2C44LL, (int64_t)0x74104643122LL, (int64_t)0x18AC849312B9LL, (int64_t)0x1655CE7AE3CBLL, (int64_t)0xFFFFFFB1881D8604LL, (int64_t)0x94597B6AC8LL, (int64_t)0x19624254F364LL, (int64_t)0x26F35F307646LL, (int64_t)0x22F6ABC5AC8DLL, (int64_t)0xFFFFF5990F44C053LL, (int64_t)0x7CE4CE6613CLL, (int64_t)0x11C246BEADE4LL, (int64_t)0xFFFFF358609142D1LL, (int64_t)0x22D3B443FAC7LL, (int64_t)0x9E1AF303A63LL, (int64_t)0xFFFFF121F3B42064LL, (int64_t)0x1C26A073202DLL, (int64_t)0xFFFFFFAFB4E5FAC0LL, (int64_t)0xFFFFFD4F8BD2C340LL, (int64_t)0x16C4AFD76B8LL, (int64_t)0x138C74237538LL, (int64_t)0xF9F6860249ELL, (int64_t)0x48C2BC9DDB8LL, (int64_t)0xEDF0CE013DELL, (int64_t)0x2475BC5C4AELL, (int64_t)0x1F4B48CCE5F6LL, (int64_t)0x257F99A766DFLL, (int64_t)0x21284179E8F0LL, (int64_t)0xFFFFEA0342360AA7LL, (int64_t)0xFFFFDCB1AAC58184LL, (int64_t)0xFFFFE6D4BE6A124ALL, (int64_t)0xFFFFF05BAFBC49D8LL, (int64_t)0xE8EE74C133DLL, (int64_t)0xFFFFDB531BB2CF87LL, (int64_t)0xFFFFF4F39455DB88LL, (int64_t)0x1D1F1530DA9ELL, (int64_t)0xFFFFE8A6DE7B50AELL, (int64_t)0xFFFFFF56C3A3500ELL, (int64_t)0x23D01D38E7C0LL, (int64_t)0x1368694053B0LL, (int64_t)0xFFFFF1CC28A76CB9LL, (int64_t)0xD8593F2FDEBLL, (int64_t)0xD8D293AC3FALL, (int64_t)0xFFFFF6EBC41434B8LL, (int64_t)0xCA8B30371F1LL };
		static const int64_t output0[] = { (int64_t)0xFFFFFFFF31773384LL, (int64_t)0x3A3EE3F0LL, (int64_t)0xFFFFFFFF06215774LL, (int64_t)0xB350DFC4LL, (int64_t)0xFFFFFFFF00F15524LL, (int64_t)0x85521058LL, (int64_t)0x911F5FC8LL, (int64_t)0xC1936808LL, (int64_t)0xFFFFFFFF522A34A8LL, (int64_t)0xFFFFFFFFC8482820LL, (int64_t)0xFFFFFFFFB51DE47CLL, (int64_t)0xFF21DBBCLL, (int64_t)0xFE9DCC8CLL, (int64_t)0xE60911E8LL, (int64_t)0xFEB3BA5CLL, (int64_t)0xFFFFFFFF018FB200LL, (int64_t)0xFFFFFFFF04B711D4LL, (int64_t)0xFFFFFFFF786732B4LL, (int64_t)0xF47BC58CLL, (int64_t)0xA8C19018LL, (int64_t)0xFFFFFFFF00E51410LL, (int64_t)0xFFFFFFFFAF4B0B64LL, (int64_t)0xDCC6DC78LL, (int64_t)0xFFFFFFFF3382158CLL, (int64_t)0xC4681394LL, (int64_t)0xFFFFFFFF03B5CF20LL, (int64_t)0x8C31CD94LL, (int64_t)0xFFFFFFFFDB95AC88LL, (int64_t)0x8A5EDAC0LL, (int64_t)0xF861B068LL, (int64_t)0xF8C860F8LL, (int64_t)0xFFFFFFFF13461410LL, (int64_t)0xFFFFFFFF807C0A4CLL, (int64_t)0xDA036144LL, (int64_t)0x4C13CED0LL, (int64_t)0xD3E9E0D8LL, (int64_t)0xFFFFFFFF4A8F81B8LL, (int64_t)0xDCA34088LL, (int64_t)0xFFFFFFFF0D1D9C80LL, (int64_t)0x23246170LL, (int64_t)0xFFFFFFFF5D05D67CLL, (int64_t)0xFFFFFFFF06A9B97CLL, (int64_t)0x9828FA78LL, (int64_t)0xFD8D320CLL, (int64_t)0xFFFFFFFF1DA52688LL, (int64_t)0xD119D560LL, (int64_t)0xA4994D34LL, (int64_t)0xFFFFFFFF022AB124LL, (int64_t)0xAB5DC4ACLL, (int64_t)0x4BF6125CLL, (int64_t)0x7AD690C0LL, (int64_t)0xFFFFFFFFB95562CCLL, (int64_t)0xFFFFFFFF09233BE4LL, (int64_t)0xD20E7B08LL, (int64_t)0xFFFFFFFF02A4B184LL, (int64_t)0xFFFFFFFF00657B58LL, (int64_t)0xFFFFFFFF0E52E144LL, (int64_t)0xFFFFFFFFA93685B0LL, (int64_t)0xFE788AB0LL, (int64_t)0xFFFFFFFF00AFBD14LL, (int64_t)0xFFFFFFFF3B4BE950LL, (int64_t)0x1FFDB1BCLL, (int64_t)0xFFBCF3C0LL, (int64_t)0xFFFFFFFF098BBF00LL, (int64_t)0x6D2FBCCCLL, (int64_t)0xF82AEE58LL, (int64_t)0xFFFFFFFF13671F48LL, (int64_t)0xFFFFFFFF32C07630LL, (int64_t)0xFD9A1608LL, (int64_t)0xFFFFFFFF3C8A79CCLL, (int64_t)0x22F5C58LL, (int64_t)0xFB81991CLL, (int64_t)0x2E869704LL, (int64_t)0xFFFFFFFF18EE1FB0LL, (int64_t)0xFDBCCEBCLL, (int64_t)0xFFFFFFFF016820C4LL, (int64_t)0xFFFFFFFF0352B168LL, (int64_t)0xFFFFFFFFCA63BF8CLL, (int64_t)0xD8EB2020LL, (int64_t)0x8F18D11CLL, (int64_t)0xF99E0804LL, (int64_t)0x728C4C18LL, (int64_t)0xF25E3CECLL, (int64_t)0x8BE991F8LL, (int64_t)0xFFFFFFFF00200158LL, (int64_t)0xFFFFFFFF02EDF948LL, (int64_t)0xFFFFFFFFA752C754LL, (int64_t)0x8FC2A138LL, (int64_t)0xFFFFFFFFC29BB5C4LL, (int64_t)0x8D1677CCLL, (int64_t)0xFFFFFFFF00ECD4B8LL, (int64_t)0xFFFFFFFFC06FB2D4LL, (int64_t)0xEAC240F0LL, (int64_t)0x9599C174LL, (int64_t)0xFFFFFFFFFB7BF438LL, (int64_t)0xFFFFFFFF79AC4690LL, (int64_t)0xE5B74310LL, (int64_t)0xAA5EF0E8LL, (int64_t)0xDAFFB21CLL, (int64_t)0x255BAC58LL };
		for (int ndx = 0; ndx < 100; ndx++)
			Util::Check("Fixed64::CosFastest", Fixed64::CosFastest(input0[ndx]), output0[ndx], input0[ndx]);
	}

	// Fixed32.Cos()
	static void Fixed32_Cos()
	{
		static const int32_t input0[] = { (int32_t)0x4A007E, (int32_t)0x25469F, (int32_t)0x5940FA, (int32_t)0x581B69, (int32_t)0xFFEF4FF5, (int32_t)0x38429C, (int32_t)0x5A9B0D, (int32_t)0x5760BF, (int32_t)0xFFD4FEF3, (int32_t)0xFFBC5C62, (int32_t)0xFFB43070, (int32_t)0xFFA2EDB0, (int32_t)0xFFB5183D, (int32_t)0xFFCF5830, (int32_t)0x131A3B, (int32_t)0x57CCC, (int32_t)0x50199B, (int32_t)0x38004A, (int32_t)0x4FE3D9, (int32_t)0xFFC1CD9C, (int32_t)0xFFD806B2, (int32_t)0xFFA43199, (int32_t)0xFFD97E21, (int32_t)0x1170F5, (int32_t)0x32BEFA, (int32_t)0xFFB1B5F9, (int32_t)0xFFE5C236, (int32_t)0x78413, (int32_t)0x2B6E6C, (int32_t)0xFFC40058, (int32_t)0xFFAB6DC4, (int32_t)0xFFA14D6F, (int32_t)0xFFBEE252, (int32_t)0xFFA1A9DC, (int32_t)0x1FD4E7, (int32_t)0xFFC6D644, (int32_t)0xFFA2BE00, (int32_t)0x60C686, (int32_t)0x3C6677, (int32_t)0xFFD15B43, (int32_t)0xFFC8F637, (int32_t)0xFFE49436, (int32_t)0xFFEC45ED, (int32_t)0x49C00E, (int32_t)0xFFCB86CF, (int32_t)0x439F53, (int32_t)0xFFAB224F, (int32_t)0xFFCAF692, (int32_t)0xFFE49424, (int32_t)0xFFC83256, (int32_t)0xF99227CD, (int32_t)0x1EB576F8, (int32_t)0x1568283A, (int32_t)0xE827733A, (int32_t)0xF53615DA, (int32_t)0x19B4D1C8, (int32_t)0xF68A5198, (int32_t)0xF4FD420D, (int32_t)0xE7881B12, (int32_t)0xF100266C, (int32_t)0xF92A282A, (int32_t)0xF964F973, (int32_t)0xEA1AA843, (int32_t)0xDF937495, (int32_t)0xDF8D35F7, (int32_t)0xE050AC55, (int32_t)0x1C2470E4, (int32_t)0xE0871DD7, (int32_t)0x79F4829, (int32_t)0xF6BA8CFA, (int32_t)0xFF828828, (int32_t)0x208C7472, (int32_t)0x25581668, (int32_t)0xA5D5B33, (int32_t)0x24442390, (int32_t)0x2228B843, (int32_t)0xAE80F11, (int32_t)0xFB363F53, (int32_t)0xF43F7713, (int32_t)0x20785D68, (int32_t)0xDB81AE71, (int32_t)0xE3678BE2, (int32_t)0xE695B9C5, (int32_t)0xFFB37927, (int32_t)0x160DFA89, (int32_t)0xE7516938, (int32_t)0xECAA16EB, (int32_t)0x2578F47C, (int32_t)0xD004403, (int32_t)0x19CA58C3, (int32_t)0x1A3160BF, (int32_t)0xDA4F5A0, (int32_t)0x17357156, (int32_t)0xFF87E028, (int32_t)0x1BAD7DA3, (int32_t)0x182B33D7, (int32_t)0xE41F3CA5, (int32_t)0xF1A7DBCE, (int32_t)0x1631CF94, (int32_t)0xE41FFC88 };
		static const int32_t output0[] = { (int32_t)0x2C71, (int32_t)0xE968, (int32_t)0x4723, (int32_t)0xFD68, (int32_t)0xFFFF7157, (int32_t)0xF56B, (int32_t)0xFFFF1F67, (int32_t)0xD530, (int32_t)0x8EFB, (int32_t)0x1841, (int32_t)0xEA84, (int32_t)0x6268, (int32_t)0xE187, (int32_t)0xFFFFF5FA, (int32_t)0xF7DB, (int32_t)0xB324, (int32_t)0xFFFFFD49, (int32_t)0xDA92, (int32_t)0xFFFFC7FC, (int32_t)0xCE19, (int32_t)0xFFFF5A4E, (int32_t)0xFFFF3C36, (int32_t)0xB0D7, (int32_t)0x2968, (int32_t)0xE302, (int32_t)0xFFFF07FF, (int32_t)0x7225, (int32_t)0x54E8, (int32_t)0xDA1D, (int32_t)0xFFFF0C14, (int32_t)0xFFFF0812, (int32_t)0xE68A, (int32_t)0xFFFF587D, (int32_t)0xFEFE, (int32_t)0xEA32, (int32_t)0xD12F, (int32_t)0x8C79, (int32_t)0xFFFF2EBE, (int32_t)0xFFFF3DDB, (int32_t)0xFFFF1CF9, (int32_t)0xF71, (int32_t)0xFFFF57AC, (int32_t)0xA3A4, (int32_t)0xFFFFEC40, (int32_t)0xFFFF67B4, (int32_t)0x13F9, (int32_t)0xFFFF003C, (int32_t)0xFFFF1158, (int32_t)0xFFFF579F, (int32_t)0xBC22, (int32_t)0xF07A, (int32_t)0x5CC9, (int32_t)0x5815, (int32_t)0xFFFF17E1, (int32_t)0xFFFF1A03, (int32_t)0xFFFF50D1, (int32_t)0xFFFF1DB8, (int32_t)0xFFFF41D0, (int32_t)0xE774, (int32_t)0xADF4, (int32_t)0xFFFF0012, (int32_t)0xA932, (int32_t)0xBCCC, (int32_t)0xE5BF, (int32_t)0xE9EF, (int32_t)0xF709, (int32_t)0xFFFF480A, (int32_t)0xFFFFBBF0, (int32_t)0xFFFF0FC5, (int32_t)0xFFFFF9E0, (int32_t)0xFB1E, (int32_t)0x94AC, (int32_t)0xFFFF063A, (int32_t)0xFFFFB8F2, (int32_t)0xFFFF41AE, (int32_t)0x18B1, (int32_t)0xFFFF50CB, (int32_t)0xDCAE, (int32_t)0x71A1, (int32_t)0xF55C, (int32_t)0xB65C, (int32_t)0xDB37, (int32_t)0xFFFF002A, (int32_t)0x6D90, (int32_t)0xFFFF23FC, (int32_t)0xFFFF564F, (int32_t)0x5342, (int32_t)0x1A06, (int32_t)0xFFFFC03A, (int32_t)0x4924, (int32_t)0x582B, (int32_t)0xE1B0, (int32_t)0xFFFF3AB9, (int32_t)0xBC60, (int32_t)0xFFFFA313, (int32_t)0xFFFFD624, (int32_t)0x97F0, (int32_t)0xFFFF124D, (int32_t)0xFFFFC304, (int32_t)0xFFFFE2D7 };
		for (int ndx = 0; ndx < 100; ndx++)
			Util::Check("Fixed32::Cos", Fixed32::Cos(input0[ndx]), output0[ndx], input0[ndx]);
	}

	// Fixed32.CosFast()
	static void Fixed32_CosFast()
	{
		static const int32_t input0[] = { (int32_t)0x5F93F4, (int32_t)0x5FB3ED, (int32_t)0x1B7349, (int32_t)0x60502B, (int32_t)0x2D7388, (int32_t)0x378D, (int32_t)0x530386, (int32_t)0xFFB8449D, (int32_t)0xFFCA1CF5, (int32_t)0xFFF0EF05, (int32_t)0xFFC1E33B, (int32_t)0x580A6C, (int32_t)0xFF9DE5DF, (int32_t)0xFFD23CC7, (int32_t)0xFFD30652, (int32_t)0xFFD3B4C4, (int32_t)0xFFCC270A, (int32_t)0x2CB63B, (int32_t)0xFFD888E7, (int32_t)0x501E35, (int32_t)0x4462C6, (int32_t)0x4C1D67, (int32_t)0xFFF22605, (int32_t)0x357D46, (int32_t)0x93633, (int32_t)0x3FD0D3, (int32_t)0xFFB3E8FE, (int32_t)0xFFFCCD58, (int32_t)0x37ADBC, (int32_t)0xFFBAF829, (int32_t)0x3AD098, (int32_t)0xFFDCA45B, (int32_t)0x1EECA3, (int32_t)0xFFC54659, (int32_t)0x578BB2, (int32_t)0xFFA6DFBD, (int32_t)0xFFFF585A, (int32_t)0xFFC29FC5, (int32_t)0x35C88F, (int32_t)0xFFD43E27, (int32_t)0xFFD1CCE3, (int32_t)0xFFB23B9F, (int32_t)0x31D102, (int32_t)0xFFCC5959, (int32_t)0x1C22C7, (int32_t)0x4F0358, (int32_t)0x21081B, (int32_t)0x52D51, (int32_t)0xFFC7C62A, (int32_t)0xF2617, (int32_t)0x55BF429, (int32_t)0xF9B80D88, (int32_t)0xDA0261C3, (int32_t)0x1DF602D5, (int32_t)0xF079671E, (int32_t)0xE08A4F4A, (int32_t)0x3BB6F1E, (int32_t)0x1CE4195D, (int32_t)0xFAF624B5, (int32_t)0x1FE38EBE, (int32_t)0xF6BEB03F, (int32_t)0xFA9D2A50, (int32_t)0xF54AEF77, (int32_t)0xDEDA5FF1, (int32_t)0xA33E1F7, (int32_t)0x1C9C8F73, (int32_t)0xEF3FA287, (int32_t)0x17AE506E, (int32_t)0xF2FD2BF2, (int32_t)0xEA2F127D, (int32_t)0x1604192A, (int32_t)0xDCA8D6D8, (int32_t)0x2384D73B, (int32_t)0xDA9D32DC, (int32_t)0xA47C417, (int32_t)0x12074B86, (int32_t)0xE335D796, (int32_t)0xE7B3F367, (int32_t)0xE2D7595B, (int32_t)0xBCBDDBF, (int32_t)0xE4F667E0, (int32_t)0x7514F6D, (int32_t)0xEDA6CE15, (int32_t)0xE8C4FC35, (int32_t)0x6BCFB8E, (int32_t)0xF6316E18, (int32_t)0xF11DD182, (int32_t)0x152E6CE8, (int32_t)0x1FA6136D, (int32_t)0x1A98426D, (int32_t)0x83F65F, (int32_t)0x9EA69BF, (int32_t)0x14204422, (int32_t)0x1C2EC921, (int32_t)0x1F3996F0, (int32_t)0x1A66DE58, (int32_t)0x13645A6C, (int32_t)0xD8B44E2, (int32_t)0x8AF0475, (int32_t)0x15710699 };
		static const int32_t output0[] = { (int32_t)0x3D03, (int32_t)0x1D90, (int32_t)0xFFFF521A, (int32_t)0xFFFF867D, (int32_t)0x1A04, (int32_t)0xF9FF, (int32_t)0x3C77, (int32_t)0xFFFF226E, (int32_t)0xFFFF1CE8, (int32_t)0xFFFF32E9, (int32_t)0xC08D, (int32_t)0xFF42, (int32_t)0xFFFF3E4F, (int32_t)0xFFFFCAC2, (int32_t)0x8BD1, (int32_t)0xF3AC, (int32_t)0xFFFFFD1F, (int32_t)0xBED8, (int32_t)0xFFFFCE50, (int32_t)0x1E3, (int32_t)0xBEE6, (int32_t)0xC108, (int32_t)0x4824, (int32_t)0xFFFF00DD, (int32_t)0xFFFF05CA, (int32_t)0x8DC6, (int32_t)0xC52B, (int32_t)0xFFFF0067, (int32_t)0xA511, (int32_t)0xFF16, (int32_t)0xFFFF5BFE, (int32_t)0xFFFF4DBB, (int32_t)0xE1AF, (int32_t)0xFFFF6E3D, (int32_t)0xE9DC, (int32_t)0x65E4, (int32_t)0xCB09, (int32_t)0x1D56, (int32_t)0xFFFF11EA, (int32_t)0xF98B, (int32_t)0xFFFF65C5, (int32_t)0xFFFF48B2, (int32_t)0xE69E, (int32_t)0x2F29, (int32_t)0xFFFF0273, (int32_t)0xFFFF1C22, (int32_t)0xFFFFF480, (int32_t)0x72B5, (int32_t)0xF2C8, (int32_t)0xFFFF26FE, (int32_t)0xFFFF655E, (int32_t)0xDA79, (int32_t)0xBAD6, (int32_t)0xFFFFD04D, (int32_t)0xFFFF1D39, (int32_t)0x373F, (int32_t)0xECC9, (int32_t)0xB430, (int32_t)0xFFFFC4EE, (int32_t)0xFFFFDF0C, (int32_t)0xDA27, (int32_t)0xFFFF0D5B, (int32_t)0xFFFFF998, (int32_t)0xFFFF044C, (int32_t)0xFFFFA7D3, (int32_t)0xFFFFEFE6, (int32_t)0xFFFF0110, (int32_t)0x92E5, (int32_t)0xBD06, (int32_t)0xADE8, (int32_t)0xFF28, (int32_t)0xCF72, (int32_t)0x7A8D, (int32_t)0xF85, (int32_t)0xA164, (int32_t)0xFFFF0B16, (int32_t)0xFFF4, (int32_t)0xF43E, (int32_t)0xF971, (int32_t)0xFFFF4CD8, (int32_t)0xFFFF36A6, (int32_t)0x9AE1, (int32_t)0xFFFF2113, (int32_t)0xFFFF000D, (int32_t)0xFFFF07D9, (int32_t)0xFFFF181A, (int32_t)0xFFFF2882, (int32_t)0xFFD4, (int32_t)0xFFFF0112, (int32_t)0xFFFF171C, (int32_t)0xFFF8, (int32_t)0xFFFE, (int32_t)0xFF9F, (int32_t)0xFFFFE1D4, (int32_t)0x3114, (int32_t)0xFFFFBC31, (int32_t)0xCDD2, (int32_t)0x7F8C, (int32_t)0x5584, (int32_t)0xFFFF364B };
		for (int ndx = 0; ndx < 100; ndx++)
			Util::Check("Fixed32::CosFast", Fixed32::CosFast(input0[ndx]), output0[ndx], input0[ndx]);
	}

	// Fixed32.CosFastest()
	static void Fixed32_CosFastest()
	{
		static const int32_t input0[] = { (int32_t)0x15E58F, (int32_t)0x486895, (int32_t)0xFFC27C3D, (int32_t)0x639F93, (int32_t)0x3AC9AE, (int32_t)0x430EE, (int32_t)0xFFF8FDFC, (int32_t)0x6273AB, (int32_t)0xFFCE61E9, (int32_t)0xE19E0, (int32_t)0x5D2A28, (int32_t)0xFFE3C13D, (int32_t)0x309B85, (int32_t)0x38E71C, (int32_t)0x32D9FD, (int32_t)0x3992E3, (int32_t)0xFFBD2F01, (int32_t)0xFFBC0F3C, (int32_t)0xFFFDE4D9, (int32_t)0xFFCF397B, (int32_t)0xB58F0, (int32_t)0x2E460, (int32_t)0x4F9A35, (int32_t)0xFFFE9BF0, (int32_t)0x2AD4C2, (int32_t)0xFFBAFA13, (int32_t)0xFFD60178, (int32_t)0xFFAEC7D3, (int32_t)0xFFB45B29, (int32_t)0x3ABA9E, (int32_t)0x608269, (int32_t)0xFFF7A030, (int32_t)0xF91BF, (int32_t)0xFFE27697, (int32_t)0xFFA44D4D, (int32_t)0xFFD66023, (int32_t)0xFFEC3F70, (int32_t)0xFFD1679B, (int32_t)0xFFEDBDF6, (int32_t)0xFFA90F06, (int32_t)0x51E6F5, (int32_t)0xFFDB7245, (int32_t)0x3D780, (int32_t)0xFFDEEB71, (int32_t)0x4AEAFC, (int32_t)0xFFB99097, (int32_t)0x4CC6D1, (int32_t)0x5E9EB1, (int32_t)0xFFB14BDD, (int32_t)0xFFB25CB4, (int32_t)0xD70821D, (int32_t)0x6DE672A, (int32_t)0xE74DE081, (int32_t)0xF4AC9096, (int32_t)0xE9F248A8, (int32_t)0xE05C7658, (int32_t)0x24409D36, (int32_t)0xF939E37, (int32_t)0xEF1F3995, (int32_t)0xADD18C7, (int32_t)0xEAFA8A9D, (int32_t)0xF5ED2832, (int32_t)0x1CF192FC, (int32_t)0xFCBD5900, (int32_t)0x6DF2A7E, (int32_t)0x99E500, (int32_t)0x15F28CC8, (int32_t)0xF7766D42, (int32_t)0x12FC1529, (int32_t)0xFD0F9938, (int32_t)0xF7249921, (int32_t)0x1F29E3D6, (int32_t)0x13A7BF40, (int32_t)0xFA138625, (int32_t)0xF4043C15, (int32_t)0xEBA61B57, (int32_t)0x26B10772, (int32_t)0x4F4452A, (int32_t)0x9411ECA, (int32_t)0x52EA175, (int32_t)0xEE1C05AE, (int32_t)0xF1B29589, (int32_t)0x26146BD7, (int32_t)0xD9B765CC, (int32_t)0xE27063A2, (int32_t)0xF7C489EF, (int32_t)0xEE5CB233, (int32_t)0xEA585E5C, (int32_t)0xE3740A1A, (int32_t)0x22E1BB73, (int32_t)0xF28CF072, (int32_t)0xFC52979, (int32_t)0x25BD3ECF, (int32_t)0x15111B3A, (int32_t)0x1A1F53A0, (int32_t)0x3010F99, (int32_t)0xFBD70F9F, (int32_t)0xDDB2D52C, (int32_t)0x1344CD58, (int32_t)0xF599E5BA };
		static const int32_t output0[] = { (int32_t)0xFFFF012D, (int32_t)0xFFFF02FD, (int32_t)0x403E, (int32_t)0x9D9E, (int32_t)0xFFFF6156, (int32_t)0xFFFF8080, (int32_t)0xBFB2, (int32_t)0xFFFF8361, (int32_t)0xCC25, (int32_t)0x93D, (int32_t)0x77F8, (int32_t)0xFFFF0020, (int32_t)0xFFFFE9B4, (int32_t)0xF01A, (int32_t)0xD54F, (int32_t)0x84E2, (int32_t)0xFFFF55AA, (int32_t)0x62D1, (int32_t)0xFFFF7D67, (int32_t)0x14A9, (int32_t)0x583A, (int32_t)0xFFFF07F6, (int32_t)0xFFFF8367, (int32_t)0x2DCF, (int32_t)0x684B, (int32_t)0xFEE2, (int32_t)0xFFFF9840, (int32_t)0xE52C, (int32_t)0xF847, (int32_t)0xFFFF6D6D, (int32_t)0xFFFF5CDB, (int32_t)0xFFFF80B7, (int32_t)0xFFFF027F, (int32_t)0xFFFFB24C, (int32_t)0xFFFF2B85, (int32_t)0xFFFF4AA8, (int32_t)0x9E9F, (int32_t)0xFFFF22EB, (int32_t)0xD485, (int32_t)0x8549, (int32_t)0xF9BF, (int32_t)0x69A4, (int32_t)0xFFFF3C33, (int32_t)0xFFFFE813, (int32_t)0xE30A, (int32_t)0x3F7E, (int32_t)0x30F4, (int32_t)0xEE78, (int32_t)0xFFFF0378, (int32_t)0xFFFF613A, (int32_t)0xFFFF1B17, (int32_t)0xA15F, (int32_t)0x537C, (int32_t)0xFFFF084C, (int32_t)0xFFFF0997, (int32_t)0xDF33, (int32_t)0xF084, (int32_t)0xFFFF685C, (int32_t)0xFFFF887F, (int32_t)0xFFFF4B4A, (int32_t)0xFFFF0110, (int32_t)0xFFFF14AB, (int32_t)0xFFFFDF5A, (int32_t)0x87E5, (int32_t)0xFDEE, (int32_t)0xFFFF0043, (int32_t)0x2FFB, (int32_t)0x8F9F, (int32_t)0xFFFF0036, (int32_t)0xFFFFFD74, (int32_t)0xAD2A, (int32_t)0xFFFFD104, (int32_t)0x77AF, (int32_t)0xFFFF6383, (int32_t)0xFFFFFFFA, (int32_t)0x6CA2, (int32_t)0xFFFF157B, (int32_t)0x9865, (int32_t)0xEFA1, (int32_t)0xA36A, (int32_t)0xE4E9, (int32_t)0xFFFFE3CE, (int32_t)0xFFFF007A, (int32_t)0x64A9, (int32_t)0xFFFF1D9D, (int32_t)0xFFFF2565, (int32_t)0xFFFF5433, (int32_t)0xFFFFB680, (int32_t)0xD0F7, (int32_t)0x3E12, (int32_t)0xFDF7, (int32_t)0xFFFF05F4, (int32_t)0xFFFF569E, (int32_t)0xFFFF7771, (int32_t)0xFFFF9166, (int32_t)0xFFFF3102, (int32_t)0xFFFF0080, (int32_t)0xFFFF15D1, (int32_t)0xE078, (int32_t)0xFFFF9CFA };
		for (int ndx = 0; ndx < 100; ndx++)
			Util::Check("Fixed32::CosFastest", Fixed32::CosFastest(input0[ndx]), output0[ndx], input0[ndx]);
	}

	// Fixed64.Tan()
	static void Fixed64_Tan()
	{
		static const int64_t input0[] = { (int64_t)0xFFFFFFFFC46AD163LL, (int64_t)0xFFFFFFFFB050765BLL, (int64_t)0xFFFFFFFFD4843423LL, (int64_t)0xFFFFFFFF8F32E3ECLL, (int64_t)0xFFFFFFFF780C0147LL, (int64_t)0xFFFFFFFF682D5607LL, (int64_t)0xFFFFFFFF50652A5DLL, (int64_t)0xFFFFFFFF6CCB5772LL, (int64_t)0xFFFFFFFFE5E628F9LL, (int64_t)0xFFFFFFFF0C8D4B76LL, (int64_t)0xFFFFFFFFDFC9ECECLL, (int64_t)0xFFFFFFFFBF9B59A1LL, (int64_t)0xFFFFFFFFE1281B2ALL, (int64_t)0xFFFFFFFF7A63E03ALL, (int64_t)0xFFFFFFFFC4421EBDLL, (int64_t)0xFFFFFFFF2E029E7FLL, (int64_t)0xFFFFFFFFC2136A90LL, (int64_t)0xFFFFFFFF4657CC54LL, (int64_t)0xFFFFFFFFC86D00D6LL, (int64_t)0xFFFFFFFFD80BB69ALL, (int64_t)0xFFFFFFFFD42DA195LL, (int64_t)0xFFFFFFFFA376043ALL, (int64_t)0xFFFFFFFFD1D4CC2ALL, (int64_t)0xFFFFFFFF5FC71904LL, (int64_t)0xFFFFFFFFDD1ACCD5LL, (int64_t)0xFFFFFFFF84201E94LL, (int64_t)0xFFFFFFFF2D1F16E2LL, (int64_t)0xFFFFFFFF0A74BB69LL, (int64_t)0xFFFFFFFF9C74334ELL, (int64_t)0xFFFFFFFF5B6CD483LL, (int64_t)0xFFFFFFFF61292702LL, (int64_t)0xFFFFFFFF23F4C72FLL, (int64_t)0xFFFFFFFF5820CE00LL, (int64_t)0xFFFFFFFFD25031B4LL, (int64_t)0xFFFFFFFFF09C6F79LL, (int64_t)0xE39B1F9LL, (int64_t)0xFFFFFFFFEAD88C97LL, (int64_t)0xFFFFFFFFF7FA5ACDLL, (int64_t)0xFFFFFFFFF4FB3073LL, (int64_t)0xFFFFFFFFF83E1BEDLL, (int64_t)0x2FC12B0LL, (int64_t)0xBE477DLL, (int64_t)0xFFFFFFFFF1609BE2LL, (int64_t)0xFFFFFFFFEE6846A3LL, (int64_t)0x11C07655LL, (int64_t)0x15DFC935LL, (int64_t)0x6311886LL, (int64_t)0xFFFFFFFFF3FD7A45LL, (int64_t)0xFFFFFFFFFAF645B7LL, (int64_t)0x1585DA82LL, (int64_t)0xFFFFFFFFEE539B91LL, (int64_t)0x46A6B98LL, (int64_t)0xB7BDCCFLL, (int64_t)0x2BABA79LL, (int64_t)0xFFFFFFFFED3B5BC8LL, (int64_t)0xFCF568DLL, (int64_t)0xFFFFFFFFF2895CDELL, (int64_t)0xFFFFFFFFFC996410LL, (int64_t)0x7D6B92LL, (int64_t)0xFFFFFFFFE8780C06LL, (int64_t)0x124B2F6DLL, (int64_t)0x1225339FLL, (int64_t)0xFFFFFFFFEF196A50LL, (int64_t)0xFFFFFFFFF0A73821LL, (int64_t)0xFFFFFFFFEFE5375DLL, (int64_t)0xFFFFFFFFEEDF2434LL, (int64_t)0x44AF517LL, (int64_t)0x10DD0954LL, (int64_t)0x5469DD84LL, (int64_t)0x63A38C96LL, (int64_t)0xABEFBCC9LL, (int64_t)0x1C171B0DLL, (int64_t)0x605E4E4DLL, (int64_t)0xF9170F33LL, (int64_t)0x6E78A960LL, (int64_t)0x8603B08ELL, (int64_t)0x387C20D5LL, (int64_t)0x2035365BLL, (int64_t)0xE408EDEBLL, (int64_t)0x2942AE1ALL, (int64_t)0x1DA74B00LL, (int64_t)0x7272E723LL, (int64_t)0x61659C55LL, (int64_t)0x779409F5LL, (int64_t)0x733A188DLL, (int64_t)0x292F5C1ALL, (int64_t)0x2984DD9BLL, (int64_t)0x2EF4CB2ELL, (int64_t)0x219A07ECLL, (int64_t)0x3EEE8F77LL, (int64_t)0x58EC3F43LL, (int64_t)0x73343B9FLL, (int64_t)0xAE9056CELL, (int64_t)0x2CF00578LL, (int64_t)0x4F53203ELL, (int64_t)0x8173414ELL, (int64_t)0x389A32D7LL, (int64_t)0x1A728AB4LL, (int64_t)0xEF67D73BLL, (int64_t)0x7ADFFF49LL };
		static const int64_t output0[] = { (int64_t)0xFFFFFFFFC3514B06LL, (int64_t)0xFFFFFFFFADA30BC3LL, (int64_t)0xFFFFFFFFD417E584LL, (int64_t)0xFFFFFFFF87487EE3LL, (int64_t)0xFFFFFFFF69A35DD3LL, (int64_t)0xFFFFFFFF53752118LL, (int64_t)0xFFFFFFFF2E72D0A9LL, (int64_t)0xFFFFFFFF5A179E7FLL, (int64_t)0xFFFFFFFFE5CEE90ALL, (int64_t)0xFFFFFFFE9947A8C6LL, (int64_t)0xFFFFFFFFDF9E217DLL, (int64_t)0xFFFFFFFFBE36A84CLL, (int64_t)0xFFFFFFFFE101AD7DLL, (int64_t)0xFFFFFFFF6CC5E3C6LL, (int64_t)0xFFFFFFFFC3264D5ALL, (int64_t)0xFFFFFFFEED7DC8C1LL, (int64_t)0xFFFFFFFFC0D6D19FLL, (int64_t)0xFFFFFFFF1D181AB4LL, (int64_t)0xFFFFFFFFC78937D6LL, (int64_t)0xFFFFFFFFD7B7D926LL, (int64_t)0xFFFFFFFFD3BEC1D7LL, (int64_t)0xFFFFFFFF9F353B22LL, (int64_t)0xFFFFFFFFD152F7EFLL, (int64_t)0xFFFFFFFF46F6380ALL, (int64_t)0xFFFFFFFFDCE30EF0LL, (int64_t)0xFFFFFFFF7974FBBCLL, (int64_t)0xFFFFFFFEEB92CDFFLL, (int64_t)0xFFFFFFFE92FF0FA1LL, (int64_t)0xFFFFFFFF971D0451LL, (int64_t)0xFFFFFFFF40408787LL, (int64_t)0xFFFFFFFF490F281DLL, (int64_t)0xFFFFFFFED6EA19B4LL, (int64_t)0xFFFFFFFF3B0E13D0LL, (int64_t)0xFFFFFFFFD1D26C71LL, (int64_t)0xFFFFFFFFF097AEE6LL, (int64_t)0xE3D72AFLL, (int64_t)0xFFFFFFFFEACC3073LL, (int64_t)0xFFFFFFFFF7F9AE9FLL, (int64_t)0xFFFFFFFFF4F97224LL, (int64_t)0xFFFFFFFFF83D803CLL, (int64_t)0x2FC1B87LL, (int64_t)0xBE4798LL, (int64_t)0xFFFFFFFFF15C8847LL, (int64_t)0xFFFFFFFFEE612C2DLL, (int64_t)0x11C7C298LL, (int64_t)0x15ED742FLL, (int64_t)0x63167A5LL, (int64_t)0xFFFFFFFFF3FB3853LL, (int64_t)0xFFFFFFFFFAF61B12LL, (int64_t)0x1592DF4ALL, (int64_t)0xFFFFFFFFEE4C67EELL, (int64_t)0x46A884ALL, (int64_t)0xB7DD607LL, (int64_t)0x2BAC13ALL, (int64_t)0xFFFFFFFFED32BB5ALL, (int64_t)0xFD47DCBLL, (int64_t)0xFFFFFFFFF2862E77LL, (int64_t)0xFFFFFFFFFC9956EDLL, (int64_t)0x7D6B9BLL, (int64_t)0xFFFFFFFFE8670622LL, (int64_t)0x12532C4FLL, (int64_t)0x122CFF12LL, (int64_t)0xFFFFFFFFEF131E54LL, (int64_t)0xFFFFFFFFF0A28184LL, (int64_t)0xFFFFFFFFEFDFC4D4LL, (int64_t)0xFFFFFFFFEED8961CLL, (int64_t)0x44B0F72LL, (int64_t)0x10E34A9DLL, (int64_t)0x579CB356LL, (int64_t)0x68FEB929LL, (int64_t)0xCB7EEE91LL, (int64_t)0x1C341B19LL, (int64_t)0x6531B0DBLL, (int64_t)0x177F9D3F0LL, (int64_t)0x75E1869DLL, (int64_t)0x93C40E19LL, (int64_t)0x396B7297LL, (int64_t)0x2060FE37LL, (int64_t)0x13C8CC30ELL, (int64_t)0x299F1A42LL, (int64_t)0x1DC96D9CLL, (int64_t)0x7ABCA9ECLL, (int64_t)0x66629FB9LL, (int64_t)0x811B8706LL, (int64_t)0x7BB2009BLL, (int64_t)0x298B45C3LL, (int64_t)0x29E30C84LL, (int64_t)0x2F7D7116LL, (int64_t)0x21CBC5F0LL, (int64_t)0x403B20EELL, (int64_t)0x5CAE3EBDLL, (int64_t)0x7BAAC551LL, (int64_t)0xCFD199B3LL, (int64_t)0x2D67A7C8LL, (int64_t)0x51F705CDLL, (int64_t)0x8DBE096FLL, (int64_t)0x398B08B7LL, (int64_t)0x1A8ABB7CLL, (int64_t)0x15AFFAA67LL, (int64_t)0x85451F40LL };
		for (int ndx = 0; ndx < 100; ndx++)
			Util::Check("Fixed64::Tan", Fixed64::Tan(input0[ndx]), output0[ndx], input0[ndx]);
	}

	// Fixed64.TanFast()
	static void Fixed64_TanFast()
	{
		static const int64_t input0[] = { (int64_t)0xFFFFFFFFC78E8F9CLL, (int64_t)0xFFFFFFFF6197BE6ELL, (int64_t)0xFFFFFFFF70F6C70ELL, (int64_t)0xFFFFFFFF5A327B4ALL, (int64_t)0xFFFFFFFFE045ACC3LL, (int64_t)0xFFFFFFFFDEAD83D5LL, (int64_t)0xFFFFFFFFE5C5A5F4LL, (int64_t)0xFFFFFFFF74930FF1LL, (int64_t)0xFFFFFFFF2BEF0864LL, (int64_t)0xFFFFFFFFBD8436ADLL, (int64_t)0xFFFFFFFFB54DB4D9LL, (int64_t)0xFFFFFFFFDCE15E7ELL, (int64_t)0xFFFFFFFFB2049DE1LL, (int64_t)0xFFFFFFFFCCA7DA63LL, (int64_t)0xFFFFFFFF0D77FC17LL, (int64_t)0xFFFFFFFFD6C72540LL, (int64_t)0xFFFFFFFFCFE20D81LL, (int64_t)0xFFFFFFFFAEF677D4LL, (int64_t)0xFFFFFFFFA5D0C8B8LL, (int64_t)0xFFFFFFFF0C23113CLL, (int64_t)0xFFFFFFFF18FB9CDCLL, (int64_t)0xFFFFFFFFCA7811BBLL, (int64_t)0xFFFFFFFF7C5799F9LL, (int64_t)0xFFFFFFFFDDA957C5LL, (int64_t)0xFFFFFFFFE350A174LL, (int64_t)0xFFFFFFFFD9CB114DLL, (int64_t)0xFFFFFFFFD6CF35A2LL, (int64_t)0xFFFFFFFFC919D7F1LL, (int64_t)0xFFFFFFFFAF9CD472LL, (int64_t)0xFFFFFFFF258DEB54LL, (int64_t)0xFFFFFFFFC36361D2LL, (int64_t)0xFFFFFFFFC9533414LL, (int64_t)0xFFFFFFFFDD902749LL, (int64_t)0xFFFFFFFFD07DA4CDLL, (int64_t)0x12A1EF97LL, (int64_t)0xFFFFFFFFF45715FDLL, (int64_t)0x14A4525DLL, (int64_t)0xDC517F4LL, (int64_t)0x3E740A0LL, (int64_t)0x1FD21B2LL, (int64_t)0xFFFFFFFFF06F31BCLL, (int64_t)0xFFFFFFFFFEA9A9C6LL, (int64_t)0xFFFFFFFFF812EA53LL, (int64_t)0xA6D1266LL, (int64_t)0x15C9FF5ALL, (int64_t)0xFFFFFFFFFB0EE6CBLL, (int64_t)0xFFFFFFFFEF13D1D6LL, (int64_t)0x19CADC3LL, (int64_t)0xFFFFFFFFF41CA3FDLL, (int64_t)0xFFFFFFFFF4F4A83CLL, (int64_t)0xFFFFFFFFFC682D4DLL, (int64_t)0x119EC044LL, (int64_t)0xFFFFFFFFFE5275D6LL, (int64_t)0x193095FFLL, (int64_t)0xB8FB3DALL, (int64_t)0xFFFFFFFFE793F484LL, (int64_t)0xFFFFFFFFEA8353A0LL, (int64_t)0x620D040LL, (int64_t)0xD69AFFELL, (int64_t)0x1577CDF3LL, (int64_t)0x14E2D7E3LL, (int64_t)0x92C9E55LL, (int64_t)0xFFFFFFFFF2A52E62LL, (int64_t)0x18F0E152LL, (int64_t)0xFFFFFFFFE874C4ECLL, (int64_t)0xFFFFFFFFED56A6B9LL, (int64_t)0xFFFFFFFFE6D628A5LL, (int64_t)0xFFFFFFFFF16B6842LL, (int64_t)0x463CCF81LL, (int64_t)0x819261DFLL, (int64_t)0x3384C2C1LL, (int64_t)0x51E95A17LL, (int64_t)0xD6FED699LL, (int64_t)0x1A1489A8LL, (int64_t)0x9B4CC24BLL, (int64_t)0x4D95FFF1LL, (int64_t)0xF1C2716CLL, (int64_t)0x1A0D580FLL, (int64_t)0x28C1FF08LL, (int64_t)0x7147630DLL, (int64_t)0x19DCBE47LL, (int64_t)0x792435C3LL, (int64_t)0x1DA1E2D3LL, (int64_t)0x29C639C7LL, (int64_t)0x513261FCLL, (int64_t)0x56C70CE6LL, (int64_t)0xBA706402LL, (int64_t)0x2313FC29LL, (int64_t)0x59526EE5LL, (int64_t)0xB1772876LL, (int64_t)0x27D38193LL, (int64_t)0x312B77FALL, (int64_t)0x1A03AE12LL, (int64_t)0x742F7985LL, (int64_t)0x6D6D4F36LL, (int64_t)0x54247D3FLL, (int64_t)0x2BF2E28FLL, (int64_t)0x3A622A86LL, (int64_t)0x75F26581LL, (int64_t)0x9DDAA661LL };
		static const int64_t output0[] = { (int64_t)0xFFFFFFFFC69FEC10LL, (int64_t)0xFFFFFFFF49B66CB3LL, (int64_t)0xFFFFFFFF5FF3C2AELL, (int64_t)0xFFFFFFFF3E547BA5LL, (int64_t)0xFFFFFFFFE01BE5EBLL, (int64_t)0xFFFFFFFFDE7D157ALL, (int64_t)0xFFFFFFFFE5AE19FCLL, (int64_t)0xFFFFFFFF64EE10ACLL, (int64_t)0xFFFFFFFEE8FC46A1LL, (int64_t)0xFFFFFFFFBBFB1474LL, (int64_t)0xFFFFFFFFB31BEEFBLL, (int64_t)0xFFFFFFFFDCA89F6FLL, (int64_t)0xFFFFFFFFAF83544BLL, (int64_t)0xFFFFFFFFCBF4DDBELL, (int64_t)0xFFFFFFFE9BFCC902LL, (int64_t)0xFFFFFFFFD66B1788LL, (int64_t)0xFFFFFFFFCF4F0D31LL, (int64_t)0xFFFFFFFFAC248C66LL, (int64_t)0xFFFFFFFFA1E3A15ELL, (int64_t)0xFFFFFFFE980D3347LL, (int64_t)0xFFFFFFFEBBCCBF5FLL, (int64_t)0xFFFFFFFFC9ACEBC3LL, (int64_t)0xFFFFFFFF6F5BCF10LL, (int64_t)0xFFFFFFFFDD7451A8LL, (int64_t)0xFFFFFFFFE331CC18LL, (int64_t)0xFFFFFFFFD981E409LL, (int64_t)0xFFFFFFFFD6735E53LL, (int64_t)0xFFFFFFFFC83E8163LL, (int64_t)0xFFFFFFFFACDC9DEDLL, (int64_t)0xFFFFFFFEDAA2FD67LL, (int64_t)0xFFFFFFFFC23AECC5LL, (int64_t)0xFFFFFFFFC87A9321LL, (int64_t)0xFFFFFFFFDD5AAB8ALL, (int64_t)0xFFFFFFFFCFF03276LL, (int64_t)0x12AA5B1CLL, (int64_t)0xFFFFFFFFF45506EBLL, (int64_t)0x14AFC70CLL, (int64_t)0xDC87C9FLL, (int64_t)0x3E75447LL, (int64_t)0x1FD2440LL, (int64_t)0xFFFFFFFFF06A4A30LL, (int64_t)0xFFFFFFFFFEA9A8FALL, (int64_t)0xFFFFFFFFF8124502LL, (int64_t)0xA6E8B09LL, (int64_t)0x15D779FELL, (int64_t)0xFFFFFFFFFB0EBECELL, (int64_t)0xFFFFFFFFEF0D83D0LL, (int64_t)0x19CAF1DLL, (int64_t)0xFFFFFFFFF41A754DLL, (int64_t)0xFFFFFFFFF4F2E865LL, (int64_t)0xFFFFFFFFFC681DF4LL, (int64_t)0x11A5DE8ELL, (int64_t)0xFFFFFFFFFE527446LL, (int64_t)0x19457007LL, (int64_t)0xB91B59ELL, (int64_t)0xFFFFFFFFE780F52CLL, (int64_t)0xFFFFFFFFEA7666CBLL, (int64_t)0x6211C8ELL, (int64_t)0xD6CD2BCLL, (int64_t)0x1584B1EDLL, (int64_t)0x14EEB621LL, (int64_t)0x92D9ED0LL, (int64_t)0xFFFFFFFFF2A21600LL, (int64_t)0x19051E34LL, (int64_t)0xFFFFFFFFE863C0F3LL, (int64_t)0xFFFFFFFFED4E3115LL, (int64_t)0xFFFFFFFFE6C15F62LL, (int64_t)0xFFFFFFFFF16760A9LL, (int64_t)0x480DEA6FLL, (int64_t)0x8DE6F4EFLL, (int64_t)0x343998F8LL, (int64_t)0x54D393E3LL, (int64_t)0x11D810792LL, (int64_t)0x1A2BAFF9LL, (int64_t)0xB1A4FD47LL, (int64_t)0x500D5092LL, (int64_t)0x161C1F232LL, (int64_t)0x1A246B2ELL, (int64_t)0x291AF38FLL, (int64_t)0x794D7F89LL, (int64_t)0x19F350C8LL, (int64_t)0x831365C2LL, (int64_t)0x1DC3E3ADLL, (int64_t)0x2A260ECALL, (int64_t)0x5408B263LL, (int64_t)0x5A430C50LL, (int64_t)0xE44E6D8BLL, (int64_t)0x234C875DLL, (int64_t)0x5D220BAELL, (int64_t)0xD4AD3532LL, (int64_t)0x2826754BLL, (int64_t)0x31C8700ALL, (int64_t)0x1A1AA772LL, (int64_t)0x7CE19C44LL, (int64_t)0x749E7A55LL, (int64_t)0x574F4E55LL, (int64_t)0x2C629CEDLL, (int64_t)0x3B6AA7F4LL, (int64_t)0x7F11B702LL, (int64_t)0xB57480D6LL };
		for (int ndx = 0; ndx < 100; ndx++)
			Util::Check("Fixed64::TanFast", Fixed64::TanFast(input0[ndx]), output0[ndx], input0[ndx]);
	}

	// Fixed64.TanFastest()
	static void Fixed64_TanFastest()
	{
		static const int64_t input0[] = { (int64_t)0xFFFFFFFFC070E678LL, (int64_t)0xFFFFFFFF199D84D7LL, (int64_t)0xFFFFFFFFE046F227LL, (int64_t)0xFFFFFFFFA24DA2C5LL, (int64_t)0xFFFFFFFF0B3BEB48LL, (int64_t)0xFFFFFFFF28C6005FLL, (int64_t)0xFFFFFFFF2B216555LL, (int64_t)0xFFFFFFFFB650BAE0LL, (int64_t)0xFFFFFFFFD693690ELL, (int64_t)0xFFFFFFFFD3139AEDLL, (int64_t)0xFFFFFFFFE36B944ELL, (int64_t)0xFFFFFFFFE1BBB8E3LL, (int64_t)0xFFFFFFFFBD0596A9LL, (int64_t)0xFFFFFFFFDE8F55B2LL, (int64_t)0xFFFFFFFF2D969C9DLL, (int64_t)0xFFFFFFFFD43D6216LL, (int64_t)0xFFFFFFFF96599A58LL, (int64_t)0xFFFFFFFFE4CA4C0ALL, (int64_t)0xFFFFFFFFB1A70275LL, (int64_t)0xFFFFFFFFAD2B975DLL, (int64_t)0xFFFFFFFFCFFB3217LL, (int64_t)0xFFFFFFFF417C6785LL, (int64_t)0xFFFFFFFF8794C67BLL, (int64_t)0xFFFFFFFF9AB0A8C9LL, (int64_t)0xFFFFFFFFACB64F77LL, (int64_t)0xFFFFFFFFE52D5725LL, (int64_t)0xFFFFFFFFAF64A992LL, (int64_t)0xFFFFFFFFD0A0E2A0LL, (int64_t)0xFFFFFFFFC2FE12B1LL, (int64_t)0xFFFFFFFFD0C02DE7LL, (int64_t)0xFFFFFFFFD2CE74E8LL, (int64_t)0xFFFFFFFF95FE41EBLL, (int64_t)0xFFFFFFFFC775D7F2LL, (int64_t)0xFFFFFFFFBDE859F5LL, (int64_t)0xFFFFFFFFF34014F7LL, (int64_t)0xFFFFFFFFE8F80367LL, (int64_t)0x43213C3LL, (int64_t)0x43B3LL, (int64_t)0xFFFFFFFFF248E8CDLL, (int64_t)0x3EC55DBLL, (int64_t)0x5A56BC9LL, (int64_t)0xFFFFFFFFFB0AECFFLL, (int64_t)0x15E6FAD1LL, (int64_t)0xFFFFFFFFF5AEE1A3LL, (int64_t)0xF019572LL, (int64_t)0xFFFFFFFFEC80E4B6LL, (int64_t)0x12BA14A8LL, (int64_t)0x140424AELL, (int64_t)0xC64DE80LL, (int64_t)0xFFFFFFFFFAC7E195LL, (int64_t)0x1489D8B0LL, (int64_t)0xFFFFFFFFF10FB8F3LL, (int64_t)0x130F4437LL, (int64_t)0xFFFFFFFFEE4271EELL, (int64_t)0xDD1550LL, (int64_t)0x1307861LL, (int64_t)0xFFFFFFFFF4D3A24FLL, (int64_t)0xFFFFFFFFFFC79EB6LL, (int64_t)0xFFFFFFFFE904C4A3LL, (int64_t)0x1791135ALL, (int64_t)0xFFFFFFFFFC3D2E70LL, (int64_t)0x7D07A5FLL, (int64_t)0xFFFFFFFFEA992733LL, (int64_t)0x16AC9A4ELL, (int64_t)0x1977796FLL, (int64_t)0xFFFFFFFFFC73AC8CLL, (int64_t)0xBB44EC2LL, (int64_t)0xFFFFFFFFE6B23017LL, (int64_t)0xBB9BBE1ALL, (int64_t)0xBB74D1A3LL, (int64_t)0x7294F326LL, (int64_t)0x2168DA21LL, (int64_t)0x9F6DC166LL, (int64_t)0xCFAC9D57LL, (int64_t)0xCB2F7369LL, (int64_t)0xBDC2E7E4LL, (int64_t)0xE0FB0EDDLL, (int64_t)0x3C902D9FLL, (int64_t)0xA32329D7LL, (int64_t)0x3F4BD7A2LL, (int64_t)0x2489A239LL, (int64_t)0x679DA1B3LL, (int64_t)0x55CA2FCBLL, (int64_t)0xF3F25EECLL, (int64_t)0x3B539A05LL, (int64_t)0x1BFAFE07LL, (int64_t)0x8E41765ALL, (int64_t)0x27B4AA47LL, (int64_t)0xC907F0EELL, (int64_t)0x88C2C9F6LL, (int64_t)0x962DA36ALL, (int64_t)0x1F393F34LL, (int64_t)0x47F5F306LL, (int64_t)0x2FDECB5CLL, (int64_t)0x242AD056LL, (int64_t)0xE831A641LL, (int64_t)0x35A13A99LL, (int64_t)0xF73D9686LL, (int64_t)0x3334FC37LL, (int64_t)0x3AF7B5CBLL };
		static const int64_t output0[] = { (int64_t)0xFFFFFFFFBF1D9531LL, (int64_t)0xFFFFFFFEBD836C8FLL, (int64_t)0xFFFFFFFFE01D09D3LL, (int64_t)0xFFFFFFFF9DE56F43LL, (int64_t)0xFFFFFFFE954ADCBCLL, (int64_t)0xFFFFFFFEE217743ALL, (int64_t)0xFFFFFFFEE7558F0FLL, (int64_t)0xFFFFFFFFB43A6A17LL, (int64_t)0xFFFFFFFFD6368671LL, (int64_t)0xFFFFFFFFD29D1C1ALL, (int64_t)0xFFFFFFFFE34CD0F9LL, (int64_t)0xFFFFFFFFE1974438LL, (int64_t)0xFFFFFFFFBB773350LL, (int64_t)0xFFFFFFFFDE5E5231LL, (int64_t)0xFFFFFFFEECB0036BLL, (int64_t)0xFFFFFFFFD3CFDFA8LL, (int64_t)0xFFFFFFFF8FEA1694LL, (int64_t)0xFFFFFFFFE4AFB0CALL, (int64_t)0xFFFFFFFFAF211679LL, (int64_t)0xFFFFFFFFAA2BF1C4LL, (int64_t)0xFFFFFFFFCF6A5D12LL, (int64_t)0xFFFFFFFF144BA8FELL, (int64_t)0xFFFFFFFF7DCFFB2BLL, (int64_t)0xFFFFFFFF950DE999LL, (int64_t)0xFFFFFFFFA9A961AFLL, (int64_t)0xFFFFFFFFE513D5D1LL, (int64_t)0xFFFFFFFFACA3393DLL, (int64_t)0xFFFFFFFFD015DC37LL, (int64_t)0xFFFFFFFFC1D2ACECLL, (int64_t)0xFFFFFFFFD0363B9DLL, (int64_t)0xFFFFFFFFD255CE17LL, (int64_t)0xFFFFFFFF8F7D09A3LL, (int64_t)0xFFFFFFFFC6885908LL, (int64_t)0xFFFFFFFFBC69E62BLL, (int64_t)0xFFFFFFFFF33D280BLL, (int64_t)0xFFFFFFFFE8E7BA37LL, (int64_t)0x43235D7LL, (int64_t)0x43B0LL, (int64_t)0xFFFFFFFFF2454D1ELL, (int64_t)0x3EC7254LL, (int64_t)0x5A5B7E3LL, (int64_t)0xFFFFFFFFFB0AB78ELL, (int64_t)0x15F50888LL, (int64_t)0xFFFFFFFFF5AD485BLL, (int64_t)0xF064296LL, (int64_t)0xFFFFFFFFEC76E493LL, (int64_t)0x12C2F913LL, (int64_t)0x140EF127LL, (int64_t)0xC679109LL, (int64_t)0xFFFFFFFFFAC7A422LL, (int64_t)0x14957D45LL, (int64_t)0xFFFFFFFFF10B1B48LL, (int64_t)0x1318A08BLL, (int64_t)0xFFFFFFFFEE3AD93CLL, (int64_t)0xDD15F3LL, (int64_t)0x13079C6LL, (int64_t)0xFFFFFFFFF4D1A0CELL, (int64_t)0xFFFFFFFFFFC79EA6LL, (int64_t)0xFFFFFFFFE8F495DFLL, (int64_t)0x17A27FA7LL, (int64_t)0xFFFFFFFFFC3D14EDLL, (int64_t)0x7D13568LL, (int64_t)0xFFFFFFFFEA8C0502LL, (int64_t)0x16BC28A0LL, (int64_t)0x198D5C84LL, (int64_t)0xFFFFFFFFFC7396AFLL, (int64_t)0xBB698F8LL, (int64_t)0xFFFFFFFFE69CB5C8LL, (int64_t)0xE6676824LL, (int64_t)0xE6212AC4LL, (int64_t)0x7AE9DEF1LL, (int64_t)0x2199BB95LL, (int64_t)0xB7E7399ALL, (int64_t)0x10D7B29FALL, (int64_t)0x104337FDFLL, (int64_t)0xEA52232ELL, (int64_t)0x134D66553LL, (int64_t)0x3DB4F8E6LL, (int64_t)0xBD947A77LL, (int64_t)0x409AE388LL, (int64_t)0x24C9729ALL, (int64_t)0x6DAAC2B5LL, (int64_t)0x5922829DLL, (int64_t)0x1683F3F95LL, (int64_t)0x3C668C33LL, (int64_t)0x1C17E301LL, (int64_t)0x9F07480CLL, (int64_t)0x28067AADLL, (int64_t)0xFFDDA613LL, (int64_t)0x97816BDBLL, (int64_t)0xAA3B6BDBLL, (int64_t)0x1F613A2ELL, (int64_t)0x49E6A7F7LL, (int64_t)0x306E479ALL, (int64_t)0x2468B7ACLL, (int64_t)0x14738E816LL, (int64_t)0x366B8795LL, (int64_t)0x17246ECBFLL, (int64_t)0x33E4DB6DLL, (int64_t)0x3C059E94LL };
		for (int ndx = 0; ndx < 100; ndx++)
			Util::Check("Fixed64::TanFastest", Fixed64::TanFastest(input0[ndx]), output0[ndx], input0[ndx]);
	}

	// Fixed32.Tan()
	static void Fixed32_Tan()
	{
		static const int32_t input0[] = { (int32_t)0xFFFFC113, (int32_t)0xFFFF4692, (int32_t)0xFFFFE4D4, (int32_t)0xFFFF3EFF, (int32_t)0xFFFF70FE, (int32_t)0xFFFF63CA, (int32_t)0xFFFFBD9D, (int32_t)0xFFFF14E4, (int32_t)0xFFFFD214, (int32_t)0xFFFF8E7B, (int32_t)0xFFFF9ED7, (int32_t)0xFFFF30FE, (int32_t)0xFFFF823D, (int32_t)0xFFFF8B89, (int32_t)0xFFFF5C53, (int32_t)0xFFFF5724, (int32_t)0xFFFFDDAD, (int32_t)0xFFFFDF8F, (int32_t)0xFFFF9F2A, (int32_t)0xFFFF1734, (int32_t)0xFFFF83D3, (int32_t)0xFFFFA7A7, (int32_t)0xFFFFDEF8, (int32_t)0xFFFFDCE2, (int32_t)0xFFFFE00C, (int32_t)0xFFFFA20F, (int32_t)0xFFFF8929, (int32_t)0xFFFFAABE, (int32_t)0xFFFF6D01, (int32_t)0xFFFF2002, (int32_t)0xFFFFA56C, (int32_t)0xFFFF1713, (int32_t)0xFFFFE1B9, (int32_t)0xFFFFB92E, (int32_t)0xFFFFE688, (int32_t)0xFFFFF57B, (int32_t)0x429, (int32_t)0x791, (int32_t)0xFFFFF247, (int32_t)0x412, (int32_t)0x663, (int32_t)0xE6D, (int32_t)0x165D, (int32_t)0xFFFFF31C, (int32_t)0xFFFFEE01, (int32_t)0x1276, (int32_t)0xFFFFFA9F, (int32_t)0xEE4, (int32_t)0xFFFFFE44, (int32_t)0xFFFFF756, (int32_t)0x10E8, (int32_t)0xFFFFF194, (int32_t)0xFFFFFB3F, (int32_t)0xFFFFF7EE, (int32_t)0x90A, (int32_t)0x120D, (int32_t)0xCC3, (int32_t)0x13E5, (int32_t)0xE64, (int32_t)0xFFFFEFBF, (int32_t)0xFFFFEC7B, (int32_t)0x1409, (int32_t)0xFFFFF0D8, (int32_t)0xFFFFF65D, (int32_t)0xFFFFEB6C, (int32_t)0x628, (int32_t)0x1125, (int32_t)0xFFFFF32C, (int32_t)0x73C9, (int32_t)0x5313, (int32_t)0x2C48, (int32_t)0x4D3A, (int32_t)0xBE2D, (int32_t)0xFEFB, (int32_t)0x373D, (int32_t)0xCD3C, (int32_t)0x662F, (int32_t)0xBA84, (int32_t)0xF978, (int32_t)0x2C0B, (int32_t)0x25D7, (int32_t)0xC057, (int32_t)0x1D27, (int32_t)0x44A3, (int32_t)0x211D, (int32_t)0x36CC, (int32_t)0x5B3B, (int32_t)0x89A5, (int32_t)0x9525, (int32_t)0x2427, (int32_t)0x59D8, (int32_t)0x7E2A, (int32_t)0xBC5A, (int32_t)0x1CAF, (int32_t)0x49F5, (int32_t)0x8A8C, (int32_t)0x60D5, (int32_t)0x6BF4, (int32_t)0x242C, (int32_t)0x5662 };
		static const int32_t output0[] = { (int32_t)0xFFFFBFC7, (int32_t)0xFFFF1D80, (int32_t)0xFFFFE4BA, (int32_t)0xFFFF0FA2, (int32_t)0xFFFF5FFE, (int32_t)0xFFFF4D01, (int32_t)0xFFFFBC16, (int32_t)0xFFFEB0EC, (int32_t)0xFFFFD195, (int32_t)0xFFFF8668, (int32_t)0xFFFF99E4, (int32_t)0xFFFEF3D3, (int32_t)0xFFFF770B, (int32_t)0xFFFF82C7, (int32_t)0xFFFF41A7, (int32_t)0xFFFF397B, (int32_t)0xFFFFDD78, (int32_t)0xFFFFDF63, (int32_t)0xFFFF9A44, (int32_t)0xFFFEB720, (int32_t)0xFFFF7913, (int32_t)0xFFFFA3F9, (int32_t)0xFFFFDEC9, (int32_t)0xFFFFDCAA, (int32_t)0xFFFFDFE2, (int32_t)0xFFFF9D9B, (int32_t)0xFFFF7FD2, (int32_t)0xFFFFA772, (int32_t)0xFFFF5A64, (int32_t)0xFFFECD7B, (int32_t)0xFFFFA172, (int32_t)0xFFFEB6C8, (int32_t)0xFFFFE195, (int32_t)0xFFFFB751, (int32_t)0xFFFFE673, (int32_t)0xFFFFF57A, (int32_t)0x429, (int32_t)0x791, (int32_t)0xFFFFF244, (int32_t)0x412, (int32_t)0x663, (int32_t)0xE70, (int32_t)0x166B, (int32_t)0xFFFFF31A, (int32_t)0xFFFFEDFA, (int32_t)0x127E, (int32_t)0xFFFFFA9F, (int32_t)0xEE8, (int32_t)0xFFFFFE44, (int32_t)0xFFFFF756, (int32_t)0x10EE, (int32_t)0xFFFFF191, (int32_t)0xFFFFFB3F, (int32_t)0xFFFFF7EE, (int32_t)0x90A, (int32_t)0x1214, (int32_t)0xCC5, (int32_t)0x13EF, (int32_t)0xE67, (int32_t)0xFFFFEFBA, (int32_t)0xFFFFEC72, (int32_t)0x1413, (int32_t)0xFFFFF0D4, (int32_t)0xFFFFF65C, (int32_t)0xFFFFEB61, (int32_t)0x628, (int32_t)0x112B, (int32_t)0xFFFFF32A, (int32_t)0x7C62, (int32_t)0x561E, (int32_t)0x2CBA, (int32_t)0x4FA8, (int32_t)0xEB1A, (int32_t)0x18B39, (int32_t)0x381C, (int32_t)0x1087B, (int32_t)0x6BFA, (int32_t)0xE471, (int32_t)0x1792C, (int32_t)0x2C7B, (int32_t)0x261E, (int32_t)0xEF1F, (int32_t)0x1D47, (int32_t)0x4654, (int32_t)0x214C, (int32_t)0x37A6, (int32_t)0x5F4C, (int32_t)0x98A5, (int32_t)0xA8AC, (int32_t)0x2465, (int32_t)0x5DB9, (int32_t)0x897A, (int32_t)0xE7C3, (int32_t)0x1CCD, (int32_t)0x4C15, (int32_t)0x99DF, (int32_t)0x65BB, (int32_t)0x72D7, (int32_t)0x246A, (int32_t)0x59D1 };
		for (int ndx = 0; ndx < 100; ndx++)
			Util::Check("Fixed32::Tan", Fixed32::Tan(input0[ndx]), output0[ndx], input0[ndx]);
	}

	// Fixed32.TanFast()
	static void Fixed32_TanFast()
	{
		static const int32_t input0[] = { (int32_t)0xFFFFE4D7, (int32_t)0xFFFFDC37, (int32_t)0xFFFFDD09, (int32_t)0xFFFF1953, (int32_t)0xFFFFE04F, (int32_t)0xFFFFC69A, (int32_t)0xFFFFC70C, (int32_t)0xFFFFBE63, (int32_t)0xFFFFE5E9, (int32_t)0xFFFF6866, (int32_t)0xFFFFD253, (int32_t)0xFFFF3ACA, (int32_t)0xFFFF34C8, (int32_t)0xFFFFA622, (int32_t)0xFFFFE5A4, (int32_t)0xFFFFD338, (int32_t)0xFFFF50FC, (int32_t)0xFFFF674E, (int32_t)0xFFFFD76E, (int32_t)0xFFFF6A23, (int32_t)0xFFFFE20A, (int32_t)0xFFFFDF73, (int32_t)0xFFFFB1FC, (int32_t)0xFFFFAE04, (int32_t)0xFFFF1351, (int32_t)0xFFFFA628, (int32_t)0xFFFF970C, (int32_t)0xFFFF5649, (int32_t)0xFFFFA7BE, (int32_t)0xFFFF99F2, (int32_t)0xFFFFC9BE, (int32_t)0xFFFF0DB6, (int32_t)0xFFFF7C01, (int32_t)0xFFFFB612, (int32_t)0xFFFFF127, (int32_t)0xFFFFE7A5, (int32_t)0xC4F, (int32_t)0xFFFFEB9B, (int32_t)0xFFFFF796, (int32_t)0xD5E, (int32_t)0x18BD, (int32_t)0xFFFFEDBB, (int32_t)0xB61, (int32_t)0x193C, (int32_t)0x1466, (int32_t)0x81D, (int32_t)0xEFF, (int32_t)0xFFFFF6DB, (int32_t)0xFFFFE848, (int32_t)0xFFFFF18F, (int32_t)0x1467, (int32_t)0xF78, (int32_t)0xFFFFFC2A, (int32_t)0xFFFFF9FF, (int32_t)0xFFFFFDF3, (int32_t)0x1592, (int32_t)0x845, (int32_t)0x6A6, (int32_t)0x1907, (int32_t)0x26E, (int32_t)0xC2E, (int32_t)0x152, (int32_t)0x1301, (int32_t)0xFFFFFB46, (int32_t)0xFFFFFD40, (int32_t)0xFFFFF480, (int32_t)0xFFFFEF55, (int32_t)0xFFFFFCE3, (int32_t)0x376A, (int32_t)0xF947, (int32_t)0x5167, (int32_t)0x8A7E, (int32_t)0x4682, (int32_t)0x4652, (int32_t)0x9BC4, (int32_t)0xD776, (int32_t)0x3DB3, (int32_t)0x4F4D, (int32_t)0x6794, (int32_t)0x33F5, (int32_t)0x90B8, (int32_t)0x3213, (int32_t)0x9BF7, (int32_t)0x3570, (int32_t)0x80EB, (int32_t)0x558F, (int32_t)0x5B0E, (int32_t)0x36B0, (int32_t)0x19A4, (int32_t)0x31C1, (int32_t)0x3B03, (int32_t)0x2104, (int32_t)0x2131, (int32_t)0x9D2A, (int32_t)0x1B01, (int32_t)0x4964, (int32_t)0x2FE0, (int32_t)0x34D3, (int32_t)0x5A21, (int32_t)0x6B7C };
		static const int32_t output0[] = { (int32_t)0xFFFFE4BC, (int32_t)0xFFFFDBFA, (int32_t)0xFFFFDCD1, (int32_t)0xFFFEBCAF, (int32_t)0xFFFFE025, (int32_t)0xFFFFC59E, (int32_t)0xFFFFC616, (int32_t)0xFFFFBCE9, (int32_t)0xFFFFE5D1, (int32_t)0xFFFF53C7, (int32_t)0xFFFFD1D5, (int32_t)0xFFFF0796, (int32_t)0xFFFEFBA5, (int32_t)0xFFFFA23F, (int32_t)0xFFFFE58C, (int32_t)0xFFFFD2C1, (int32_t)0xFFFF2F6E, (int32_t)0xFFFF522F, (int32_t)0xFFFFD716, (int32_t)0xFFFF564B, (int32_t)0xFFFFE1E6, (int32_t)0xFFFFDF45, (int32_t)0xFFFFAF79, (int32_t)0xFFFFAB17, (int32_t)0xFFFEAC9E, (int32_t)0xFFFFA246, (int32_t)0xFFFF90BD, (int32_t)0xFFFF381B, (int32_t)0xFFFFA411, (int32_t)0xFFFF942B, (int32_t)0xFFFFC8EA, (int32_t)0xFFFE9CB2, (int32_t)0xFFFF6EE9, (int32_t)0xFFFFB3F1, (int32_t)0xFFFFF122, (int32_t)0xFFFFE792, (int32_t)0xC51, (int32_t)0xFFFFEB8F, (int32_t)0xFFFFF795, (int32_t)0xD61, (int32_t)0x18D0, (int32_t)0xFFFFEDB3, (int32_t)0xB62, (int32_t)0x1950, (int32_t)0x1471, (int32_t)0x81D, (int32_t)0xF03, (int32_t)0xFFFFF6DA, (int32_t)0xFFFFE836, (int32_t)0xFFFFF18B, (int32_t)0x1472, (int32_t)0xF7C, (int32_t)0xFFFFFC29, (int32_t)0xFFFFF9FE, (int32_t)0xFFFFFDF2, (int32_t)0x159F, (int32_t)0x845, (int32_t)0x6A6, (int32_t)0x191B, (int32_t)0x26E, (int32_t)0xC30, (int32_t)0x152, (int32_t)0x1309, (int32_t)0xFFFFFB45, (int32_t)0xFFFFFD3F, (int32_t)0xFFFFF47E, (int32_t)0xFFFFEF4E, (int32_t)0xFFFFFCE2, (int32_t)0x384B, (int32_t)0x17890, (int32_t)0x5443, (int32_t)0x99CC, (int32_t)0x4858, (int32_t)0x4824, (int32_t)0xB255, (int32_t)0x11E8C, (int32_t)0x3EEB, (int32_t)0x51F0, (int32_t)0x6DA0, (int32_t)0x34AE, (int32_t)0xA265, (int32_t)0x32B8, (int32_t)0xB2A1, (int32_t)0x363A, (int32_t)0x8D0C, (int32_t)0x58E4, (int32_t)0x5F19, (int32_t)0x3788, (int32_t)0x19B9, (int32_t)0x3263, (int32_t)0x3C14, (int32_t)0x2133, (int32_t)0x2160, (int32_t)0xB46B, (int32_t)0x1B1A, (int32_t)0x4B78, (int32_t)0x3070, (int32_t)0x3596, (int32_t)0x5E0C, (int32_t)0x7248 };
		for (int ndx = 0; ndx < 100; ndx++)
			Util::Check("Fixed32::TanFast", Fixed32::TanFast(input0[ndx]), output0[ndx], input0[ndx]);
	}

	// Fixed32.TanFastest()
	static void Fixed32_TanFastest()
	{
		static const int32_t input0[] = { (int32_t)0xFFFFB1F4, (int32_t)0xFFFFC630, (int32_t)0xFFFF082C, (int32_t)0xFFFFE366, (int32_t)0xFFFF7B0E, (int32_t)0xFFFFDA8C, (int32_t)0xFFFFC511, (int32_t)0xFFFF080D, (int32_t)0xFFFF9A77, (int32_t)0xFFFFA851, (int32_t)0xFFFFA763, (int32_t)0xFFFFDA19, (int32_t)0xFFFFE505, (int32_t)0xFFFF8517, (int32_t)0xFFFF604A, (int32_t)0xFFFFB870, (int32_t)0xFFFF7304, (int32_t)0xFFFFA4D6, (int32_t)0xFFFF7E0F, (int32_t)0xFFFF2A03, (int32_t)0xFFFF785A, (int32_t)0xFFFF4CFB, (int32_t)0xFFFFB9C1, (int32_t)0xFFFFE37D, (int32_t)0xFFFF93DE, (int32_t)0xFFFFC0E3, (int32_t)0xFFFF9531, (int32_t)0xFFFF8D2A, (int32_t)0xFFFFBD57, (int32_t)0xFFFFC9AB, (int32_t)0xFFFF8CCC, (int32_t)0xFFFFE21A, (int32_t)0xFFFF1EC6, (int32_t)0xFFFF0954, (int32_t)0x108D, (int32_t)0xFFFFFACE, (int32_t)0xFFFFF60B, (int32_t)0xC1D, (int32_t)0x555, (int32_t)0x1E2, (int32_t)0xFFFFEEB1, (int32_t)0x353, (int32_t)0xBD7, (int32_t)0xFFFFFE43, (int32_t)0xCC3, (int32_t)0xFFFFF03F, (int32_t)0xFFFFEAE4, (int32_t)0xFFFFFC7E, (int32_t)0x193E, (int32_t)0x3ED, (int32_t)0xB15, (int32_t)0xB47, (int32_t)0x595, (int32_t)0x65F, (int32_t)0x146C, (int32_t)0x723, (int32_t)0x1544, (int32_t)0x167B, (int32_t)0xFFFFFC08, (int32_t)0xFFFFF6F8, (int32_t)0x24C, (int32_t)0xAC4, (int32_t)0x39C, (int32_t)0xFFFFF44E, (int32_t)0x1387, (int32_t)0xFFFFFE8F, (int32_t)0xFFFFF1F9, (int32_t)0xFFFFE865, (int32_t)0xB8A1, (int32_t)0x3FCD, (int32_t)0x236B, (int32_t)0x19DB, (int32_t)0xE2CD, (int32_t)0x25C0, (int32_t)0x9367, (int32_t)0x24F1, (int32_t)0x213D, (int32_t)0xF037, (int32_t)0x32C9, (int32_t)0x4574, (int32_t)0x3394, (int32_t)0x278D, (int32_t)0x74B2, (int32_t)0xB0A9, (int32_t)0x6860, (int32_t)0xDB5D, (int32_t)0x498D, (int32_t)0x357A, (int32_t)0x1F22, (int32_t)0x2716, (int32_t)0x4DDE, (int32_t)0x3B80, (int32_t)0x34C5, (int32_t)0x30D8, (int32_t)0xFB41, (int32_t)0x486A, (int32_t)0xFCB6, (int32_t)0x49C7, (int32_t)0x625A, (int32_t)0x307E };
		static const int32_t output0[] = { (int32_t)0xFFFFAF75, (int32_t)0xFFFFC531, (int32_t)0xFFFE8BE5, (int32_t)0xFFFFE347, (int32_t)0xFFFF6D9B, (int32_t)0xFFFFDA47, (int32_t)0xFFFFC403, (int32_t)0xFFFE8B84, (int32_t)0xFFFF94CA, (int32_t)0xFFFFA4BC, (int32_t)0xFFFFA3AF, (int32_t)0xFFFFD9D1, (int32_t)0xFFFFE4EB, (int32_t)0xFFFF7AA8, (int32_t)0xFFFF47AB, (int32_t)0xFFFFB687, (int32_t)0xFFFF62BA, (int32_t)0xFFFFA0CA, (int32_t)0xFFFF7192, (int32_t)0xFFFEE4DC, (int32_t)0xFFFF69FE, (int32_t)0xFFFF28A8, (int32_t)0xFFFFB7F3, (int32_t)0xFFFFE35E, (int32_t)0xFFFF8CF0, (int32_t)0xFFFFBF96, (int32_t)0xFFFF8E87, (int32_t)0xFFFF84C5, (int32_t)0xFFFFBBCE, (int32_t)0xFFFFC8D8, (int32_t)0xFFFF8451, (int32_t)0xFFFFE1F6, (int32_t)0xFFFECA8E, (int32_t)0xFFFE8F7B, (int32_t)0x1093, (int32_t)0xFFFFFACD, (int32_t)0xFFFFF609, (int32_t)0xC1F, (int32_t)0x555, (int32_t)0x1E2, (int32_t)0xFFFFEEA9, (int32_t)0x353, (int32_t)0xBD9, (int32_t)0xFFFFFE42, (int32_t)0xCC5, (int32_t)0xFFFFF039, (int32_t)0xFFFFEAD7, (int32_t)0xFFFFFC7D, (int32_t)0x1953, (int32_t)0x3ED, (int32_t)0xB16, (int32_t)0xB49, (int32_t)0x595, (int32_t)0x65F, (int32_t)0x1477, (int32_t)0x723, (int32_t)0x1550, (int32_t)0x168A, (int32_t)0xFFFFFC07, (int32_t)0xFFFFF6F6, (int32_t)0x24C, (int32_t)0xAC5, (int32_t)0x39C, (int32_t)0xFFFFF44B, (int32_t)0x1391, (int32_t)0xFFFFFE8E, (int32_t)0xFFFFF1F5, (int32_t)0xFFFFE853, (int32_t)0xE114, (int32_t)0x4124, (int32_t)0x23A5, (int32_t)0x19F1, (int32_t)0x1395A, (int32_t)0x2606, (int32_t)0xA641, (int32_t)0x2532, (int32_t)0x216D, (int32_t)0x15D4F, (int32_t)0x3374, (int32_t)0x4731, (int32_t)0x3447, (int32_t)0x27DD, (int32_t)0x7D87, (int32_t)0xD35A, (int32_t)0x6E91, (int32_t)0x12761, (int32_t)0x4BA0, (int32_t)0x3642, (int32_t)0x1F49, (int32_t)0x2764, (int32_t)0x5057, (int32_t)0x3C95, (int32_t)0x3585, (int32_t)0x3170, (int32_t)0x17F02, (int32_t)0x4A64, (int32_t)0x183C6, (int32_t)0x4BDF, (int32_t)0x677B, (int32_t)0x3113 };
		for (int ndx = 0; ndx < 100; ndx++)
			Util::Check("Fixed32::TanFastest", Fixed32::TanFastest(input0[ndx]), output0[ndx], input0[ndx]);
	}

	// Fixed64.Asin()
	static void Fixed64_Asin()
	{
		static const int64_t input0[] = { (int64_t)0xEEB95D6BLL, (int64_t)0xFFFFFFFF18F54C9DLL, (int64_t)0x258C0B06LL, (int64_t)0x315D5AEALL, (int64_t)0xFFFFFFFFDF14F4B6LL, (int64_t)0x6C970B5ELL, (int64_t)0x8BB2F843LL, (int64_t)0xFFFFFFFFE1763EE6LL, (int64_t)0xBA728797LL, (int64_t)0x7AB1FD5ELL, (int64_t)0xD54D9BALL, (int64_t)0xE2CD252BLL, (int64_t)0x4883B7AELL, (int64_t)0xFA5C48EFLL, (int64_t)0xFFFFFFFF09E29E01LL, (int64_t)0xFFFFFFFFB63D9606LL, (int64_t)0xFFFFFFFF1A569D91LL, (int64_t)0x768F9972LL, (int64_t)0x52852C06LL, (int64_t)0xE59E9BA7LL, (int64_t)0xFFFFFFFF06E56351LL, (int64_t)0xCFE700ABLL, (int64_t)0xE8696DE7LL, (int64_t)0x593A6856LL, (int64_t)0xD3B02D5BLL, (int64_t)0x8CA61B7BLL, (int64_t)0x61625D8ELL, (int64_t)0x556BE98ELL, (int64_t)0xFFFFFFFF5A85A9F9LL, (int64_t)0xFFFFFFFF9E0D835ELL, (int64_t)0xFFFFFFFF546897A1LL, (int64_t)0x4EB24C36LL, (int64_t)0xFFFFFFFFC69143AELL, (int64_t)0xFFFFFFFF0A43C205LL, (int64_t)0xFFFFFFFFEF36849ELL, (int64_t)0xFFFFFFFF82D0CAEELL, (int64_t)0x3B334CBALL, (int64_t)0xFFFFFFFF1FF78B9DLL, (int64_t)0xFFFFFFFFCE742FF6LL, (int64_t)0xCBEE1FEBLL, (int64_t)0xFFFFFFFF51FAF4E5LL, (int64_t)0xFFFFFFFF093A0459LL, (int64_t)0xFFFFFFFFE9602342LL, (int64_t)0xFFFFFFFFB0D2848ALL, (int64_t)0x50CA06D6LL, (int64_t)0x1492592ALL, (int64_t)0x730A5A0ELL, (int64_t)0xFFFFFFFFA67CF466LL, (int64_t)0xFFFFFFFF85C97122LL, (int64_t)0x459F6CAALL, (int64_t)0xFFFFFFFFCCE1F76ALL, (int64_t)0xFFFFFFFF86960A32LL, (int64_t)0x98DA9BE7LL, (int64_t)0x45AF21A2LL, (int64_t)0xFFFFFFFF872A106ALL, (int64_t)0xFFFFFFFF1ED25CC1LL, (int64_t)0xFFFFFFFF308BDEB5LL, (int64_t)0xCC51A2AFLL, (int64_t)0x5DAD2D8ELL, (int64_t)0x526ED93ALL, (int64_t)0xFFFFFFFF0B34ADD1LL, (int64_t)0xFFFFFFFF36470EB5LL, (int64_t)0xFFFFFFFF86F094EELL, (int64_t)0x1C65043ALL, (int64_t)0x264965BELL, (int64_t)0xBEA28D83LL, (int64_t)0x1C3BE17ELL, (int64_t)0x3E3FF5AALL, (int64_t)0xB25C452LL, (int64_t)0x8711D313LL, (int64_t)0x7B0A494ALL, (int64_t)0xFA5F11F3LL, (int64_t)0xFFFFFFFFA81B697ELL, (int64_t)0x86970C1BLL, (int64_t)0x93A3A6C3LL, (int64_t)0xFDAB5EF7LL, (int64_t)0xFFFFFFFFE686DD6ALL, (int64_t)0x3796E95ELL, (int64_t)0xFFFFFFFF08706181LL, (int64_t)0xFFFFFFFFBF1DD432LL, (int64_t)0xFFFFFFFF199BC16DLL, (int64_t)0xFFFFFFFFBAE5692ALL, (int64_t)0xFFFFFFFFCFA2786ELL, (int64_t)0x14E63D4ELL, (int64_t)0xD12B8BF3LL, (int64_t)0xCDD28D6FLL, (int64_t)0xB5D7B04FLL, (int64_t)0x80E2220BLL, (int64_t)0x8319B19BLL, (int64_t)0xFFFFFFFFD06427DELL, (int64_t)0xFFFFFFFF5244EC39LL, (int64_t)0x6EE1AA0ALL, (int64_t)0xFFFFFFFFC24A5E0ELL, (int64_t)0x7C0556BALL, (int64_t)0xC0B9721BLL, (int64_t)0xFFFFFFFF1BB3E631LL, (int64_t)0x82496F6BLL, (int64_t)0xCCFB1F07LL, (int64_t)0x8A891ECBLL, (int64_t)0x92277953LL };
		static const int64_t output0[] = { (int64_t)0x133899724LL, (int64_t)0xFFFFFFFEDFDB95DDLL, (int64_t)0x25AED7B0LL, (int64_t)0x31AD0330LL, (int64_t)0xFFFFFFFFDEFD8F07LL, (int64_t)0x70246EECLL, (int64_t)0x93C4EFD8LL, (int64_t)0xFFFFFFFFE16395C3LL, (int64_t)0xD0DBB6ACLL, (int64_t)0x7FF50354LL, (int64_t)0xD566518LL, (int64_t)0x116A96E50LL, (int64_t)0x49856168LL, (int64_t)0x15C4A3788LL, (int64_t)0xFFFFFFFEB53FDAB1LL, (int64_t)0xFFFFFFFFB52E0FF3LL, (int64_t)0xFFFFFFFEE3057F55LL, (int64_t)0x7B45069CLL, (int64_t)0x54054160LL, (int64_t)0x11CE21E90LL, (int64_t)0xFFFFFFFEA96E40B5LL, (int64_t)0xF2A14EB4LL, (int64_t)0x1235DB1B4LL, (int64_t)0x5B24307CLL, (int64_t)0xF93CDDF0LL, (int64_t)0x94E78128LL, (int64_t)0x63E68ACCLL, (int64_t)0x57178084LL, (int64_t)0xFFFFFFFF4C11C20BLL, (int64_t)0xFFFFFFFF9B7D8B43LL, (int64_t)0xFFFFFFFF43F24097LL, (int64_t)0x4FFDE7D0LL, (int64_t)0xFFFFFFFFC6130CD3LL, (int64_t)0xFFFFFFFEB69D9295LL, (int64_t)0xFFFFFFFFEF336EABLL, (int64_t)0xFFFFFFFF7D32B917LL, (int64_t)0x3BBDBC30LL, (int64_t)0xFFFFFFFEEF2E2151LL, (int64_t)0xFFFFFFFFCE23A35BLL, (int64_t)0xEBF17B78LL, (int64_t)0xFFFFFFFF40A7ADFBLL, (int64_t)0xFFFFFFFEB2D0DCDDLL, (int64_t)0xFFFFFFFFE9589257LL, (int64_t)0xFFFFFFFFAF80999BLL, (int64_t)0x5231AFACLL, (int64_t)0x1498085CLL, (int64_t)0x7750333CLL, (int64_t)0xFFFFFFFFA48E4BC7LL, (int64_t)0xFFFFFFFF80978AABLL, (int64_t)0x4682CB04LL, (int64_t)0xFFFFFFFFCC8968DBLL, (int64_t)0xFFFFFFFF8180299BLL, (int64_t)0xA3CE1310LL, (int64_t)0x46931DA0LL, (int64_t)0xFFFFFFFF82282F1BLL, (int64_t)0xFFFFFFFEECCB14E9LL, (int64_t)0xFFFFFFFF0E232785LL, (int64_t)0xEC965F00LL, (int64_t)0x5FE76FB4LL, (int64_t)0x53EDACB8LL, (int64_t)0xFFFFFFFEB9E689EDLL, (int64_t)0xFFFFFFFF17ACDF69LL, (int64_t)0xFFFFFFFF81E6F6AFLL, (int64_t)0x1C740108LL, (int64_t)0x266E4F0CLL, (int64_t)0xD70CAB64LL, (int64_t)0x1C4A9D48LL, (int64_t)0x3EE1561CLL, (int64_t)0xB26AB60LL, (int64_t)0x8E4857E8LL, (int64_t)0x8059A8D4LL, (int64_t)0x15C5790F0LL, (int64_t)0xFFFFFFFFA6481FEFLL, (int64_t)0x8DB7E91CLL, (int64_t)0x9D5D2C1CLL, (int64_t)0x16F8DD508LL, (int64_t)0xFFFFFFFFE67C0E3BLL, (int64_t)0x380930E0LL, (int64_t)0xFFFFFFFEAFCA628DLL, (int64_t)0xFFFFFFFFBE66A673LL, (int64_t)0xFFFFFFFEE15BBAB5LL, (int64_t)0xFFFFFFFFBA07344FLL, (int64_t)0xFFFFFFFFCF579AEBLL, (int64_t)0x14EC334CLL, (int64_t)0xF4D0D8C0LL, (int64_t)0xEF196E28LL, (int64_t)0xCA3A90E0LL, (int64_t)0x870FFCC4LL, (int64_t)0x89A2CF14LL, (int64_t)0xFFFFFFFFD01CC923LL, (int64_t)0xFFFFFFFF410C74F7LL, (int64_t)0x72ADBC34LL, (int64_t)0xFFFFFFFFC1AD3B73LL, (int64_t)0x81784A84LL, (int64_t)0xDA33A5FCLL, (int64_t)0xFFFFFFFEE612A97DLL, (int64_t)0x88B09C0CLL, (int64_t)0xEDB07B44LL, (int64_t)0x92621F88LL, (int64_t)0x9B8CF704LL };
		for (int ndx = 0; ndx < 100; ndx++)
			Util::Check("Fixed64::Asin", Fixed64::Asin(input0[ndx]), output0[ndx], input0[ndx]);
	}

	// Fixed64.AsinFast()
	static void Fixed64_AsinFast()
	{
		static const int64_t input0[] = { (int64_t)0xF85677ABLL, (int64_t)0xFFFFFFFF34CA6465LL, (int64_t)0x9B573013LL, (int64_t)0xFFFFFFFFFEB79E0ELL, (int64_t)0xCA95235FLL, (int64_t)0xFFFFFFFFD282E576LL, (int64_t)0xDE7AA0B3LL, (int64_t)0xFFFFFFFF12438FCDLL, (int64_t)0xB20B7ADFLL, (int64_t)0xFFFFFFFF897EB172LL, (int64_t)0x384B7F56LL, (int64_t)0xFFFFFFFFF8F4F556LL, (int64_t)0xC3E1412FLL, (int64_t)0xFFFFFFFF9E8F595ELL, (int64_t)0x38D317CELL, (int64_t)0x504F44A6LL, (int64_t)0x66A49646LL, (int64_t)0x720A579ELL, (int64_t)0x4B397846LL, (int64_t)0x5876D84ELL, (int64_t)0xFFFFFFFF08CADD35LL, (int64_t)0x9B59BF73LL, (int64_t)0xBB26440FLL, (int64_t)0xFFFFFFFF3AC19C75LL, (int64_t)0x34CCE6DALL, (int64_t)0xFFFFFFFF0C289F41LL, (int64_t)0x3814B3E6LL, (int64_t)0x2C1612C2LL, (int64_t)0xC5DD99FFLL, (int64_t)0x77EFC092LL, (int64_t)0xFFFFFFFF7B61EF8DLL, (int64_t)0x198BBE62LL, (int64_t)0xAD0DCA93LL, (int64_t)0xFFFFFFFF7648E82DLL, (int64_t)0xFFFFFFFFC6C75C86LL, (int64_t)0xE4D15D07LL, (int64_t)0x1F8E3916LL, (int64_t)0xD0EADA5FLL, (int64_t)0x4A5119EELL, (int64_t)0xFFFFFFFFFEA8A67ELL, (int64_t)0xEF57ECBBLL, (int64_t)0xA3942083LL, (int64_t)0xCED6A72BLL, (int64_t)0xFFFFFFFFF99B002ALL, (int64_t)0x9818A887LL, (int64_t)0x594FF6E2LL, (int64_t)0xAB0068DBLL, (int64_t)0xFFFFFFFF23BB04B1LL, (int64_t)0xFFFFFFFF43323EEDLL, (int64_t)0xFFFFFFFF706A2D75LL, (int64_t)0xFFFFFFFFB50F4FEALL, (int64_t)0xFFFFFFFF103F17CDLL, (int64_t)0xFFFFFFFF81C1A6C2LL, (int64_t)0xFFFFFFFF3212467DLL, (int64_t)0x895C9C1FLL, (int64_t)0xFFFFFFFF5CFCB839LL, (int64_t)0xFFFFFFFF79A42055LL, (int64_t)0x6095939ELL, (int64_t)0xC9EAB733LL, (int64_t)0xBE6C841FLL, (int64_t)0x9A6E318FLL, (int64_t)0xFFFFFFFFB2648DF2LL, (int64_t)0xFFFFFFFF4C65F5CDLL, (int64_t)0xFFFFFFFF3A1BBA4DLL, (int64_t)0xFFFFFFFF0E1CC1E5LL, (int64_t)0xFFFFFFFF1EBFC0F5LL, (int64_t)0x4BE72AC2LL, (int64_t)0x4D985902LL, (int64_t)0xD7C7FCD7LL, (int64_t)0x5401BAC6LL, (int64_t)0xFFFFFFFF30C10B91LL, (int64_t)0x95B9BBE7LL, (int64_t)0xFFFFFFFF27B93DB1LL, (int64_t)0xFFFFFFFF4C90D1C9LL, (int64_t)0x691EEB92LL, (int64_t)0xFFFFFFFF6536BCB1LL, (int64_t)0xCC831847LL, (int64_t)0xFFFFFFFFC18B43E6LL, (int64_t)0xFFFFFFFFA2A8F3EELL, (int64_t)0xDB7CEFF7LL, (int64_t)0xFFFFFFFF61283665LL, (int64_t)0x1459AF36LL, (int64_t)0xFFFFFFFFE8E3D3D6LL, (int64_t)0x55736C8ALL, (int64_t)0xFFFFFFFFC2E070AALL, (int64_t)0xFFFFFFFF6B22D7C1LL, (int64_t)0xFFFFFFFF97CA17A2LL, (int64_t)0x7AFB8416LL, (int64_t)0xFFFFFFFFECEC4C0ELL, (int64_t)0xFFFFFFFF69CAA44DLL, (int64_t)0x6B2D3CB2LL, (int64_t)0xBEF8A577LL, (int64_t)0xFFFFFFFF0700232DLL, (int64_t)0x8BE495CFLL, (int64_t)0x643A74EELL, (int64_t)0x3CF35ECALL, (int64_t)0x572E2AB6LL, (int64_t)0x94BAECDFLL, (int64_t)0xFFFFFFFFEB7E3E46LL, (int64_t)0x7958E792LL };
		static const int64_t output0[] = { (int64_t)0x153550484LL, (int64_t)0xFFFFFFFF153E7245LL, (int64_t)0xA6EAA450LL, (int64_t)0xFFFFFFFFFEB79D93LL, (int64_t)0xE9BA7034LL, (int64_t)0xFFFFFFFFD244FD73LL, (int64_t)0x10DA48A78LL, (int64_t)0xFFFFFFFECF2967A1LL, (int64_t)0xC4E42DF8LL, (int64_t)0xFFFFFFFF84CAA0AFLL, (int64_t)0x38C1FC84LL, (int64_t)0xFFFFFFFFF8F4BD13LL, (int64_t)0xDF0CE47CLL, (int64_t)0xFFFFFFFF9C09A2D7LL, (int64_t)0x394D0510LL, (int64_t)0x51B04F7CLL, (int64_t)0x699D7A8CLL, (int64_t)0x763277D8LL, (int64_t)0x4C59C940LL, (int64_t)0x5A53DAA0LL, (int64_t)0xFFFFFFFEB129E149LL, (int64_t)0xA6EDDCE8LL, (int64_t)0xD1E21FC0LL, (int64_t)0xFFFFFFFF1ED21429LL, (int64_t)0x352E56F4LL, (int64_t)0xFFFFFFFEBD1775CDLL, (int64_t)0x3889D244LL, (int64_t)0x2C4E5EB4LL, (int64_t)0xE2284708LL, (int64_t)0x7CD36C8CLL, (int64_t)0xFFFFFFFF74981B1BLL, (int64_t)0x19969AFCLL, (int64_t)0xBE087198LL, (int64_t)0xFFFFFFFF6E979657LL, (int64_t)0xFFFFFFFFC64AD0FFLL, (int64_t)0x11B1538F0LL, (int64_t)0x1FA2B628LL, (int64_t)0xF460C884LL, (int64_t)0x4B66CF50LL, (int64_t)0xFFFFFFFFFEA8A5F3LL, (int64_t)0x135446E34LL, (int64_t)0xB173581CLL, (int64_t)0xF0D0F274LL, (int64_t)0xFFFFFFFFF99AD633LL, (int64_t)0xA2DBF8A4LL, (int64_t)0x5B3B62C0LL, (int64_t)0xBB42DDC4LL, (int64_t)0xFFFFFFFEF6C157B9LL, (int64_t)0xFFFFFFFF2BADD9C9LL, (int64_t)0xFFFFFFFF67913ACFLL, (int64_t)0xFFFFFFFFB3F2592BLL, (int64_t)0xFFFFFFFEC99218F9LL, (int64_t)0xFFFFFFFF7BFB416BLL, (int64_t)0xFFFFFFFF10B8AD89LL, (int64_t)0x90FD2580LL, (int64_t)0xFFFFFFFF4F48C5FFLL, (int64_t)0xFFFFFFFF728DB9D3LL, (int64_t)0x63099F4CLL, (int64_t)0xE8A47D4CLL, (int64_t)0xD6BBB098LL, (int64_t)0xA5C5FE70LL, (int64_t)0xFFFFFFFFB1270CB3LL, (int64_t)0xFFFFFFFF38EEEBFBLL, (int64_t)0xFFFFFFFF1DCD3535LL, (int64_t)0xFFFFFFFEC3463A81LL, (int64_t)0xFFFFFFFEECA42AC9LL, (int64_t)0x4D0F9864LL, (int64_t)0x4ED5B308LL, (int64_t)0x100AD4C10LL, (int64_t)0x5597C4D4LL, (int64_t)0xFFFFFFFF0E7DBC4DLL, (int64_t)0x9FEC9C10LL, (int64_t)0xFFFFFFFEFE6664B5LL, (int64_t)0xFFFFFFFF392B06E7LL, (int64_t)0x6C5391F8LL, (int64_t)0xFFFFFFFF59C7BD17LL, (int64_t)0xECE8D210LL, (int64_t)0xFFFFFFFFC0E8866BLL, (int64_t)0xFFFFFFFFA074C72FLL, (int64_t)0x107B81A98LL, (int64_t)0xFFFFFFFF54A5AF67LL, (int64_t)0x145F28A4LL, (int64_t)0xFFFFFFFFE8DBCB77LL, (int64_t)0x571F9718LL, (int64_t)0xFFFFFFFFC24816F3LL, (int64_t)0xFFFFFFFF6122EACBLL, (int64_t)0xFFFFFFFF94ABC627LL, (int64_t)0x804924E4LL, (int64_t)0xFFFFFFFFECE7CAFBLL, (int64_t)0xFFFFFFFF5F7ADABFLL, (int64_t)0x6E95FD80LL, (int64_t)0xD78DCBDCLL, (int64_t)0xFFFFFFFEA9E1A825LL, (int64_t)0x93FFCD78LL, (int64_t)0x66FC3460LL, (int64_t)0x3D8A6910LL, (int64_t)0x58F5EB08LL, (int64_t)0x9EB30428LL, (int64_t)0xFFFFFFFFEB78A413LL, (int64_t)0x7E6CD9C4LL };
		for (int ndx = 0; ndx < 100; ndx++)
			Util::Check("Fixed64::AsinFast", Fixed64::AsinFast(input0[ndx]), output0[ndx], input0[ndx]);
	}

	// Fixed64.AsinFastest()
	static void Fixed64_AsinFastest()
	{
		static const int64_t input0[] = { (int64_t)0xFFFFFFFF0D68CC21LL, (int64_t)0xFFFFFFFF5D680FD9LL, (int64_t)0xFFFFFFFF4BF307D9LL, (int64_t)0xFFFFFFFFEF308426LL, (int64_t)0xFFFFFFFF3FA921E5LL, (int64_t)0x1F559402LL, (int64_t)0xE885DA1BLL, (int64_t)0xFFFFFFFF3530D4F9LL, (int64_t)0xFFFFFFFFC8F35AEALL, (int64_t)0x2425DF6ELL, (int64_t)0xFFFFFFFF90799FF2LL, (int64_t)0xB818DC6FLL, (int64_t)0xFFFFFFFFBDEC9FB2LL, (int64_t)0xEE6DC73BLL, (int64_t)0x5D444DBALL, (int64_t)0xFFFFFFFF8614825ALL, (int64_t)0xC980BA1BLL, (int64_t)0xFFFFFFFFF6F28942LL, (int64_t)0x773B49A2LL, (int64_t)0xA2F9EA23LL, (int64_t)0x86F5A953LL, (int64_t)0xD0EBA6ABLL, (int64_t)0xFFFFFFFF60AC0CF5LL, (int64_t)0x6DFD588ALL, (int64_t)0xE8D47E13LL, (int64_t)0xFFFFFFFF71C86619LL, (int64_t)0x8EB998BBLL, (int64_t)0xFFFFFFFF9BD4A7E2LL, (int64_t)0xFFFFFFFFE8565CDALL, (int64_t)0xFFFFFFFF2C2B8CC9LL, (int64_t)0xE0891FALL, (int64_t)0xFFFFFFFF37C82B69LL, (int64_t)0xD60D059FLL, (int64_t)0x29500C5ALL, (int64_t)0xCE1423D7LL, (int64_t)0xFFFFFFFF03C0268DLL, (int64_t)0xFFFFFFFFC866A75ELL, (int64_t)0xF9B34FAFLL, (int64_t)0x15CA4AA6LL, (int64_t)0xA38ADCA7LL, (int64_t)0xFFFFFFFF829CFDA6LL, (int64_t)0xFFFFFFFF629942A9LL, (int64_t)0xFFFFFFFFB208292ELL, (int64_t)0xC8C66C9FLL, (int64_t)0xD951045BLL, (int64_t)0xB3146043LL, (int64_t)0x10C05C6LL, (int64_t)0xFFFFFFFF18925BF1LL, (int64_t)0xFFFFFFFF2EA04815LL, (int64_t)0xFFFFFFFFDE25F296LL, (int64_t)0x7372A4AELL, (int64_t)0xFFFFFFFF603BA175LL, (int64_t)0xFFFFFFFF1D7FA33DLL, (int64_t)0x48845422LL, (int64_t)0xF2633E3FLL, (int64_t)0xFFFFFFFF3C7D2575LL, (int64_t)0xFCBC02E3LL, (int64_t)0xFFFFFFFFDDF5AF4ELL, (int64_t)0x65C0612LL, (int64_t)0xCDE0BBCBLL, (int64_t)0x909BFB47LL, (int64_t)0x4CB1323ALL, (int64_t)0x4CDA781ELL, (int64_t)0xFFFFFFFF9CC7CE22LL, (int64_t)0xFFFFFFFF161D4D75LL, (int64_t)0xFFFFFFFF58B17489LL, (int64_t)0xE20BD6CFLL, (int64_t)0x949C9357LL, (int64_t)0xFFFFFFFF2059A365LL, (int64_t)0x5984272ELL, (int64_t)0xBDADDAFBLL, (int64_t)0xCFCD6A6BLL, (int64_t)0xE1283E9BLL, (int64_t)0xD3B06CFBLL, (int64_t)0x205CEC7ELL, (int64_t)0x245C66AALL, (int64_t)0x1EE37D7ELL, (int64_t)0xFFFFFFFF97E5A056LL, (int64_t)0x94AC542FLL, (int64_t)0xFFFFFFFF35C01DD1LL, (int64_t)0x70BC6052LL, (int64_t)0x76273CCALL, (int64_t)0xFFFFFFFF6D345FCDLL, (int64_t)0xFFFFFFFF0A306A45LL, (int64_t)0xFFFFFFFFB8B8E81ALL, (int64_t)0xFFFFFFFFADCCF086LL, (int64_t)0xFFFFFFFF1A48882DLL, (int64_t)0xFFFFFFFF8D88B17ELL, (int64_t)0x36ECCE1ALL, (int64_t)0x9196FE63LL, (int64_t)0xFFFFFFFF070423A9LL, (int64_t)0xEA70F80FLL, (int64_t)0xFFFFFFFFF357499ELL, (int64_t)0x47E98EDALL, (int64_t)0xFFFFFFFF12EEE161LL, (int64_t)0x35EBCB6ALL, (int64_t)0x15BECA8ALL, (int64_t)0xFFFFFFFF15405B0DLL, (int64_t)0xB2A91F2BLL, (int64_t)0x809F8FD3LL };
		static const int64_t output0[] = { (int64_t)0xFFFFFFFEC10E07C5LL, (int64_t)0xFFFFFFFF4FD45953LL, (int64_t)0xFFFFFFFF385A4507LL, (int64_t)0xFFFFFFFFEF2CF523LL, (int64_t)0xFFFFFFFF2651BDA1LL, (int64_t)0x1F682E8CLL, (int64_t)0x1239D9FF4LL, (int64_t)0xFFFFFFFF15F35B81LL, (int64_t)0xFFFFFFFFC88C8E0FLL, (int64_t)0x24423200LL, (int64_t)0xFFFFFFFF8C968957LL, (int64_t)0xCD889CA0LL, (int64_t)0xFFFFFFFFBD358753LL, (int64_t)0x132C32E44LL, (int64_t)0x5F6FBC38LL, (int64_t)0xFFFFFFFF80DFEB47LL, (int64_t)0xE7EEAA70LL, (int64_t)0xFFFFFFFFF6F17DEFLL, (int64_t)0x7C11DE6CLL, (int64_t)0xB0A9EE08LL, (int64_t)0x8E3B6758LL, (int64_t)0xF44C5FCCLL, (int64_t)0xFFFFFFFF5401F957LL, (int64_t)0x71B451BCLL, (int64_t)0x1245AE96CLL, (int64_t)0xFFFFFFFF692246EBLL, (int64_t)0x977A1254LL, (int64_t)0xFFFFFFFF9917ECB7LL, (int64_t)0xFFFFFFFFE84DE6C3LL, (int64_t)0xFFFFFFFF069961B9LL, (int64_t)0xE0AF16CLL, (int64_t)0xFFFFFFFF1A207509LL, (int64_t)0xFD67870CLL, (int64_t)0x297A619CLL, (int64_t)0xEF753EF8LL, (int64_t)0xFFFFFFFE99B9B3E5LL, (int64_t)0xFFFFFFFFC7FC990BLL, (int64_t)0x1593FA8A0LL, (int64_t)0x15D11600LL, (int64_t)0xB1651DBCLL, (int64_t)0xFFFFFFFF7CE7D8D3LL, (int64_t)0xFFFFFFFF5672BEAFLL, (int64_t)0xFFFFFFFFB0D113EBLL, (int64_t)0xE6C36194LL, (int64_t)0x10379AA04LL, (int64_t)0xC646BEB4LL, (int64_t)0x10C1CF4LL, (int64_t)0xFFFFFFFEDEFB2CD5LL, (int64_t)0xFFFFFFFF0AEAA789LL, (int64_t)0xFFFFFFFFDE0EA0EFLL, (int64_t)0x77CCFB08LL, (int64_t)0xFFFFFFFF5372EE33LL, (int64_t)0xFFFFFFFEEA071EB9LL, (int64_t)0x497ACA80LL, (int64_t)0x13E501810LL, (int64_t)0xFFFFFFFF217E4FFDLL, (int64_t)0x16935071CLL, (int64_t)0xFFFFFFFFDDDDFB27LL, (int64_t)0x65CA594LL, (int64_t)0xEF1EFB70LL, (int64_t)0x99C04844LL, (int64_t)0x4DD830F8LL, (int64_t)0x4E0376C0LL, (int64_t)0xFFFFFFFF9A207EEBLL, (int64_t)0xFFFFFFFED9113389LL, (int64_t)0xFFFFFFFF49B2A58FLL, (int64_t)0x114FF64ACLL, (int64_t)0x9E9FE9ECLL, (int64_t)0xFFFFFFFEF006EB6DLL, (int64_t)0x5B6A4960LL, (int64_t)0xD5B49B60LL, (int64_t)0xF260AE90LL, (int64_t)0x1131D07ECLL, (int64_t)0xF92682D4LL, (int64_t)0x20715C84LL, (int64_t)0x2479394CLL, (int64_t)0x1EF55678LL, (int64_t)0xFFFFFFFF94CB1583LL, (int64_t)0x9EB33790LL, (int64_t)0xFFFFFFFF16DC4FB5LL, (int64_t)0x74C3433CLL, (int64_t)0x7AD976A8LL, (int64_t)0xFFFFFFFF639824F3LL, (int64_t)0xFFFFFFFEB64B962DLL, (int64_t)0xFFFFFFFFB7CFAF07LL, (int64_t)0xFFFFFFFFAC5C0E4FLL, (int64_t)0xFFFFFFFEE2EE4F85LL, (int64_t)0xFFFFFFFF894D18AFLL, (int64_t)0x3752E0E8LL, (int64_t)0x9AF087B4LL, (int64_t)0xFFFFFFFEA9E7C5C9LL, (int64_t)0x1285063B0LL, (int64_t)0xFFFFFFFFF3555F03LL, (int64_t)0x48D97F18LL, (int64_t)0xFFFFFFFED0EB25A1LL, (int64_t)0x364C226CLL, (int64_t)0x15C58C80LL, (int64_t)0xFFFFFFFED6EA3131LL, (int64_t)0xC5B0143CLL, (int64_t)0x86D47184LL };
		for (int ndx = 0; ndx < 100; ndx++)
			Util::Check("Fixed64::AsinFastest", Fixed64::AsinFastest(input0[ndx]), output0[ndx], input0[ndx]);
	}

	// Fixed32.Asin()
	static void Fixed32_Asin()
	{
		static const int32_t input0[] = { (int32_t)0xD108, (int32_t)0x6C6F, (int32_t)0xF838, (int32_t)0xFFFFD51D, (int32_t)0x2078, (int32_t)0xA3A5, (int32_t)0xFFFF7F14, (int32_t)0xFFFF49D0, (int32_t)0xFFFF2828, (int32_t)0xFFFFCE07, (int32_t)0x1D99, (int32_t)0x64D6, (int32_t)0x4949, (int32_t)0xFFFFD09C, (int32_t)0xFFFF5D25, (int32_t)0xFFFF1A75, (int32_t)0xFFFFDF7D, (int32_t)0x42AA, (int32_t)0xE40E, (int32_t)0x6850, (int32_t)0xFFFF3E69, (int32_t)0x5483, (int32_t)0xFFFF5DB0, (int32_t)0xFFFF8EC3, (int32_t)0x5280, (int32_t)0xD33C, (int32_t)0xFFFFDC77, (int32_t)0xFFFF993F, (int32_t)0xC0C1, (int32_t)0xEA71, (int32_t)0xFFFF0E9E, (int32_t)0x9A3, (int32_t)0xFFFFE53D, (int32_t)0xFFFF140D, (int32_t)0xFFFF64B8, (int32_t)0xFFFF044D, (int32_t)0x7DEE, (int32_t)0x9818, (int32_t)0xFFFFE9B9, (int32_t)0x1513, (int32_t)0xFFFF2EBA, (int32_t)0xD079, (int32_t)0xFFFF6562, (int32_t)0xFFFF68E6, (int32_t)0xFFFF73FE, (int32_t)0xFFFFA22E, (int32_t)0xFFFFA128, (int32_t)0xFFFF22BC, (int32_t)0xFFFFEAC6, (int32_t)0xF87A, (int32_t)0xFFFF566F, (int32_t)0xD314, (int32_t)0xFFFF3132, (int32_t)0xFFFF4A59, (int32_t)0x4236, (int32_t)0xFFFF7C86, (int32_t)0xEBF, (int32_t)0x6976, (int32_t)0x829C, (int32_t)0x4D3B, (int32_t)0xFFFFC730, (int32_t)0xE5D4, (int32_t)0xFFFF890E, (int32_t)0xFFFF3DB7, (int32_t)0xFFFFBF6A, (int32_t)0xFFFF13F7, (int32_t)0xFFFF7F9A, (int32_t)0x353C, (int32_t)0xFFFF6BE5, (int32_t)0xFFFF58D8, (int32_t)0xFFFF9C87, (int32_t)0x4764, (int32_t)0xFFFF58F2, (int32_t)0xFFFFCEFC, (int32_t)0x3996, (int32_t)0xFFFF6DF0, (int32_t)0xFFFFEF22, (int32_t)0xF4C9, (int32_t)0xFFFF1AC6, (int32_t)0xFFFFB053, (int32_t)0x3215, (int32_t)0xFFFFB9BB, (int32_t)0xAE79, (int32_t)0xC847, (int32_t)0x9402, (int32_t)0xFFFF3B89, (int32_t)0xFFFFD872, (int32_t)0xFFFF9AE4, (int32_t)0xFFFFD1D7, (int32_t)0xE832, (int32_t)0xFFFFF58E, (int32_t)0xFFFF1479, (int32_t)0xFFFF157D, (int32_t)0x9C7D, (int32_t)0xFFFF4DE5, (int32_t)0xFFFF48E5, (int32_t)0x476B, (int32_t)0xFFFF27AC, (int32_t)0xA97C, (int32_t)0xFFFF6007 };
		static const int32_t output0[] = { (int32_t)0xF493, (int32_t)0x6FF8, (int32_t)0x152D8, (int32_t)0xFFFFD4E8, (int32_t)0x208E, (int32_t)0xB189, (int32_t)0xFFFF78E4, (int32_t)0xFFFF3547, (int32_t)0xFFFEFF35, (int32_t)0xFFFFCDB4, (int32_t)0x1DA9, (int32_t)0x67A4, (int32_t)0x4A53, (int32_t)0xFFFFD055, (int32_t)0xFFFF4F7C, (int32_t)0xFFFEE34A, (int32_t)0xFFFFDF66, (int32_t)0x4371, (int32_t)0x11964, (int32_t)0x6B70, (int32_t)0xFFFF247A, (int32_t)0x5620, (int32_t)0xFFFF5030, (int32_t)0xFFFF8AB3, (int32_t)0x53FF, (int32_t)0xF86E, (int32_t)0xFFFFDC59, (int32_t)0xFFFF9643, (int32_t)0xDA3F, (int32_t)0x1284F, (int32_t)0xFFFEC4CD, (int32_t)0x9A3, (int32_t)0xFFFFE530, (int32_t)0xFFFED3DE, (int32_t)0xFFFF5927, (int32_t)0xFFFE9CDE, (int32_t)0x83A8, (int32_t)0xA2DB, (int32_t)0xFFFFE9B1, (int32_t)0x1519, (int32_t)0xFFFF0B01, (int32_t)0xF39C, (int32_t)0xFFFF59FD, (int32_t)0xFFFF5E5F, (int32_t)0xFFFF6BDC, (int32_t)0xFFFF9FF0, (int32_t)0xFFFF9ED7, (int32_t)0xFFFEF4C9, (int32_t)0xFFFFEABF, (int32_t)0x153E8, (int32_t)0xFFFF46A9, (int32_t)0xF827, (int32_t)0xFFFF0F3D, (int32_t)0xFFFF360A, (int32_t)0x42F8, (int32_t)0xFFFF75ED, (int32_t)0xEC1, (int32_t)0x6CB2, (int32_t)0x8910, (int32_t)0x4E73, (int32_t)0xFFFFC6B5, (int32_t)0x11D5B, (int32_t)0xFFFF844B, (int32_t)0xFFFF236A, (int32_t)0xFFFFBEB5, (int32_t)0xFFFED3A6, (int32_t)0xFFFF797F, (int32_t)0x35A0, (int32_t)0xFFFF6210, (int32_t)0xFFFF49DC, (int32_t)0xFFFF99D6, (int32_t)0x4859, (int32_t)0xFFFF49FE, (int32_t)0xFFFFCEAE, (int32_t)0x3A15, (int32_t)0xFFFF648F, (int32_t)0xFFFFEF1E, (int32_t)0x14611, (int32_t)0xFFFEE400, (int32_t)0xFFFFAEFA, (int32_t)0x3268, (int32_t)0xFFFFB8D1, (int32_t)0xBFF6, (int32_t)0xE5FD, (int32_t)0x9DD0, (int32_t)0xFFFF200A, (int32_t)0xFFFFD849, (int32_t)0xFFFF980E, (int32_t)0xFFFFD196, (int32_t)0x122D9, (int32_t)0xFFFFF58D, (int32_t)0xFFFED4F3, (int32_t)0xFFFED783, (int32_t)0xA85D, (int32_t)0xFFFF3B06, (int32_t)0xFFFF33F8, (int32_t)0x4860, (int32_t)0xFFFEFE4D, (int32_t)0xB93A, (int32_t)0xFFFF5333 };
		for (int ndx = 0; ndx < 100; ndx++)
			Util::Check("Fixed32::Asin", Fixed32::Asin(input0[ndx]), output0[ndx], input0[ndx]);
	}

	// Fixed32.AsinFast()
	static void Fixed32_AsinFast()
	{
		static const int32_t input0[] = { (int32_t)0xFFFF2294, (int32_t)0x6BEB, (int32_t)0xB6D7, (int32_t)0xFFFF91EE, (int32_t)0x5BF3, (int32_t)0xF0A, (int32_t)0x7A23, (int32_t)0x6236, (int32_t)0x10C1, (int32_t)0xFFFFD448, (int32_t)0x8D63, (int32_t)0x19F5, (int32_t)0x4EB0, (int32_t)0xFFFFD24A, (int32_t)0xFFFF1B26, (int32_t)0xFFFF0D75, (int32_t)0xFFFF375C, (int32_t)0xFFFFC0C7, (int32_t)0xFFFFA9B5, (int32_t)0xFFFF83E1, (int32_t)0x3B84, (int32_t)0xE4B6, (int32_t)0xFFFF6367, (int32_t)0xFFFF83B3, (int32_t)0x634A, (int32_t)0xFFFF880E, (int32_t)0x31E8, (int32_t)0xFFFFBC75, (int32_t)0xFFFF8117, (int32_t)0xFFFFF0B2, (int32_t)0x2683, (int32_t)0xFFFFC777, (int32_t)0xFFFF4B4E, (int32_t)0xBABE, (int32_t)0xFFFF8DBF, (int32_t)0xC62A, (int32_t)0x2E3, (int32_t)0x1C8B, (int32_t)0xFFFF6C54, (int32_t)0xFFFF84F8, (int32_t)0xFFFFC166, (int32_t)0x763B, (int32_t)0x8A21, (int32_t)0xFD8F, (int32_t)0xFFFF5ACF, (int32_t)0xDB97, (int32_t)0xFFFFC5C8, (int32_t)0x4332, (int32_t)0x8157, (int32_t)0xFFFF4071, (int32_t)0xFFFF118A, (int32_t)0xFFFF86A6, (int32_t)0x7DF6, (int32_t)0x259C, (int32_t)0x2481, (int32_t)0xFFFF3DDE, (int32_t)0x884, (int32_t)0x3324, (int32_t)0x2EA3, (int32_t)0xFFFFD3E7, (int32_t)0xDD21, (int32_t)0xFFFFBDAF, (int32_t)0xFFFFE120, (int32_t)0xFFFF2010, (int32_t)0xADC3, (int32_t)0xFFFFC5ED, (int32_t)0xFFFFCEA9, (int32_t)0x93F2, (int32_t)0xFFFF448C, (int32_t)0xFFFF54FC, (int32_t)0xA90, (int32_t)0x1ACF, (int32_t)0xFFFF5473, (int32_t)0xFFFF24BD, (int32_t)0xC27A, (int32_t)0xC549, (int32_t)0xFFFF5A95, (int32_t)0xFFFF65D8, (int32_t)0xFFFF28E4, (int32_t)0x87B2, (int32_t)0xC246, (int32_t)0xEEB6, (int32_t)0x3B1D, (int32_t)0xFFFF40A7, (int32_t)0xFFFFDF29, (int32_t)0xFFFF9FDF, (int32_t)0x497F, (int32_t)0x25B0, (int32_t)0xFFFF963D, (int32_t)0xFFFF4FE1, (int32_t)0xFFFFBDA6, (int32_t)0xCFBE, (int32_t)0xEDE8, (int32_t)0x986D, (int32_t)0xFFFFA7D6, (int32_t)0xFFFF03B8, (int32_t)0xFFFF951C, (int32_t)0x6A11, (int32_t)0xFFFF4FCD, (int32_t)0x94E1 };
		static const int32_t output0[] = { (int32_t)0xFFFEF47A, (int32_t)0x6F67, (int32_t)0xCBA5, (int32_t)0xFFFF8E37, (int32_t)0x5E0D, (int32_t)0xF0C, (int32_t)0x7F52, (int32_t)0x64CB, (int32_t)0x10C4, (int32_t)0xFFFFD411, (int32_t)0x95C9, (int32_t)0x1A00, (int32_t)0x4FFB, (int32_t)0xFFFFD20B, (int32_t)0xFFFEE4D7, (int32_t)0xFFFEC13F, (int32_t)0xFFFF196C, (int32_t)0xFFFFC01E, (int32_t)0xFFFFA7FB, (int32_t)0xFFFF7E6A, (int32_t)0x3C10, (int32_t)0x11AD8, (int32_t)0xFFFF577F, (int32_t)0xFFFF7E35, (int32_t)0x65F7, (int32_t)0xFFFF832A, (int32_t)0x323A, (int32_t)0xFFFFBBA6, (int32_t)0xFFFF7B36, (int32_t)0xFFFFF0AF, (int32_t)0x26A8, (int32_t)0xFFFFC6FE, (int32_t)0xFFFF3764, (int32_t)0xD149, (int32_t)0xFFFF8990, (int32_t)0xE2A0, (int32_t)0x2E3, (int32_t)0x1C9A, (int32_t)0xFFFF6299, (int32_t)0xFFFF7FA8, (int32_t)0xFFFFC0C2, (int32_t)0x7AE6, (int32_t)0x91E6, (int32_t)0x16EBD, (int32_t)0xFFFF4C71, (int32_t)0x107EA, (int32_t)0xFFFFC544, (int32_t)0x43FD, (int32_t)0x8797, (int32_t)0xFFFF278F, (int32_t)0xFFFECD30, (int32_t)0xFFFF8191, (int32_t)0x83B1, (int32_t)0x25BE, (int32_t)0x24A0, (int32_t)0xFFFF23A5, (int32_t)0x884, (int32_t)0x337C, (int32_t)0x2EE5, (int32_t)0xFFFFD3AE, (int32_t)0x10AF0, (int32_t)0xFFFFBCEB, (int32_t)0xFFFFE10C, (int32_t)0xFFFEEF60, (int32_t)0xBEFE, (int32_t)0xFFFFC56A, (int32_t)0xFFFFCE59, (int32_t)0x9DBC, (int32_t)0xFFFF2DAB, (int32_t)0xFFFF44B8, (int32_t)0xA90, (int32_t)0x1ADB, (int32_t)0xFFFF43FF, (int32_t)0xFFFEF8B8, (int32_t)0xDCE1, (int32_t)0xE13E, (int32_t)0xFFFF4C25, (int32_t)0xFFFF5A91, (int32_t)0xFFFF0091, (int32_t)0x8F04, (int32_t)0xDC91, (int32_t)0x13380, (int32_t)0x3BA6, (int32_t)0xFFFF27E1, (int32_t)0xFFFFDF11, (int32_t)0xFFFF9D74, (int32_t)0x4A8B, (int32_t)0x25D3, (int32_t)0xFFFF92F8, (int32_t)0xFFFF3DC5, (int32_t)0xFFFFBCE2, (int32_t)0xF25B, (int32_t)0x1314C, (int32_t)0xA344, (int32_t)0xFFFFA5FE, (int32_t)0xFFFE9990, (int32_t)0xFFFF91BA, (int32_t)0x6D5D, (int32_t)0xFFFF3DAA, (int32_t)0x9EE1 };
		for (int ndx = 0; ndx < 100; ndx++)
			Util::Check("Fixed32::AsinFast", Fixed32::AsinFast(input0[ndx]), output0[ndx], input0[ndx]);
	}

	// Fixed32.AsinFastest()
	static void Fixed32_AsinFastest()
	{
		static const int32_t input0[] = { (int32_t)0xCEE, (int32_t)0x31D5, (int32_t)0xFFFFFEA7, (int32_t)0x2C5B, (int32_t)0x35DF, (int32_t)0xFFFFF6BB, (int32_t)0xFFFF3233, (int32_t)0x593A, (int32_t)0x6321, (int32_t)0x5F38, (int32_t)0xE349, (int32_t)0xFFFFA2AE, (int32_t)0xA41, (int32_t)0xA6F0, (int32_t)0x11A0, (int32_t)0xEE6B, (int32_t)0x8290, (int32_t)0xFFFFA07A, (int32_t)0x40E7, (int32_t)0xDE4, (int32_t)0x7C6C, (int32_t)0xA8F8, (int32_t)0xFFFFFDB6, (int32_t)0xF4AA, (int32_t)0x9755, (int32_t)0x3AD1, (int32_t)0x2CE7, (int32_t)0xFFFFBC06, (int32_t)0x7CE6, (int32_t)0xBEC3, (int32_t)0x302D, (int32_t)0xFFFFF083, (int32_t)0xFFFF160C, (int32_t)0xFFFF9402, (int32_t)0xFFFF7AC5, (int32_t)0xFFFF9071, (int32_t)0xFFFFF010, (int32_t)0xFFFF0EC2, (int32_t)0xAC6, (int32_t)0xE86E, (int32_t)0xFFFF6DAC, (int32_t)0xF045, (int32_t)0xC28E, (int32_t)0x3703, (int32_t)0xFFFF6C98, (int32_t)0xFFFF1AF9, (int32_t)0xFFFFC57E, (int32_t)0xFFFF46F8, (int32_t)0xFFFF86CE, (int32_t)0xFFFFB96B, (int32_t)0xFFFF8127, (int32_t)0xF4A2, (int32_t)0xFFFF292B, (int32_t)0x41E7, (int32_t)0xFFFF1876, (int32_t)0x63F6, (int32_t)0xFFFF3420, (int32_t)0x9FB, (int32_t)0x9505, (int32_t)0xFB0D, (int32_t)0xC9D2, (int32_t)0x762D, (int32_t)0xDC53, (int32_t)0xA45E, (int32_t)0xFFFF2F0C, (int32_t)0xFFFFF2C7, (int32_t)0xFFFF8CA2, (int32_t)0xFFFF7640, (int32_t)0x2C2C, (int32_t)0xFFFF8130, (int32_t)0xFFFFFE5D, (int32_t)0x73CF, (int32_t)0x95B2, (int32_t)0x5879, (int32_t)0xFFFFA039, (int32_t)0x8C27, (int32_t)0xE669, (int32_t)0xC6B1, (int32_t)0x8813, (int32_t)0x7C5D, (int32_t)0xFFFF7555, (int32_t)0xFFFFE5F1, (int32_t)0xFFFF3539, (int32_t)0xFFFFC37D, (int32_t)0x3D9C, (int32_t)0x3B8A, (int32_t)0xFFFFC759, (int32_t)0xFFFFD424, (int32_t)0xFFFF7B8D, (int32_t)0x16CD, (int32_t)0xFFFF5C52, (int32_t)0xE613, (int32_t)0xFFFF79BD, (int32_t)0xFB9, (int32_t)0xFFFF1E9C, (int32_t)0xFFFFF77F, (int32_t)0xFFFF13F2, (int32_t)0xFFFF1E30, (int32_t)0x7F8, (int32_t)0x79D0 };
		static const int32_t output0[] = { (int32_t)0xCF0, (int32_t)0x3220, (int32_t)0xFFFFFEA6, (int32_t)0x2C8F, (int32_t)0x363F, (int32_t)0xFFFFF6B9, (int32_t)0xFFFF1102, (int32_t)0x5B1B, (int32_t)0x65C6, (int32_t)0x618A, (int32_t)0x117AA, (int32_t)0xFFFFA081, (int32_t)0xA42, (int32_t)0xB5D1, (int32_t)0x11A3, (int32_t)0x132BB, (int32_t)0x8915, (int32_t)0xFFFF9E21, (int32_t)0x4193, (int32_t)0xDE6, (int32_t)0x81FC, (int32_t)0xB87E, (int32_t)0xFFFFFDB5, (int32_t)0x145B3, (int32_t)0xA1F8, (int32_t)0x3B4F, (int32_t)0x2D1D, (int32_t)0xFFFFBB3D, (int32_t)0x8288, (int32_t)0xD750, (int32_t)0x3070, (int32_t)0xFFFFF080, (int32_t)0xFFFED8E6, (int32_t)0xFFFF9082, (int32_t)0xFFFF73CC, (int32_t)0xFFFF8C8C, (int32_t)0xFFFFF00C, (int32_t)0xFFFEC52C, (int32_t)0xAC7, (int32_t)0x12364, (int32_t)0xFFFF6429, (int32_t)0x137F6, (int32_t)0xDD0A, (int32_t)0x3769, (int32_t)0xFFFF62D9, (int32_t)0xFFFEE47C, (int32_t)0xFFFFC501, (int32_t)0xFFFF311C, (int32_t)0xFFFF81B3, (int32_t)0xFFFFB888, (int32_t)0xFFFF7B39, (int32_t)0x14598, (int32_t)0xFFFF0129, (int32_t)0x429C, (int32_t)0xFFFEDEB8, (int32_t)0x66AD, (int32_t)0xFFFF1434, (int32_t)0x9FC, (int32_t)0x9F1F, (int32_t)0x15FBC, (int32_t)0xE871, (int32_t)0x7ADF, (int32_t)0x10946, (int32_t)0xB276, (int32_t)0xFFFF0BA5, (int32_t)0xFFFFF2C4, (int32_t)0xFFFF884A, (int32_t)0xFFFF6E78, (int32_t)0x2C5F, (int32_t)0xFFFF7B43, (int32_t)0xFFFFFE5C, (int32_t)0x7834, (int32_t)0x9FF4, (int32_t)0x5A4C, (int32_t)0xFFFF9DDB, (int32_t)0x9464, (int32_t)0x11EA7, (int32_t)0xE374, (int32_t)0x8F8C, (int32_t)0x81EB, (int32_t)0xFFFF6D60, (int32_t)0xFFFFE5E5, (int32_t)0xFFFF1600, (int32_t)0xFFFFC2F2, (int32_t)0x3E2E, (int32_t)0x3C0D, (int32_t)0xFFFFC6E8, (int32_t)0xFFFFD3F1, (int32_t)0xFFFF74B7, (int32_t)0x16D4, (int32_t)0xFFFF4E6D, (int32_t)0x11DE2, (int32_t)0xFFFF7296, (int32_t)0xFBC, (int32_t)0xFFFEEC64, (int32_t)0xFFFFF77E, (int32_t)0xFFFED393, (int32_t)0xFFFEEB80, (int32_t)0x7F8, (int32_t)0x7F00 };
		for (int ndx = 0; ndx < 100; ndx++)
			Util::Check("Fixed32::AsinFastest", Fixed32::AsinFastest(input0[ndx]), output0[ndx], input0[ndx]);
	}

	// Fixed64.Acos()
	static void Fixed64_Acos()
	{
		static const int64_t input0[] = { (int64_t)0x8E56A6C7LL, (int64_t)0xFFFFFFFF4F3D71ADLL, (int64_t)0x1ACAB46ELL, (int64_t)0xFFFFFFFF059E17A9LL, (int64_t)0xBB0D9C13LL, (int64_t)0xD577A82LL, (int64_t)0xFFFFFFFF5EF04FA1LL, (int64_t)0xFFFFFFFFD0B09FCELL, (int64_t)0xFFFFFFFFA1AEDC46LL, (int64_t)0xFFFFFFFF8C4DE766LL, (int64_t)0x7D8D3EA6LL, (int64_t)0xFFFFFFFF6D6DD311LL, (int64_t)0x81E867ABLL, (int64_t)0xFFFFFFFF18A7FEA5LL, (int64_t)0x85B92D07LL, (int64_t)0xFFFFFFFFE3E2AE22LL, (int64_t)0x40F5414ALL, (int64_t)0x18D776B2LL, (int64_t)0xFFFFFFFF66C25B6DLL, (int64_t)0xFFFFFFFFF380199ELL, (int64_t)0xFFFFFFFF2B6E7529LL, (int64_t)0xB87DF45FLL, (int64_t)0xFAB39DDBLL, (int64_t)0xFFFFFFFF155EE8E9LL, (int64_t)0xFFFFFFFF24DE30A1LL, (int64_t)0x1849099ELL, (int64_t)0xFFFFFFFFFA129C2ALL, (int64_t)0xFFFFFFFF85F933BELL, (int64_t)0x39DE147ALL, (int64_t)0xA8B9F5F3LL, (int64_t)0x7835E482LL, (int64_t)0xC8394B6FLL, (int64_t)0xFFFFFFFFBEB8DCE2LL, (int64_t)0xFFFFFFFF0E43330DLL, (int64_t)0xEE06DB83LL, (int64_t)0xFFFFFFFF261713C1LL, (int64_t)0xCB255EA7LL, (int64_t)0xFFFFFFFF2F99E9A1LL, (int64_t)0x86EE982LL, (int64_t)0xFFFFFFFF3045069DLL, (int64_t)0xFFFFFFFFDC9A9836LL, (int64_t)0xF6A7C8E3LL, (int64_t)0xFFFFFFFF327505B9LL, (int64_t)0xEF3E6383LL, (int64_t)0x9940736BLL, (int64_t)0xEEE34447LL, (int64_t)0xFFFFFFFF642AF9BDLL, (int64_t)0xFFFFFFFF61146DFDLL, (int64_t)0x89FFF7A7LL, (int64_t)0x3AB8BDC2LL, (int64_t)0xB6896677LL, (int64_t)0xFFFFFFFFFB19F772LL, (int64_t)0xB76D9BAFLL, (int64_t)0xFFFFFFFF1478D871LL, (int64_t)0x4E61EBC2LL, (int64_t)0xD5D8B267LL, (int64_t)0xFFFFFFFF5489D3D1LL, (int64_t)0x56BCB86LL, (int64_t)0xE0BFE707LL, (int64_t)0xFFFFFFFFA2C49276LL, (int64_t)0xFFFFFFFF1344DE59LL, (int64_t)0xD8F71BE3LL, (int64_t)0x96D28B53LL, (int64_t)0xFFFFFFFFF8F4E652LL, (int64_t)0x141802E2LL, (int64_t)0xB553F337LL, (int64_t)0xAEB4F62FLL, (int64_t)0x73A5349ELL, (int64_t)0xFFFFFFFF2AA12321LL, (int64_t)0x5FA21946LL, (int64_t)0x18BD4F7ALL, (int64_t)0x115B57AALL, (int64_t)0xFFFFFFFF10688D31LL, (int64_t)0xFFFFFFFF367D54D1LL, (int64_t)0xFFFFFFFF16E58169LL, (int64_t)0xFFFFFFFF34C6AC45LL, (int64_t)0x8608EEA7LL, (int64_t)0xFFFFFFFF0B753A59LL, (int64_t)0xFFFFFFFF7C1E757DLL, (int64_t)0xFFFFFFFF35FAEC59LL, (int64_t)0xFFFFFFFFB41E0FE2LL, (int64_t)0xFFFFFFFF98FE2E2ELL, (int64_t)0xFFFFFFFFFBF93C16LL, (int64_t)0xFF2556B7LL, (int64_t)0xF2308F7BLL, (int64_t)0xFFFFFFFF7D1BED11LL, (int64_t)0xFFFFFFFF10CBAFC1LL, (int64_t)0xFFFFFFFFAA400472LL, (int64_t)0xFFFFFFFFBFE1474ALL, (int64_t)0xFFFFFFFF182E291DLL, (int64_t)0xD18D3FEFLL, (int64_t)0xFFFFFFFFC5B99322LL, (int64_t)0xFFFFFFFF4EDA0299LL, (int64_t)0xFFFFFFFF65AA570DLL, (int64_t)0xFFFFFFFF1D002845LL, (int64_t)0x3A37C52LL, (int64_t)0xFFFFFFFF5FD53D91LL, (int64_t)0x39801F66LL, (int64_t)0xFFFFFFFFDB2660A2LL, (int64_t)0xE3EC8033LL };
		static const int64_t output0[] = { (int64_t)0xFB312C3CLL, (int64_t)0x2553B1A5DLL, (int64_t)0x177486BBCLL, (int64_t)0x2EE84E314LL, (int64_t)0xC06143C4LL, (int64_t)0x184C6AE7CLL, (int64_t)0x24051E9B1LL, (int64_t)0x1C1B51AD9LL, (int64_t)0x1F2B76B21LL, (int64_t)0x20A2BD0C1LL, (int64_t)0x10EE6933CLL, (int64_t)0x22E2EBA01LL, (int64_t)0x109DFC2F8LL, (int64_t)0x2B2F82304LL, (int64_t)0x1056C4E38LL, (int64_t)0x1AE4B931DLL, (int64_t)0x15072A120LL, (int64_t)0x1793E38B0LL, (int64_t)0x236695371LL, (int64_t)0x19EA0E179LL, (int64_t)0x28CEF2904LL, (int64_t)0xC41A3C20LL, (int64_t)0x342CAACCLL, (int64_t)0x2BAE72234LL, (int64_t)0x29926D360LL, (int64_t)0x179CD4EC8LL, (int64_t)0x1980D3BCDLL, (int64_t)0x21151D319LL, (int64_t)0x157C07A74LL, (int64_t)0xD9E7AF10LL, (int64_t)0x114FD4C0CLL, (int64_t)0xAC37F358LL, (int64_t)0x1D4217429LL, (int64_t)0x2CE645020LL, (int64_t)0x607FB428LL, (int64_t)0x296CE2EA8LL, (int64_t)0xA7793944LL, (int64_t)0x2859B525CLL, (int64_t)0x189B067C4LL, (int64_t)0x284759E7CLL, (int64_t)0x1B5A23C91LL, (int64_t)0x4561B8D4LL, (int64_t)0x280C0EB78LL, (int64_t)0x5D230B80LL, (int64_t)0xEDD295B0LL, (int64_t)0x5E21D1F0LL, (int64_t)0x239A96FBDLL, (int64_t)0x23D93C70DLL, (int64_t)0x100608D8CLL, (int64_t)0x156DFEADCLL, (int64_t)0xC6E82C70LL, (int64_t)0x19705D165LL, (int64_t)0xC5A1DC40LL, (int64_t)0x2BD2C3938LL, (int64_t)0x142764078LL, (int64_t)0x9501304CLL, (int64_t)0x24E00AF59LL, (int64_t)0x18CB3CF34LL, (int64_t)0x7FD0B8A8LL, (int64_t)0x1F18CF641LL, (int64_t)0x2C04998CCLL, (int64_t)0x8F3B64BCLL, (int64_t)0xF0D7978CLL, (int64_t)0x1992B092DLL, (int64_t)0x17E026670LL, (int64_t)0xC8A00900LL, (int64_t)0xD1D71F68LL, (int64_t)0x11A220CE4LL, (int64_t)0x28E612C1CLL, (int64_t)0x1301D247CLL, (int64_t)0x179587F88LL, (int64_t)0x180C0F454LL, (int64_t)0x2C817EA8CLL, (int64_t)0x27A1AC2F8LL, (int64_t)0x2B726B498LL, (int64_t)0x27CE6FFE8LL, (int64_t)0x1050EBBDCLL, (int64_t)0x2D75DC850LL, (int64_t)0x21CAB6FE1LL, (int64_t)0x27AEEA39CLL, (int64_t)0x1DF29FCE9LL, (int64_t)0x1FC228C75LL, (int64_t)0x19626840DLL, (int64_t)0x14EB0714LL, (int64_t)0x5478A108LL, (int64_t)0x21B841B91LL, (int64_t)0x2C70012D0LL, (int64_t)0x1E99069C9LL, (int64_t)0x1D2EF1799LL, (int64_t)0x2B415FB7CLL, (int64_t)0x9CA515B4LL, (int64_t)0x1CCEA1371LL, (int64_t)0x255C4B3C5LL, (int64_t)0x237C7971DLL, (int64_t)0x2A9369FB4LL, (int64_t)0x18E7C30ECLL, (int64_t)0x23F2BEC4DLL, (int64_t)0x15820EA70LL, (int64_t)0x1B71A3751LL, (int64_t)0x7904FE98LL };
		for (int ndx = 0; ndx < 100; ndx++)
			Util::Check("Fixed64::Acos", Fixed64::Acos(input0[ndx]), output0[ndx], input0[ndx]);
	}

	// Fixed64.AcosFast()
	static void Fixed64_AcosFast()
	{
		static const int64_t input0[] = { (int64_t)0xFFFFFFFF402E4E19LL, (int64_t)0xFFFFFFFFF085C51ELL, (int64_t)0xFFFFFFFF36734ADDLL, (int64_t)0xFFFFFFFF2A5DDE61LL, (int64_t)0xFFFFFFFF21FB6E49LL, (int64_t)0xFFFFFFFFA52E0ECELL, (int64_t)0xFFFFFFFFEAB16A42LL, (int64_t)0x80F046DFLL, (int64_t)0xFD935707LL, (int64_t)0x199B3F7ELL, (int64_t)0xFFFFFFFF4FCFC3C1LL, (int64_t)0xFFFFFFFF49149979LL, (int64_t)0xFFFFFFFF894D560ALL, (int64_t)0xAAC4FAAFLL, (int64_t)0xEEA68293LL, (int64_t)0x7A46B02ALL, (int64_t)0xFFFFFFFFDCFDDFCELL, (int64_t)0x97AD349BLL, (int64_t)0x6C456D6LL, (int64_t)0xFFFFFFFF96FC15D2LL, (int64_t)0xA4884377LL, (int64_t)0x474F1BELL, (int64_t)0xFFFFFFFFB3C3ED56LL, (int64_t)0xFFFFFFFF1272FA05LL, (int64_t)0x8E14D957LL, (int64_t)0xFFFFFFFF5303BC59LL, (int64_t)0xFFFFFFFFC2815512LL, (int64_t)0xAABE3623LL, (int64_t)0xFFFFFFFF197D2C8DLL, (int64_t)0x13420516LL, (int64_t)0xD4F16EB3LL, (int64_t)0xFFFFFFFF4C88CF41LL, (int64_t)0x304ED9B6LL, (int64_t)0xFFFFFFFF9831F54ALL, (int64_t)0xF5CC9E3FLL, (int64_t)0xC3984AC3LL, (int64_t)0xFFFFFFFF628AE351LL, (int64_t)0xFFFFFFFFD19B5DB6LL, (int64_t)0xDD29E86FLL, (int64_t)0x4D0280AELL, (int64_t)0x926A82CFLL, (int64_t)0xFFFFFFFF8FDB68E2LL, (int64_t)0xFFFFFFFFACACAD6ALL, (int64_t)0xA64607CBLL, (int64_t)0xC85E655BLL, (int64_t)0x8878A677LL, (int64_t)0xFFFFFFFF3C6C3D19LL, (int64_t)0xFFFFFFFFA41507EALL, (int64_t)0xFFFFFFFF7703D479LL, (int64_t)0xFFFFFFFFA2B9781ALL, (int64_t)0xFFFFFFFF26A59C85LL, (int64_t)0xFFFFFFFFC82808F6LL, (int64_t)0xFFFFFFFF32BBC891LL, (int64_t)0xFFFFFFFF442A4AD1LL, (int64_t)0xFFFFFFFF3F643CBDLL, (int64_t)0x3BB95C5ALL, (int64_t)0xFFFFFFFF3CC1D7C9LL, (int64_t)0xFFFFFFFF240050D9LL, (int64_t)0xFFFFFFFF9C49050ALL, (int64_t)0xCEF7B1EFLL, (int64_t)0xE2ACB9BBLL, (int64_t)0x3FF3341ELL, (int64_t)0x67731A52LL, (int64_t)0xFFFFFFFFEA5151F2LL, (int64_t)0x44A9D0CALL, (int64_t)0xFFFFFFFF0346F481LL, (int64_t)0x18C5BFC2LL, (int64_t)0xF11B60BFLL, (int64_t)0xB4F85C6FLL, (int64_t)0xFFFFFFFF2B0E37D1LL, (int64_t)0x17BBCCDALL, (int64_t)0xFFFFFFFF0B628219LL, (int64_t)0xBA834C2BLL, (int64_t)0xB9C1D627LL, (int64_t)0x4919302LL, (int64_t)0x14ACDA96LL, (int64_t)0xFFFFFFFF57C84455LL, (int64_t)0xD7DE58ALL, (int64_t)0xFFFFFFFF4A1494A9LL, (int64_t)0xFFFFFFFF059C32E1LL, (int64_t)0xFFFFFFFF16977F41LL, (int64_t)0xFFFFFFFF1E6C4D29LL, (int64_t)0x33BA61AALL, (int64_t)0x76C3B472LL, (int64_t)0xFFFFFFFFEC9C6892LL, (int64_t)0xCC965BELL, (int64_t)0xFFFFFFFF19CD06B1LL, (int64_t)0xFFFFFFFFEC248EE6LL, (int64_t)0xFFFFFFFF58CDB88DLL, (int64_t)0xFFFFFFFFBA1341E6LL, (int64_t)0x86D672FBLL, (int64_t)0xFFFFFFFF3E8A9279LL, (int64_t)0xFFFFFFFF355258ADLL, (int64_t)0xFFFFFFFF0E323681LL, (int64_t)0x6A55C6F2LL, (int64_t)0xFFFFFFFF52774EB1LL, (int64_t)0x28684E8ELL, (int64_t)0xC25B5B77LL, (int64_t)0xFFFFFFFF619C3701LL, (int64_t)0xC51770DBLL };
		static const int64_t output0[] = { (int64_t)0x26AF46F74LL, (int64_t)0x1A19C54F9LL, (int64_t)0x27A2B8514LL, (int64_t)0x28EDB1EC4LL, (int64_t)0x29ED67DD8LL, (int64_t)0x1EEF7798DLL, (int64_t)0x1A77494BDLL, (int64_t)0x10AFF3AE0LL, (int64_t)0x23429DA4LL, (int64_t)0x17879854CLL, (int64_t)0x25471AEA9LL, (int64_t)0x25DE29BE4LL, (int64_t)0x20D8CC529LL, (int64_t)0xD72CACBCLL, (int64_t)0x5ECA3BBCLL, (int64_t)0x112A48A10LL, (int64_t)0x1B53DE215LL, (int64_t)0xEFC938D4LL, (int64_t)0x18B5B2C98LL, (int64_t)0x1FE55A969LL, (int64_t)0xDF6E4580LL, (int64_t)0x18DAAB568LL, (int64_t)0x1DF883B61LL, (int64_t)0x2C276C320LL, (int64_t)0xFB80C520LL, (int64_t)0x250105E0DLL, (int64_t)0x1D039928DLL, (int64_t)0xD735C2A8LL, (int64_t)0x2B10A0DECLL, (int64_t)0x17ED90DC8LL, (int64_t)0x96A3D564LL, (int64_t)0x258FFE8F1LL, (int64_t)0x161868A7CLL, (int64_t)0x1FD0241C5LL, (int64_t)0x4882D844LL, (int64_t)0xB3840A7CLL, (int64_t)0x23BB6EF5DLL, (int64_t)0x1C0C60FB9LL, (int64_t)0x871D5118LL, (int64_t)0x143E73460LL, (int64_t)0xF641A98CLL, (int64_t)0x20634C1D5LL, (int64_t)0x1E6FEE9C9LL, (int64_t)0xDD261760LL, (int64_t)0xABFBD870LL, (int64_t)0x102305020LL, (int64_t)0x270B45A14LL, (int64_t)0x1F0245A59LL, (int64_t)0x222AAA631LL, (int64_t)0x1F1993135LL, (int64_t)0x295BFCCD4LL, (int64_t)0x1CA6B4901LL, (int64_t)0x2804A96C0LL, (int64_t)0x2650391A0LL, (int64_t)0x26C2676C8LL, (int64_t)0x155D866ECLL, (int64_t)0x2702FD170LL, (int64_t)0x29AD6A338LL, (int64_t)0x1F88D16E5LL, (int64_t)0xA116A8E8LL, (int64_t)0x7BBC28DCLL, (int64_t)0x1517D8550LL, (int64_t)0x127A09DD4LL, (int64_t)0x1A7D50419LL, (int64_t)0x14C9C3A3CLL, (int64_t)0x2FB3E1094LL, (int64_t)0x179500EA4LL, (int64_t)0x57C09720LL, (int64_t)0xC9215424LL, (int64_t)0x28D9C3660LL, (int64_t)0x17A5B3454LL, (int64_t)0x2D79D1EC8LL, (int64_t)0xC12C04F8LL, (int64_t)0xC245DCF8LL, (int64_t)0x18D8E130CLL, (int64_t)0x17D6D1CA8LL, (int64_t)0x249AADDC9LL, (int64_t)0x184A03B5CLL, (int64_t)0x25C75D8C0LL, (int64_t)0x2EE8E05B8LL, (int64_t)0x2B7E38CACLL, (int64_t)0x2A62BA4A4LL, (int64_t)0x15E09CC68LL, (int64_t)0x1169F69B8LL, (int64_t)0x1A58807A9LL, (int64_t)0x18554F7D8LL, (int64_t)0x2B0530D84LL, (int64_t)0x1A6003BC9LL, (int64_t)0x24850BCD9LL, (int64_t)0x1D8F2A475LL, (int64_t)0x1041D5C40LL, (int64_t)0x26D71EF98LL, (int64_t)0x27C02413CLL, (int64_t)0x2CE98069CLL, (int64_t)0x12476C9E8LL, (int64_t)0x250CF2715LL, (int64_t)0x1698C2770LL, (int64_t)0xB56D3994LL, (int64_t)0x23CE63795LL, (int64_t)0xB12EDB44LL };
		for (int ndx = 0; ndx < 100; ndx++)
			Util::Check("Fixed64::AcosFast", Fixed64::AcosFast(input0[ndx]), output0[ndx], input0[ndx]);
	}

	// Fixed64.AcosFastest()
	static void Fixed64_AcosFastest()
	{
		static const int64_t input0[] = { (int64_t)0xFFFFFFFF6FB2E6B5LL, (int64_t)0xFFFFFFFF4B50DC59LL, (int64_t)0xFFFFFFFFEF1CAB7ALL, (int64_t)0xFFFFFFFF4BF59CA9LL, (int64_t)0x8AFDAB3FLL, (int64_t)0xFFFFFFFF1B431A6DLL, (int64_t)0xDA4BCCALL, (int64_t)0xFFFFFFFF78F9F269LL, (int64_t)0x3F98B7CELL, (int64_t)0x2AB76226LL, (int64_t)0xFFFFFFFFE3F11806LL, (int64_t)0x2F43F23ELL, (int64_t)0xD9EBBC2FLL, (int64_t)0xFFFFFFFF96ACD22ALL, (int64_t)0xB86032AFLL, (int64_t)0xC4406C93LL, (int64_t)0xFFFFFFFF0C38D275LL, (int64_t)0xF0AF65DFLL, (int64_t)0xFDB4E95FLL, (int64_t)0xFFFFFFFF37E06B0DLL, (int64_t)0xE979EDCFLL, (int64_t)0xFFFFFFFF2CA130DDLL, (int64_t)0x984DA833LL, (int64_t)0xFFFFFFFFFAE51A8ALL, (int64_t)0xFFFFFFFFA437C4D6LL, (int64_t)0xFFFFFFFFD9313A62LL, (int64_t)0xD610296BLL, (int64_t)0xAC5115ABLL, (int64_t)0xFFFFFFFF4F6C0F35LL, (int64_t)0xFFFFFFFFB21A4452LL, (int64_t)0xEC448C07LL, (int64_t)0xFFFFFFFF956CE8DELL, (int64_t)0xFFFFFFFFABE1AE8ALL, (int64_t)0xFFFFFFFF84FD23CELL, (int64_t)0x95E94C2BLL, (int64_t)0xCB46A2E7LL, (int64_t)0x2F4FA1AELL, (int64_t)0xFFFFFFFFE7C4C502LL, (int64_t)0xEBC60933LL, (int64_t)0xFFFFFFFFD1594E26LL, (int64_t)0xFF24A8F3LL, (int64_t)0xA0D31447LL, (int64_t)0xAC8BD717LL, (int64_t)0x2E165666LL, (int64_t)0xD62229DFLL, (int64_t)0xFFFFFFFF579280BDLL, (int64_t)0xFFFFFFFF649ED649LL, (int64_t)0x9EA58683LL, (int64_t)0xFFFFFFFF55D203D1LL, (int64_t)0xA6155A5FLL, (int64_t)0xFFFFFFFF463E7C3DLL, (int64_t)0x37B8E8AELL, (int64_t)0xC4A67217LL, (int64_t)0xFFFFFFFF29BBCBF5LL, (int64_t)0xDB9D830BLL, (int64_t)0xFFFFFFFF4311B5D9LL, (int64_t)0xFFFFFFFFB3033426LL, (int64_t)0xF43790EFLL, (int64_t)0xA7BDD7D3LL, (int64_t)0xFFFFFFFFB1CC70DELL, (int64_t)0xFFFFFFFF4532F101LL, (int64_t)0x6153A71ELL, (int64_t)0xFFFFFFFF298DE335LL, (int64_t)0xFFFFFFFF8D7E737ELL, (int64_t)0x3E72D61ELL, (int64_t)0xFFFFFFFF4E842F29LL, (int64_t)0xFFFFFFFF836243B6LL, (int64_t)0x54EE9862LL, (int64_t)0xC385FELL, (int64_t)0xED198FC7LL, (int64_t)0xFFFFFFFF94F0CAE6LL, (int64_t)0x24740D72LL, (int64_t)0xFFFFFFFF04E95CADLL, (int64_t)0x2C5B9B3ALL, (int64_t)0xFFFFFFFF38BBC219LL, (int64_t)0xFFFFFFFF48A6D989LL, (int64_t)0xFFFFFFFF801559C6LL, (int64_t)0xFFFFFFFF6A3751CDLL, (int64_t)0x24C2F0AALL, (int64_t)0xFFFFFFFF4CA54419LL, (int64_t)0xFFFFFFFF74926419LL, (int64_t)0xFFFFFFFF376AA2E9LL, (int64_t)0x567F11DALL, (int64_t)0xFFFFFFFFA956B4D6LL, (int64_t)0xFFFFFFFF6BDBC815LL, (int64_t)0xFFFFFFFFB48BA35ALL, (int64_t)0xFFFFFFFFD0C676C6LL, (int64_t)0xFFFFFFFF8225E296LL, (int64_t)0xFFFFFFFFA95FA0C2LL, (int64_t)0x52D79652LL, (int64_t)0x18436EC2LL, (int64_t)0x3B1810BELL, (int64_t)0x4006ED2ELL, (int64_t)0x39F99856LL, (int64_t)0xFFFFFFFF8C265D26LL, (int64_t)0xFFFFFFFF9DD101D6LL, (int64_t)0x77453112LL, (int64_t)0x1F0D639ALL, (int64_t)0xEFA38047LL, (int64_t)0x879DFAB7LL };
		static const int64_t output0[] = { (int64_t)0x22B808FD5LL, (int64_t)0x25AABC9ADLL, (int64_t)0x1A306A2B9LL, (int64_t)0x259C1C7E5LL, (int64_t)0xFF1E10E4LL, (int64_t)0x2ACFD9360LL, (int64_t)0x18478BC3CLL, (int64_t)0x2206E6BC5LL, (int64_t)0x151E4DC34LL, (int64_t)0x167397528LL, (int64_t)0x1AE3C2B95LL, (int64_t)0x1629BD02CLL, (int64_t)0x8D7FEA90LL, (int64_t)0x1FEAC4885LL, (int64_t)0xC42FC990LL, (int64_t)0xB279BB58LL, (int64_t)0x2D4DE13F0LL, (int64_t)0x58F2B550LL, (int64_t)0x224766E4LL, (int64_t)0x277D89C50LL, (int64_t)0x6C328D5CLL, (int64_t)0x28AB555C8LL, (int64_t)0xEEF2F820LL, (int64_t)0x1973B13B9LL, (int64_t)0x1EFF7288DLL, (int64_t)0x1B91183ADLL, (int64_t)0x94B27360LL, (int64_t)0xD52754D0LL, (int64_t)0x254E93EB9LL, (int64_t)0x1E13B9DD9LL, (int64_t)0x65256F80LL, (int64_t)0x2000C9CF5LL, (int64_t)0x1E7CB7889LL, (int64_t)0x2127EB8B1LL, (int64_t)0xF1E74B04LL, (int64_t)0xA74FF2FCLL, (int64_t)0x1628FEFD4LL, (int64_t)0x1AA63F641LL, (int64_t)0x666D7088LL, (int64_t)0x1C103D215LL, (int64_t)0x14F33218LL, (int64_t)0xE4393060LL, (int64_t)0xD4D80EE8LL, (int64_t)0x163CE365CLL, (int64_t)0x94919598LL, (int64_t)0x249E74D79LL, (int64_t)0x239220B61LL, (int64_t)0xE6FF25B8LL, (int64_t)0x24C3A9BD9LL, (int64_t)0xDD6CEF5CLL, (int64_t)0x26210D438LL, (int64_t)0x159FC00C0LL, (int64_t)0xB1DBC8C8LL, (int64_t)0x28FEC0CC0LL, (int64_t)0x8A3BEA68LL, (int64_t)0x266B8BBECLL, (int64_t)0x1E0472B55LL, (int64_t)0x4DEDE08CLL, (int64_t)0xDB3FE324LL, (int64_t)0x1E18D5B79LL, (int64_t)0x263974D98LL, (int64_t)0x12E4E0CE8LL, (int64_t)0x290401C24LL, (int64_t)0x208DE1841LL, (int64_t)0x15313D8F4LL, (int64_t)0x2562AE2A9LL, (int64_t)0x214554901LL, (int64_t)0x13B9719B4LL, (int64_t)0x1915C1E50LL, (int64_t)0x62F46840LL, (int64_t)0x200958BB5LL, (int64_t)0x16D8E9D24LL, (int64_t)0x2F20D26F8LL, (int64_t)0x1658F8114LL, (int64_t)0x2767C7134LL, (int64_t)0x25E932878LL, (int64_t)0x21822B219LL, (int64_t)0x2323000A1LL, (int64_t)0x16D3EFCC4LL, (int64_t)0x258C9893DLL, (int64_t)0x225A6BD65LL, (int64_t)0x278949494LL, (int64_t)0x139EDACD4LL, (int64_t)0x1EA7EA81DLL, (int64_t)0x2302C4405LL, (int64_t)0x1DEAC0825LL, (int64_t)0x1C19905DDLL, (int64_t)0x215C0DCEDLL, (int64_t)0x1EA752A55LL, (int64_t)0x13DCDD6E4LL, (int64_t)0x179D33834LL, (int64_t)0x156872540LL, (int64_t)0x1517323D8LL, (int64_t)0x157AD22A0LL, (int64_t)0x20A607445LL, (int64_t)0x1F6DF2D55LL, (int64_t)0x116029DD8LL, (int64_t)0x17300324CLL, (int64_t)0x5BFAF9E4LL, (int64_t)0x1031DDECCLL };
		for (int ndx = 0; ndx < 100; ndx++)
			Util::Check("Fixed64::AcosFastest", Fixed64::AcosFastest(input0[ndx]), output0[ndx], input0[ndx]);
	}

	// Fixed32.Acos()
	static void Fixed32_Acos()
	{
		static const int32_t input0[] = { (int32_t)0xD430, (int32_t)0xFB0, (int32_t)0xFFFF9DE3, (int32_t)0xFFFF68B9, (int32_t)0x1124, (int32_t)0x21CA, (int32_t)0x32CF, (int32_t)0xFFFF984B, (int32_t)0xF100, (int32_t)0x92F6, (int32_t)0xC2FC, (int32_t)0xFFFF48CC, (int32_t)0xFFFFCF75, (int32_t)0x5B18, (int32_t)0xFFFF3D3B, (int32_t)0xFFFF0DC9, (int32_t)0xFFFF0AD5, (int32_t)0x8037, (int32_t)0xFFFF21A3, (int32_t)0xFFFF89E8, (int32_t)0x7DBD, (int32_t)0xFFFF013D, (int32_t)0xFFFFAB8F, (int32_t)0xADEB, (int32_t)0xFFFFD4D7, (int32_t)0x59D8, (int32_t)0xE46D, (int32_t)0xFFFFCAF0, (int32_t)0xFFFFA036, (int32_t)0x9AEA, (int32_t)0xFFFFD162, (int32_t)0x6107, (int32_t)0xFFFF7A94, (int32_t)0x9D24, (int32_t)0xFFFF7876, (int32_t)0x64E2, (int32_t)0x9988, (int32_t)0xFFFFEDC7, (int32_t)0x9832, (int32_t)0x4A11, (int32_t)0x81BC, (int32_t)0xFFFF387C, (int32_t)0xFFFF9126, (int32_t)0x1668, (int32_t)0x8FDB, (int32_t)0xFFFFCF78, (int32_t)0xFFFF6BA4, (int32_t)0xE4EE, (int32_t)0xFFFFFCC0, (int32_t)0xFFFF7E5F, (int32_t)0xFFFF92FD, (int32_t)0xF70E, (int32_t)0xFFFFFD6B, (int32_t)0x65BC, (int32_t)0xFFFF09E1, (int32_t)0xD2F3, (int32_t)0xFFFF6422, (int32_t)0xFFFFEFF7, (int32_t)0x93E2, (int32_t)0xB74B, (int32_t)0x3D5D, (int32_t)0xFFFF67E0, (int32_t)0xF815, (int32_t)0xFFFF5616, (int32_t)0xFFFFC196, (int32_t)0xFFFF61F5, (int32_t)0xCE38, (int32_t)0x324F, (int32_t)0xFFFFE2A4, (int32_t)0xFFFFD858, (int32_t)0xFFFF7440, (int32_t)0x1D0D, (int32_t)0xE805, (int32_t)0xFFFFD792, (int32_t)0x82B, (int32_t)0x4542, (int32_t)0x7016, (int32_t)0x9526, (int32_t)0xFFFF1E11, (int32_t)0xFFFF055F, (int32_t)0xFFFFEE36, (int32_t)0xFF7E, (int32_t)0xCE30, (int32_t)0xFFFF21D8, (int32_t)0x7EE, (int32_t)0xFFFFDA54, (int32_t)0xFFFF639E, (int32_t)0x14D7, (int32_t)0x9344, (int32_t)0xFFFFA582, (int32_t)0xC0, (int32_t)0xFFFFA993, (int32_t)0x59E4, (int32_t)0xE0E6, (int32_t)0xFFFF0CB5, (int32_t)0x19DC, (int32_t)0xFFFF4067, (int32_t)0xFFFF3B11, (int32_t)0xFFFF54D4, (int32_t)0x2DE6 };
		static const int32_t output0[] = { (int32_t)0x97FE, (int32_t)0x1826D, (int32_t)0x1F6D0, (int32_t)0x233F8, (int32_t)0x180F8, (int32_t)0x1703C, (int32_t)0x15EF9, (int32_t)0x1FCE6, (int32_t)0x5811, (int32_t)0xF596, (int32_t)0xB476, (int32_t)0x25E4B, (int32_t)0x1C2F6, (int32_t)0x134FD, (int32_t)0x26F74, (int32_t)0x2CFDA, (int32_t)0x2D982, (int32_t)0x10BD5, (int32_t)0x29F88, (int32_t)0x20CDD, (int32_t)0x10EAF, (int32_t)0x30B0E, (int32_t)0x1E82D, (int32_t)0xD2EA, (int32_t)0x1BD7D, (int32_t)0x13653, (int32_t)0x77E9, (int32_t)0x1C792, (int32_t)0x1F44D, (int32_t)0xEBBD, (int32_t)0x1C100, (int32_t)0x12E9B, (int32_t)0x21E78, (int32_t)0xE8EE, (int32_t)0x220F5, (int32_t)0x12A6D, (int32_t)0xED79, (int32_t)0x1A45C, (int32_t)0xEF23, (int32_t)0x146FB, (int32_t)0x10A13, (int32_t)0x276E5, (int32_t)0x204C4, (int32_t)0x17BB0, (int32_t)0xF95C, (int32_t)0x1C2F3, (int32_t)0x2305E, (int32_t)0x76CA, (int32_t)0x1955F, (int32_t)0x21A0C, (int32_t)0x202BB, (int32_t)0x43DF, (int32_t)0x194B4, (int32_t)0x12980, (int32_t)0x2DCE5, (int32_t)0x9A31, (int32_t)0x239B4, (int32_t)0x1A22B, (int32_t)0xF476, (int32_t)0xC5D3, (int32_t)0x15428, (int32_t)0x23505, (int32_t)0x3FD6, (int32_t)0x24BED, (int32_t)0x1D12C, (int32_t)0x23C75, (int32_t)0xA25B, (int32_t)0x15F7C, (int32_t)0x1AF8C, (int32_t)0x1B9F0, (int32_t)0x225F4, (int32_t)0x17502, (int32_t)0x6FB0, (int32_t)0x1BAB9, (int32_t)0x189F4, (int32_t)0x14BFD, (int32_t)0x11E1B, (int32_t)0xF2E8, (int32_t)0x2A6ED, (int32_t)0x2EFB7, (int32_t)0x1A3ED, (int32_t)0x1020, (int32_t)0xA268, (int32_t)0x29F1D, (int32_t)0x18A31, (int32_t)0x1B7EE, (int32_t)0x23A5B, (int32_t)0x17D42, (int32_t)0xF537, (int32_t)0x1EE9D, (int32_t)0x1915F, (int32_t)0x1EA48, (int32_t)0x13646, (int32_t)0x7F81, (int32_t)0x2D340, (int32_t)0x17838, (int32_t)0x26A9E, (int32_t)0x272D0, (int32_t)0x24D9C, (int32_t)0x163F9 };
		for (int ndx = 0; ndx < 100; ndx++)
			Util::Check("Fixed32::Acos", Fixed32::Acos(input0[ndx]), output0[ndx], input0[ndx]);
	}

	// Fixed32.AcosFast()
	static void Fixed32_AcosFast()
	{
		static const int32_t input0[] = { (int32_t)0x13F, (int32_t)0x3953, (int32_t)0x24A, (int32_t)0xFFFF2468, (int32_t)0xFFFF0A1F, (int32_t)0x75EE, (int32_t)0xFFFF0F09, (int32_t)0xFFFF25DA, (int32_t)0xFFFF5D92, (int32_t)0xFFFFC49F, (int32_t)0xFFFF62DE, (int32_t)0xFFFFCEFC, (int32_t)0xFFFFD1E6, (int32_t)0x8E83, (int32_t)0xFFFFC917, (int32_t)0x3DDE, (int32_t)0xFFFF99B0, (int32_t)0xD63E, (int32_t)0x4E26, (int32_t)0xE741, (int32_t)0xFE57, (int32_t)0xFFFFB961, (int32_t)0x9F0A, (int32_t)0xFFFF3D23, (int32_t)0xD797, (int32_t)0xCAAD, (int32_t)0xC329, (int32_t)0xFFFF071F, (int32_t)0xFFFFCADE, (int32_t)0xEE4E, (int32_t)0x4DC, (int32_t)0x3505, (int32_t)0x4052, (int32_t)0xFFFFF02A, (int32_t)0x41F, (int32_t)0xB4E1, (int32_t)0xFFFFFD34, (int32_t)0xA9C8, (int32_t)0xFFFF17B9, (int32_t)0x91FF, (int32_t)0xFFFFCB4B, (int32_t)0xFFFF3DC4, (int32_t)0xFFFFB747, (int32_t)0xFFFFCEA7, (int32_t)0xFFFF42A4, (int32_t)0xFFFF31C6, (int32_t)0xD7AD, (int32_t)0xCB60, (int32_t)0x17CF, (int32_t)0xFFFFCED6, (int32_t)0xFFFF802D, (int32_t)0xFFFF6A28, (int32_t)0xFFFFECEA, (int32_t)0xFFFF6D93, (int32_t)0x2F8F, (int32_t)0xFFFF47DF, (int32_t)0x9A48, (int32_t)0xFFFFC529, (int32_t)0xFFFF4CD1, (int32_t)0xFFFF3F72, (int32_t)0xB2C4, (int32_t)0xFFFF07EB, (int32_t)0x5AFC, (int32_t)0xFFFF6F43, (int32_t)0xBFC2, (int32_t)0x2DD7, (int32_t)0x8EA9, (int32_t)0xE1BB, (int32_t)0xFFFF8A65, (int32_t)0x1435, (int32_t)0xFFFF40AB, (int32_t)0xFFFFEFE7, (int32_t)0xBE85, (int32_t)0xBC27, (int32_t)0x1BF6, (int32_t)0xC093, (int32_t)0xFFFF021B, (int32_t)0xFFFFD065, (int32_t)0xFA7E, (int32_t)0xA5D1, (int32_t)0xF2FF, (int32_t)0xF7C9, (int32_t)0xFFFFEF4F, (int32_t)0xFC07, (int32_t)0x6E22, (int32_t)0xFFFF9AB5, (int32_t)0xFFFF481D, (int32_t)0xFFFFD2C0, (int32_t)0xC09A, (int32_t)0xFFFFBC41, (int32_t)0xFFFF1A99, (int32_t)0xFFFF380C, (int32_t)0x5CF7, (int32_t)0xD847, (int32_t)0xDF3B, (int32_t)0xFFFFC361, (int32_t)0xFFFFE2C8, (int32_t)0xFFFF4804, (int32_t)0xEE4, (int32_t)0x14CC };
		static const int32_t output0[] = { (int32_t)0x190E0, (int32_t)0x1584F, (int32_t)0x18FD5, (int32_t)0x29A0C, (int32_t)0x2DC05, (int32_t)0x11790, (int32_t)0x2CC12, (int32_t)0x29743, (int32_t)0x24215, (int32_t)0x1CE0C, (int32_t)0x23B4D, (int32_t)0x1C371, (int32_t)0x1C07A, (int32_t)0xFAFC, (int32_t)0x1C976, (int32_t)0x153A3, (int32_t)0x1FB60, (int32_t)0x9448, (int32_t)0x142B5, (int32_t)0x717D, (int32_t)0x1D2B, (int32_t)0x1D9AC, (int32_t)0xE685, (int32_t)0x26F99, (int32_t)0x91CD, (int32_t)0xA83E, (int32_t)0xB430, (int32_t)0x2E7B9, (int32_t)0x1C7A5, (int32_t)0x5FBD, (int32_t)0x18D43, (int32_t)0x15CB8, (int32_t)0x1511B, (int32_t)0x1A1F8, (int32_t)0x18E00, (int32_t)0xC942, (int32_t)0x194EB, (int32_t)0xD87F, (int32_t)0x2B52B, (int32_t)0xF6C4, (int32_t)0x1C735, (int32_t)0x26EA2, (int32_t)0x1DBDC, (int32_t)0x1C3C7, (int32_t)0x26744, (int32_t)0x281E7, (int32_t)0x91A4, (int32_t)0xA718, (int32_t)0x17A47, (int32_t)0x1C398, (int32_t)0x217F6, (int32_t)0x23231, (int32_t)0x1A53A, (int32_t)0x22E00, (int32_t)0x16249, (int32_t)0x25F9E, (int32_t)0xEC89, (int32_t)0x1CD7E, (int32_t)0x2589A, (int32_t)0x26C11, (int32_t)0xCC3A, (int32_t)0x2E469, (int32_t)0x1351A, (int32_t)0x22BF3, (int32_t)0xB962, (int32_t)0x16409, (int32_t)0xFACE, (int32_t)0x7DC0, (int32_t)0x20C51, (int32_t)0x17DE5, (int32_t)0x26A38, (int32_t)0x1A23B, (int32_t)0xBB3F, (int32_t)0xBEC4, (int32_t)0x1761B, (int32_t)0xB826, (int32_t)0x30364, (int32_t)0x1C201, (int32_t)0x3533, (int32_t)0xDDBF, (int32_t)0x51F1, (int32_t)0x4107, (int32_t)0x1A2D3, (int32_t)0x2D28, (int32_t)0x12045, (int32_t)0x1FA44, (int32_t)0x25F45, (int32_t)0x1BF9C, (int32_t)0xB81B, (int32_t)0x1D6AF, (int32_t)0x2AE84, (int32_t)0x27798, (int32_t)0x132FB, (int32_t)0x9085, (int32_t)0x82F4, (int32_t)0x1CF53, (int32_t)0x1AF67, (int32_t)0x25F69, (int32_t)0x18339, (int32_t)0x17D4D };
		for (int ndx = 0; ndx < 100; ndx++)
			Util::Check("Fixed32::AcosFast", Fixed32::AcosFast(input0[ndx]), output0[ndx], input0[ndx]);
	}

	// Fixed32.AcosFastest()
	static void Fixed32_AcosFastest()
	{
		static const int32_t input0[] = { (int32_t)0xFFFFA31D, (int32_t)0xF5F1, (int32_t)0x40FB, (int32_t)0xFFFF039B, (int32_t)0xFFFF8E2B, (int32_t)0x9045, (int32_t)0xFFFFABA2, (int32_t)0x30C2, (int32_t)0x519B, (int32_t)0x6EFC, (int32_t)0xFFFF45C5, (int32_t)0xFFFFC9E5, (int32_t)0xFFFFCAAA, (int32_t)0xFFFFA700, (int32_t)0xFFFF4C72, (int32_t)0xBAFB, (int32_t)0x189B, (int32_t)0x5EF4, (int32_t)0x120, (int32_t)0x250D, (int32_t)0xFFFFE5BB, (int32_t)0xFFFFBBEA, (int32_t)0xFFFF2122, (int32_t)0xCE24, (int32_t)0xFFFFF99D, (int32_t)0xFFFF089F, (int32_t)0x92EF, (int32_t)0xE63E, (int32_t)0xDCEC, (int32_t)0xFFFF5897, (int32_t)0xFFFFDDCC, (int32_t)0xBA16, (int32_t)0xC17F, (int32_t)0xFFFFE5B3, (int32_t)0x2B5, (int32_t)0xFD0E, (int32_t)0xFFFFB6CE, (int32_t)0xFFFFEBB5, (int32_t)0x6DDC, (int32_t)0xDDDC, (int32_t)0xEF12, (int32_t)0x1759, (int32_t)0x8123, (int32_t)0xFFFF519E, (int32_t)0xFFFF767C, (int32_t)0x50B4, (int32_t)0x6D61, (int32_t)0xFFFFB5F9, (int32_t)0x8BD6, (int32_t)0xFFFF2440, (int32_t)0xAAC5, (int32_t)0x83D3, (int32_t)0x46E3, (int32_t)0xE9D6, (int32_t)0xFFFF2F12, (int32_t)0xE732, (int32_t)0xD4D0, (int32_t)0x72D7, (int32_t)0x9FE, (int32_t)0xFFFF858C, (int32_t)0xFD56, (int32_t)0xFFFFC564, (int32_t)0x53D6, (int32_t)0xFFFFF906, (int32_t)0xFFFF9131, (int32_t)0xFFFF8BAF, (int32_t)0x864, (int32_t)0xE4F7, (int32_t)0xA44A, (int32_t)0xFFFF4F64, (int32_t)0x42E, (int32_t)0xFFFF2CE8, (int32_t)0xF117, (int32_t)0x2344, (int32_t)0x35FB, (int32_t)0xCE61, (int32_t)0x3AC6, (int32_t)0xCF83, (int32_t)0x57A9, (int32_t)0xA8E8, (int32_t)0xFFFF9B3E, (int32_t)0xFFFFDCF7, (int32_t)0xFFFF5A68, (int32_t)0xB8AC, (int32_t)0xFFFFADD2, (int32_t)0x59F8, (int32_t)0xFFFF7333, (int32_t)0xD7A9, (int32_t)0xFFFFB6A1, (int32_t)0x1B82, (int32_t)0xFFFF283E, (int32_t)0x43F5, (int32_t)0xE1B5, (int32_t)0xFFFFE851, (int32_t)0xE085, (int32_t)0x29AE, (int32_t)0xC383, (int32_t)0xFFFF881E, (int32_t)0xC06D, (int32_t)0xEACD };
		static const int32_t output0[] = { (int32_t)0x1F126, (int32_t)0x47F3, (int32_t)0x15077, (int32_t)0x2F941, (int32_t)0x2081C, (int32_t)0xF8C8, (int32_t)0x1E80E, (int32_t)0x16117, (int32_t)0x13F1C, (int32_t)0x11F50, (int32_t)0x262C1, (int32_t)0x1C89C, (int32_t)0x1C7D2, (int32_t)0x1ECFC, (int32_t)0x25911, (int32_t)0xC064, (int32_t)0x1797B, (int32_t)0x130DE, (int32_t)0x190FF, (int32_t)0x16CF4, (int32_t)0x1AC6F, (int32_t)0x1D6FF, (int32_t)0x2A07D, (int32_t)0xA28F, (int32_t)0x19883, (int32_t)0x2E1AC, (int32_t)0xF58C, (int32_t)0x73DB, (int32_t)0x87AB, (int32_t)0x2488F, (int32_t)0x1B46B, (int32_t)0xC1B3, (int32_t)0xB6B1, (int32_t)0x1AC78, (int32_t)0x18F6A, (int32_t)0x26DB, (int32_t)0x1DC4F, (int32_t)0x1A670, (int32_t)0x12090, (int32_t)0x85CD, (int32_t)0x5D95, (int32_t)0x17ABE, (int32_t)0x10AB2, (int32_t)0x251E5, (int32_t)0x22360, (int32_t)0x14010, (int32_t)0x12118, (int32_t)0x1DD2E, (int32_t)0xFE1C, (int32_t)0x29A46, (int32_t)0xD73B, (int32_t)0x10791, (int32_t)0x14A57, (int32_t)0x6B50, (int32_t)0x28670, (int32_t)0x71A6, (int32_t)0x96F6, (int32_t)0x11B01, (int32_t)0x18820, (int32_t)0x211DB, (int32_t)0x24F4, (int32_t)0x1CD38, (int32_t)0x13CC0, (int32_t)0x1991A, (int32_t)0x204BD, (int32_t)0x20AE6, (int32_t)0x189BA, (int32_t)0x76BF, (int32_t)0xDFC3, (int32_t)0x254F4, (int32_t)0x18DF1, (int32_t)0x28A38, (int32_t)0x57C0, (int32_t)0x16EC1, (int32_t)0x15BC4, (int32_t)0xA229, (int32_t)0x156DB, (int32_t)0xA03D, (int32_t)0x138B0, (int32_t)0xD9B6, (int32_t)0x1F9AB, (int32_t)0x1B542, (int32_t)0x2462E, (int32_t)0xC3C1, (int32_t)0x1E5BE, (int32_t)0x13639, (int32_t)0x2274A, (int32_t)0x91C1, (int32_t)0x1DC7E, (int32_t)0x17690, (int32_t)0x292AC, (int32_t)0x14D62, (int32_t)0x7DD9, (int32_t)0x1A9D7, (int32_t)0x8058, (int32_t)0x16846, (int32_t)0xB39D, (int32_t)0x20EEE, (int32_t)0xB850, (int32_t)0x68E8 };
		for (int ndx = 0; ndx < 100; ndx++)
			Util::Check("Fixed32::AcosFastest", Fixed32::AcosFastest(input0[ndx]), output0[ndx], input0[ndx]);
	}

	// Fixed64.Atan()
	static void Fixed64_Atan()
	{
		static const int64_t input0[] = { (int64_t)0xFFFFFFFF484FEAB1LL, (int64_t)0x8869D843LL, (int64_t)0x11AEA016LL, (int64_t)0x3C72E096LL, (int64_t)0x2010FECELL, (int64_t)0x7DDE0B7ELL, (int64_t)0x92BBD33BLL, (int64_t)0xFFFFFFFF239F7A69LL, (int64_t)0xFFFFFFFFB3DB9CE2LL, (int64_t)0xFFFFFFFF60B06739LL, (int64_t)0xFFFFFFFFAC6C493ELL, (int64_t)0xFFFFFFFF054D08C9LL, (int64_t)0xFFFFFFFF1B2E6729LL, (int64_t)0x611665BELL, (int64_t)0xEA4EA4BFLL, (int64_t)0x20607DBELL, (int64_t)0xFFFFFFFF6AFBE5A1LL, (int64_t)0x9B29ED47LL, (int64_t)0xFFFFFFFF4B348335LL, (int64_t)0x37388D52LL, (int64_t)0xFFFFFFFF187BA5A1LL, (int64_t)0x30BB37F6LL, (int64_t)0x2E574BDELL, (int64_t)0xFFFFFFFF88C7A74ELL, (int64_t)0xFFFFFFFF27258AA1LL, (int64_t)0x2EEDD37C46DLL, (int64_t)0xFFFFFD3DB8704A8CLL, (int64_t)0x22482B20D4LL, (int64_t)0x104B863E199LL, (int64_t)0xFFFFFC480B4D08C1LL, (int64_t)0xFFFFFC4272305335LL, (int64_t)0xFFFFFED1E1E96FB4LL, (int64_t)0xFFFFFC52EF516536LL, (int64_t)0x1A93B2D1442LL, (int64_t)0x179521CF002LL, (int64_t)0x498A123703LL, (int64_t)0x31A0FD0EDA4LL, (int64_t)0x75057B739ALL, (int64_t)0xFFFFFE6C1FBC66C9LL, (int64_t)0xBB4D9A0F06LL, (int64_t)0x30A43EA3824LL, (int64_t)0xFFFFFD4ED743D4EELL, (int64_t)0x8BDB026887LL, (int64_t)0xFFFFFD67B2049420LL, (int64_t)0xFFFFFDC9EEB73B64LL, (int64_t)0xFFFFFCA07C15BF51LL, (int64_t)0x9F4AE705AELL, (int64_t)0xFFFFFE0E6EB77B4DLL, (int64_t)0xFFFFFFF8389A3D61LL, (int64_t)0xFFFFFF0690A67ABELL, (int64_t)0x9060C11D5AFLL, (int64_t)0x5261425E7LL, (int64_t)0xBDE44C381LL, (int64_t)0x10714D14989LL, (int64_t)0xA027A3E0680D280LL, (int64_t)0x14D88BC462BFFLL, (int64_t)0x26CAB8D48FLL, (int64_t)0x103DD4A00B3LL, (int64_t)0x1300D0E192F3FLL, (int64_t)0x18854C3D6516EELL, (int64_t)0x3EA64D7834067LL, (int64_t)0x10F3E85D8D0LL, (int64_t)0x2429F60D412ALL, (int64_t)0x386903B2C32LL, (int64_t)0x20A4826EE5LL, (int64_t)0x31AEC7BC586C8A00LL, (int64_t)0x2B0263DEA56CBE00LL, (int64_t)0x4A3E3A9E3C1LL, (int64_t)0x1052E75A9LL, (int64_t)0x18B09B79E162LL, (int64_t)0xFD8E3C1885547LL, (int64_t)0xB6B131731E926LL, (int64_t)0x8E0086D2C778LL, (int64_t)0x18337E460C635LL, (int64_t)0x2F3AC99A780446LL, (int64_t)0xF92B750D6A4CB200LL, (int64_t)0xFFFFFFFE4F3624DALL, (int64_t)0xFFFFE65E4306371FLL, (int64_t)0xFFFFFFFD292D5EBELL, (int64_t)0xFFFFFFFED04E2410LL, (int64_t)0xFFFFFE2AF5425BBBLL, (int64_t)0xF8B15B06A5C82480LL, (int64_t)0xFFFFFFFE7392A45DLL, (int64_t)0xFFFFFF36D270B05FLL, (int64_t)0xFFF44FDF8C7B634CLL, (int64_t)0xECAC8C54AD4DAC00LL, (int64_t)0xFFFFFF88A340EC10LL, (int64_t)0xFF8D10FBC78DF8CCLL, (int64_t)0xFEF6068C09A10230LL, (int64_t)0xFFFFFFEC9921BC63LL, (int64_t)0xFFFFF8E96F9EE2D9LL, (int64_t)0xFFF89740CA7B578FLL, (int64_t)0xFFFFFFFE9429846CLL, (int64_t)0xFFFAFC716C09ACE5LL, (int64_t)0xC6B4B9DF70997C00LL, (int64_t)0xFFF9FA0F67643EE0LL, (int64_t)0xFFD32D92E4AE713CLL, (int64_t)0xFFFFFF6496B167F9LL, (int64_t)0xFFFFFFFEFECCD69CLL, (int64_t)0xFFFFFF8AADE271F1LL };
		static const int64_t output0[] = { (int64_t)0xFFFFFFFF60AABBDFLL, (int64_t)0x7D55F234LL, (int64_t)0x11A77284LL, (int64_t)0x3B5C8614LL, (int64_t)0x1FE67650LL, (int64_t)0x74FB644CLL, (int64_t)0x853D25B4LL, (int64_t)0xFFFFFFFF4A0BC0CFLL, (int64_t)0xFFFFFFFFB5FDB42FLL, (int64_t)0xFFFFFFFF717EA3FFLL, (int64_t)0xFFFFFFFFAF373E1BLL, (int64_t)0xFFFFFFFF399DBC87LL, (int64_t)0xFFFFFFFF454690CFLL, (int64_t)0x5CCC20A4LL, (int64_t)0xBDBE3758LL, (int64_t)0x2034B7E0LL, (int64_t)0xFFFFFFFF790CC0B7LL, (int64_t)0x8B7E7F44LL, (int64_t)0xFFFFFFFF62963EFFLL, (int64_t)0x366338C4LL, (int64_t)0xFFFFFFFF43C8962BLL, (int64_t)0x3027BAB8LL, (int64_t)0x2DD834E4LL, (int64_t)0xFFFFFFFF906D0DCBLL, (int64_t)0xFFFFFFFF4C156783LL, (int64_t)0x191C86D68LL, (int64_t)0xFFFFFFFE6E3D150DLL, (int64_t)0x18AA89230LL, (int64_t)0x19124581CLL, (int64_t)0xFFFFFFFE6E2522A9LL, (int64_t)0xFFFFFFFE6E24BBA1LL, (int64_t)0xFFFFFFFE6EB9369DLL, (int64_t)0xFFFFFFFE6E25EE9DLL, (int64_t)0x191859704LL, (int64_t)0x191720550LL, (int64_t)0x18EA49800LL, (int64_t)0x191CD2CF0LL, (int64_t)0x18FEFB000LL, (int64_t)0xFFFFFFFE6E828F25LL, (int64_t)0x190C1D198LL, (int64_t)0x191CB8018LL, (int64_t)0xFFFFFFFE6E3F632DLL, (int64_t)0x1904B1E40LL, (int64_t)0xFFFFFFFE6E42F201LL, (int64_t)0xFFFFFFFE6E5410E5LL, (int64_t)0xFFFFFFFE6E2C2FB1LL, (int64_t)0x190844B64LL, (int64_t)0xFFFFFFFE6E640129LL, (int64_t)0xFFFFFFFE8E9B2EC9LL, (int64_t)0xFFFFFFFE6EE7073DLL, (int64_t)0x192035694LL, (int64_t)0x16103B108LL, (int64_t)0x17C9AC128LL, (int64_t)0x19126999CLL, (int64_t)0x1921FB530LL, (int64_t)0x1921EF0CCLL, (int64_t)0x18B86A814LL, (int64_t)0x19123842CLL, (int64_t)0x1921EDDC0LL, (int64_t)0x1921FAAD8LL, (int64_t)0x1921F73E8LL, (int64_t)0x1912E18C0LL, (int64_t)0x19218A118LL, (int64_t)0x191D718E0LL, (int64_t)0x18A48A74CLL, (int64_t)0x1921FB544LL, (int64_t)0x1921FB544LL, (int64_t)0x191E889BCLL, (int64_t)0xCBA06A9CLL, (int64_t)0x1921556ECLL, (int64_t)0x1921FA524LL, (int64_t)0x1921F9EE0LL, (int64_t)0x1921DE7C8LL, (int64_t)0x1921F0C0CLL, (int64_t)0x1921FAFE0LL, (int64_t)0xFFFFFFFE6DE04ADDLL, (int64_t)0xFFFFFFFEF69EB765LL, (int64_t)0xFFFFFFFE6DEA4789LL, (int64_t)0xFFFFFFFEC4920375LL, (int64_t)0xFFFFFFFF212CE95DLL, (int64_t)0xFFFFFFFE6E6C03C9LL, (int64_t)0xFFFFFFFE6DE04AD9LL, (int64_t)0xFFFFFFFF00AA4521LL, (int64_t)0xFFFFFFFE6F260CF1LL, (int64_t)0xFFFFFFFE6DE0609DLL, (int64_t)0xFFFFFFFE6DE04AC5LL, (int64_t)0xFFFFFFFE70055485LL, (int64_t)0xFFFFFFFE6DE04CF1LL, (int64_t)0xFFFFFFFE6DE04BADLL, (int64_t)0xFFFFFFFE7B0F21A9LL, (int64_t)0xFFFFFFFE6E046895LL, (int64_t)0xFFFFFFFE6DE06D45LL, (int64_t)0xFFFFFFFF0AD75975LL, (int64_t)0xFFFFFFFE6DE07DC5LL, (int64_t)0xFFFFFFFE6DE04ABDLL, (int64_t)0xFFFFFFFE6DE07539LL, (int64_t)0xFFFFFFFE6DE0506DLL, (int64_t)0xFFFFFFFE6F85FAD5LL, (int64_t)0xFFFFFFFF3656ED11LL, (int64_t)0xFFFFFFFE700EE239LL };
		for (int ndx = 0; ndx < 100; ndx++)
			Util::Check("Fixed64::Atan", Fixed64::Atan(input0[ndx]), output0[ndx], input0[ndx]);
	}

	// Fixed64.AtanFast()
	static void Fixed64_AtanFast()
	{
		static const int64_t input0[] = { (int64_t)0xFFFFFFFF2CB9FB19LL, (int64_t)0xFFFFFFFF7A74F1F5LL, (int64_t)0xFFFFFFFF80211C6ALL, (int64_t)0xFFFFFFFF2687086DLL, (int64_t)0x6B0C2C16LL, (int64_t)0x71ABE32ELL, (int64_t)0x25CB1782LL, (int64_t)0x21A7EE86LL, (int64_t)0x19385D22LL, (int64_t)0xFFFFFFFF09690B19LL, (int64_t)0xAA70CCALL, (int64_t)0x81AB6277LL, (int64_t)0xFFFFFFFF6F35847DLL, (int64_t)0x111874BELL, (int64_t)0xFFFFFFFFC867217ELL, (int64_t)0x681AEE8ALL, (int64_t)0xFFFFFFFF7F30A10DLL, (int64_t)0xFFFFFFFF5E476181LL, (int64_t)0x59F50A2ALL, (int64_t)0xFFFFFFFF734E5A55LL, (int64_t)0x8404C80BLL, (int64_t)0xFFFFFFFF7054D961LL, (int64_t)0x13C7ED62LL, (int64_t)0xB77AE8E3LL, (int64_t)0xFFFFFFFF1EBA3E59LL, (int64_t)0xFFFFFC611F852553LL, (int64_t)0x10B1319DEA6LL, (int64_t)0x3144179A1D8LL, (int64_t)0x751CD904DALL, (int64_t)0xFFFFFCDE129997EDLL, (int64_t)0xFFFFFD78630995A1LL, (int64_t)0x2352BDD911ALL, (int64_t)0xFFFFFF64DFDA16DALL, (int64_t)0x282138BB634LL, (int64_t)0x349B812EBC3LL, (int64_t)0xFFFFFC89397F99E3LL, (int64_t)0x122C861D515LL, (int64_t)0x37B9017FC67LL, (int64_t)0x5C00312DA8LL, (int64_t)0x35B19F0A1C6LL, (int64_t)0xFFFFFEF9337E31E3LL, (int64_t)0x1487A6B8060LL, (int64_t)0xFFFFFDC075FBF831LL, (int64_t)0x236EACB435DLL, (int64_t)0xF398B8D357LL, (int64_t)0xD72C252CBELL, (int64_t)0xFFFFFF50E0879472LL, (int64_t)0xFFFFFFDF07DBA34FLL, (int64_t)0xFFFFFDCEE7B6030ELL, (int64_t)0xFFFFFE5EB179A34ELL, (int64_t)0x8CD90F9798DLL, (int64_t)0xF957A3F6F16ELL, (int64_t)0x20335FB92E6B3LL, (int64_t)0x98464A0F555700LL, (int64_t)0x46772AFDBD13LL, (int64_t)0x41BE49A0E11BD40LL, (int64_t)0x205C4B6C2F9B56LL, (int64_t)0xD848FC19D95LL, (int64_t)0x15F6A0B35LL, (int64_t)0x1211BF0156DDA9LL, (int64_t)0x64BA49987LL, (int64_t)0x14F9AA383BFB12LL, (int64_t)0x12935D1CFLL, (int64_t)0x2D76CC82ABEDLL, (int64_t)0x2677C88032F3900LL, (int64_t)0x46D86B1B47E208LL, (int64_t)0x3CBED549329LL, (int64_t)0xEC6335CFD8ELL, (int64_t)0x530CC32A966EDLL, (int64_t)0x41FB37BFFB6LL, (int64_t)0x3560C3E9CLL, (int64_t)0x21CDA733CB1LL, (int64_t)0x8D72F73327B5BLL, (int64_t)0x538A718C7EC7A8LL, (int64_t)0x33EB53F3A68D900LL, (int64_t)0xFFFFFFF8FED48C74LL, (int64_t)0xFFFFFFFED6DBB960LL, (int64_t)0xFF9B346C02E60A3CLL, (int64_t)0xFFFFFF771CFAD42ALL, (int64_t)0xFFFFD066B453ECBALL, (int64_t)0xFFF964F706D43F83LL, (int64_t)0xFFFFFFE95CBC4E7BLL, (int64_t)0xFFED19C8926CE25ELL, (int64_t)0xFFFFFEFD17C0B93FLL, (int64_t)0xFFC6FDEB7D632232LL, (int64_t)0xFFF5FCA48826B413LL, (int64_t)0xFFFFFFA77125C225LL, (int64_t)0xFFF5470295E57C38LL, (int64_t)0xFFFFFA5F8DC46717LL, (int64_t)0xFFFFFFFCFEE84FF3LL, (int64_t)0xFFFFF994E602FD67LL, (int64_t)0xFFFFFF3D5245838FLL, (int64_t)0xF0E691400AB73B80LL, (int64_t)0xFB640655E7C0F3C0LL, (int64_t)0xFDA697358E94D0E0LL, (int64_t)0xFFE696B21CD7F97DLL, (int64_t)0xFFF2E59D24F63B0ALL, (int64_t)0xFF8BD114F257F2B0LL, (int64_t)0xED20C5ACC4849200LL, (int64_t)0xFA5073BD39F24EC0LL };
		static const int64_t output0[] = { (int64_t)0xFFFFFFFF4F5E1277LL, (int64_t)0xFFFFFFFF84E8FD17LL, (int64_t)0xFFFFFFFF8968E1CBLL, (int64_t)0xFFFFFFFF4BB938CBLL, (int64_t)0x65640DB4LL, (int64_t)0x6AF9FC88LL, (int64_t)0x2585B90CLL, (int64_t)0x2176D0FCLL, (int64_t)0x19239F10LL, (int64_t)0xFFFFFFFF3BBB13B3LL, (int64_t)0xAA57798LL, (int64_t)0x7806A3D8LL, (int64_t)0xFFFFFFFF7C3A7437LL, (int64_t)0x1111F6C8LL, (int64_t)0xFFFFFFFFC940C1E3LL, (int64_t)0x62E0535CLL, (int64_t)0xFFFFFFFF88A8B1DBLL, (int64_t)0xFFFFFFFF6FC3BB9FLL, (int64_t)0x5681C718LL, (int64_t)0xFFFFFFFF7F5A88F7LL, (int64_t)0x79E37A18LL, (int64_t)0xFFFFFFFF7D148E9FLL, (int64_t)0x13BDE3DCLL, (int64_t)0x9F3227D4LL, (int64_t)0xFFFFFFFF4742B5F3LL, (int64_t)0xFFFFFFFE6E26FFC5LL, (int64_t)0x1912A5250LL, (int64_t)0x191CC9160LL, (int64_t)0x18FF01E24LL, (int64_t)0xFFFFFFFE6E3203B9LL, (int64_t)0xFFFFFFFE6E457CF9LL, (int64_t)0x191ABC014LL, (int64_t)0xFFFFFFFE6F86C0DDLL, (int64_t)0x191B9A3B0LL, (int64_t)0x191D1D954LL, (int64_t)0xFFFFFFFE6E2A3229LL, (int64_t)0x1913E550CLL, (int64_t)0x191D63368LL, (int64_t)0x18F576378LL, (int64_t)0x191D36C90LL, (int64_t)0xFFFFFFFE6ED9ABB5LL, (int64_t)0x1915831ACLL, (int64_t)0xFFFFFFFE6E52290DLL, (int64_t)0x191AC1B84LL, (int64_t)0x19112AC98LL, (int64_t)0x190EF2320LL, (int64_t)0xFFFFFFFE6F568555LL, (int64_t)0xFFFFFFFE75A37BF1LL, (int64_t)0xFFFFFFFE6E5517A9LL, (int64_t)0xFFFFFFFE6E7D55E9LL, (int64_t)0x19202A084LL, (int64_t)0x1921EAE70LL, (int64_t)0x1921F3614LL, (int64_t)0x1921FB398LL, (int64_t)0x1921C133CLL, (int64_t)0x1921FB508LL, (int64_t)0x1921FAD5CLL, (int64_t)0x1920CC528LL, (int64_t)0xF0F2A508LL, (int64_t)0x1921FA71CLL, (int64_t)0x169CC0B4CLL, (int64_t)0x1921FA910LL, (int64_t)0xDC1922E4LL, (int64_t)0x1921A13C4LL, (int64_t)0x1921FB4DCLL, (int64_t)0x1921FB1A8LL, (int64_t)0x191DC4768LL, (int64_t)0x1920E6160LL, (int64_t)0x1921F83F4LL, (int64_t)0x191E1A10CLL, (int64_t)0x147920D08LL, (int64_t)0x191A6890CLL, (int64_t)0x1921F9850LL, (int64_t)0x1921FB234LL, (int64_t)0x1921FB4F8LL, (int64_t)0xFFFFFFFE922DBB7DLL, (int64_t)0xFFFFFFFF23EE5661LL, (int64_t)0xFFFFFFFE6DE04D45LL, (int64_t)0xFFFFFFFE6FBF0C31LL, (int64_t)0xFFFFFFFE6DE5AB91LL, (int64_t)0xFFFFFFFE6DE0717DLL, (int64_t)0xFFFFFFFE792D6A65LL, (int64_t)0xFFFFFFFE6DE05845LL, (int64_t)0xFFFFFFFE6EDD6B09LL, (int64_t)0xFFFFFFFE6DE04F39LL, (int64_t)0xFFFFFFFE6DE0644DLL, (int64_t)0xFFFFFFFE70C44D81LL, (int64_t)0xFFFFFFFE6DE06299LL, (int64_t)0xFFFFFFFE6E0DCA1DLL, (int64_t)0xFFFFFFFEC0229729LL, (int64_t)0xFFFFFFFE6E082D59LL, (int64_t)0xFFFFFFFE6F30ECE5LL, (int64_t)0xFFFFFFFE6DE04ACDLL, (int64_t)0xFFFFFFFE6DE04AF1LL, (int64_t)0xFFFFFFFE6DE04B29LL, (int64_t)0xFFFFFFFE6DE054CDLL, (int64_t)0xFFFFFFFE6DE05E45LL, (int64_t)0xFFFFFFFE6DE04CF1LL, (int64_t)0xFFFFFFFE6DE04AC9LL, (int64_t)0xFFFFFFFE6DE04AE9LL };
		for (int ndx = 0; ndx < 100; ndx++)
			Util::Check("Fixed64::AtanFast", Fixed64::AtanFast(input0[ndx]), output0[ndx], input0[ndx]);
	}

	// Fixed64.AtanFastest()
	static void Fixed64_AtanFastest()
	{
		static const int64_t input0[] = { (int64_t)0xFFFFFFFF8DB3D8BELL, (int64_t)0xFFFFFFFF0854BDE5LL, (int64_t)0xBDF1C43BLL, (int64_t)0xC4F13E27LL, (int64_t)0xFFFFFFFF77813111LL, (int64_t)0xFFFFFFFF23237959LL, (int64_t)0xC9B0F3F7LL, (int64_t)0xA4429057LL, (int64_t)0xD639FB6FLL, (int64_t)0xFFFFFFFFC15FEC5ALL, (int64_t)0xB8B9C023LL, (int64_t)0xE40692E7LL, (int64_t)0xFFFFFFFF4F87A2E9LL, (int64_t)0x20281646LL, (int64_t)0xFFFFFFFF18C6EBE9LL, (int64_t)0xE07D3513LL, (int64_t)0xFFFFFFFF0290EB29LL, (int64_t)0x7ADD1F92LL, (int64_t)0x71E53946LL, (int64_t)0xFFFFFFFF6567F701LL, (int64_t)0xB927322LL, (int64_t)0x5DE72012LL, (int64_t)0xFFFFFFFF17C4D7E1LL, (int64_t)0x1E87CA36LL, (int64_t)0xF51B92CFLL, (int64_t)0x260E1A965D1LL, (int64_t)0xFFFFFF002DBA8051LL, (int64_t)0x2114E799772LL, (int64_t)0x32A25A403C4LL, (int64_t)0xFFFFFD6762EEAAFFLL, (int64_t)0xFFFFFF8118F921F3LL, (int64_t)0xFFFFFE02510B67B5LL, (int64_t)0x273CEAA8117LL, (int64_t)0xFFFFFED9F7587604LL, (int64_t)0xFFFFFD7754D7B93FLL, (int64_t)0xD7B3F7CDFFLL, (int64_t)0xFFFFFE4612D7B2FDLL, (int64_t)0x2440B68D458LL, (int64_t)0xFFFFFC5B9AB7B768LL, (int64_t)0x13E479877ECLL, (int64_t)0x1F465F3E638LL, (int64_t)0xFFFFFF2D9896D22CLL, (int64_t)0x1CA044B14A4LL, (int64_t)0x3B01DE35030LL, (int64_t)0xFFFFFD983770ACA1LL, (int64_t)0xFFFFFF4D6BF7E30BLL, (int64_t)0xFFFFFCDC555436A9LL, (int64_t)0xFFFFFEF77B8B9B9FLL, (int64_t)0x28A2F2096C4LL, (int64_t)0x3253C83BC1ALL, (int64_t)0x16E5757D0B24D9LL, (int64_t)0xB6A16CEBE446B00LL, (int64_t)0x246BC8659LL, (int64_t)0x4E98EF77B76108LL, (int64_t)0x71B7618A557LL, (int64_t)0x37BEA5F2197ADLL, (int64_t)0x22303C25CA492E00LL, (int64_t)0x2885D6FE943LL, (int64_t)0x90CA102CB6DAD00LL, (int64_t)0x1D38F031FA50LL, (int64_t)0x1DC76990385F89LL, (int64_t)0xEB482EEC2LL, (int64_t)0xB196FBC66CDA000LL, (int64_t)0x5BDEF6340A4F88LL, (int64_t)0x12D18E33E9200500LL, (int64_t)0x589629F6E4813LL, (int64_t)0xF636D75A2LL, (int64_t)0x10CD013E83AAC20LL, (int64_t)0xC3EE6872BF7LL, (int64_t)0x252CA05C6234LL, (int64_t)0xDC2EA099BD4FFLL, (int64_t)0x57685DF8DALL, (int64_t)0x2460B21BC38CEELL, (int64_t)0x3BB012C5BLL, (int64_t)0x2B48ECA7E722LL, (int64_t)0xFFFFFFF1BCE9D5EFLL, (int64_t)0xE734F67DBEF10100LL, (int64_t)0xFFFFFFFB4E37F276LL, (int64_t)0xFFFFF7DB457796EBLL, (int64_t)0xFFFDF170B1767DEALL, (int64_t)0xFFDB8A5E9EFB9D98LL, (int64_t)0xFFFFFFFEE7C678BALL, (int64_t)0xEDC9AA62D902BC00LL, (int64_t)0xFFFFFFFEF2970886LL, (int64_t)0xFFFFA49F97AE439ALL, (int64_t)0xFFFF402BB7061614LL, (int64_t)0xFFFFFFB817F3BC8CLL, (int64_t)0xFFFFFFFBA6A4CCE3LL, (int64_t)0xC9CD07292050C800LL, (int64_t)0xFFFD3B3691D5E718LL, (int64_t)0xFFF72F209F2F6664LL, (int64_t)0xDF514EBF8342FE00LL, (int64_t)0xFA40B806196C9400LL, (int64_t)0xFFFB93AEE42032EBLL, (int64_t)0xE29866EEE171BA00LL, (int64_t)0xFFF9D1C9D326DE2DLL, (int64_t)0xFFFFAD33891745C0LL, (int64_t)0xD74018B4B13A0800LL, (int64_t)0xFFFFFFFE1909B3D8LL, (int64_t)0xFFFD8C2B4A2A3119LL };
		static const int64_t output0[] = { (int64_t)0xFFFFFFFF947EDE37LL, (int64_t)0xFFFFFFFF3B3709B3LL, (int64_t)0xA36F0130LL, (int64_t)0xA7DF9264LL, (int64_t)0xFFFFFFFF829112E3LL, (int64_t)0xFFFFFFFF49D1B957LL, (int64_t)0xAAD1A428LL, (int64_t)0x9216FA5CLL, (int64_t)0xB2576FA8LL, (int64_t)0xFFFFFFFFC29A133FLL, (int64_t)0xA00B57F8LL, (int64_t)0xBA389DACLL, (int64_t)0xFFFFFFFF6574D17BLL, (int64_t)0x1FFC7B28LL, (int64_t)0xFFFFFFFF440270C7LL, (int64_t)0xB83D6E98LL, (int64_t)0xFFFFFFFF383E65FBLL, (int64_t)0x72918F58LL, (int64_t)0x6B2B2098LL, (int64_t)0xFFFFFFFF74E01B4FLL, (int64_t)0xB9115F0LL, (int64_t)0x59FC43ECLL, (int64_t)0xFFFFFFFF4374B3C3LL, (int64_t)0x1E628CE0LL, (int64_t)0xC37281B4LL, (int64_t)0x191B4098CLL, (int64_t)0xFFFFFFFE6EE08D19LL, (int64_t)0x191A3D0DCLL, (int64_t)0x191CEC3B0LL, (int64_t)0xFFFFFFFE6E42E5D5LL, (int64_t)0xFFFFFFFE6FE4CA09LL, (int64_t)0xFFFFFFFE6E60E789LL, (int64_t)0x191B74CC4LL, (int64_t)0xFFFFFFFE6EBF4B85LL, (int64_t)0xFFFFFFFE6E455411LL, (int64_t)0x190EFAB28LL, (int64_t)0xFFFFFFFE6E74AF0DLL, (int64_t)0x191AEA808LL, (int64_t)0xFFFFFFFE6E269985LL, (int64_t)0x19151C6E8LL, (int64_t)0x1919CBD90LL, (int64_t)0xFFFFFFFE6F17FD55LL, (int64_t)0x191908F88LL, (int64_t)0x191DA47CCLL, (int64_t)0xFFFFFFFE6E4ABFD9LL, (int64_t)0xFFFFFFFE6F4F4705LL, (int64_t)0xFFFFFFFE6E31E2A9LL, (int64_t)0xFFFFFFFE6ED83385LL, (int64_t)0x191BAE870LL, (int64_t)0x191CE45E0LL, (int64_t)0x1921FAA18LL, (int64_t)0x1921FB530LL, (int64_t)0x128222F6CLL, (int64_t)0x1921FB204LL, (int64_t)0x191FBABDCLL, (int64_t)0x1921F6BC4LL, (int64_t)0x1921FB540LL, (int64_t)0x191BA9FCCLL, (int64_t)0x1921FB528LL, (int64_t)0x19216F208LL, (int64_t)0x1921FACACLL, (int64_t)0x180BDDF38LL, (int64_t)0x1921FB530LL, (int64_t)0x1921FB27CLL, (int64_t)0x1921FB538LL, (int64_t)0x1921F8708LL, (int64_t)0x18183E9D8LL, (int64_t)0x1921FB454LL, (int64_t)0x1920ACB18LL, (int64_t)0x19218D180LL, (int64_t)0x1921FA2ACLL, (int64_t)0x18F3201C0LL, (int64_t)0x1921FAE3CLL, (int64_t)0x14F1D7EA4LL, (int64_t)0x19219CB48LL, (int64_t)0xFFFFFFFE7FCD0671LL, (int64_t)0xFFFFFFFE6DE04AC5LL, (int64_t)0xFFFFFFFEA397BE91LL, (int64_t)0xFFFFFFFE6DFFBE99LL, (int64_t)0xFFFFFFFE6DE0C741LL, (int64_t)0xFFFFFFFE6DE051C1LL, (int64_t)0xFFFFFFFF2B5CEC31LL, (int64_t)0xFFFFFFFE6DE04AC9LL, (int64_t)0xFFFFFFFF30657539LL, (int64_t)0xFFFFFFFE6DE317FDLL, (int64_t)0xFFFFFFFE6DE1A079LL, (int64_t)0xFFFFFFFE71703125LL, (int64_t)0xFFFFFFFEA7BC69FDLL, (int64_t)0xFFFFFFFE6DE04AC1LL, (int64_t)0xFFFFFFFE6DE0A731LL, (int64_t)0xFFFFFFFE6DE067C9LL, (int64_t)0xFFFFFFFE6DE04AC1LL, (int64_t)0xFFFFFFFE6DE04AE9LL, (int64_t)0xFFFFFFFE6DE084A5LL, (int64_t)0xFFFFFFFE6DE04AC5LL, (int64_t)0xFFFFFFFE6DE07429LL, (int64_t)0xFFFFFFFE6DE36239LL, (int64_t)0xFFFFFFFE6DE04AC1LL, (int64_t)0xFFFFFFFEE9C61B61LL, (int64_t)0xFFFFFFFE6DE0B321LL };
		for (int ndx = 0; ndx < 100; ndx++)
			Util::Check("Fixed64::AtanFastest", Fixed64::AtanFastest(input0[ndx]), output0[ndx], input0[ndx]);
	}

	// Fixed32.Atan()
	static void Fixed32_Atan()
	{
		static const int32_t input0[] = { (int32_t)0xFFFF8EFB, (int32_t)0xFFFF9776, (int32_t)0xF611, (int32_t)0xFFFFC4E4, (int32_t)0xFFFF7C85, (int32_t)0xFFFFF016, (int32_t)0xFFFF6BFF, (int32_t)0xF3D6, (int32_t)0xFFFF9739, (int32_t)0xFFFF7763, (int32_t)0x4726, (int32_t)0xCA7C, (int32_t)0xE33E, (int32_t)0xFFFFAD03, (int32_t)0x7204, (int32_t)0x6267, (int32_t)0xFFFF6123, (int32_t)0xD39A, (int32_t)0xFFFF88AB, (int32_t)0xFFFFD7E7, (int32_t)0xFFFFD1F0, (int32_t)0xFFFF1F1E, (int32_t)0x9EE5, (int32_t)0x9C13, (int32_t)0x9AE6, (int32_t)0x17F7960, (int32_t)0xFEADC9EB, (int32_t)0xFCE2A953, (int32_t)0xFCE16D0F, (int32_t)0x28DDEF4, (int32_t)0x1298143, (int32_t)0x3B835CE, (int32_t)0xFC6EE2DF, (int32_t)0x2461817, (int32_t)0xFE5986CA, (int32_t)0xFF4CE97D, (int32_t)0xFC477E63, (int32_t)0x6E054A, (int32_t)0x20682DC, (int32_t)0xFC35C282, (int32_t)0xFE810EFA, (int32_t)0xFDE2B6D7, (int32_t)0x226AC0A, (int32_t)0x205AADD, (int32_t)0x376AFFF, (int32_t)0x1E50ACA, (int32_t)0xFC47B1E4, (int32_t)0x5C5DDB, (int32_t)0x2FC4910, (int32_t)0xFE34D019, (int32_t)0x41A904, (int32_t)0xF24C2A, (int32_t)0x3E360D4, (int32_t)0x1717D2D, (int32_t)0x50759, (int32_t)0x85522, (int32_t)0x6F2C52, (int32_t)0x58149, (int32_t)0x11BB170, (int32_t)0xD2E8B9, (int32_t)0x3D105, (int32_t)0x2E585, (int32_t)0x13202E86, (int32_t)0x5E369C, (int32_t)0x12265C3, (int32_t)0x26DAC6C, (int32_t)0xF3A178A, (int32_t)0x46794, (int32_t)0x19C73, (int32_t)0x14B24C, (int32_t)0x2905052, (int32_t)0x1D90C9F, (int32_t)0x47554, (int32_t)0xB8A65, (int32_t)0x2FF8C, (int32_t)0xFFFA39FB, (int32_t)0xFFF00B2B, (int32_t)0xFFFE59FF, (int32_t)0xEF4F896C, (int32_t)0xFFFE35AD, (int32_t)0xFD733820, (int32_t)0xF813D76F, (int32_t)0xFFF79C38, (int32_t)0xF3AB1A23, (int32_t)0xFFD177D5, (int32_t)0xFFFDC333, (int32_t)0xFFF2F24B, (int32_t)0xFFBC6807, (int32_t)0xFE531BD1, (int32_t)0xFFFE05AD, (int32_t)0xE11895CB, (int32_t)0xF15C85A9, (int32_t)0xCEC0D399, (int32_t)0xFFF87D0F, (int32_t)0xECA02CC0, (int32_t)0xFFF91B7A, (int32_t)0xFFE10383, (int32_t)0xFFEC5840, (int32_t)0xFFFA911E, (int32_t)0xFFF0CAA5 };
		static const int32_t output0[] = { (int32_t)0xFFFF9592, (int32_t)0xFFFF9CC1, (int32_t)0xC3FF, (int32_t)0xFFFFC5E9, (int32_t)0xFFFF868A, (int32_t)0xFFFFF01C, (int32_t)0xFFFF79CF, (int32_t)0xC2D5, (int32_t)0xFFFF9C8D, (int32_t)0xFFFF8283, (int32_t)0x4565, (int32_t)0xAB50, (int32_t)0xB9D8, (int32_t)0xFFFFAFC0, (int32_t)0x6B43, (int32_t)0x5DF1, (int32_t)0xFFFF71D2, (int32_t)0xB0D3, (int32_t)0xFFFF9056, (int32_t)0xFFFFD83A, (int32_t)0xFFFFD26D, (int32_t)0xFFFF477B, (int32_t)0x8E34, (int32_t)0x8C28, (int32_t)0x8B4C, (int32_t)0x19175, (int32_t)0xFFFE6EA3, (int32_t)0xFFFE6E34, (int32_t)0xFFFE6E34, (int32_t)0x191BB, (int32_t)0x19143, (int32_t)0x191DB, (int32_t)0xFFFE6E29, (int32_t)0x191AF, (int32_t)0xFFFE6E7D, (int32_t)0xFFFE6F4F, (int32_t)0xFFFE6E26, (int32_t)0x18FCC, (int32_t)0x191A1, (int32_t)0xFFFE6E25, (int32_t)0xFFFE6E8D, (int32_t)0xFFFE6E5B, (int32_t)0x191A8, (int32_t)0x191A1, (int32_t)0x191D6, (int32_t)0x19198, (int32_t)0xFFFE6E26, (int32_t)0x18F5A, (int32_t)0x191CA, (int32_t)0xFFFE6E70, (int32_t)0x18E39, (int32_t)0x19111, (int32_t)0x191DE, (int32_t)0x1916E, (int32_t)0x15FDF, (int32_t)0x1738C, (int32_t)0x18FD2, (int32_t)0x1641F, (int32_t)0x19138, (int32_t)0x190E9, (int32_t)0x15085, (int32_t)0x13D06, (int32_t)0x19212, (int32_t)0x18F68, (int32_t)0x1913E, (int32_t)0x191B6, (int32_t)0x1920F, (int32_t)0x158F9, (int32_t)0x103EB, (int32_t)0x185C3, (int32_t)0x191BC, (int32_t)0x19195, (int32_t)0x159A3, (int32_t)0x17BFF, (int32_t)0x13FB6, (int32_t)0xFFFE99C9, (int32_t)0xFFFE7DE7, (int32_t)0xFFFEF979, (int32_t)0xFFFE6DF1, (int32_t)0xFFFEF049, (int32_t)0xFFFE6E46, (int32_t)0xFFFE6E02, (int32_t)0xFFFE8C40, (int32_t)0xFFFE6DF6, (int32_t)0xFFFE7362, (int32_t)0xFFFED97A, (int32_t)0xFFFE8174, (int32_t)0xFFFE71AB, (int32_t)0xFFFE6E7A, (int32_t)0xFFFEE5B8, (int32_t)0xFFFE6DEA, (int32_t)0xFFFE6DF3, (int32_t)0xFFFE6DE7, (int32_t)0xFFFE8FC3, (int32_t)0xFFFE6DEF, (int32_t)0xFFFE92C4, (int32_t)0xFFFE7624, (int32_t)0xFFFE7AE5, (int32_t)0xFFFE9C7A, (int32_t)0xFFFE7EB0 };
		for (int ndx = 0; ndx < 100; ndx++)
			Util::Check("Fixed32::Atan", Fixed32::Atan(input0[ndx]), output0[ndx], input0[ndx]);
	}

	// Fixed32.AtanFast()
	static void Fixed32_AtanFast()
	{
		static const int32_t input0[] = { (int32_t)0xC7ED, (int32_t)0xBDFB, (int32_t)0xFFFFFE7C, (int32_t)0x23CA, (int32_t)0x3434, (int32_t)0x97CF, (int32_t)0xFFFFD2CE, (int32_t)0xFFFFEB2C, (int32_t)0xFFFFFE00, (int32_t)0xF8B6, (int32_t)0xDDB8, (int32_t)0xFFFFDE32, (int32_t)0xFFFFA0EA, (int32_t)0xB43, (int32_t)0xC463, (int32_t)0xFFFFB4E5, (int32_t)0xC7E3, (int32_t)0xFFFF1728, (int32_t)0xFFFF2539, (int32_t)0xBB, (int32_t)0xFFFFCBD7, (int32_t)0xFFFFD5EF, (int32_t)0xE6D, (int32_t)0xF52E, (int32_t)0xFFFFC647, (int32_t)0x280EF16, (int32_t)0x14369AC, (int32_t)0x37C7C6A, (int32_t)0xFF065E21, (int32_t)0x33C6F7A, (int32_t)0x28DB2F8, (int32_t)0x3BD07F0, (int32_t)0x2F2309E, (int32_t)0xA201F2, (int32_t)0xFD6B11D3, (int32_t)0x251A87D, (int32_t)0xFE575A52, (int32_t)0x12A905D, (int32_t)0xFDE0B124, (int32_t)0xC66F74, (int32_t)0x15689B8, (int32_t)0x262D860, (int32_t)0x36C3865, (int32_t)0x115ACFB, (int32_t)0xFD2A760F, (int32_t)0xFFEE0649, (int32_t)0x436695, (int32_t)0xFF9DFFFF, (int32_t)0xFEA07093, (int32_t)0x2F1CA5, (int32_t)0x13F6DE, (int32_t)0x13FA9C, (int32_t)0x9B52E, (int32_t)0x2ADDFD0, (int32_t)0x14700879, (int32_t)0x6227F7, (int32_t)0x1BDD07, (int32_t)0x98AD0D, (int32_t)0x5E29C, (int32_t)0x7ADD038, (int32_t)0x3B2FE, (int32_t)0x5B90BF, (int32_t)0x2432F, (int32_t)0x11B4EC0, (int32_t)0x4ACB2, (int32_t)0x292B387F, (int32_t)0xDE4711, (int32_t)0x4CF3270, (int32_t)0x1E943A, (int32_t)0x2520A, (int32_t)0x1E3FC, (int32_t)0xA6155, (int32_t)0xAD33879, (int32_t)0x62F3D1, (int32_t)0xC505E7A, (int32_t)0xFEC552C5, (int32_t)0xFF96DBAB, (int32_t)0xEA218676, (int32_t)0xF23C2C2E, (int32_t)0xE89DD04B, (int32_t)0xFFEFD5F6, (int32_t)0xFFF845EA, (int32_t)0xFE5DB86B, (int32_t)0xF0D57202, (int32_t)0xFE9B056A, (int32_t)0xFF6733A0, (int32_t)0xFAA5E23E, (int32_t)0xFFF8C095, (int32_t)0xFC904831, (int32_t)0xFC9F0B8D, (int32_t)0xFFAE20A2, (int32_t)0xF929FFB0, (int32_t)0xFFA367C8, (int32_t)0xFFB393BE, (int32_t)0xFFA56005, (int32_t)0xFFF8A21B, (int32_t)0xFBB7FF1C, (int32_t)0xFFE047B5, (int32_t)0xFF96A96B, (int32_t)0xFFFA1CB5 };
		static const int32_t output0[] = { (int32_t)0xA9BB, (int32_t)0xA370, (int32_t)0xFFFFFE7C, (int32_t)0x238F, (int32_t)0x337F, (int32_t)0x8906, (int32_t)0xFFFFD344, (int32_t)0xFFFFEB37, (int32_t)0xFFFFFE00, (int32_t)0xC55D, (int32_t)0xB6B9, (int32_t)0xFFFFDE63, (int32_t)0xFFFFA4F4, (int32_t)0xB41, (int32_t)0xA785, (int32_t)0xFFFFB6F1, (int32_t)0xA9B5, (int32_t)0xFFFF430E, (int32_t)0xFFFF4AF7, (int32_t)0xBA, (int32_t)0xFFFFCC8B, (int32_t)0xFFFFD64E, (int32_t)0xE69, (int32_t)0xC389, (int32_t)0xFFFFC73A, (int32_t)0x191B9, (int32_t)0x19155, (int32_t)0x191D6, (int32_t)0xFFFE6EE8, (int32_t)0x191D0, (int32_t)0x191BB, (int32_t)0x191DB, (int32_t)0x191C9, (int32_t)0x1908B, (int32_t)0xFFFE6E45, (int32_t)0x191B1, (int32_t)0xFFFE6E7C, (int32_t)0x19144, (int32_t)0xFFFE6E5A, (int32_t)0x190D5, (int32_t)0x19160, (int32_t)0x191B4, (int32_t)0x191D5, (int32_t)0x19133, (int32_t)0xFFFE6E3C, (int32_t)0xFFFE7C1C, (int32_t)0x18E53, (int32_t)0xFFFE707E, (int32_t)0xFFFE6E9C, (int32_t)0x18CB1, (int32_t)0x18550, (int32_t)0x18552, (int32_t)0x177D8, (int32_t)0x191C0, (int32_t)0x19213, (int32_t)0x18F84, (int32_t)0x188F0, (int32_t)0x19072, (int32_t)0x16709, (int32_t)0x191FE, (int32_t)0x14E89, (int32_t)0x18F54, (int32_t)0x12795, (int32_t)0x19138, (int32_t)0x15C2C, (int32_t)0x19219, (int32_t)0x190F9, (int32_t)0x191EA, (int32_t)0x189C1, (int32_t)0x129F5, (int32_t)0x11592, (int32_t)0x17989, (int32_t)0x19208, (int32_t)0x18F89, (int32_t)0x1920B, (int32_t)0xFFFE6EB2, (int32_t)0xFFFE7051, (int32_t)0xFFFE6DED, (int32_t)0xFFFE6DF4, (int32_t)0xFFFE6DEC, (int32_t)0xFFFE7DB3, (int32_t)0xFFFE8ED4, (int32_t)0xFFFE6E7E, (int32_t)0xFFFE6DF2, (int32_t)0xFFFE6E99, (int32_t)0xFFFE6F8E, (int32_t)0xFFFE6E11, (int32_t)0xFFFE90FB, (int32_t)0xFFFE6E2C, (int32_t)0xFFFE6E2D, (int32_t)0xFFFE7102, (int32_t)0xFFFE6E07, (int32_t)0xFFFE70A5, (int32_t)0xFFFE713B, (int32_t)0xFFFE70B5, (int32_t)0xFFFE906C, (int32_t)0xFFFE6E1D, (int32_t)0xFFFE75F3, (int32_t)0xFFFE7050, (int32_t)0xFFFE98F3 };
		for (int ndx = 0; ndx < 100; ndx++)
			Util::Check("Fixed32::AtanFast", Fixed32::AtanFast(input0[ndx]), output0[ndx], input0[ndx]);
	}

	// Fixed32.AtanFastest()
	static void Fixed32_AtanFastest()
	{
		static const int32_t input0[] = { (int32_t)0xDE47, (int32_t)0x99D1, (int32_t)0xFFFF3274, (int32_t)0xFFFF7997, (int32_t)0xFFFFEA76, (int32_t)0xFFFF2283, (int32_t)0xFFFFFBC3, (int32_t)0x8580, (int32_t)0xAF87, (int32_t)0xFFFF9451, (int32_t)0xFC5F, (int32_t)0xFFFFE836, (int32_t)0x5A61, (int32_t)0xFFFF92A4, (int32_t)0xFFFFFD4D, (int32_t)0xD922, (int32_t)0xAFD9, (int32_t)0xFFFF770C, (int32_t)0xF3CD, (int32_t)0x4805, (int32_t)0xFFFF6BA5, (int32_t)0xFFFFB49E, (int32_t)0xFFFF11BD, (int32_t)0x4FA6, (int32_t)0x43FD, (int32_t)0xFE683D76, (int32_t)0x224FCA5, (int32_t)0xFEFC0DA3, (int32_t)0xFC2A1E3D, (int32_t)0xF8BDA8, (int32_t)0x2E6D016, (int32_t)0xFD0EFB89, (int32_t)0xFF4AD8FA, (int32_t)0x13DE203, (int32_t)0x39C35B4, (int32_t)0xFFE4AE93, (int32_t)0xFCF8564E, (int32_t)0xFF191831, (int32_t)0xFF2B676D, (int32_t)0x4C9629, (int32_t)0xFC4D0DFD, (int32_t)0x3C71658, (int32_t)0xFEEA9070, (int32_t)0xFF49EC8B, (int32_t)0x197F3E6, (int32_t)0xFC18D512, (int32_t)0xFCD1F66F, (int32_t)0xFD80748A, (int32_t)0x388402E, (int32_t)0x50A518, (int32_t)0x21A6F4, (int32_t)0x72CC28, (int32_t)0x27F7E5, (int32_t)0xD732DFE, (int32_t)0x30FCDE19, (int32_t)0x119F195, (int32_t)0x697E56F, (int32_t)0x499862, (int32_t)0x1617F41, (int32_t)0x4CEB7, (int32_t)0x11280E, (int32_t)0x341E6, (int32_t)0x5C0159F, (int32_t)0x85498, (int32_t)0x39E8F3, (int32_t)0x12066BEF, (int32_t)0x188C5, (int32_t)0x12FA4, (int32_t)0x17444D, (int32_t)0x115B4, (int32_t)0xA512BC8, (int32_t)0x55E8D4, (int32_t)0xD6442EE, (int32_t)0x460E2F, (int32_t)0x1837AD0, (int32_t)0xFFF6F9D3, (int32_t)0xC513E828, (int32_t)0xFE4E9F58, (int32_t)0xD7FD3833, (int32_t)0xFE318245, (int32_t)0xFFF8D1FA, (int32_t)0xFEC07D30, (int32_t)0xFFC64B97, (int32_t)0xFFA17ED4, (int32_t)0xFFF348BD, (int32_t)0xFFD705E4, (int32_t)0xFAB1394D, (int32_t)0xFF031A53, (int32_t)0xFCF21AF6, (int32_t)0xFFD7C515, (int32_t)0xFBBFC60C, (int32_t)0xFD6ADB5A, (int32_t)0xF87103C6, (int32_t)0xFFF68254, (int32_t)0xFFF52E79, (int32_t)0xE6958F85, (int32_t)0xFFF6834E, (int32_t)0xFFFC0051, (int32_t)0xC5869ABA, (int32_t)0xF3264FE1 };
		static const int32_t output0[] = { (int32_t)0xB6FC, (int32_t)0x8A8D, (int32_t)0xFFFF52D4, (int32_t)0xFFFF8432, (int32_t)0xFFFFEA82, (int32_t)0xFFFF4976, (int32_t)0xFFFFFBC2, (int32_t)0x7B16, (int32_t)0x99E7, (int32_t)0xFFFF9A12, (int32_t)0xC736, (int32_t)0xFFFFE847, (int32_t)0x56DC, (int32_t)0xFFFF98A6, (int32_t)0xFFFFFD4C, (int32_t)0xB408, (int32_t)0x9A1F, (int32_t)0xFFFF8235, (int32_t)0xC2C2, (int32_t)0x462E, (int32_t)0xFFFF797F, (int32_t)0xFFFFB6B6, (int32_t)0xFFFF402F, (int32_t)0x4D31, (int32_t)0x426E, (int32_t)0xFFFE6E82, (int32_t)0x191A8, (int32_t)0xFFFE6EDE, (int32_t)0xFFFE6E24, (int32_t)0x19118, (int32_t)0x191C7, (int32_t)0xFFFE6E39, (int32_t)0xFFFE6F4B, (int32_t)0x19151, (int32_t)0x191D9, (int32_t)0xFFFE7741, (int32_t)0xFFFE6E36, (int32_t)0xFFFE6EFD, (int32_t)0xFFFE6F16, (int32_t)0x18EC8, (int32_t)0xFFFE6E27, (int32_t)0x191DC, (int32_t)0xFFFE6ECE, (int32_t)0xFFFE6F49, (int32_t)0x1917F, (int32_t)0xFFFE6E23, (int32_t)0xFFFE6E32, (int32_t)0xFFFE6E48, (int32_t)0x191D7, (int32_t)0x18EF3, (int32_t)0x18A83, (int32_t)0x18FE4, (int32_t)0x18BB8, (int32_t)0x1920C, (int32_t)0x1921A, (int32_t)0x19137, (int32_t)0x191F9, (int32_t)0x18EA5, (int32_t)0x19166, (int32_t)0x15DA4, (int32_t)0x18336, (int32_t)0x145DE, (int32_t)0x191F3, (int32_t)0x17388, (int32_t)0x18DB4, (int32_t)0x19211, (int32_t)0xFE30, (int32_t)0xDED7, (int32_t)0x18720, (int32_t)0xD37B, (int32_t)0x19207, (int32_t)0x18F25, (int32_t)0x1920C, (int32_t)0x18E77, (int32_t)0x19176, (int32_t)0xFFFE8A24, (int32_t)0xFFFE6DE6, (int32_t)0xFFFE6E79, (int32_t)0xFFFE6DE8, (int32_t)0xFFFE6E6F, (int32_t)0xFFFE914E, (int32_t)0xFFFE6EAF, (int32_t)0xFFFE7251, (int32_t)0xFFFE7097, (int32_t)0xFFFE81FB, (int32_t)0xFFFE7420, (int32_t)0xFFFE6E12, (int32_t)0xFFFE6EE5, (int32_t)0xFFFE6E35, (int32_t)0xFFFE743E, (int32_t)0xFFFE6E1E, (int32_t)0xFFFE6E45, (int32_t)0xFFFE6E03, (int32_t)0xFFFE88C1, (int32_t)0xFFFE8578, (int32_t)0xFFFE6DEC, (int32_t)0xFFFE88C4, (int32_t)0xFFFEAC98, (int32_t)0xFFFE6DE6, (int32_t)0xFFFE6DF5 };
		for (int ndx = 0; ndx < 100; ndx++)
			Util::Check("Fixed32::AtanFastest", Fixed32::AtanFastest(input0[ndx]), output0[ndx], input0[ndx]);
	}

	// Fixed64.Atan2()
	static void Fixed64_Atan2()
	{
		static const int64_t input0[] = { (int64_t)0xFFFFFE6BA836D0C0LL, (int64_t)0xFFFFFFFFFFFFAFF8LL, (int64_t)0x3281ACF1F0LL, (int64_t)0x137A3F35543LL, (int64_t)0xFFFFFFFC67F45CE2LL, (int64_t)0xFFFFFF78DC5DE661LL, (int64_t)0xB5265DFBLL, (int64_t)0x12DA8F7D353LL, (int64_t)0xFFFFFFFFFFF90ACALL, (int64_t)0xFFFFFFFAD9A6CEA7LL, (int64_t)0x34278261LL, (int64_t)0x131FCLL, (int64_t)0xFFFFFFFFF93AD95ELL, (int64_t)0xFFFFFDCCB0E7087BLL, (int64_t)0x1A89FAE4D2ELL, (int64_t)0x1F0976693LL, (int64_t)0xFFFFFFFDD76F5B35LL, (int64_t)0xFFFFFFFFFFE8EE0ALL, (int64_t)0x19546C67C62LL, (int64_t)0x231DLL, (int64_t)0xFFFFFFFFFFFF1BA5LL, (int64_t)0xFFFFFFFFFB4862E8LL, (int64_t)0x3E9238LL, (int64_t)0x1368E6882BALL, (int64_t)0xFFFFFFFFFFE679A2LL, (int64_t)0xFFFFFFFFFFFEBCF9LL, (int64_t)0x14ADD66C9LL, (int64_t)0x4A33A733LL, (int64_t)0xFFFFFFFFFFFC75D0LL, (int64_t)0xFFFFFFFD9487C55BLL, (int64_t)0x382AADBC427LL, (int64_t)0x2B71035898LL, (int64_t)0xFFFFFFFF7B3C6231LL, (int64_t)0xFFFFFFFFFFFF424ALL, (int64_t)0xFFFFFFFFE1AB7D89LL, (int64_t)0xFFFFFD70AC9C3CCCLL, (int64_t)0x1499A5F72DFFLL, (int64_t)0xA5E01E9LL, (int64_t)0xFFFFFFF9B71C8BDCLL, (int64_t)0xFFFFFFF0B43531F4LL, (int64_t)0x21D2A5F9LL, (int64_t)0x30018857LL, (int64_t)0xFFFFFFFFFDF4DB14LL, (int64_t)0xFFFFFFFF75B4DF6CLL, (int64_t)0x3007CCALL, (int64_t)0x5979BB4D4BLL, (int64_t)0xFFFFE9D0FD3F6A78LL, (int64_t)0xFFFFFB13E86F5A77LL, (int64_t)0x37763FCELL, (int64_t)0x212227ED03LL, (int64_t)0xFFFFFFFC630553BFLL, (int64_t)0xFFFFFFFFFF769299LL, (int64_t)0x2B398724B1LL, (int64_t)0x397AAAEA86LL, (int64_t)0xFFFFFFFF46D2D262LL, (int64_t)0xFFFFFFFFFA30A598LL, (int64_t)0x7BB4B036LL, (int64_t)0x25D2A2ED214LL, (int64_t)0xFFFFFDE9B504E837LL, (int64_t)0xFFFFFFFFFCE73704LL, (int64_t)0x23A6C12LL, (int64_t)0x432649B63DLL, (int64_t)0xFFFFFFFFFF6974A2LL, (int64_t)0xFFFFFD8201526756LL, (int64_t)0x575264FLL, (int64_t)0x91C3BALL, (int64_t)0xFFFFFFFFFF23591ALL, (int64_t)0xFFFFFE5ACEB5C833LL, (int64_t)0xFFFFF9032CBC8A97LL, (int64_t)0xF9505685569EC7C0LL, (int64_t)0x36EAD4D9DLL, (int64_t)0x1137FB5AF184BLL, (int64_t)0xFFF6E070CBA5AB94LL, (int64_t)0xFFFFFFFB604EAFE9LL, (int64_t)0x1C90CB684LL, (int64_t)0x1AB4BC427LL, (int64_t)0xFDB139FA3EC87780LL, (int64_t)0xFFFFFFFE2704C639LL, (int64_t)0x3F989F15DLL, (int64_t)0x44369E92D53D200LL, (int64_t)0xFFFEFD0248EB8524LL, (int64_t)0xFF52452841D55F28LL, (int64_t)0x2A63A63BAC85AC00LL, (int64_t)0x158FF70838854700LL, (int64_t)0xFE6DC76A543E3970LL, (int64_t)0xFFFFA2949D890CCFLL, (int64_t)0x22BB1FE4B2282800LL, (int64_t)0xB57A0D9353LL, (int64_t)0xFDCFFC305D95F100LL, (int64_t)0xFFFFECC9C18F52B0LL, (int64_t)0x397B3B4DB0684800LL, (int64_t)0x2F4CFE68624ALL, (int64_t)0xFFFE42019A4B8E4FLL, (int64_t)0xFFFFFFFE8918CB3DLL, (int64_t)0xD78955BC8LL, (int64_t)0x23BB6E1A1LL, (int64_t)0xFFFFFFF600BB4515LL, (int64_t)0xFFFFFFFCEF373F82LL, (int64_t)0x18472EA843LL, (int64_t)0xCF206E030C272LL };
		static const int64_t input1[] = { (int64_t)0xFFFFFFC9FC8C4469LL, (int64_t)0xFFFFFFFFFDFE51E8LL, (int64_t)0x935B2C2089LL, (int64_t)0x215CB4854LL, (int64_t)0xFFFFFF67CFE5BD1BLL, (int64_t)0xFFFFFFFFAD187388LL, (int64_t)0x8670A072A2LL, (int64_t)0x196514A0D30LL, (int64_t)0xFFFFFFFFBD5EBE99LL, (int64_t)0xFFFFF0F8E54E7E86LL, (int64_t)0x1576EACAEE4LL, (int64_t)0xB907125CALL, (int64_t)0xFFFFFFFFFB8075EALL, (int64_t)0xFFFFFE3E4E532DD5LL, (int64_t)0x14EEFD26LL, (int64_t)0x6B7C817F9LL, (int64_t)0xFFFFFFFFF976052ELL, (int64_t)0xFFFFEEDB7D93C5B6LL, (int64_t)0x52A54A4LL, (int64_t)0x12EDCD52C700LL, (int64_t)0xFFFFFFA4CF65C51DLL, (int64_t)0xFFFFFFFD9EBB86EALL, (int64_t)0xA234537608LL, (int64_t)0x982F9BC0B78LL, (int64_t)0xFFFFFFD8F9560AF3LL, (int64_t)0xFFFFFFF36B57AEEBLL, (int64_t)0x9866183LL, (int64_t)0x83359DLL, (int64_t)0xFFFFFF4F1E7F566BLL, (int64_t)0xFFFFFFFBEBA2BC01LL, (int64_t)0xB474B288BALL, (int64_t)0x9A686386F7LL, (int64_t)0xFFFFFFFC90B78861LL, (int64_t)0xFFFFFFFF95340614LL, (int64_t)0xFFFFFFFFF5C34FF8LL, (int64_t)0xFFFFFFFFFD8D0AABLL, (int64_t)0x308EA8B4LL, (int64_t)0x228EB5B3193LL, (int64_t)0xFFFFFFFFFED6C55CLL, (int64_t)0xFFFFFFFFCD36CD4FLL, (int64_t)0xBD1FF257LL, (int64_t)0xBAA947LL, (int64_t)0xFFFFFFFFFF9C7C58LL, (int64_t)0xFFFFFFFFFF9B936ALL, (int64_t)0x6DD2EEB30LL, (int64_t)0x1581B4EA05FLL, (int64_t)0xFFFFFFFF9D17FECCLL, (int64_t)0xFFFFFFFFFF9DB7AELL, (int64_t)0x26C83204ALL, (int64_t)0x9088LL, (int64_t)0xFFFFFFFFFFFFEC64LL, (int64_t)0xFFFFFFFDC9D20E54LL, (int64_t)0x5639LL, (int64_t)0x1AB74E3BA5LL, (int64_t)0xFFFFFE1330DD9428LL, (int64_t)0xFFFFFFFFFFFF7391LL, (int64_t)0x2B9CD2ELL, (int64_t)0x10F64LL, (int64_t)0xFFFFFFFFFEB5B930LL, (int64_t)0xFFFFFFFFFF34C62CLL, (int64_t)0x3CDBFB0LL, (int64_t)0x54EB2E93LL, (int64_t)0xFFFFFFFFFFED2E4ELL, (int64_t)0xFFFFFFFFFFDF69D1LL, (int64_t)0x42E8ALL, (int64_t)0x8E3ALL, (int64_t)0xFFFFFFFF83043E14LL, (int64_t)0xFFFFFFFFFFFE2454LL, (int64_t)0xFFFFFD2F2069CBB2LL, (int64_t)0xFFFFC90072F73885LL, (int64_t)0x3704DC28D8E59C00LL, (int64_t)0x17459D53FD04940LL, (int64_t)0xFFFFFFFD78B1E76DLL, (int64_t)0xFFFFBA726F7B6219LL, (int64_t)0x3E3A6610ELL, (int64_t)0x11E27955FLL, (int64_t)0xFF0DDC1209DAD6B8LL, (int64_t)0xED265CBAAEDA6200LL, (int64_t)0xE9D7C4DA02LL, (int64_t)0x173D6BF2C62BLL, (int64_t)0xFFFFFFFBE424E9F9LL, (int64_t)0xFFFECFB38DA9C9F6LL, (int64_t)0x313BCE5837925A0LL, (int64_t)0x1619217103E1FALL, (int64_t)0xFFF8045F024DABCBLL, (int64_t)0xFFFFFC9AF449CC44LL, (int64_t)0x50D29AD2910FLL, (int64_t)0x2C57C35FF0A390LL, (int64_t)0xFFFFFFF04360E618LL, (int64_t)0xFFFFF5020310190ELL, (int64_t)0x347117C066CLL, (int64_t)0x17470F7B32C82200LL, (int64_t)0xF88E3A7803E44480LL, (int64_t)0xFFFB5B1C8B86A417LL, (int64_t)0x2788B5D49A02C200LL, (int64_t)0x63AD2084CC0F5LL, (int64_t)0xEA085A0F49FDCB00LL, (int64_t)0xCCD605F754123000LL, (int64_t)0xAAF79CF64D0F800LL, (int64_t)0xC0B67F6F821FF8LL };
		static const int64_t output0[] = { (int64_t)0xFFFFFFFE4BE14BBCLL, (int64_t)0xFFFFFFFCDBE8776FLL, (int64_t)0x54882CA8LL, (int64_t)0x190693978LL, (int64_t)0xFFFFFFFCE1CBEEEBLL, (int64_t)0xFFFFFFFE6D433E24LL, (int64_t)0x158F108LL, (int64_t)0xA37D95F8LL, (int64_t)0xFFFFFFFCDBDB510BLL, (int64_t)0xFFFFFFFCDC184FB3LL, (int64_t)0x26E068LL, (int64_t)0x1A6CLL, (int64_t)0xFFFFFFFDD7BF0314LL, (int64_t)0xFFFFFFFDC16823F4LL, (int64_t)0x19213166CLL, (int64_t)0x47F696D4LL, (int64_t)0xFFFFFFFE6AD8C898LL, (int64_t)0xFFFFFFFCDBC096C7LL, (int64_t)0x1921C7204LL, (int64_t)0x0LL, (int64_t)0xFFFFFFFCDBC097F3LL, (int64_t)0xFFFFFFFCDDBBFC17LL, (int64_t)0x62BCLL, (int64_t)0x2079908CLL, (int64_t)0xFFFFFFFCDBC13CDFLL, (int64_t)0xFFFFFFFCDBC0AF1FLL, (int64_t)0x18AC194C4LL, (int64_t)0x1905B0930LL, (int64_t)0xFFFFFFFCDBC09A8FLL, (int64_t)0xFFFFFFFD64CEA8C7LL, (int64_t)0x15F648C30LL, (int64_t)0x463573BCLL, (int64_t)0xFFFFFFFD021DC3C7LL, (int64_t)0xFFFFFFFCDBC25C2FLL, (int64_t)0xFFFFFFFE1A8B5738LL, (int64_t)0xFFFFFFFE6DDF55D8LL, (int64_t)0x1921D59E0LL, (int64_t)0x4CCC4LL, (int64_t)0xFFFFFFFE6DB0FF84LL, (int64_t)0xFFFFFFFE6A8E5E94LL, (int64_t)0x2D4DC50CLL, (int64_t)0x18E3C61D8LL, (int64_t)0xFFFFFFFE3DC0FED0LL, (int64_t)0xFFFFFFFE6D2664D0LL, (int64_t)0x6FF580LL, (int64_t)0x411FA734LL, (int64_t)0xFFFFFFFE6DDBD560LL, (int64_t)0xFFFFFFFE6DE036CCLL, (int64_t)0x16D223A8LL, (int64_t)0x1921FB0ECLL, (int64_t)0xFFFFFFFE6DE04554LL, (int64_t)0xFFFFFFFCDBFEB8D3LL, (int64_t)0x1921FB34CLL, (int64_t)0x122BDB3D8LL, (int64_t)0xFFFFFFFCDC20C707LL, (int64_t)0xFFFFFFFE6DC81F20LL, (int64_t)0x18C7BE4B4LL, (int64_t)0x1921FB4DCLL, (int64_t)0xFFFFFFFE6DDFAC84LL, (int64_t)0xFFFFFFFE2DA2A404LL, (int64_t)0x87A86068LL, (int64_t)0x190DBF7D8LL, (int64_t)0xFFFFFFFE4E0A1C0CLL, (int64_t)0xFFFFFFFE6DE03DB0LL, (int64_t)0x1915B8DBCLL, (int64_t)0x19125EC44LL, (int64_t)0xFFFFFFFCDD84881BLL, (int64_t)0xFFFFFFFE6DE049A4LL, (int64_t)0xFFFFFFFE0BCED7C4LL, (int64_t)0xFFFFFFFE6DD81100LL, (int64_t)0x8LL, (int64_t)0xBD6950LL, (int64_t)0xFFFFFFFE6DE003D0LL, (int64_t)0xFFFFFFFCDBD19A33LL, (int64_t)0x6E2B846CLL, (int64_t)0xFB0F8468LL, (int64_t)0xFFFFFFFE0A4BB5B0LL, (int64_t)0xFFFFFFFCDBC09587LL, (int64_t)0x459D87CLL, (int64_t)0x1921A41D0LL, (int64_t)0xFFFFFFFE6DDC3B10LL, (int64_t)0xFFFFFFFE6C1FE62CLL, (int64_t)0x17F92ADE8LL, (int64_t)0x191195924LL, (int64_t)0xFFFFFFFE68CBC334LL, (int64_t)0xFFFFFFFE6493DE70LL, (int64_t)0x1921D618CLL, (int64_t)0x417ACLL, (int64_t)0xFFFFFFFE6DE04394LL, (int64_t)0xFFFFFFFDE8D5C0B0LL, (int64_t)0x1921FA6B0LL, (int64_t)0x2082CLL, (int64_t)0xFFFFFFFCDBFC7E57LL, (int64_t)0xFFFFFFFCDBC0E62BLL, (int64_t)0x50LL, (int64_t)0x5BC0LL, (int64_t)0xFFFFFFFCDBC095E3LL, (int64_t)0xFFFFFFFCDBC0957FLL, (int64_t)0x240LL, (int64_t)0x112BC0C0LL };
		for (int ndx = 0; ndx < 100; ndx++)
			Util::Check("Fixed64::Atan2", Fixed64::Atan2(input0[ndx], input1[ndx]), output0[ndx], input0[ndx], input1[ndx]);
	}

	// Fixed64.Atan2Fast()
	static void Fixed64_Atan2Fast()
	{
		static const int64_t input0[] = { (int64_t)0xFFFFFFB339B3EF57LL, (int64_t)0xFFFFFFFFFEBFCB42LL, (int64_t)0x186BA40ALL, (int64_t)0x4E96LL, (int64_t)0xFFFFFFF37A84C89BLL, (int64_t)0xFFFFFFFFFFFE1CAALL, (int64_t)0x862A7E0A44LL, (int64_t)0x5EA0DALL, (int64_t)0xFFFFFFFFFE78DD63LL, (int64_t)0xFFFFFE1950223147LL, (int64_t)0x30B395ALL, (int64_t)0x74E8847000LL, (int64_t)0xFFFFFFFFFFFEA2CCLL, (int64_t)0xFFFFFFFFD82C135ELL, (int64_t)0xBBEE9ELL, (int64_t)0x188ELL, (int64_t)0xFFFFFFFFFFFE06ECLL, (int64_t)0xFFFFFFFFFD85C033LL, (int64_t)0x123D7EALL, (int64_t)0xBAE413EE1LL, (int64_t)0xFFFFFFFFD8E8A637LL, (int64_t)0xFFFFFFFFFDC624B6LL, (int64_t)0xD4BD80CLL, (int64_t)0x1015F1B9C8ALL, (int64_t)0xFFFFFFFFFFFEE92FLL, (int64_t)0xFFFFFFFFFFFFD877LL, (int64_t)0xC479AA7CD1LL, (int64_t)0x236B288LL, (int64_t)0xFFFFFFFFF8E02A97LL, (int64_t)0xFFFFFFFFFD7681A4LL, (int64_t)0x366ALL, (int64_t)0x12BDB2DD86LL, (int64_t)0xFFFFFFFFFFFFE276LL, (int64_t)0xFFFFFFFFFB147A53LL, (int64_t)0xFFFFFFFFFF8CAB03LL, (int64_t)0xFFFFFF8708A04EB0LL, (int64_t)0x6A51D2LL, (int64_t)0x7E564BA9LL, (int64_t)0xFFFFFFF90010EEF1LL, (int64_t)0xFFFFF2712E028AE6LL, (int64_t)0x58D46EDBLL, (int64_t)0x164B45BA5LL, (int64_t)0xFFFFFFFFFD7E4F5CLL, (int64_t)0xFFFFFFFFAFAD29C1LL, (int64_t)0x477289LL, (int64_t)0x5ACB9674A4LL, (int64_t)0xFFFFFFFFF46BDC67LL, (int64_t)0xFFFFFFEFADB07C30LL, (int64_t)0x81CE511LL, (int64_t)0x597F556BALL, (int64_t)0xFFFFE052A614554DLL, (int64_t)0xFFFFFFF8CC3A2F19LL, (int64_t)0x981E92ALL, (int64_t)0x7A06608AD28LL, (int64_t)0xFFFFFFFFED7C75CFLL, (int64_t)0xFFFFFFFFFEA5283FLL, (int64_t)0xFE0FB987F4LL, (int64_t)0x62F1AF01LL, (int64_t)0xFFFFFD017E9300CCLL, (int64_t)0xFFFFFFFFFD4B2FE1LL, (int64_t)0xA7DB8C3LL, (int64_t)0x1372A86568C7LL, (int64_t)0xFFFFFFFFEC41370FLL, (int64_t)0xFFFFFFFFD310919ELL, (int64_t)0x1097F708LL, (int64_t)0x19143BDELL, (int64_t)0xFFFFFFF7EBA4CBA6LL, (int64_t)0xFFFFFFFFFDC47E51LL, (int64_t)0xFFFFFD2352E0E5A9LL, (int64_t)0xFFD1F3776E8A6DD4LL, (int64_t)0x49F4FEF9BC3F6LL, (int64_t)0xADEA477042A0A00LL, (int64_t)0xFFFC6BC4A6AC9867LL, (int64_t)0xFFFDA1E57B5D4EFCLL, (int64_t)0xFDC21F6A2LL, (int64_t)0x8C42F4DE9145LL, (int64_t)0xFEDB00BCF5C9AD40LL, (int64_t)0xFFFFFF63FBE076B0LL, (int64_t)0x66EAF567636194LL, (int64_t)0x4EDEE7E2162D7LL, (int64_t)0xFFF7A034E7C92F27LL, (int64_t)0xFFFCA5E64BFDC490LL, (int64_t)0x23E22E13157B30LL, (int64_t)0x159925C6EEB2B300LL, (int64_t)0xFFFFFC1A1CFB96D1LL, (int64_t)0xF7C3112FC7198C00LL, (int64_t)0x3C88CE695DBE300LL, (int64_t)0x3193F4FED97C6LL, (int64_t)0xFFC4F5123056F10ELL, (int64_t)0xFFFFF9FDD0F7D749LL, (int64_t)0x138B453E90B5ALL, (int64_t)0x1073875DB4ALL, (int64_t)0xFFFF1A2D6C18FA6ELL, (int64_t)0xFFFE7B4242BCFDB4LL, (int64_t)0x149B4D695A42E800LL, (int64_t)0x6E7036BBBD4LL, (int64_t)0xFFFD44B151189CABLL, (int64_t)0xFFFFB25B789D7D2CLL, (int64_t)0x1EC39DF25516LL, (int64_t)0x6D8150CFBFF8000LL };
		static const int64_t input1[] = { (int64_t)0xFFFFFFF9CBA20E08LL, (int64_t)0xFFFFFFD79654B1D9LL, (int64_t)0x206211E86A33LL, (int64_t)0x11E42F2549BLL, (int64_t)0xFFFFF8F941CB7FE1LL, (int64_t)0xFFFFFFFE043C4ED9LL, (int64_t)0xE7A79325LL, (int64_t)0x1FA287ALL, (int64_t)0xFFFFFFFFE1B60ACDLL, (int64_t)0xFFFFFFFFFC346ABDLL, (int64_t)0xC77D5CE5169LL, (int64_t)0xFAEB2C17LL, (int64_t)0xFFFFFE51544D3E6DLL, (int64_t)0xFFFFFFFFD3C22D87LL, (int64_t)0x9515F93LL, (int64_t)0x13FE8D074409LL, (int64_t)0xFFFFFFFE6B1E6484LL, (int64_t)0xFFFFFFFC88633ED4LL, (int64_t)0xC364F525CLL, (int64_t)0x2093030LL, (int64_t)0xFFFFFFFFF86697CCLL, (int64_t)0xFFFFFFFED3E0B85DLL, (int64_t)0x636AB556F1ELL, (int64_t)0x1572F5E8A4LL, (int64_t)0xFFFFF1695E95854BLL, (int64_t)0xFFFFFF55D97DE959LL, (int64_t)0xC63E982LL, (int64_t)0x1D14B965FLL, (int64_t)0xFFFFFC16A7CDE91CLL, (int64_t)0xFFFFE5AB706A7D0CLL, (int64_t)0x8EF2C47EA87LL, (int64_t)0x2094D5A3C4LL, (int64_t)0xFFFFFB42DE8CB3E6LL, (int64_t)0xFFFFFFCE9D2DDFF9LL, (int64_t)0xFFFFFFFFFFE82258LL, (int64_t)0xFFFFFFFFF867E044LL, (int64_t)0xE2EBC30B6CLL, (int64_t)0x4AFELL, (int64_t)0xFFFFFE6ABE42B462LL, (int64_t)0xFFFFFFFF4CB55B99LL, (int64_t)0x7CAE5848ALL, (int64_t)0x71803F8FBLL, (int64_t)0xFFFFFFFFFFE134B5LL, (int64_t)0xFFFFFFFFF125EAEBLL, (int64_t)0x54E98F4BLL, (int64_t)0x7CBB8LL, (int64_t)0xFFFFFFFFF5E127E8LL, (int64_t)0xFFFFFFFF7019DCB1LL, (int64_t)0xBF3F9LL, (int64_t)0x33A5FCLL, (int64_t)0xFFFFFCEB8EC7349CLL, (int64_t)0xFFFFFFFFFF94134CLL, (int64_t)0x18E964DLL, (int64_t)0x21E5DE9308ALL, (int64_t)0xFFFFFFFFFEDF2BAFLL, (int64_t)0xFFFFFF0D3B1B357CLL, (int64_t)0x1812A59E325LL, (int64_t)0xE0F1E1BFLL, (int64_t)0xFFFFFFFFEBCE28E4LL, (int64_t)0xFFFFFFFFFEEA67E2LL, (int64_t)0x22AB005E1LL, (int64_t)0x1288121LL, (int64_t)0xFFFFFFFFFFFD4B1DLL, (int64_t)0xFFFFFFE78BB60883LL, (int64_t)0x7F70LL, (int64_t)0x313FA81DDLL, (int64_t)0xFFFFFFFFFFFE87A7LL, (int64_t)0xFFFFFFFFFFFF74BCLL, (int64_t)0xFFFFFFFAAAACDE9ELL, (int64_t)0xFFFFECD903F62096LL, (int64_t)0x322DF5BC63ELL, (int64_t)0x1020F689CAA41LL, (int64_t)0xFFD4636C26169DDCLL, (int64_t)0xFFFFFFFB5C8AF269LL, (int64_t)0x75FE65C26CE560LL, (int64_t)0x295B5FC81AFADC0LL, (int64_t)0xFDD0E2C148A103E0LL, (int64_t)0xF7EA4457D4971900LL, (int64_t)0xD826E7183LL, (int64_t)0x2850D7CCA29774LL, (int64_t)0xF742DCD29966F180LL, (int64_t)0xEFC154DD8A80D300LL, (int64_t)0x822179094CCEA0LL, (int64_t)0xA5EBF5F92LL, (int64_t)0xFFDF8E18940C227ALL, (int64_t)0xFFFFFF840C36FD2FLL, (int64_t)0x657C08BD358BLL, (int64_t)0x3B6CCA9784LL, (int64_t)0xFCBBB0077B153A40LL, (int64_t)0xFFFE2BB421D73417LL, (int64_t)0x91043AA5815LL, (int64_t)0x1E7C1E4BF3509D00LL, (int64_t)0xFFFFFFDA4D255ED4LL, (int64_t)0xFFFFFB8125D90145LL, (int64_t)0xC1B97D9A268LL, (int64_t)0x25B5F1BBBLL, (int64_t)0xFFF8A59141883C00LL, (int64_t)0xFF6CF1DEE137F808LL, (int64_t)0xCD62C627F69FF00LL, (int64_t)0x3C60E94F3DFLL };
		static const int64_t output0[] = { (int64_t)0xFFFFFFFE593B8358LL, (int64_t)0xFFFFFFFCDBC881D7LL, (int64_t)0xC10CLL, (int64_t)0x40LL, (int64_t)0xFFFFFFFCDD88C9E3LL, (int64_t)0xFFFFFFFCDBC18923LL, (int64_t)0x19065B180LL, (int64_t)0x2F504324LL, (int64_t)0xFFFFFFFCE8A7A1A3LL, (int64_t)0xFFFFFFFE6DDE4BB0LL, (int64_t)0x3E7CLL, (int64_t)0x18FFA43F8LL, (int64_t)0xFFFFFFFCDBC09643LL, (int64_t)0xFFFFFFFD976347BFLL, (int64_t)0x142093C4LL, (int64_t)0x0LL, (int64_t)0xFFFFFFFCDBC1D4CBLL, (int64_t)0xFFFFFFFCDC7782B7LL, (int64_t)0x17E5D0LL, (int64_t)0x191F3168CLL, (int64_t)0xFFFFFFFE3CB94CD8LL, (int64_t)0xFFFFFFFCDDA6A663LL, (int64_t)0x223CCLL, (int64_t)0x17CD69298LL, (int64_t)0xFFFFFFFCDBC09587LL, (int64_t)0xFFFFFFFCDBC095AFLL, (int64_t)0x1920F906CLL, (int64_t)0x137CAB0LL, (int64_t)0xFFFFFFFCDBC267B7LL, (int64_t)0xFFFFFFFCDBC0AE1FLL, (int64_t)0x0LL, (int64_t)0x85A14BB8LL, (int64_t)0xFFFFFFFCDBC09577LL, (int64_t)0xFFFFFFFCDBDA165BLL, (int64_t)0xFFFFFFFE39A370D4LL, (int64_t)0xFFFFFFFE6DD03868LL, (int64_t)0x77ECLL, (int64_t)0x1921F1D50LL, (int64_t)0xFFFFFFFCE02C6B7BLL, (int64_t)0xFFFFFFFE6DD31160LL, (int64_t)0xB6441A8LL, (int64_t)0x31A6EF48LL, (int64_t)0xFFFFFFFE6199B700LL, (int64_t)0xFFFFFFFE3F1209ECLL, (int64_t)0xD767F8LL, (int64_t)0x1921F9F4CLL, (int64_t)0xFFFFFFFDB5FD9E88LL, (int64_t)0xFFFFFFFE65102524LL, (int64_t)0x190A688B4LL, (int64_t)0x19216797CLL, (int64_t)0xFFFFFFFE551076E0LL, (int64_t)0xFFFFFFFE6DD14E94LL, (int64_t)0x16891D054LL, (int64_t)0x14CC1E374LL, (int64_t)0xFFFFFFFE5E4B7B70LL, (int64_t)0xFFFFFFFCDBC20333LL, (int64_t)0x954665D4LL, (int64_t)0x6A157F24LL, (int64_t)0xFFFFFFFE6DD98C1CLL, (int64_t)0xFFFFFFFE0C50F55CLL, (int64_t)0x4D75F08LL, (int64_t)0x1921FA608LL, (int64_t)0xFFFFFFFE6DBD3374LL, (int64_t)0xFFFFFFFCDD96FB03LL, (int64_t)0x192180730LL, (int64_t)0x825185CLL, (int64_t)0xFFFFFFFE6DE01C2CLL, (int64_t)0xFFFFFFFE6DA1E948LL, (int64_t)0xFFFFFFFE6C033EF4LL, (int64_t)0xFFFFFFFE6D75D14CLL, (int64_t)0x1917203C8LL, (int64_t)0x19207F770LL, (int64_t)0xFFFFFFFCF0B6E593LL, (int64_t)0xFFFFFFFE6DDE5534LL, (int64_t)0x2268LL, (int64_t)0x364394LL, (int64_t)0xFFFFFFFD57526203LL, (int64_t)0xFFFFFFFCDBC0A8BFLL, (int64_t)0x1921F93ACLL, (int64_t)0x1F258228LL, (int64_t)0xFFFFFFFCDCB5E6EBLL, (int64_t)0xFFFFFFFCDBF56847LL, (int64_t)0x44E17668LL, (int64_t)0x1921FB4CCLL, (int64_t)0xFFFFFFFCDBDF5723LL, (int64_t)0xFFFFFFFE6DE03BB4LL, (int64_t)0x19204E264LL, (int64_t)0x1920C87C4LL, (int64_t)0xFFFFFFFCEDCBA35BLL, (int64_t)0xFFFFFFFCDF0969BFLL, (int64_t)0x18AB4BE6CLL, (int64_t)0x8A0LL, (int64_t)0xFFFFFFFE6DB64C80LL, (int64_t)0xFFFFFFFE6AEA735CLL, (int64_t)0x1921F1EDCLL, (int64_t)0x191C84B08LL, (int64_t)0xFFFFFFFD36CF618FLL, (int64_t)0xFFFFFFFCDC47BF1BLL, (int64_t)0x26580LL, (int64_t)0x1921F2820LL };
		for (int ndx = 0; ndx < 100; ndx++)
			Util::Check("Fixed64::Atan2Fast", Fixed64::Atan2Fast(input0[ndx], input1[ndx]), output0[ndx], input0[ndx], input1[ndx]);
	}

	// Fixed64.Atan2Fastest()
	static void Fixed64_Atan2Fastest()
	{
		static const int64_t input0[] = { (int64_t)0xFFFFFFEBEC2140AFLL, (int64_t)0xFFFFFFC4AFEE4105LL, (int64_t)0xEEEEF21LL, (int64_t)0x737DELL, (int64_t)0xFFFFFFFFFFEE68E4LL, (int64_t)0xFFFFFFFFFFFDB20ALL, (int64_t)0x82C16LL, (int64_t)0xDD793LL, (int64_t)0xFFFFFFFFFFFED715LL, (int64_t)0xFFFFFFFFFFFFE77ALL, (int64_t)0x5A433FB4FLL, (int64_t)0x1CE0429C42LL, (int64_t)0xFFFFFFFFFFF8A875LL, (int64_t)0xFFFFFFE156451311LL, (int64_t)0x7B1BB2LL, (int64_t)0x38E200FBLL, (int64_t)0xFFFFFFF426D8C553LL, (int64_t)0xFFFFFFE0948679E9LL, (int64_t)0xD9F7CD47LL, (int64_t)0x5C535FLL, (int64_t)0xFFFFFD023AB2A526LL, (int64_t)0xFFFFFFFFFFF77561LL, (int64_t)0x230FLL, (int64_t)0xBC934E4LL, (int64_t)0xFFFFFFFFFFFFDCA4LL, (int64_t)0xFFFFFFFFFF944EF0LL, (int64_t)0x6FF2B7LL, (int64_t)0x9E765FLL, (int64_t)0xFFFFFFFE7846EF4ALL, (int64_t)0xFFFFFFFCE21E030ELL, (int64_t)0x5CEB2LL, (int64_t)0x3F7FLL, (int64_t)0xFFFFFD892C14E2CBLL, (int64_t)0xFFFFFFF1CF5E7DFELL, (int64_t)0xFFFFF2E9FD728900LL, (int64_t)0xFFFFFFFFD129F57BLL, (int64_t)0x56F593BLL, (int64_t)0xD5D253ALL, (int64_t)0xFFFFDE8834CD0918LL, (int64_t)0xFFFFFFFFFDEB08CBLL, (int64_t)0x494594E1LL, (int64_t)0xC5BF611BFELL, (int64_t)0xFFFFFFFFFB8B8178LL, (int64_t)0xFFFFFFFFF9E09FEALL, (int64_t)0x575CB638D4LL, (int64_t)0x2CA93E9CELL, (int64_t)0xFFFFFFE9E2875C21LL, (int64_t)0xFFFFFFFFFFAA8A4ELL, (int64_t)0xA37A1E9ELL, (int64_t)0x7274E69D0BFLL, (int64_t)0xFFFFFFFE2A16D966LL, (int64_t)0xFFFFFFFF208E9C64LL, (int64_t)0x1163DAE15E4DLL, (int64_t)0xAECC49FBLL, (int64_t)0xFFFFFFFE8F01072ALL, (int64_t)0xFFFFFFFFD116E16BLL, (int64_t)0x7DBE881LL, (int64_t)0x9083B395LL, (int64_t)0xFFFFFFFFB83AA8F2LL, (int64_t)0xFFFFF3599A3D5AB8LL, (int64_t)0x6739EFE6ECLL, (int64_t)0x286286FLL, (int64_t)0xFFFFFFD6B27E600BLL, (int64_t)0xFFFFFFE17CC3933FLL, (int64_t)0x765D4ELL, (int64_t)0x1F5CE20LL, (int64_t)0xFFFFFFB9910C69ADLL, (int64_t)0xFFFFFFFFDDD9D733LL, (int64_t)0xFFFB79F1A1805EA6LL, (int64_t)0xFFA7D30E4795C854LL, (int64_t)0x1AF2048C193LL, (int64_t)0x33AA00CA4204LL, (int64_t)0xFFFA9DCE3B8E06B4LL, (int64_t)0xE0D6E61FE06A8600LL, (int64_t)0x2CEE4D49FALL, (int64_t)0x3D1800936ACF200LL, (int64_t)0xF2CA8D9DBE801300LL, (int64_t)0xFFFD4A1D4AC4947DLL, (int64_t)0x62DC90238LL, (int64_t)0xB8ECDE3C67523LL, (int64_t)0xFFF7282E045F5515LL, (int64_t)0xF3D8F91C561B7E00LL, (int64_t)0x17D03FD595084BLL, (int64_t)0x2CF061CC74F20800LL, (int64_t)0xFFE6236CC8E878F3LL, (int64_t)0xFFF37A7C17DAC402LL, (int64_t)0xD09DF43D442LL, (int64_t)0xA7784A3327LL, (int64_t)0xFFFFFCDA3E30C0F0LL, (int64_t)0xFEF6D361F3E5A9D0LL, (int64_t)0x12DDAD954F748LL, (int64_t)0x124EB6B0CCFE810LL, (int64_t)0xFFFFFFF5421A5F37LL, (int64_t)0xFFAD9A4422A9D640LL, (int64_t)0x22BF538600AE0LL, (int64_t)0x14F01911FLL, (int64_t)0xFFFF98C3101DFC5FLL, (int64_t)0xFC5350FB1FBB1C80LL, (int64_t)0x45DD5348FD0DLL, (int64_t)0x36D7EBD48F9AC0LL };
		static const int64_t input1[] = { (int64_t)0xFFFFF83E7845B1E3LL, (int64_t)0xFFFFFFFFFF81FB52LL, (int64_t)0xADB96893LL, (int64_t)0x614F7AEDELL, (int64_t)0xFFFFFCE8CB514537LL, (int64_t)0xFFFFFFFAF6AD58EELL, (int64_t)0x26629711F3E8LL, (int64_t)0xA84EB5ALL, (int64_t)0xFFFFFFFFFF59B196LL, (int64_t)0xFFFFFD1A3D69E31FLL, (int64_t)0x1E4C9B25CAELL, (int64_t)0x665E2CF08LL, (int64_t)0xFFFFFF70A529FB50LL, (int64_t)0xFFFFFFFFBFDB3A9BLL, (int64_t)0x1A304949D638LL, (int64_t)0x160D9E6D0F5LL, (int64_t)0xFFFFFFFFF05403A1LL, (int64_t)0xFFFFFE8933AB925ELL, (int64_t)0x19E7F6CLL, (int64_t)0xA3C1AA7D0LL, (int64_t)0xFFFFFFFFBF1EBC78LL, (int64_t)0xFFFFFFF52A22B785LL, (int64_t)0x2725CAAFDA5LL, (int64_t)0x4EC849LL, (int64_t)0xFFFFFFFFFA7249FALL, (int64_t)0xFFFFF674CC64DA66LL, (int64_t)0x1E7E688DE69LL, (int64_t)0x3E4A73AE1FCLL, (int64_t)0xFFFFFFF60D24F93ALL, (int64_t)0xFFFFFFFF2B17EDAELL, (int64_t)0x19AB28B326ALL, (int64_t)0x3F5043908ALL, (int64_t)0xFFFFFC73A01550CFLL, (int64_t)0xFFFFFFFEECE2AF55LL, (int64_t)0xFFFFFFFFFEBB5283LL, (int64_t)0xFFFFFFFF4317047ELL, (int64_t)0x445AECBFLL, (int64_t)0x1497LL, (int64_t)0xFFFFFFEE1C08B09CLL, (int64_t)0xFFFFFD2C2E89EA2FLL, (int64_t)0x682F5LL, (int64_t)0x30F01603LL, (int64_t)0xFFFFFFFFFEFF8388LL, (int64_t)0xFFFFFFFF85578EEDLL, (int64_t)0x24D32DLL, (int64_t)0x1F0A760C9LL, (int64_t)0xFFFFFFFFFFE43B73LL, (int64_t)0xFFFFFFF15DD03DA2LL, (int64_t)0x343F63DLL, (int64_t)0x13966D9BFLL, (int64_t)0xFFFFFE96A464086BLL, (int64_t)0xFFFFFFFFFF4D12E5LL, (int64_t)0x4381C7BE9LL, (int64_t)0x2A8C952LL, (int64_t)0xFFFFFD526A6113EDLL, (int64_t)0xFFFFFFFFB2BC9718LL, (int64_t)0xA680LL, (int64_t)0xEBB0EA4C8LL, (int64_t)0xFFFFFF8CCFDEE821LL, (int64_t)0xFFFFFFFFFFFFC564LL, (int64_t)0x15B1AAELL, (int64_t)0x4FB01LL, (int64_t)0xFFFFFFFFFFFF8259LL, (int64_t)0xFFFFFFFFEEB83657LL, (int64_t)0x1D0C2LL, (int64_t)0x2A24A908LL, (int64_t)0xFFFFFFF03E41CCBALL, (int64_t)0xFFFFFFFFFFD134CELL, (int64_t)0xF82D2D8DEFB19E40LL, (int64_t)0xDA1701470BFF6E00LL, (int64_t)0x343CC03D35LL, (int64_t)0x255BE34843FE90LL, (int64_t)0xFFFFF45C6517C9A5LL, (int64_t)0xFFFF8DCDD0793931LL, (int64_t)0x824665F5823BD0LL, (int64_t)0x8B568F736BA340LL, (int64_t)0xFFFFFF115786ADF8LL, (int64_t)0xFFFFFFF486125EECLL, (int64_t)0x174D3159F34E92LL, (int64_t)0xEC2FDACABE33LL, (int64_t)0xFFD98052C84D0786LL, (int64_t)0xFFFFFF5DEB9D5579LL, (int64_t)0x1964826E05F9LL, (int64_t)0x70366F8D817BLL, (int64_t)0xFFFF30B2525DF7FALL, (int64_t)0xFFFFFFF5427ED0C1LL, (int64_t)0x2A5EBD0C31683C0LL, (int64_t)0x8F36A66DF089LL, (int64_t)0xFFFFFFCC9AABDD50LL, (int64_t)0xFFFE7AF3CE2FB86ALL, (int64_t)0x3A01D35FC1B09A00LL, (int64_t)0x1177F6691536620LL, (int64_t)0xFFFFFFB5381E98E7LL, (int64_t)0xFFFFA1CDA2928781LL, (int64_t)0x4CF444B52B8LL, (int64_t)0x42E79DF1BD6F980LL, (int64_t)0xFFFFF1A6CFDCDE9ELL, (int64_t)0xFFFFFFDDAA578180LL, (int64_t)0x977E9C71D3ALL, (int64_t)0x3983C413CLL };
		static const int64_t output0[] = { (int64_t)0xFFFFFFFCDE5738F7LL, (int64_t)0xFFFFFFFE6DDE2AC8LL, (int64_t)0x15F1E504LL, (int64_t)0x12FF0LL, (int64_t)0xFFFFFFFCDBC09B23LL, (int64_t)0xFFFFFFFCDBC10A97LL, (int64_t)0x34LL, (int64_t)0x150D940LL, (int64_t)0xFFFFFFFCDD899C6BLL, (int64_t)0xFFFFFFFCDBC0957FLL, (int64_t)0x2FA94C8LL, (int64_t)0x15A52449CLL, (int64_t)0xFFFFFFFCDBC0A28FLL, (int64_t)0xFFFFFFFE6BC8CF90LL, (int64_t)0x4B0LL, (int64_t)0x2944D0LL, (int64_t)0xFFFFFFFE6C8D9778LL, (int64_t)0xFFFFFFFCF1296D7FLL, (int64_t)0x190388FF8LL, (int64_t)0x90558LL, (int64_t)0xFFFFFFFE6DCA9868LL, (int64_t)0xFFFFFFFCDBC15F3BLL, (int64_t)0xCLL, (int64_t)0x18B7091E4LL, (int64_t)0xFFFFFFFCDBC6F337LL, (int64_t)0xFFFFFFFCDBC0A0BBLL, (int64_t)0x3AB8LL, (int64_t)0x28ACLL, (int64_t)0xFFFFFFFD02CE1D6BLL, (int64_t)0xFFFFFFFE2B215ED4LL, (int64_t)0x39CLL, (int64_t)0xFCLL, (int64_t)0xFFFFFFFD7732F403LL, (int64_t)0xFFFFFFFE5A85283CLL, (int64_t)0xFFFFFFFE6DE031ECLL, (int64_t)0xFFFFFFFD19F0D7BBLL, (int64_t)0x1452547CLL, (int64_t)0x1921E2A94LL, (int64_t)0xFFFFFFFE6D575A54LL, (int64_t)0xFFFFFFFCDBC151F3LL, (int64_t)0x19208F200LL, (int64_t)0x191E0528CLL, (int64_t)0xFFFFFFFE353F481CLL, (int64_t)0xFFFFFFFCE8848E6BLL, (int64_t)0x1921F4960LL, (int64_t)0xF6A2AB94LL, (int64_t)0xFFFFFFFE6DDF0950LL, (int64_t)0xFFFFFFFCDBC66CDBLL, (int64_t)0x18D02D098LL, (int64_t)0x191F3E0E0LL, (int64_t)0xFFFFFFFCDD0D7F93LL, (int64_t)0xFFFFFFFE6D132CB8LL, (int64_t)0x191E18D6CLL, (int64_t)0x18E3ACD98LL, (int64_t)0xFFFFFFFCDC4A5C87LL, (int64_t)0xFFFFFFFD677B3DABLL, (int64_t)0x1920A8574LL, (int64_t)0x9CE7B5CLL, (int64_t)0xFFFFFFFCDC6026CBLL, (int64_t)0xFFFFFFFE6DE04ABCLL, (int64_t)0x1921C57E4LL, (int64_t)0x190268D08LL, (int64_t)0xFFFFFFFE6DE047B4LL, (int64_t)0xFFFFFFFE6D4F50A4LL, (int64_t)0x18E3279E4LL, (int64_t)0xBE58890LL, (int64_t)0xFFFFFFFE35884BB8LL, (int64_t)0xFFFFFFFE6C814084LL, (int64_t)0xFFFFFFFCDC549B43LL, (int64_t)0xFFFFFFFCDE143613LL, (int64_t)0x1733F2B00LL, (int64_t)0x1622D88LL, (int64_t)0xFFFFFFFE6BB6E048LL, (int64_t)0xFFFFFFFE6DDCA098LL, (int64_t)0x5850LL, (int64_t)0x16DE52968LL, (int64_t)0xFFFFFFFE6DE038ACLL, (int64_t)0xFFFFFFFE6DDC0EE4LL, (int64_t)0x43E0LL, (int64_t)0x17DBBE848LL, (int64_t)0xFFFFFFFD1587A797LL, (int64_t)0xFFFFFFFE6DE03D68LL, (int64_t)0x1910EA760LL, (int64_t)0x1921D3608LL, (int64_t)0xFFFFFFFE65DBA360LL, (int64_t)0xFFFFFFFE6DDF6F0CLL, (int64_t)0x4EC60LL, (int64_t)0x12B8CA4LL, (int64_t)0xFFFFFFFE5D90018CLL, (int64_t)0xFFFFFFFE6C6878C8LL, (int64_t)0x53494LL, (int64_t)0xCF16EB58LL, (int64_t)0xFFFFFFFD004603F7LL, (int64_t)0xFFFFFFFE6CBBA2C8LL, (int64_t)0x18FE85D04LL, (int64_t)0x4CLL, (int64_t)0xFFFFFFFE4A83FD54LL, (int64_t)0xFFFFFFFE6DE04168LL, (int64_t)0x16FA18620LL, (int64_t)0x1921FA480LL };
		for (int ndx = 0; ndx < 100; ndx++)
			Util::Check("Fixed64::Atan2Fastest", Fixed64::Atan2Fastest(input0[ndx], input1[ndx]), output0[ndx], input0[ndx], input1[ndx]);
	}

	// Fixed32.Atan2()
	static void Fixed32_Atan2()
	{
		static const int32_t input0[] = { (int32_t)0x0, (int32_t)0xFFFFFF8B, (int32_t)0x5DF9B, (int32_t)0xEEEB, (int32_t)0xFFFC4B63, (int32_t)0xFD8197E5, (int32_t)0x3E13, (int32_t)0x3, (int32_t)0xFF9F1C42, (int32_t)0xFFFF9FDC, (int32_t)0x2BE90CD, (int32_t)0x4, (int32_t)0x0, (int32_t)0x0, (int32_t)0x0, (int32_t)0x42E49D, (int32_t)0xFFFFFFCB, (int32_t)0x0, (int32_t)0x68B, (int32_t)0x9D, (int32_t)0x0, (int32_t)0xFE16F725, (int32_t)0x113B, (int32_t)0x54, (int32_t)0xFD718168, (int32_t)0xFFFFFF3D, (int32_t)0x816, (int32_t)0x7C72D8, (int32_t)0xFFFFFFFF, (int32_t)0xFF856BF0, (int32_t)0x9E, (int32_t)0x0, (int32_t)0xFFFB2D8A, (int32_t)0xFFFF97F7, (int32_t)0xFFF1E6B7, (int32_t)0xFF4D1EDD, (int32_t)0x6F50, (int32_t)0x8EDAA, (int32_t)0xFFFFD828, (int32_t)0xEFED4A54, (int32_t)0x410E854, (int32_t)0x5AA8, (int32_t)0xFFFFBAC3, (int32_t)0xE94488F9, (int32_t)0x109F427, (int32_t)0x55C, (int32_t)0xFFB22B6C, (int32_t)0xFFFFDD7A, (int32_t)0x3D2C5, (int32_t)0x392D81, (int32_t)0xFFFFB40D, (int32_t)0xFFFFFF59, (int32_t)0xC6F8, (int32_t)0x9FA49A, (int32_t)0xFFF4FB80, (int32_t)0xFFFFEAC2, (int32_t)0x4823B, (int32_t)0x105, (int32_t)0xFFFFFF25, (int32_t)0xFFFF2144, (int32_t)0xBF, (int32_t)0x20BAD8A, (int32_t)0xFFEDC73D, (int32_t)0xFFE68CAD, (int32_t)0x317F, (int32_t)0x3A433B, (int32_t)0xFFFFCC9D, (int32_t)0xFFFFFA35, (int32_t)0xFC790C77, (int32_t)0xED11ABFB, (int32_t)0x120A325, (int32_t)0x24FB45, (int32_t)0xFFFE5195, (int32_t)0xFD33293F, (int32_t)0x15E03F9, (int32_t)0x174A429A, (int32_t)0xFF99F086, (int32_t)0xFD903A70, (int32_t)0x522555, (int32_t)0x11645C8, (int32_t)0xF8CDA4C8, (int32_t)0xE97C2A74, (int32_t)0x1C3A327, (int32_t)0xACFF1, (int32_t)0xC3AAFD7B, (int32_t)0xFFFC0E83, (int32_t)0x73D1A, (int32_t)0x17598D7, (int32_t)0xFFF142E7, (int32_t)0xFFF03608, (int32_t)0x34E656, (int32_t)0x9A236F6, (int32_t)0xFF89C385, (int32_t)0xFFFD0D42, (int32_t)0xFF867D8, (int32_t)0x2905A, (int32_t)0xE0C23E2E, (int32_t)0xFFFDD6C0, (int32_t)0x86022, (int32_t)0xB81B90 };
		static const int32_t input1[] = { (int32_t)0xFFFF2466, (int32_t)0xFFFFBB03, (int32_t)0x2CE5B, (int32_t)0xCD2E6C, (int32_t)0xFF21E1F6, (int32_t)0xFFF97C3A, (int32_t)0x41570, (int32_t)0x246685, (int32_t)0xFFEACDCB, (int32_t)0xFFF63883, (int32_t)0x9D9C3, (int32_t)0x1575765, (int32_t)0xFFBF4C07, (int32_t)0xFFFFFA01, (int32_t)0x8467, (int32_t)0x20974, (int32_t)0xFFF969B1, (int32_t)0xFFFFD510, (int32_t)0x39D3D7, (int32_t)0x269BCF93, (int32_t)0xFFFFFF77, (int32_t)0xFFFFFD5B, (int32_t)0x255B89A, (int32_t)0xB3BF, (int32_t)0xFFC2D4F8, (int32_t)0xFFFFBEA6, (int32_t)0x23B63, (int32_t)0x4DFB64, (int32_t)0xFFFFFF7E, (int32_t)0xDF779F4C, (int32_t)0xCF2, (int32_t)0x69ABABC, (int32_t)0xFFFE4A22, (int32_t)0xFFFD2441, (int32_t)0xFFFFBBA5, (int32_t)0xFFFF74B4, (int32_t)0x0, (int32_t)0x2A46077, (int32_t)0x0, (int32_t)0xFFFBD844, (int32_t)0x1, (int32_t)0x15CEA, (int32_t)0xFFF0F590, (int32_t)0xFFCA64A9, (int32_t)0x7BEE, (int32_t)0x74E, (int32_t)0xFFFF5C2E, (int32_t)0xFFFFFFFE, (int32_t)0x3, (int32_t)0x7A, (int32_t)0xFFFF79E6, (int32_t)0xFFFFFFFD, (int32_t)0x501, (int32_t)0x2EE73, (int32_t)0xFF4F8D4C, (int32_t)0xFFFFFFD0, (int32_t)0x7, (int32_t)0x1B, (int32_t)0xFFFFF984, (int32_t)0xFF929948, (int32_t)0x508B15, (int32_t)0x0, (int32_t)0xFFF9B241, (int32_t)0xFFFD195A, (int32_t)0x92AB, (int32_t)0x0, (int32_t)0xFFC94B79, (int32_t)0xFFFFF6FD, (int32_t)0xFE244A57, (int32_t)0xFFFC1CA5, (int32_t)0x624C55, (int32_t)0x14C520, (int32_t)0xF8773A97, (int32_t)0xFFF31D04, (int32_t)0x396DC, (int32_t)0x91F8D1F, (int32_t)0xFFFCF34C, (int32_t)0xFFFEC7C8, (int32_t)0xDCE2E0B, (int32_t)0xF0E002, (int32_t)0xF2E2918B, (int32_t)0xE576608B, (int32_t)0x327C6, (int32_t)0x37ED21B6, (int32_t)0xFFC923EB, (int32_t)0xFF72B4E8, (int32_t)0x466C814, (int32_t)0x7E081C, (int32_t)0xE9F1A502, (int32_t)0xFFF4C085, (int32_t)0x92228, (int32_t)0x393056, (int32_t)0xFFA462F7, (int32_t)0xF8827915, (int32_t)0x140487BE, (int32_t)0x247F94F0, (int32_t)0xF4C75177, (int32_t)0xFF777B6B, (int32_t)0x2FB62218, (int32_t)0x2F39A2 };
		static const int32_t output0[] = { (int32_t)0x3243F, (int32_t)0xFFFCDD73, (int32_t)0x12006, (int32_t)0x12A, (int32_t)0xFFFCE006, (int32_t)0xFFFE6B45, (int32_t)0xF2E, (int32_t)0x0, (int32_t)0xFFFE36BF, (int32_t)0xFFFCE594, (int32_t)0x18E89, (int32_t)0x0, (int32_t)0x3243F, (int32_t)0x3243F, (int32_t)0x0, (int32_t)0x18A55, (int32_t)0xFFFCDBC9, (int32_t)0x3243F, (int32_t)0x1C, (int32_t)0x0, (int32_t)0x3243F, (int32_t)0xFFFE6DE0, (int32_t)0x7, (int32_t)0x77, (int32_t)0xFFFE5606, (int32_t)0xFFFCDEBC, (int32_t)0x39F, (int32_t)0x102D3, (int32_t)0xFFFCDDB9, (int32_t)0xFFFCDF85, (int32_t)0xC32, (int32_t)0x0, (int32_t)0xFFFE169F, (int32_t)0xFFFCFFE8, (int32_t)0xFFFE6908, (int32_t)0xFFFE6D1A, (int32_t)0x1921F, (int32_t)0x361, (int32_t)0xFFFE6DE1, (int32_t)0xFFFE6D9F, (int32_t)0x1921F, (int32_t)0x4113, (int32_t)0xFFFCE05B, (int32_t)0xFFFE6B86, (int32_t)0x191A8, (int32_t)0xA20B, (int32_t)0xFFFE6BC7, (int32_t)0xFFFE6DD3, (int32_t)0x1921F, (int32_t)0x1921D, (int32_t)0xFFFD5FAC, (int32_t)0xFFFE6948, (int32_t)0x18BB0, (int32_t)0x18D6C, (int32_t)0xFFFCEBB7, (int32_t)0xFFFE6B9F, (int32_t)0x1921E, (int32_t)0x177BC, (int32_t)0xFFFCFD55, (int32_t)0xFFFCDDCA, (int32_t)0x2, (int32_t)0x1921F, (int32_t)0xFFFE189E, (int32_t)0xFFFE50D3, (int32_t)0x5351, (int32_t)0x1921F, (int32_t)0xFFFCDCB1, (int32_t)0xFFFD6E02, (int32_t)0xFFFDF1C0, (int32_t)0xFFFE6DAD, (int32_t)0x13E18, (int32_t)0x10F1F, (int32_t)0xFFFCDBFA, (int32_t)0xFFFE6947, (int32_t)0x18F7F, (int32_t)0x1328C, (int32_t)0xFFFE663C, (int32_t)0xFFFE6D61, (int32_t)0x5F2, (int32_t)0xDB78, (int32_t)0xFFFD5C3B, (int32_t)0xFFFD8FDE, (int32_t)0x19056, (int32_t)0x31, (int32_t)0xFFFE6CF9, (int32_t)0xFFFCE2E5, (int32_t)0x1A5, (int32_t)0x13ED5, (int32_t)0xFFFCDC6C, (int32_t)0xFFFDCF6B, (int32_t)0x1665B, (int32_t)0x18C30, (int32_t)0xFFFDC520, (int32_t)0xFFFCDC25, (int32_t)0xAC64, (int32_t)0x11, (int32_t)0xFFFE159A, (int32_t)0xFFFCDFCE, (int32_t)0x2C, (int32_t)0x151D8 };
		for (int ndx = 0; ndx < 100; ndx++)
			Util::Check("Fixed32::Atan2", Fixed32::Atan2(input0[ndx], input1[ndx]), output0[ndx], input0[ndx], input1[ndx]);
	}

	// Fixed32.Atan2Fast()
	static void Fixed32_Atan2Fast()
	{
		static const int32_t input0[] = { (int32_t)0xFFFFFD75, (int32_t)0xFF4D8BA6, (int32_t)0x13E329C, (int32_t)0x8478, (int32_t)0xFFFFFE79, (int32_t)0xFFFFFFD1, (int32_t)0x3FC, (int32_t)0x3C11A, (int32_t)0x0, (int32_t)0xFFFFFEE1, (int32_t)0x75F, (int32_t)0xD, (int32_t)0xFFFFFD8C, (int32_t)0xFFD8B9EC, (int32_t)0x20579E0, (int32_t)0x2CC8, (int32_t)0xFC9EFD45, (int32_t)0xFFBB318C, (int32_t)0x1712C, (int32_t)0x16A, (int32_t)0xFFFFFF99, (int32_t)0xFFFCF110, (int32_t)0xAB24, (int32_t)0xC2, (int32_t)0xFF5E959C, (int32_t)0x0, (int32_t)0x2A08DB, (int32_t)0x0, (int32_t)0xFFFFFF48, (int32_t)0xFFFFFFFD, (int32_t)0x282B7BF, (int32_t)0x4C50, (int32_t)0x0, (int32_t)0xFFFFFD6E, (int32_t)0xFF8D3CBE, (int32_t)0xFFFFFF72, (int32_t)0x152F19, (int32_t)0x3AEF0, (int32_t)0xFFFFDD77, (int32_t)0xFFF2BB8F, (int32_t)0x6614, (int32_t)0x5707, (int32_t)0xFFFFF540, (int32_t)0xFFFFFC88, (int32_t)0x1A878A, (int32_t)0xF0E3015, (int32_t)0xFFFFFF0E, (int32_t)0xFFFFF655, (int32_t)0x576, (int32_t)0x103, (int32_t)0xFFFFF3A9, (int32_t)0xFFFFFF98, (int32_t)0x13D771F, (int32_t)0x30233, (int32_t)0xFFFF5741, (int32_t)0xFFFF6529, (int32_t)0x239AE9, (int32_t)0xB100, (int32_t)0xFF2CD8AF, (int32_t)0xFFFFF946, (int32_t)0x17C0C9, (int32_t)0xB5557, (int32_t)0xFFDE8FAD, (int32_t)0xFFD02097, (int32_t)0xAA, (int32_t)0x48EA087, (int32_t)0xFF1D3F52, (int32_t)0xE519B49B, (int32_t)0xFFE840CB, (int32_t)0xFFC0A0E9, (int32_t)0x3350E3, (int32_t)0x9428112, (int32_t)0xFFD6AD59, (int32_t)0xFF2AB5EA, (int32_t)0x152E60, (int32_t)0x453918F, (int32_t)0xE65EDB0A, (int32_t)0xFF3EED92, (int32_t)0x682CA0, (int32_t)0x3402880D, (int32_t)0xE275B0C9, (int32_t)0xFFD7FD5D, (int32_t)0x1315BF, (int32_t)0x29BAE9, (int32_t)0xFFFDA164, (int32_t)0xFD959F6F, (int32_t)0x6925144, (int32_t)0x1B877, (int32_t)0xFFD753FA, (int32_t)0xFEFAE358, (int32_t)0x22406A, (int32_t)0x5D40DA, (int32_t)0xFCD04523, (int32_t)0xFF3BE4B4, (int32_t)0xDAAAE, (int32_t)0x2BFF2A, (int32_t)0xD26A77F9, (int32_t)0xE0104243, (int32_t)0x10E2D, (int32_t)0x4CCCA };
		static const int32_t input1[] = { (int32_t)0xFFFFFE34, (int32_t)0xF545E65A, (int32_t)0x160E6DF4, (int32_t)0x26CE3, (int32_t)0xFFF6C17F, (int32_t)0xFFFFFED0, (int32_t)0x86, (int32_t)0x23418729, (int32_t)0xFFFD5D26, (int32_t)0xFFFD7F3B, (int32_t)0xBD6D77, (int32_t)0x1888F0ED, (int32_t)0xE612BCFC, (int32_t)0xFFE97F83, (int32_t)0x1D93361, (int32_t)0x1F0C, (int32_t)0xEECBD67E, (int32_t)0xEEA01377, (int32_t)0x23A5B3B, (int32_t)0x78755, (int32_t)0xFFFFFF80, (int32_t)0xFF8BD589, (int32_t)0x13BE, (int32_t)0x82AA1, (int32_t)0xFF8D2378, (int32_t)0xFFFFA5F9, (int32_t)0x1F542, (int32_t)0x1CDF1, (int32_t)0xFFFFBAE8, (int32_t)0xFDD957F2, (int32_t)0xF5D6, (int32_t)0x657B863, (int32_t)0xFFFFF8E9, (int32_t)0xDA59A2A5, (int32_t)0xFF84E6D0, (int32_t)0xFFF8BD67, (int32_t)0x14F4B, (int32_t)0x251, (int32_t)0xFFFF5B1B, (int32_t)0xFFFFFFF8, (int32_t)0x2, (int32_t)0x153E3, (int32_t)0xFFFFF930, (int32_t)0x0, (int32_t)0xDBD7A2, (int32_t)0xAEC15, (int32_t)0xFFFFFFEA, (int32_t)0xFFFFFFF6, (int32_t)0x13, (int32_t)0xE, (int32_t)0xFFFFD5CC, (int32_t)0xFFFFFF0B, (int32_t)0x0, (int32_t)0x26989, (int32_t)0xFFFFC607, (int32_t)0xFFFFFFC9, (int32_t)0xFB, (int32_t)0x5, (int32_t)0xFFFA8394, (int32_t)0x0, (int32_t)0x1D8EE20, (int32_t)0xD8573, (int32_t)0xFFFD427A, (int32_t)0xFFFFE1EF, (int32_t)0x0, (int32_t)0x7B6EB, (int32_t)0xFFFFFFFE, (int32_t)0x0, (int32_t)0xFE990787, (int32_t)0xFFFA5E81, (int32_t)0x1D07AD13, (int32_t)0xE9B6779, (int32_t)0xF02CC2FE, (int32_t)0xF883173C, (int32_t)0x12437, (int32_t)0xCD35E9, (int32_t)0xFFD20076, (int32_t)0xED67BAD3, (int32_t)0x3AC0AA, (int32_t)0xFCBC6BB, (int32_t)0xFB2D8581, (int32_t)0xF91E83B5, (int32_t)0x5CCD2, (int32_t)0x120615F, (int32_t)0xFF8D91BA, (int32_t)0xFFE73747, (int32_t)0x63DB67, (int32_t)0x4780B1, (int32_t)0xC01DF8CF, (int32_t)0xFFFCCCEA, (int32_t)0x4555DA5, (int32_t)0x5D20C6B, (int32_t)0xFFFE265C, (int32_t)0xDCC81EA2, (int32_t)0x2E7EF, (int32_t)0xD7C6061, (int32_t)0xFFF064BE, (int32_t)0xE1305300, (int32_t)0x6130633, (int32_t)0x335C6278 };
		static const int32_t output0[] = { (int32_t)0xFFFDD067, (int32_t)0xFFFCEC5D, (int32_t)0xE69, (int32_t)0x35CF, (int32_t)0xFFFCDBEB, (int32_t)0xFFFD0305, (int32_t)0x170AF, (int32_t)0x1B, (int32_t)0x3243E, (int32_t)0xFFFCDC33, (int32_t)0x9, (int32_t)0x0, (int32_t)0xFFFCDBC1, (int32_t)0xFFFDE8B0, (int32_t)0xD47E, (int32_t)0xF6EE, (int32_t)0xFFFD0D67, (int32_t)0xFFFCDFB6, (int32_t)0xA5, (int32_t)0x30, (int32_t)0xFFFD8937, (int32_t)0xFFFCE27E, (int32_t)0x174B9, (int32_t)0x17, (int32_t)0xFFFDCF8E, (int32_t)0x3243E, (int32_t)0x18635, (int32_t)0x0, (int32_t)0xFFFCDE6A, (int32_t)0xFFFCDBC1, (int32_t)0x191BE, (int32_t)0xC, (int32_t)0x3243E, (int32_t)0xFFFCDBC1, (int32_t)0xFFFD9BD8, (int32_t)0xFFFCDBD4, (int32_t)0x18251, (int32_t)0x1917F, (int32_t)0xFFFD109B, (int32_t)0xFFFE6DE1, (int32_t)0x1921A, (int32_t)0x402B, (int32_t)0xFFFDDD47, (int32_t)0xFFFE6DE1, (int32_t)0x1EBE, (int32_t)0x19166, (int32_t)0xFFFE56AC, (int32_t)0xFFFE6CD9, (int32_t)0x18EA5, (int32_t)0x1844C, (int32_t)0xFFFD2493, (int32_t)0xFFFD4285, (int32_t)0x1921F, (int32_t)0xE51C, (int32_t)0xFFFE192A, (int32_t)0xFFFE6D87, (int32_t)0x19218, (int32_t)0x19218, (int32_t)0xFFFE673B, (int32_t)0xFFFE6DE1, (int32_t)0xCD8, (int32_t)0xB295, (int32_t)0xFFFE58F3, (int32_t)0xFFFE6D41, (int32_t)0x1921F, (int32_t)0x1906E, (int32_t)0xFFFE6DE1, (int32_t)0xFFFE6DE1, (int32_t)0xFFFCECAA, (int32_t)0xFFFE5732, (int32_t)0x1C4, (int32_t)0x90A3, (int32_t)0xFFFCDE5D, (int32_t)0xFFFCF81F, (int32_t)0x18457, (int32_t)0x16339, (int32_t)0xFFFE6C16, (int32_t)0xFFFCE621, (int32_t)0x10EAA, (int32_t)0x146A4, (int32_t)0xFFFE4475, (int32_t)0xFFFCE191, (int32_t)0x14698, (int32_t)0x24C9, (int32_t)0xFFFCE10D, (int32_t)0xFFFE63A0, (int32_t)0x182F2, (int32_t)0x628, (int32_t)0xFFFCDC63, (int32_t)0xFFFE6ABE, (int32_t)0x7E6, (int32_t)0x1000, (int32_t)0xFFFE6D4D, (int32_t)0xFFFCE152, (int32_t)0x15C7D, (int32_t)0x343, (int32_t)0xFFFE6D8A, (int32_t)0xFFFDA969, (int32_t)0x2C, (int32_t)0x17 };
		for (int ndx = 0; ndx < 100; ndx++)
			Util::Check("Fixed32::Atan2Fast", Fixed32::Atan2Fast(input0[ndx], input1[ndx]), output0[ndx], input0[ndx], input1[ndx]);
	}

	// Fixed32.Atan2Fastest()
	static void Fixed32_Atan2Fastest()
	{
		static const int32_t input0[] = { (int32_t)0xFFFFEEA5, (int32_t)0xFFFFFFD2, (int32_t)0x93, (int32_t)0x4C98F, (int32_t)0xFFFFFC59, (int32_t)0xFFFFFCBE, (int32_t)0xE9C, (int32_t)0x28, (int32_t)0xFFFF4FAD, (int32_t)0xFFFFFFFB, (int32_t)0xE574, (int32_t)0x9CC, (int32_t)0xFFFFFFFF, (int32_t)0xFFFFF662, (int32_t)0x4055B, (int32_t)0xC13523, (int32_t)0xFFFFFF88, (int32_t)0xFFFE83AC, (int32_t)0x81DDBA, (int32_t)0x82B0, (int32_t)0xFFFFFCE2, (int32_t)0xFFFFE081, (int32_t)0x1, (int32_t)0x61C, (int32_t)0xFFFFFCC7, (int32_t)0xFFFFFFFE, (int32_t)0xB75AA, (int32_t)0xB52A53, (int32_t)0xFFFEF381, (int32_t)0xFFFFFFFE, (int32_t)0x10, (int32_t)0x455, (int32_t)0x0, (int32_t)0xFFFFFD8C, (int32_t)0xFFFFFA97, (int32_t)0xFFFFD558, (int32_t)0x491DB, (int32_t)0xB74EC7D, (int32_t)0xFFF72BEE, (int32_t)0xFB42012F, (int32_t)0x299C46B, (int32_t)0x1B3A, (int32_t)0xFEF92B15, (int32_t)0xFFFF8D2E, (int32_t)0x66, (int32_t)0xCB4, (int32_t)0xFFF6C896, (int32_t)0xFFFFF5B2, (int32_t)0x61D739, (int32_t)0x247AF, (int32_t)0xFFB3D480, (int32_t)0xFFD07D48, (int32_t)0x156D9, (int32_t)0x226F952B, (int32_t)0xF5678A83, (int32_t)0xFFFFBA65, (int32_t)0x1138, (int32_t)0x3D488, (int32_t)0xFFFFFD06, (int32_t)0xFDA24F28, (int32_t)0x5586, (int32_t)0x598, (int32_t)0xFFFB641F, (int32_t)0xFFFFD5C8, (int32_t)0x29783BB, (int32_t)0x12EA, (int32_t)0xFDDFE6C3, (int32_t)0xF99511CE, (int32_t)0xEEFAC46F, (int32_t)0xF43544DC, (int32_t)0xA7442B5, (int32_t)0x41154, (int32_t)0xFE283288, (int32_t)0xFFEEE0CA, (int32_t)0x383D9E4, (int32_t)0x30455F6, (int32_t)0xFFFBAE41, (int32_t)0xFF91B6C4, (int32_t)0x239F073, (int32_t)0x2D8D1, (int32_t)0xFFFD73D2, (int32_t)0xE31ACBAE, (int32_t)0x113D0C, (int32_t)0x218E9C, (int32_t)0xFF440D0E, (int32_t)0xFF33152D, (int32_t)0x9EA61C, (int32_t)0x398DA9, (int32_t)0xFFFD77EF, (int32_t)0xFF5E133D, (int32_t)0xC69067C, (int32_t)0x242A4AF, (int32_t)0xF858ABF1, (int32_t)0xFFEE5131, (int32_t)0x20CA94D, (int32_t)0x2287E1A, (int32_t)0xFFA27A83, (int32_t)0xFAE3E98A, (int32_t)0x9420D, (int32_t)0x2900A };
		static const int32_t input1[] = { (int32_t)0xFFFFD436, (int32_t)0xFFFF2D8B, (int32_t)0x9BF7, (int32_t)0x12E72, (int32_t)0xFFFFFE2C, (int32_t)0xFFFFFF92, (int32_t)0x19D45A5, (int32_t)0x39F, (int32_t)0xFEA5DEA8, (int32_t)0xFED14763, (int32_t)0x19E76, (int32_t)0x7F8, (int32_t)0xFFF058D0, (int32_t)0xFFF8512F, (int32_t)0x6ED, (int32_t)0x568, (int32_t)0xFFFDD3D2, (int32_t)0xFFF0CE81, (int32_t)0x5F, (int32_t)0x1DC, (int32_t)0xFFFB640A, (int32_t)0xE76D492B, (int32_t)0x320, (int32_t)0x636A2D2, (int32_t)0xFFFFE601, (int32_t)0xFFFFE1C5, (int32_t)0x326614, (int32_t)0x12E6B0, (int32_t)0xFFE14A84, (int32_t)0xFFFDE6B8, (int32_t)0x11D26387, (int32_t)0x59B, (int32_t)0xFFFF6D88, (int32_t)0xFFA0B982, (int32_t)0xFFFFFF80, (int32_t)0xFF9F5DB7, (int32_t)0xFEB1, (int32_t)0x182F, (int32_t)0x0, (int32_t)0xFFFFFFFF, (int32_t)0x1B, (int32_t)0x8, (int32_t)0xFFFFFFFD, (int32_t)0xFFF64470, (int32_t)0x34B4AA, (int32_t)0x0, (int32_t)0xFFFC4F5E, (int32_t)0xFFFFFD8B, (int32_t)0x78C51B, (int32_t)0x1, (int32_t)0xFFF62021, (int32_t)0xFFFFFFE9, (int32_t)0x50D29, (int32_t)0x10E, (int32_t)0xFFF28206, (int32_t)0xFFDA848A, (int32_t)0x0, (int32_t)0x0, (int32_t)0xFFF730ED, (int32_t)0xFFFBA535, (int32_t)0x9AD, (int32_t)0x94E1, (int32_t)0xFFF8233C, (int32_t)0xFFFFFCA6, (int32_t)0x1580, (int32_t)0x7108A, (int32_t)0xFFFFFE5D, (int32_t)0xFFFEB965, (int32_t)0xFE5F955E, (int32_t)0xFFFE5B0F, (int32_t)0x11378B1, (int32_t)0x20459, (int32_t)0xFFE2B422, (int32_t)0xFE309724, (int32_t)0x21E3B1A, (int32_t)0x506F75, (int32_t)0xFC7DBE3C, (int32_t)0xFFFD2CDA, (int32_t)0x32F061A, (int32_t)0x1007CD0, (int32_t)0xFFE00780, (int32_t)0xFD8C5BD5, (int32_t)0x1F84C32, (int32_t)0x1343F99, (int32_t)0xFFE2F7BB, (int32_t)0xFFCD830C, (int32_t)0x1CDA21BA, (int32_t)0x3F2970E0, (int32_t)0xFFF5D7BC, (int32_t)0xFFFEF2AA, (int32_t)0x11D9B5B, (int32_t)0x1AE8B2, (int32_t)0xC33053E9, (int32_t)0xFFFB5FFD, (int32_t)0x2203A9, (int32_t)0x1AAE6E, (int32_t)0xFDE95204, (int32_t)0xFFFE5F0D, (int32_t)0x84225, (int32_t)0x3619AE };
		static const int32_t output0[] = { (int32_t)0xFFFD3C50, (int32_t)0xFFFCDBF8, (int32_t)0xF1, (int32_t)0x15435, (int32_t)0xFFFDF710, (int32_t)0xFFFE4C4D, (int32_t)0x9, (int32_t)0xB0A, (int32_t)0xFFFCDC43, (int32_t)0xFFFCDBC1, (int32_t)0x8183, (int32_t)0xE35B, (int32_t)0xFFFCDBC1, (int32_t)0xFFFCDD01, (int32_t)0x19066, (int32_t)0x19218, (int32_t)0xFFFCDBF8, (int32_t)0xFFFCF4B2, (int32_t)0x1921F, (int32_t)0x18E7B, (int32_t)0xFFFCDC6E, (int32_t)0xFFFCDBC2, (int32_t)0x51, (int32_t)0x0, (int32_t)0xFFFCFB56, (int32_t)0xFFFCDBD1, (int32_t)0x393B, (int32_t)0x17785, (int32_t)0xFFFCE47E, (int32_t)0xFFFCDBC1, (int32_t)0x0, (int32_t)0xA865, (int32_t)0x3243E, (int32_t)0xFFFCDBC7, (int32_t)0xFFFE564C, (int32_t)0xFFFCDC32, (int32_t)0x15B40, (int32_t)0x1921D, (int32_t)0xFFFE6DE1, (int32_t)0xFFFE6DE1, (int32_t)0x1921F, (int32_t)0x191D4, (int32_t)0xFFFE6DE1, (int32_t)0xFFFCE78B, (int32_t)0x1, (int32_t)0x1921F, (int32_t)0xFFFE0C62, (int32_t)0xFFFE3200, (int32_t)0xAE3F, (int32_t)0x1921F, (int32_t)0xFFFE4CE2, (int32_t)0xFFFE6DE1, (int32_t)0x424E, (int32_t)0x1921F, (int32_t)0xFFFE6C9C, (int32_t)0xFFFCDD9C, (int32_t)0x1921F, (int32_t)0x1921F, (int32_t)0xFFFCDC17, (int32_t)0xFFFE6C0A, (int32_t)0x1754C, (int32_t)0x99E, (int32_t)0xFFFD6380, (int32_t)0xFFFE599B, (int32_t)0x19217, (int32_t)0x2AD, (int32_t)0xFFFE6DE1, (int32_t)0xFFFE6DAF, (int32_t)0xFFFE557B, (int32_t)0xFFFE6DBE, (int32_t)0x177E0, (int32_t)0x11C3D, (int32_t)0xFFFE5E01, (int32_t)0xFFFCE535, (int32_t)0x10738, (int32_t)0x1778F, (int32_t)0xFFFCDCFC, (int32_t)0xFFFE6752, (int32_t)0x9C4B, (int32_t)0x2D7, (int32_t)0xFFFCF01C, (int32_t)0xFFFE5836, (int32_t)0x8BF, (int32_t)0x1BC1, (int32_t)0xFFFE46A9, (int32_t)0xFFFE300A, (int32_t)0x57F, (int32_t)0xE9, (int32_t)0xFFFD1A3E, (int32_t)0xFFFE6C38, (int32_t)0x17B2A, (int32_t)0x18639, (int32_t)0xFFFCFBCA, (int32_t)0xFFFE2C64, (int32_t)0x1818B, (int32_t)0x185C3, (int32_t)0xFFFD0816, (int32_t)0xFFFE6D90, (int32_t)0xD7B2, (int32_t)0xC1F };
		for (int ndx = 0; ndx < 100; ndx++)
			Util::Check("Fixed32::Atan2Fastest", Fixed32::Atan2Fastest(input0[ndx], input1[ndx]), output0[ndx], input0[ndx], input1[ndx]);
	}

}

void UnitTest_TestAll()
{
		UnitTest::Fixed64_Add();
		UnitTest::Fixed32_Add();
		UnitTest::Fixed64_Sub();
		UnitTest::Fixed32_Sub();
		UnitTest::Fixed64_Mul();
		UnitTest::Fixed32_Mul();
		UnitTest::Fixed64_DivPrecise();
		UnitTest::Fixed32_DivPrecise();
		UnitTest::Fixed64_Mod();
		UnitTest::Fixed32_Mod();
		UnitTest::Fixed64_Min();
		UnitTest::Fixed32_Min();
		UnitTest::Fixed64_Max();
		UnitTest::Fixed32_Max();
		UnitTest::Fixed64_Ceil();
		UnitTest::Fixed32_Ceil();
		UnitTest::Fixed64_Floor();
		UnitTest::Fixed32_Floor();
		UnitTest::Fixed64_Round();
		UnitTest::Fixed32_Round();
		UnitTest::Fixed64_Fract();
		UnitTest::Fixed32_Fract();
		UnitTest::Fixed64_CeilToInt();
		UnitTest::Fixed32_CeilToInt();
		UnitTest::Fixed64_FloorToInt();
		UnitTest::Fixed32_FloorToInt();
		UnitTest::Fixed64_RoundToInt();
		UnitTest::Fixed32_RoundToInt();
		UnitTest::Fixed64_Abs();
		UnitTest::Fixed32_Abs();
		UnitTest::Fixed64_Nabs();
		UnitTest::Fixed32_Nabs();
		UnitTest::Fixed64_Rcp();
		UnitTest::Fixed64_RcpFast();
		UnitTest::Fixed64_RcpFastest();
		UnitTest::Fixed32_Rcp();
		UnitTest::Fixed32_RcpFast();
		UnitTest::Fixed32_RcpFastest();
		UnitTest::Fixed64_Div();
		UnitTest::Fixed64_DivFast();
		UnitTest::Fixed64_DivFastest();
		UnitTest::Fixed32_Div();
		UnitTest::Fixed32_DivFast();
		UnitTest::Fixed32_DivFastest();
		UnitTest::Fixed64_SqrtPrecise();
		UnitTest::Fixed64_Sqrt();
		UnitTest::Fixed64_SqrtFast();
		UnitTest::Fixed64_SqrtFastest();
		UnitTest::Fixed32_SqrtPrecise();
		UnitTest::Fixed32_Sqrt();
		UnitTest::Fixed32_SqrtFast();
		UnitTest::Fixed32_SqrtFastest();
		UnitTest::Fixed64_RSqrt();
		UnitTest::Fixed64_RSqrtFast();
		UnitTest::Fixed64_RSqrtFastest();
		UnitTest::Fixed32_RSqrt();
		UnitTest::Fixed32_RSqrtFast();
		UnitTest::Fixed32_RSqrtFastest();
		UnitTest::Fixed64_Exp();
		UnitTest::Fixed64_ExpFast();
		UnitTest::Fixed64_ExpFastest();
		UnitTest::Fixed32_Exp();
		UnitTest::Fixed32_ExpFast();
		UnitTest::Fixed32_ExpFastest();
		UnitTest::Fixed64_Exp2();
		UnitTest::Fixed64_Exp2Fast();
		UnitTest::Fixed64_Exp2Fastest();
		UnitTest::Fixed32_Exp2();
		UnitTest::Fixed32_Exp2Fast();
		UnitTest::Fixed32_Exp2Fastest();
		UnitTest::Fixed64_Log();
		UnitTest::Fixed64_LogFast();
		UnitTest::Fixed64_LogFastest();
		UnitTest::Fixed32_Log();
		UnitTest::Fixed32_LogFast();
		UnitTest::Fixed32_LogFastest();
		UnitTest::Fixed64_Log2();
		UnitTest::Fixed64_Log2Fast();
		UnitTest::Fixed64_Log2Fastest();
		UnitTest::Fixed32_Log2();
		UnitTest::Fixed32_Log2Fast();
		UnitTest::Fixed32_Log2Fastest();
		UnitTest::Fixed64_Pow();
		UnitTest::Fixed64_PowFast();
		UnitTest::Fixed64_PowFastest();
		UnitTest::Fixed32_Pow();
		UnitTest::Fixed32_PowFast();
		UnitTest::Fixed32_PowFastest();
		UnitTest::Fixed64_Sin();
		UnitTest::Fixed64_SinFast();
		UnitTest::Fixed64_SinFastest();
		UnitTest::Fixed32_Sin();
		UnitTest::Fixed32_SinFast();
		UnitTest::Fixed32_SinFastest();
		UnitTest::Fixed64_Cos();
		UnitTest::Fixed64_CosFast();
		UnitTest::Fixed64_CosFastest();
		UnitTest::Fixed32_Cos();
		UnitTest::Fixed32_CosFast();
		UnitTest::Fixed32_CosFastest();
		UnitTest::Fixed64_Tan();
		UnitTest::Fixed64_TanFast();
		UnitTest::Fixed64_TanFastest();
		UnitTest::Fixed32_Tan();
		UnitTest::Fixed32_TanFast();
		UnitTest::Fixed32_TanFastest();
		UnitTest::Fixed64_Asin();
		UnitTest::Fixed64_AsinFast();
		UnitTest::Fixed64_AsinFastest();
		UnitTest::Fixed32_Asin();
		UnitTest::Fixed32_AsinFast();
		UnitTest::Fixed32_AsinFastest();
		UnitTest::Fixed64_Acos();
		UnitTest::Fixed64_AcosFast();
		UnitTest::Fixed64_AcosFastest();
		UnitTest::Fixed32_Acos();
		UnitTest::Fixed32_AcosFast();
		UnitTest::Fixed32_AcosFastest();
		UnitTest::Fixed64_Atan();
		UnitTest::Fixed64_AtanFast();
		UnitTest::Fixed64_AtanFastest();
		UnitTest::Fixed32_Atan();
		UnitTest::Fixed32_AtanFast();
		UnitTest::Fixed32_AtanFastest();
		UnitTest::Fixed64_Atan2();
		UnitTest::Fixed64_Atan2Fast();
		UnitTest::Fixed64_Atan2Fastest();
		UnitTest::Fixed32_Atan2();
		UnitTest::Fixed32_Atan2Fast();
		UnitTest::Fixed32_Atan2Fastest();
}
